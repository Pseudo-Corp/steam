{
  "version": 3,
  "sources": ["../node_modules/pad-end/index.js", "../node_modules/lz-string/libs/lz-string.js", "../node_modules/eventemitter3/index.js", "../node_modules/fast-unique-numbers/build/es5/bundle.js", "../node_modules/localforage/dist/localforage.js", "../node_modules/clipboard/dist/clipboard.js", "../node_modules/break_infinity.js/dist/break_infinity.esm.js", "../src/Synergism.ts", "../src/Cache/DOM.ts", "../src/Utility.ts", "../src/Variables.ts", "../src/Events.ts", "../node_modules/@babel/runtime/helpers/esm/typeof.js", "../node_modules/@babel/runtime/helpers/esm/classCallCheck.js", "../node_modules/@babel/runtime/helpers/esm/toPrimitive.js", "../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js", "../node_modules/@babel/runtime/helpers/esm/createClass.js", "../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js", "../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js", "../node_modules/@babel/runtime/helpers/esm/inherits.js", "../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js", "../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js", "../node_modules/@babel/runtime/helpers/esm/defineProperty.js", "../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js", "../node_modules/@babel/runtime/helpers/esm/iterableToArray.js", "../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js", "../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js", "../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js", "../node_modules/@babel/runtime/helpers/esm/toArray.js", "../node_modules/i18next/dist/esm/i18next.js", "../src/Achievements.ts", "../src/Talismans.ts", "../src/Runes.ts", "../src/Tesseracts.ts", "../src/Buy.ts", "../src/Automation.ts", "../src/Upgrades.ts", "../src/DynamicUpgrade.ts", "../src/singularity.ts", "../src/Research.ts", "../src/Hypercubes.ts", "../src/Themes.ts", "../src/Corruptions.ts", "../src/PlatonicCubes.ts", "../src/Quark.ts", "../src/CubeExperimental.ts", "../src/Config.ts", "../src/ImportExport.ts", "../src/Shop.ts", "../node_modules/worker-timers-broker/src/module.ts", "../node_modules/worker-timers-broker/src/guards/call-notification.ts", "../node_modules/worker-timers-broker/src/guards/clear-response.ts", "../node_modules/worker-timers/src/factories/load-worker-timers.ts", "../node_modules/worker-timers/src/worker/worker.ts", "../node_modules/worker-timers/src/module.ts", "../src/Timers.ts", "../src/Ants.ts", "../src/Hepteracts.ts", "../src/Statistics.ts", "../src/UpdateVisuals.ts", "../src/Helper.ts", "../src/Event.ts", "../src/Cubes.ts", "../src/Platonic.ts", "../src/Reset.ts", "../src/Hotkeys.ts", "../src/Calculate.ts", "../src/UpdateHTML.ts", "../src/Toggles.ts", "../src/Challenges.ts", "../src/History.ts", "../src/Tax.ts", "../src/Summary.ts", "../src/EventListeners.ts", "../src/Octeracts.ts", "../src/SingularityChallenges.ts", "../src/CheckVariables.ts", "../src/Plugins/ColorText.ts", "../src/i18n.ts"],
  "sourcesContent": ["'use strict';\n\nmodule.exports = function (string, maxLength, fillString) {\n\n  if (string == null || maxLength == null) {\n    return string;\n  }\n\n  var result    = String(string);\n  var targetLen = typeof maxLength === 'number'\n    ? maxLength\n    : parseInt(maxLength, 10);\n\n  if (isNaN(targetLen) || !isFinite(targetLen)) {\n    return result;\n  }\n\n\n  var length = result.length;\n  if (length >= targetLen) {\n    return result;\n  }\n\n\n  var filled = fillString == null ? '' : String(fillString);\n  if (filled === '') {\n    filled = ' ';\n  }\n\n\n  var fillLen = targetLen - length;\n\n  while (filled.length < fillLen) {\n    filled += filled;\n  }\n\n  var truncated = filled.length > fillLen ? filled.substr(0, fillLen) : filled;\n\n  return result + truncated;\n};\n", "// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.fastUniqueNumbers = {}));\n})(this, (function (exports) { 'use strict';\n\n    var createAddUniqueNumber = function createAddUniqueNumber(generateUniqueNumber) {\n      return function (set) {\n        var number = generateUniqueNumber(set);\n        set.add(number);\n        return number;\n      };\n    };\n\n    var createCache = function createCache(lastNumberWeakMap) {\n      return function (collection, nextNumber) {\n        lastNumberWeakMap.set(collection, nextNumber);\n        return nextNumber;\n      };\n    };\n\n    /*\n     * The value of the constant Number.MAX_SAFE_INTEGER equals (2 ** 53 - 1) but it\n     * is fairly new.\n     */\n    var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER === undefined ? 9007199254740991 : Number.MAX_SAFE_INTEGER;\n    var TWO_TO_THE_POWER_OF_TWENTY_NINE = 536870912;\n    var TWO_TO_THE_POWER_OF_THIRTY = TWO_TO_THE_POWER_OF_TWENTY_NINE * 2;\n    var createGenerateUniqueNumber = function createGenerateUniqueNumber(cache, lastNumberWeakMap) {\n      return function (collection) {\n        var lastNumber = lastNumberWeakMap.get(collection);\n        /*\n         * Let's try the cheapest algorithm first. It might fail to produce a new\n         * number, but it is so cheap that it is okay to take the risk. Just\n         * increase the last number by one or reset it to 0 if we reached the upper\n         * bound of SMIs (which stands for small integers). When the last number is\n         * unknown it is assumed that the collection contains zero based consecutive\n         * numbers.\n         */\n\n        var nextNumber = lastNumber === undefined ? collection.size : lastNumber < TWO_TO_THE_POWER_OF_THIRTY ? lastNumber + 1 : 0;\n\n        if (!collection.has(nextNumber)) {\n          return cache(collection, nextNumber);\n        }\n        /*\n         * If there are less than half of 2 ** 30 numbers stored in the collection,\n         * the chance to generate a new random number in the range from 0 to 2 ** 30\n         * is at least 50%. It's benifitial to use only SMIs because they perform\n         * much better in any environment based on V8.\n         */\n\n\n        if (collection.size < TWO_TO_THE_POWER_OF_TWENTY_NINE) {\n          while (collection.has(nextNumber)) {\n            nextNumber = Math.floor(Math.random() * TWO_TO_THE_POWER_OF_THIRTY);\n          }\n\n          return cache(collection, nextNumber);\n        } // Quickly check if there is a theoretical chance to generate a new number.\n\n\n        if (collection.size > MAX_SAFE_INTEGER) {\n          throw new Error('Congratulations, you created a collection of unique numbers which uses all available integers!');\n        } // Otherwise use the full scale of safely usable integers.\n\n\n        while (collection.has(nextNumber)) {\n          nextNumber = Math.floor(Math.random() * MAX_SAFE_INTEGER);\n        }\n\n        return cache(collection, nextNumber);\n      };\n    };\n\n    var LAST_NUMBER_WEAK_MAP = new WeakMap();\n    var cache = createCache(LAST_NUMBER_WEAK_MAP);\n    var generateUniqueNumber = createGenerateUniqueNumber(cache, LAST_NUMBER_WEAK_MAP);\n    var addUniqueNumber = createAddUniqueNumber(generateUniqueNumber);\n\n    exports.addUniqueNumber = addUniqueNumber;\n    exports.generateUniqueNumber = generateUniqueNumber;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n", "/*!\n * clipboard.js v2.0.11\n * https://clipboardjs.com/\n *\n * Licensed MIT \u00A9 Zeno Rocha\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ClipboardJS\"] = factory();\n\telse\n\t\troot[\"ClipboardJS\"] = factory();\n})(this, function() {\nreturn /******/ (function() { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 686:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ clipboard; }\n});\n\n// EXTERNAL MODULE: ./node_modules/tiny-emitter/index.js\nvar tiny_emitter = __webpack_require__(279);\nvar tiny_emitter_default = /*#__PURE__*/__webpack_require__.n(tiny_emitter);\n// EXTERNAL MODULE: ./node_modules/good-listener/src/listen.js\nvar listen = __webpack_require__(370);\nvar listen_default = /*#__PURE__*/__webpack_require__.n(listen);\n// EXTERNAL MODULE: ./node_modules/select/src/select.js\nvar src_select = __webpack_require__(817);\nvar select_default = /*#__PURE__*/__webpack_require__.n(src_select);\n;// CONCATENATED MODULE: ./src/common/command.js\n/**\n * Executes a given operation type.\n * @param {String} type\n * @return {Boolean}\n */\nfunction command(type) {\n  try {\n    return document.execCommand(type);\n  } catch (err) {\n    return false;\n  }\n}\n;// CONCATENATED MODULE: ./src/actions/cut.js\n\n\n/**\n * Cut action wrapper.\n * @param {String|HTMLElement} target\n * @return {String}\n */\n\nvar ClipboardActionCut = function ClipboardActionCut(target) {\n  var selectedText = select_default()(target);\n  command('cut');\n  return selectedText;\n};\n\n/* harmony default export */ var actions_cut = (ClipboardActionCut);\n;// CONCATENATED MODULE: ./src/common/create-fake-element.js\n/**\n * Creates a fake textarea element with a value.\n * @param {String} value\n * @return {HTMLElement}\n */\nfunction createFakeElement(value) {\n  var isRTL = document.documentElement.getAttribute('dir') === 'rtl';\n  var fakeElement = document.createElement('textarea'); // Prevent zooming on iOS\n\n  fakeElement.style.fontSize = '12pt'; // Reset box model\n\n  fakeElement.style.border = '0';\n  fakeElement.style.padding = '0';\n  fakeElement.style.margin = '0'; // Move element out of screen horizontally\n\n  fakeElement.style.position = 'absolute';\n  fakeElement.style[isRTL ? 'right' : 'left'] = '-9999px'; // Move element to the same position vertically\n\n  var yPosition = window.pageYOffset || document.documentElement.scrollTop;\n  fakeElement.style.top = \"\".concat(yPosition, \"px\");\n  fakeElement.setAttribute('readonly', '');\n  fakeElement.value = value;\n  return fakeElement;\n}\n;// CONCATENATED MODULE: ./src/actions/copy.js\n\n\n\n/**\n * Create fake copy action wrapper using a fake element.\n * @param {String} target\n * @param {Object} options\n * @return {String}\n */\n\nvar fakeCopyAction = function fakeCopyAction(value, options) {\n  var fakeElement = createFakeElement(value);\n  options.container.appendChild(fakeElement);\n  var selectedText = select_default()(fakeElement);\n  command('copy');\n  fakeElement.remove();\n  return selectedText;\n};\n/**\n * Copy action wrapper.\n * @param {String|HTMLElement} target\n * @param {Object} options\n * @return {String}\n */\n\n\nvar ClipboardActionCopy = function ClipboardActionCopy(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    container: document.body\n  };\n  var selectedText = '';\n\n  if (typeof target === 'string') {\n    selectedText = fakeCopyAction(target, options);\n  } else if (target instanceof HTMLInputElement && !['text', 'search', 'url', 'tel', 'password'].includes(target === null || target === void 0 ? void 0 : target.type)) {\n    // If input type doesn't support `setSelectionRange`. Simulate it. https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n    selectedText = fakeCopyAction(target.value, options);\n  } else {\n    selectedText = select_default()(target);\n    command('copy');\n  }\n\n  return selectedText;\n};\n\n/* harmony default export */ var actions_copy = (ClipboardActionCopy);\n;// CONCATENATED MODULE: ./src/actions/default.js\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n\n\n/**\n * Inner function which performs selection from either `text` or `target`\n * properties and then executes copy or cut operations.\n * @param {Object} options\n */\n\nvar ClipboardActionDefault = function ClipboardActionDefault() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  // Defines base properties passed from constructor.\n  var _options$action = options.action,\n      action = _options$action === void 0 ? 'copy' : _options$action,\n      container = options.container,\n      target = options.target,\n      text = options.text; // Sets the `action` to be performed which can be either 'copy' or 'cut'.\n\n  if (action !== 'copy' && action !== 'cut') {\n    throw new Error('Invalid \"action\" value, use either \"copy\" or \"cut\"');\n  } // Sets the `target` property using an element that will be have its content copied.\n\n\n  if (target !== undefined) {\n    if (target && _typeof(target) === 'object' && target.nodeType === 1) {\n      if (action === 'copy' && target.hasAttribute('disabled')) {\n        throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\n      }\n\n      if (action === 'cut' && (target.hasAttribute('readonly') || target.hasAttribute('disabled'))) {\n        throw new Error('Invalid \"target\" attribute. You can\\'t cut text from elements with \"readonly\" or \"disabled\" attributes');\n      }\n    } else {\n      throw new Error('Invalid \"target\" value, use a valid Element');\n    }\n  } // Define selection strategy based on `text` property.\n\n\n  if (text) {\n    return actions_copy(text, {\n      container: container\n    });\n  } // Defines which selection strategy based on `target` property.\n\n\n  if (target) {\n    return action === 'cut' ? actions_cut(target) : actions_copy(target, {\n      container: container\n    });\n  }\n};\n\n/* harmony default export */ var actions_default = (ClipboardActionDefault);\n;// CONCATENATED MODULE: ./src/clipboard.js\nfunction clipboard_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { clipboard_typeof = function _typeof(obj) { return typeof obj; }; } else { clipboard_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return clipboard_typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (clipboard_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\n\n/**\n * Helper function to retrieve attribute value.\n * @param {String} suffix\n * @param {Element} element\n */\n\nfunction getAttributeValue(suffix, element) {\n  var attribute = \"data-clipboard-\".concat(suffix);\n\n  if (!element.hasAttribute(attribute)) {\n    return;\n  }\n\n  return element.getAttribute(attribute);\n}\n/**\n * Base class which takes one or more elements, adds event listeners to them,\n * and instantiates a new `ClipboardAction` on each click.\n */\n\n\nvar Clipboard = /*#__PURE__*/function (_Emitter) {\n  _inherits(Clipboard, _Emitter);\n\n  var _super = _createSuper(Clipboard);\n\n  /**\n   * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n   * @param {Object} options\n   */\n  function Clipboard(trigger, options) {\n    var _this;\n\n    _classCallCheck(this, Clipboard);\n\n    _this = _super.call(this);\n\n    _this.resolveOptions(options);\n\n    _this.listenClick(trigger);\n\n    return _this;\n  }\n  /**\n   * Defines if attributes would be resolved using internal setter functions\n   * or custom functions that were passed in the constructor.\n   * @param {Object} options\n   */\n\n\n  _createClass(Clipboard, [{\n    key: \"resolveOptions\",\n    value: function resolveOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.action = typeof options.action === 'function' ? options.action : this.defaultAction;\n      this.target = typeof options.target === 'function' ? options.target : this.defaultTarget;\n      this.text = typeof options.text === 'function' ? options.text : this.defaultText;\n      this.container = clipboard_typeof(options.container) === 'object' ? options.container : document.body;\n    }\n    /**\n     * Adds a click event listener to the passed trigger.\n     * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n     */\n\n  }, {\n    key: \"listenClick\",\n    value: function listenClick(trigger) {\n      var _this2 = this;\n\n      this.listener = listen_default()(trigger, 'click', function (e) {\n        return _this2.onClick(e);\n      });\n    }\n    /**\n     * Defines a new `ClipboardAction` on each click event.\n     * @param {Event} e\n     */\n\n  }, {\n    key: \"onClick\",\n    value: function onClick(e) {\n      var trigger = e.delegateTarget || e.currentTarget;\n      var action = this.action(trigger) || 'copy';\n      var text = actions_default({\n        action: action,\n        container: this.container,\n        target: this.target(trigger),\n        text: this.text(trigger)\n      }); // Fires an event based on the copy operation result.\n\n      this.emit(text ? 'success' : 'error', {\n        action: action,\n        text: text,\n        trigger: trigger,\n        clearSelection: function clearSelection() {\n          if (trigger) {\n            trigger.focus();\n          }\n\n          window.getSelection().removeAllRanges();\n        }\n      });\n    }\n    /**\n     * Default `action` lookup function.\n     * @param {Element} trigger\n     */\n\n  }, {\n    key: \"defaultAction\",\n    value: function defaultAction(trigger) {\n      return getAttributeValue('action', trigger);\n    }\n    /**\n     * Default `target` lookup function.\n     * @param {Element} trigger\n     */\n\n  }, {\n    key: \"defaultTarget\",\n    value: function defaultTarget(trigger) {\n      var selector = getAttributeValue('target', trigger);\n\n      if (selector) {\n        return document.querySelector(selector);\n      }\n    }\n    /**\n     * Allow fire programmatically a copy action\n     * @param {String|HTMLElement} target\n     * @param {Object} options\n     * @returns Text copied.\n     */\n\n  }, {\n    key: \"defaultText\",\n\n    /**\n     * Default `text` lookup function.\n     * @param {Element} trigger\n     */\n    value: function defaultText(trigger) {\n      return getAttributeValue('text', trigger);\n    }\n    /**\n     * Destroy lifecycle.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.listener.destroy();\n    }\n  }], [{\n    key: \"copy\",\n    value: function copy(target) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        container: document.body\n      };\n      return actions_copy(target, options);\n    }\n    /**\n     * Allow fire programmatically a cut action\n     * @param {String|HTMLElement} target\n     * @returns Text cutted.\n     */\n\n  }, {\n    key: \"cut\",\n    value: function cut(target) {\n      return actions_cut(target);\n    }\n    /**\n     * Returns the support of the given action, or all actions if no action is\n     * given.\n     * @param {String} [action]\n     */\n\n  }, {\n    key: \"isSupported\",\n    value: function isSupported() {\n      var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['copy', 'cut'];\n      var actions = typeof action === 'string' ? [action] : action;\n      var support = !!document.queryCommandSupported;\n      actions.forEach(function (action) {\n        support = support && !!document.queryCommandSupported(action);\n      });\n      return support;\n    }\n  }]);\n\n  return Clipboard;\n}((tiny_emitter_default()));\n\n/* harmony default export */ var clipboard = (Clipboard);\n\n/***/ }),\n\n/***/ 828:\n/***/ (function(module) {\n\nvar DOCUMENT_NODE_TYPE = 9;\n\n/**\n * A polyfill for Element.matches()\n */\nif (typeof Element !== 'undefined' && !Element.prototype.matches) {\n    var proto = Element.prototype;\n\n    proto.matches = proto.matchesSelector ||\n                    proto.mozMatchesSelector ||\n                    proto.msMatchesSelector ||\n                    proto.oMatchesSelector ||\n                    proto.webkitMatchesSelector;\n}\n\n/**\n * Finds the closest parent that matches a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @return {Function}\n */\nfunction closest (element, selector) {\n    while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {\n        if (typeof element.matches === 'function' &&\n            element.matches(selector)) {\n          return element;\n        }\n        element = element.parentNode;\n    }\n}\n\nmodule.exports = closest;\n\n\n/***/ }),\n\n/***/ 438:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nvar closest = __webpack_require__(828);\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction _delegate(element, selector, type, callback, useCapture) {\n    var listenerFn = listener.apply(this, arguments);\n\n    element.addEventListener(type, listenerFn, useCapture);\n\n    return {\n        destroy: function() {\n            element.removeEventListener(type, listenerFn, useCapture);\n        }\n    }\n}\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element|String|Array} [elements]\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction delegate(elements, selector, type, callback, useCapture) {\n    // Handle the regular Element usage\n    if (typeof elements.addEventListener === 'function') {\n        return _delegate.apply(null, arguments);\n    }\n\n    // Handle Element-less usage, it defaults to global delegation\n    if (typeof type === 'function') {\n        // Use `document` as the first parameter, then apply arguments\n        // This is a short way to .unshift `arguments` without running into deoptimizations\n        return _delegate.bind(null, document).apply(null, arguments);\n    }\n\n    // Handle Selector-based usage\n    if (typeof elements === 'string') {\n        elements = document.querySelectorAll(elements);\n    }\n\n    // Handle Array-like based usage\n    return Array.prototype.map.call(elements, function (element) {\n        return _delegate(element, selector, type, callback, useCapture);\n    });\n}\n\n/**\n * Finds closest match and invokes callback.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Function}\n */\nfunction listener(element, selector, type, callback) {\n    return function(e) {\n        e.delegateTarget = closest(e.target, selector);\n\n        if (e.delegateTarget) {\n            callback.call(element, e);\n        }\n    }\n}\n\nmodule.exports = delegate;\n\n\n/***/ }),\n\n/***/ 879:\n/***/ (function(__unused_webpack_module, exports) {\n\n/**\n * Check if argument is a HTML element.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.node = function(value) {\n    return value !== undefined\n        && value instanceof HTMLElement\n        && value.nodeType === 1;\n};\n\n/**\n * Check if argument is a list of HTML elements.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.nodeList = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return value !== undefined\n        && (type === '[object NodeList]' || type === '[object HTMLCollection]')\n        && ('length' in value)\n        && (value.length === 0 || exports.node(value[0]));\n};\n\n/**\n * Check if argument is a string.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.string = function(value) {\n    return typeof value === 'string'\n        || value instanceof String;\n};\n\n/**\n * Check if argument is a function.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.fn = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return type === '[object Function]';\n};\n\n\n/***/ }),\n\n/***/ 370:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nvar is = __webpack_require__(879);\nvar delegate = __webpack_require__(438);\n\n/**\n * Validates all params and calls the right\n * listener function based on its target type.\n *\n * @param {String|HTMLElement|HTMLCollection|NodeList} target\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listen(target, type, callback) {\n    if (!target && !type && !callback) {\n        throw new Error('Missing required arguments');\n    }\n\n    if (!is.string(type)) {\n        throw new TypeError('Second argument must be a String');\n    }\n\n    if (!is.fn(callback)) {\n        throw new TypeError('Third argument must be a Function');\n    }\n\n    if (is.node(target)) {\n        return listenNode(target, type, callback);\n    }\n    else if (is.nodeList(target)) {\n        return listenNodeList(target, type, callback);\n    }\n    else if (is.string(target)) {\n        return listenSelector(target, type, callback);\n    }\n    else {\n        throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');\n    }\n}\n\n/**\n * Adds an event listener to a HTML element\n * and returns a remove listener function.\n *\n * @param {HTMLElement} node\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNode(node, type, callback) {\n    node.addEventListener(type, callback);\n\n    return {\n        destroy: function() {\n            node.removeEventListener(type, callback);\n        }\n    }\n}\n\n/**\n * Add an event listener to a list of HTML elements\n * and returns a remove listener function.\n *\n * @param {NodeList|HTMLCollection} nodeList\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNodeList(nodeList, type, callback) {\n    Array.prototype.forEach.call(nodeList, function(node) {\n        node.addEventListener(type, callback);\n    });\n\n    return {\n        destroy: function() {\n            Array.prototype.forEach.call(nodeList, function(node) {\n                node.removeEventListener(type, callback);\n            });\n        }\n    }\n}\n\n/**\n * Add an event listener to a selector\n * and returns a remove listener function.\n *\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenSelector(selector, type, callback) {\n    return delegate(document.body, selector, type, callback);\n}\n\nmodule.exports = listen;\n\n\n/***/ }),\n\n/***/ 817:\n/***/ (function(module) {\n\nfunction select(element) {\n    var selectedText;\n\n    if (element.nodeName === 'SELECT') {\n        element.focus();\n\n        selectedText = element.value;\n    }\n    else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n        var isReadOnly = element.hasAttribute('readonly');\n\n        if (!isReadOnly) {\n            element.setAttribute('readonly', '');\n        }\n\n        element.select();\n        element.setSelectionRange(0, element.value.length);\n\n        if (!isReadOnly) {\n            element.removeAttribute('readonly');\n        }\n\n        selectedText = element.value;\n    }\n    else {\n        if (element.hasAttribute('contenteditable')) {\n            element.focus();\n        }\n\n        var selection = window.getSelection();\n        var range = document.createRange();\n\n        range.selectNodeContents(element);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        selectedText = selection.toString();\n    }\n\n    return selectedText;\n}\n\nmodule.exports = select;\n\n\n/***/ }),\n\n/***/ 279:\n/***/ (function(module) {\n\nfunction E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(__webpack_module_cache__[moduleId]) {\n/******/ \t\t\treturn __webpack_module_cache__[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t!function() {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = function(module) {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\tfunction() { return module['default']; } :\n/******/ \t\t\t\tfunction() { return module; };\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t!function() {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = function(exports, definition) {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t!function() {\n/******/ \t\t__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n/******/ \t}();\n/******/ \t\n/************************************************************************/\n/******/ \t// module exports must be returned from runtime so entry inlining is disabled\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(686);\n/******/ })()\n.default;\n});", "import t from\"pad-end\";var n=9e15,e=function(){for(var t=[],n=-323;n<=308;n++)t.push(Number(\"1e\"+n));return function(n){return t[n+323]}}(),r=function(t){return t instanceof a?t:new a(t)},i=function(t,n){return(new a).fromMantissaExponent(t,n)},o=function(t,n){return(new a).fromMantissaExponent_noNormalize(t,n)};function u(t,n,e,r){var i=n.mul(e.pow(r));return a.floor(t.div(i).mul(e.sub(1)).add(1).log10()/e.log10())}function s(t,n,e,r){return n.mul(e.pow(r)).mul(a.sub(1,e.pow(t))).div(a.sub(1,e))}var a=function(){function a(t){this.mantissa=NaN,this.exponent=NaN,void 0===t?(this.m=0,this.e=0):t instanceof a?this.fromDecimal(t):\"number\"==typeof t?this.fromNumber(t):this.fromString(t)}return Object.defineProperty(a.prototype,\"m\",{get:function(){return this.mantissa},set:function(t){this.mantissa=t},enumerable:!1,configurable:!0}),Object.defineProperty(a.prototype,\"e\",{get:function(){return this.exponent},set:function(t){this.exponent=t},enumerable:!1,configurable:!0}),Object.defineProperty(a.prototype,\"s\",{get:function(){return this.sign()},set:function(t){if(0===t)return this.e=0,void(this.m=0);this.sgn()!==t&&(this.m=-this.m)},enumerable:!1,configurable:!0}),a.fromMantissaExponent=function(t,n){return(new a).fromMantissaExponent(t,n)},a.fromMantissaExponent_noNormalize=function(t,n){return(new a).fromMantissaExponent_noNormalize(t,n)},a.fromDecimal=function(t){return(new a).fromDecimal(t)},a.fromNumber=function(t){return(new a).fromNumber(t)},a.fromString=function(t){return(new a).fromString(t)},a.fromValue=function(t){return(new a).fromValue(t)},a.fromValue_noAlloc=function(t){return t instanceof a?t:new a(t)},a.abs=function(t){return r(t).abs()},a.neg=function(t){return r(t).neg()},a.negate=function(t){return r(t).neg()},a.negated=function(t){return r(t).neg()},a.sign=function(t){return r(t).sign()},a.sgn=function(t){return r(t).sign()},a.round=function(t){return r(t).round()},a.floor=function(t){return r(t).floor()},a.ceil=function(t){return r(t).ceil()},a.trunc=function(t){return r(t).trunc()},a.add=function(t,n){return r(t).add(n)},a.plus=function(t,n){return r(t).add(n)},a.sub=function(t,n){return r(t).sub(n)},a.subtract=function(t,n){return r(t).sub(n)},a.minus=function(t,n){return r(t).sub(n)},a.mul=function(t,n){return r(t).mul(n)},a.multiply=function(t,n){return r(t).mul(n)},a.times=function(t,n){return r(t).mul(n)},a.div=function(t,n){return r(t).div(n)},a.divide=function(t,n){return r(t).div(n)},a.recip=function(t){return r(t).recip()},a.reciprocal=function(t){return r(t).recip()},a.reciprocate=function(t){return r(t).reciprocate()},a.cmp=function(t,n){return r(t).cmp(n)},a.compare=function(t,n){return r(t).cmp(n)},a.eq=function(t,n){return r(t).eq(n)},a.equals=function(t,n){return r(t).eq(n)},a.neq=function(t,n){return r(t).neq(n)},a.notEquals=function(t,n){return r(t).notEquals(n)},a.lt=function(t,n){return r(t).lt(n)},a.lte=function(t,n){return r(t).lte(n)},a.gt=function(t,n){return r(t).gt(n)},a.gte=function(t,n){return r(t).gte(n)},a.max=function(t,n){return r(t).max(n)},a.min=function(t,n){return r(t).min(n)},a.clamp=function(t,n,e){return r(t).clamp(n,e)},a.clampMin=function(t,n){return r(t).clampMin(n)},a.clampMax=function(t,n){return r(t).clampMax(n)},a.cmp_tolerance=function(t,n,e){return r(t).cmp_tolerance(n,e)},a.compare_tolerance=function(t,n,e){return r(t).cmp_tolerance(n,e)},a.eq_tolerance=function(t,n,e){return r(t).eq_tolerance(n,e)},a.equals_tolerance=function(t,n,e){return r(t).eq_tolerance(n,e)},a.neq_tolerance=function(t,n,e){return r(t).neq_tolerance(n,e)},a.notEquals_tolerance=function(t,n,e){return r(t).notEquals_tolerance(n,e)},a.lt_tolerance=function(t,n,e){return r(t).lt_tolerance(n,e)},a.lte_tolerance=function(t,n,e){return r(t).lte_tolerance(n,e)},a.gt_tolerance=function(t,n,e){return r(t).gt_tolerance(n,e)},a.gte_tolerance=function(t,n,e){return r(t).gte_tolerance(n,e)},a.log10=function(t){return r(t).log10()},a.absLog10=function(t){return r(t).absLog10()},a.pLog10=function(t){return r(t).pLog10()},a.log=function(t,n){return r(t).log(n)},a.log2=function(t){return r(t).log2()},a.ln=function(t){return r(t).ln()},a.logarithm=function(t,n){return r(t).logarithm(n)},a.pow10=function(t){return Number.isInteger(t)?o(1,t):i(Math.pow(10,t%1),Math.trunc(t))},a.pow=function(t,n){return\"number\"==typeof t&&10===t&&\"number\"==typeof n&&Number.isInteger(n)?o(1,n):r(t).pow(n)},a.exp=function(t){return r(t).exp()},a.sqr=function(t){return r(t).sqr()},a.sqrt=function(t){return r(t).sqrt()},a.cube=function(t){return r(t).cube()},a.cbrt=function(t){return r(t).cbrt()},a.dp=function(t){return r(t).dp()},a.decimalPlaces=function(t){return r(t).dp()},a.affordGeometricSeries=function(t,n,e,i){return u(r(t),r(n),r(e),i)},a.sumGeometricSeries=function(t,n,e,i){return s(t,r(n),r(e),i)},a.affordArithmeticSeries=function(t,n,e,i){return function(t,n,e,r){var i=n.add(r.mul(e)).sub(e.div(2)),o=i.pow(2);return i.neg().add(o.add(e.mul(t).mul(2)).sqrt()).div(e).floor()}(r(t),r(n),r(e),r(i))},a.sumArithmeticSeries=function(t,n,e,i){return function(t,n,e,r){var i=n.add(r.mul(e));return t.div(2).mul(i.mul(2).plus(t.sub(1).mul(e)))}(r(t),r(n),r(e),r(i))},a.efficiencyOfPurchase=function(t,n,e){return function(t,n,e){return t.div(n).add(t.div(e))}(r(t),r(n),r(e))},a.randomDecimalForTesting=function(t){if(20*Math.random()<1)return o(0,0);var n=10*Math.random();10*Math.random()<1&&(n=Math.round(n)),n*=Math.sign(2*Math.random()-1);var e=Math.floor(Math.random()*t*2)-t;return i(n,e)},a.prototype.normalize=function(){if(this.m>=1&&this.m<10)return this;if(0===this.m)return this.m=0,this.e=0,this;var t=Math.floor(Math.log10(Math.abs(this.m)));return this.m=-324===t?10*this.m/1e-323:this.m/e(t),this.e+=t,this},a.prototype.fromMantissaExponent=function(t,n){return isFinite(t)&&isFinite(n)?(this.m=t,this.e=n,this.normalize(),this):(t=Number.NaN,n=Number.NaN,this)},a.prototype.fromMantissaExponent_noNormalize=function(t,n){return this.m=t,this.e=n,this},a.prototype.fromDecimal=function(t){return this.m=t.m,this.e=t.e,this},a.prototype.fromNumber=function(t){return isNaN(t)?(this.m=Number.NaN,this.e=Number.NaN):t===Number.POSITIVE_INFINITY?(this.m=1,this.e=n):t===Number.NEGATIVE_INFINITY?(this.m=-1,this.e=n):0===t?(this.m=0,this.e=0):(this.e=Math.floor(Math.log10(Math.abs(t))),this.m=-324===this.e?10*t/1e-323:t/e(this.e),this.normalize()),this},a.prototype.fromString=function(t){if(-1!==t.indexOf(\"e\")){var n=t.split(\"e\");this.m=parseFloat(n[0]),this.e=parseFloat(n[1]),this.normalize()}else if(\"NaN\"===t)this.m=Number.NaN,this.e=Number.NaN;else if(this.fromNumber(parseFloat(t)),isNaN(this.m))throw Error(\"[DecimalError] Invalid argument: \"+t);return this},a.prototype.fromValue=function(t){return t instanceof a?this.fromDecimal(t):\"number\"==typeof t?this.fromNumber(t):\"string\"==typeof t?this.fromString(t):(this.m=0,this.e=0,this)},a.prototype.toNumber=function(){if(!isFinite(this.e))return Number.NaN;if(this.e>308)return this.m>0?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY;if(this.e<-324)return 0;if(-324===this.e)return this.m>0?5e-324:-5e-324;var t=this.m*e(this.e);if(!isFinite(t)||this.e<0)return t;var n=Math.round(t);return Math.abs(n-t)<1e-10?n:t},a.prototype.mantissaWithDecimalPlaces=function(t){if(isNaN(this.m)||isNaN(this.e))return Number.NaN;if(0===this.m)return 0;var n=t+1,e=Math.ceil(Math.log10(Math.abs(this.m))),r=Math.round(this.m*Math.pow(10,n-e))*Math.pow(10,e-n);return parseFloat(r.toFixed(Math.max(n-e,0)))},a.prototype.toString=function(){return isNaN(this.m)||isNaN(this.e)?\"NaN\":this.e>=n?this.m>0?\"Infinity\":\"-Infinity\":this.e<=-n||0===this.m?\"0\":this.e<21&&this.e>-7?this.toNumber().toString():this.m+\"e\"+(this.e>=0?\"+\":\"\")+this.e},a.prototype.toExponential=function(e){if(isNaN(this.m)||isNaN(this.e))return\"NaN\";if(this.e>=n)return this.m>0?\"Infinity\":\"-Infinity\";if(this.e<=-n||0===this.m)return\"0\"+(e>0?t(\".\",e+1,\"0\"):\"\")+\"e+0\";if(this.e>-324&&this.e<308)return this.toNumber().toExponential(e);isFinite(e)||(e=17);var r=e+1,i=Math.max(1,Math.ceil(Math.log10(Math.abs(this.m))));return(Math.round(this.m*Math.pow(10,r-i))*Math.pow(10,i-r)).toFixed(Math.max(r-i,0))+\"e\"+(this.e>=0?\"+\":\"\")+this.e},a.prototype.toFixed=function(e){return isNaN(this.m)||isNaN(this.e)?\"NaN\":this.e>=n?this.m>0?\"Infinity\":\"-Infinity\":this.e<=-n||0===this.m?\"0\"+(e>0?t(\".\",e+1,\"0\"):\"\"):this.e>=17?this.m.toString().replace(\".\",\"\").padEnd(this.e+1,\"0\")+(e>0?t(\".\",e+1,\"0\"):\"\"):this.toNumber().toFixed(e)},a.prototype.toPrecision=function(t){return this.e<=-7?this.toExponential(t-1):t>this.e?this.toFixed(t-this.e-1):this.toExponential(t-1)},a.prototype.valueOf=function(){return this.toString()},a.prototype.toJSON=function(){return this.toString()},a.prototype.toStringWithDecimalPlaces=function(t){return this.toExponential(t)},a.prototype.abs=function(){return o(Math.abs(this.m),this.e)},a.prototype.neg=function(){return o(-this.m,this.e)},a.prototype.negate=function(){return this.neg()},a.prototype.negated=function(){return this.neg()},a.prototype.sign=function(){return Math.sign(this.m)},a.prototype.sgn=function(){return this.sign()},a.prototype.round=function(){return this.e<-1?new a(0):this.e<17?new a(Math.round(this.toNumber())):this},a.prototype.floor=function(){return this.e<-1?Math.sign(this.m)>=0?new a(0):new a(-1):this.e<17?new a(Math.floor(this.toNumber())):this},a.prototype.ceil=function(){return this.e<-1?Math.sign(this.m)>0?new a(1):new a(0):this.e<17?new a(Math.ceil(this.toNumber())):this},a.prototype.trunc=function(){return this.e<0?new a(0):this.e<17?new a(Math.trunc(this.toNumber())):this},a.prototype.add=function(t){var n,o,u=r(t);if(0===this.m)return u;if(0===u.m)return this;if(this.e>=u.e?(n=this,o=u):(n=u,o=this),n.e-o.e>17)return n;var s=Math.round(1e14*n.m+1e14*o.m*e(o.e-n.e));return i(s,n.e-14)},a.prototype.plus=function(t){return this.add(t)},a.prototype.sub=function(t){return this.add(r(t).neg())},a.prototype.subtract=function(t){return this.sub(t)},a.prototype.minus=function(t){return this.sub(t)},a.prototype.mul=function(t){if(\"number\"==typeof t)return t<1e307&&t>-1e307?i(this.m*t,this.e):i(1e-307*this.m*t,this.e+307);var n=\"string\"==typeof t?new a(t):t;return i(this.m*n.m,this.e+n.e)},a.prototype.multiply=function(t){return this.mul(t)},a.prototype.times=function(t){return this.mul(t)},a.prototype.div=function(t){return this.mul(r(t).recip())},a.prototype.divide=function(t){return this.div(t)},a.prototype.divideBy=function(t){return this.div(t)},a.prototype.dividedBy=function(t){return this.div(t)},a.prototype.recip=function(){return i(1/this.m,-this.e)},a.prototype.reciprocal=function(){return this.recip()},a.prototype.reciprocate=function(){return this.recip()},a.prototype.cmp=function(t){var n=r(t);if(0===this.m){if(0===n.m)return 0;if(n.m<0)return 1;if(n.m>0)return-1}if(0===n.m){if(this.m<0)return-1;if(this.m>0)return 1}if(this.m>0)return n.m<0||this.e>n.e?1:this.e<n.e?-1:this.m>n.m?1:this.m<n.m?-1:0;if(this.m<0)return n.m>0||this.e>n.e?-1:this.e<n.e||this.m>n.m?1:this.m<n.m?-1:0;throw Error(\"Unreachable code\")},a.prototype.compare=function(t){return this.cmp(t)},a.prototype.eq=function(t){var n=r(t);return this.e===n.e&&this.m===n.m},a.prototype.equals=function(t){return this.eq(t)},a.prototype.neq=function(t){return!this.eq(t)},a.prototype.notEquals=function(t){return this.neq(t)},a.prototype.lt=function(t){var n=r(t);return 0===this.m?n.m>0:0===n.m?this.m<=0:this.e===n.e?this.m<n.m:this.m>0?n.m>0&&this.e<n.e:n.m>0||this.e>n.e},a.prototype.lte=function(t){return!this.gt(t)},a.prototype.gt=function(t){var n=r(t);return 0===this.m?n.m<0:0===n.m?this.m>0:this.e===n.e?this.m>n.m:this.m>0?n.m<0||this.e>n.e:n.m<0&&this.e<n.e},a.prototype.gte=function(t){return!this.lt(t)},a.prototype.max=function(t){var n=r(t);return this.lt(n)?n:this},a.prototype.min=function(t){var n=r(t);return this.gt(n)?n:this},a.prototype.clamp=function(t,n){return this.max(t).min(n)},a.prototype.clampMin=function(t){return this.max(t)},a.prototype.clampMax=function(t){return this.min(t)},a.prototype.cmp_tolerance=function(t,n){var e=r(t);return this.eq_tolerance(e,n)?0:this.cmp(e)},a.prototype.compare_tolerance=function(t,n){return this.cmp_tolerance(t,n)},a.prototype.eq_tolerance=function(t,n){var e=r(t);return a.lte(this.sub(e).abs(),a.max(this.abs(),e.abs()).mul(n))},a.prototype.equals_tolerance=function(t,n){return this.eq_tolerance(t,n)},a.prototype.neq_tolerance=function(t,n){return!this.eq_tolerance(t,n)},a.prototype.notEquals_tolerance=function(t,n){return this.neq_tolerance(t,n)},a.prototype.lt_tolerance=function(t,n){var e=r(t);return!this.eq_tolerance(e,n)&&this.lt(e)},a.prototype.lte_tolerance=function(t,n){var e=r(t);return this.eq_tolerance(e,n)||this.lt(e)},a.prototype.gt_tolerance=function(t,n){var e=r(t);return!this.eq_tolerance(e,n)&&this.gt(e)},a.prototype.gte_tolerance=function(t,n){var e=r(t);return this.eq_tolerance(e,n)||this.gt(e)},a.prototype.log10=function(){return this.e+Math.log10(this.m)},a.prototype.absLog10=function(){return this.e+Math.log10(Math.abs(this.m))},a.prototype.pLog10=function(){return this.m<=0||this.e<0?0:this.log10()},a.prototype.log=function(t){return Math.LN10/Math.log(t)*this.log10()},a.prototype.log2=function(){return 3.321928094887362*this.log10()},a.prototype.ln=function(){return 2.302585092994045*this.log10()},a.prototype.logarithm=function(t){return this.log(t)},a.prototype.pow=function(t){var n,e=t instanceof a?t.toNumber():t,r=this.e*e;if(Number.isSafeInteger(r)&&(n=Math.pow(this.m,e),isFinite(n)&&0!==n))return i(n,r);var o=Math.trunc(r),u=r-o;if(n=Math.pow(10,e*Math.log10(this.m)+u),isFinite(n)&&0!==n)return i(n,o);var s=a.pow10(e*this.absLog10());return-1===this.sign()?1===Math.abs(e%2)?s.neg():0===Math.abs(e%2)?s:new a(Number.NaN):s},a.prototype.pow_base=function(t){return r(t).pow(this)},a.prototype.factorial=function(){var t=this.toNumber()+1;return a.pow(t/Math.E*Math.sqrt(t*Math.sinh(1/t)+1/(810*Math.pow(t,6))),t).mul(Math.sqrt(2*Math.PI/t))},a.prototype.exp=function(){var t=this.toNumber();return-706<t&&t<709?a.fromNumber(Math.exp(t)):a.pow(Math.E,t)},a.prototype.sqr=function(){return i(Math.pow(this.m,2),2*this.e)},a.prototype.sqrt=function(){return this.m<0?new a(Number.NaN):this.e%2!=0?i(3.16227766016838*Math.sqrt(this.m),Math.floor(this.e/2)):i(Math.sqrt(this.m),Math.floor(this.e/2))},a.prototype.cube=function(){return i(Math.pow(this.m,3),3*this.e)},a.prototype.cbrt=function(){var t=1,n=this.m;n<0&&(t=-1,n=-n);var e=t*Math.pow(n,1/3),r=this.e%3;return i(1===r||-1===r?2.154434690031883*e:0!==r?4.641588833612778*e:e,Math.floor(this.e/3))},a.prototype.sinh=function(){return this.exp().sub(this.negate().exp()).div(2)},a.prototype.cosh=function(){return this.exp().add(this.negate().exp()).div(2)},a.prototype.tanh=function(){return this.sinh().div(this.cosh())},a.prototype.asinh=function(){return a.ln(this.add(this.sqr().add(1).sqrt()))},a.prototype.acosh=function(){return a.ln(this.add(this.sqr().sub(1).sqrt()))},a.prototype.atanh=function(){return this.abs().gte(1)?Number.NaN:a.ln(this.add(1).div(new a(1).sub(this)))/2},a.prototype.ascensionPenalty=function(t){return 0===t?this:this.pow(Math.pow(10,-t))},a.prototype.egg=function(){return this.add(9)},a.prototype.lessThanOrEqualTo=function(t){return this.cmp(t)<1},a.prototype.lessThan=function(t){return this.cmp(t)<0},a.prototype.greaterThanOrEqualTo=function(t){return this.cmp(t)>-1},a.prototype.greaterThan=function(t){return this.cmp(t)>0},a.prototype.decimalPlaces=function(){return this.dp()},a.prototype.dp=function(){if(!isFinite(this.mantissa))return NaN;if(this.exponent>=17)return 0;for(var t=this.mantissa,n=-this.exponent,e=1;Math.abs(Math.round(t*e)/e-t)>1e-10;)e*=10,n++;return n>0?n:0},Object.defineProperty(a,\"MAX_VALUE\",{get:function(){return h},enumerable:!1,configurable:!0}),Object.defineProperty(a,\"MIN_VALUE\",{get:function(){return c},enumerable:!1,configurable:!0}),Object.defineProperty(a,\"NUMBER_MAX_VALUE\",{get:function(){return p},enumerable:!1,configurable:!0}),Object.defineProperty(a,\"NUMBER_MIN_VALUE\",{get:function(){return f},enumerable:!1,configurable:!0}),a}(),h=o(1,n),c=o(1,-n),p=r(Number.MAX_VALUE),f=r(Number.MIN_VALUE);export default a;\n", "import type { DecimalSource } from 'break_infinity.js';\nimport Decimal from 'break_infinity.js';\nimport LZString from 'lz-string';\n\nimport { isDecimal, sortWithIndices, sumContents, btoa, cleanString } from './Utility';\nimport { blankGlobals, Globals as G } from './Variables';\nimport { CalcECC, getChallengeConditions, challengeDisplay, highestChallengeRewards, challengeRequirement, runChallengeSweep, getMaxChallenges, challenge15ScoreMultiplier, getNextChallenge, autoAscensionChallengeSweepUnlock } from './Challenges';\n\nimport type { OneToFive, Player, resetNames, ZeroToFour } from './types/Synergism';\nimport { upgradeupdate, getConstUpgradeMetadata, buyConstantUpgrades, ascendBuildingDR, categoryUpgrades } from './Upgrades';\nimport { updateResearchBG, maxRoombaResearchIndex, buyResearch } from './Research';\nimport { updateChallengeDisplay, revealStuff, showCorruptionStatsLoadouts, updateAchievementBG, updateChallengeLevel, buttoncolorchange, htmlInserts, changeTabColor, Confirm, Alert, Notification } from './UpdateHTML';\nimport { calculateHypercubeBlessings } from './Hypercubes';\nimport { calculateTesseractBlessings } from './Tesseracts';\nimport { calculateCubeBlessings, calculateObtainium, calculateAnts, calculateRuneLevels, calculateOffline, calculateSigmoidExponential, calculateCorruptionPoints, calculateTotalCoinOwned, calculateTotalAcceleratorBoost, dailyResetCheck, calculateOfferings, calculateAcceleratorMultiplier, calculateTimeAcceleration, exitOffline, calculateGoldenQuarkGain } from './Calculate';\nimport { updateTalismanAppearance, toggleTalismanBuy, updateTalismanInventory, buyTalismanEnhance, buyTalismanLevels, calculateMaxTalismanLevel } from './Talismans';\nimport { toggleAscStatPerSecond, toggleChallenges, toggleauto, toggleAutoChallengeModeText, toggleShops, toggleTabs, toggleSubTab, toggleAntMaxBuy, toggleAntAutoSacrifice, toggleAutoAscend, updateAutoChallenge, updateRuneBlessingBuyAmount, autoCubeUpgradesToggle, autoPlatonicUpgradesToggle } from './Toggles';\nimport { c15RewardUpdate } from './Statistics';\nimport { resetHistoryRenderAllTables } from './History';\nimport { calculatePlatonicBlessings } from './PlatonicCubes';\nimport { antSacrificePointsToMultiplier, autoBuyAnts, calculateCrumbToCoinExp } from './Ants';\nimport { calculatetax } from './Tax';\nimport { ascensionAchievementCheck, challengeachievementcheck, achievementaward, resetachievementcheck, buildingAchievementCheck } from './Achievements';\nimport { reset, resetrepeat, singularity, updateSingularityAchievements, updateAutoReset, updateTesseractAutoBuyAmount, updateAutoCubesOpens, updateSingularityGlobalPerks } from './Reset';\nimport type { TesseractBuildings } from './Buy';\nimport { buyMax, buyAccelerator, buyMultiplier, boostAccelerator, buyCrystalUpgrades, buyParticleBuilding, getReductionValue, getCost, buyRuneBonusLevels, buyTesseractBuilding, calculateTessBuildingsInBudget } from './Buy';\nimport { autoUpgrades } from './Automation';\nimport { redeemShards } from './Runes';\nimport { updateCubeUpgradeBG } from './Cubes';\nimport { corruptionLoadoutTableUpdate, corruptionButtonsAdd, corruptionLoadoutTableCreate, corruptionStatsUpdate, updateCorruptionLoadoutNames, corruptionLoadoutSaveLoad, corrChallengeMinimum, maxCorruptionLevel } from './Corruptions';\nimport { generateEventHandlers } from './EventListeners';\nimport { addTimers, automaticTools } from './Helper';\nimport { autoResearchEnabled } from './Research';\n//import { LegacyShopUpgrades } from './types/LegacySynergism';\n\nimport { checkVariablesOnLoad } from './CheckVariables';\nimport { AbyssHepteract, AcceleratorBoostHepteract, AcceleratorHepteract, ChallengeHepteract, ChronosHepteract, hepteractEffective, HyperrealismHepteract, MultiplierHepteract, QuarkHepteract, toggleAutoBuyOrbs } from './Hepteracts';\nimport { QuarkHandler } from './Quark';\nimport { WowCubes, WowHypercubes, WowPlatonicCubes, WowTesseracts } from './CubeExperimental';\nimport { updatePlatonicUpgradeBG } from './Platonic';\nimport { testing, version, lastUpdated, prod } from './Config';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport localforage from 'localforage';\nimport { singularityData, SingularityUpgrade, getFastForwardTotalMultiplier } from './singularity';\nimport type { PlayerSave } from './types/LegacySynergism';\nimport { eventCheck } from './Event';\nimport { disableHotkeys } from './Hotkeys';\nimport { octeractData, OcteractUpgrade } from './Octeracts';\nimport {settingAnnotation, toggleTheme, toggleIconSet } from './Themes';\nimport { setInterval, setTimeout, clearTimeout, clearTimers } from './Timers';\nimport { SingularityChallenge, singularityChallengeData } from './SingularityChallenges';\nimport { init as i18nInit } from './i18n'\nimport i18next from 'i18next'\n\nexport const player: Player = {\n    firstPlayed: new Date().toISOString(),\n    worlds: new QuarkHandler({ quarks: 0, bonus: 0 }),\n    coins: new Decimal('1e2'),\n    coinsThisPrestige: new Decimal('1e2'),\n    coinsThisTranscension: new Decimal('1e2'),\n    coinsThisReincarnation: new Decimal('1e2'),\n    coinsTotal: new Decimal('100'),\n\n    firstOwnedCoin: 0,\n    firstGeneratedCoin: new Decimal('0'),\n    firstCostCoin: new Decimal('100'),\n    firstProduceCoin: 0.25,\n\n    secondOwnedCoin: 0,\n    secondGeneratedCoin: new Decimal('0'),\n    secondCostCoin: new Decimal('1e3'),\n    secondProduceCoin: 2.5,\n\n    thirdOwnedCoin: 0,\n    thirdGeneratedCoin: new Decimal('0'),\n    thirdCostCoin: new Decimal('2e4'),\n    thirdProduceCoin: 25,\n\n    fourthOwnedCoin: 0,\n    fourthGeneratedCoin: new Decimal('0'),\n    fourthCostCoin: new Decimal('4e5'),\n    fourthProduceCoin: 250,\n\n    fifthOwnedCoin: 0,\n    fifthGeneratedCoin: new Decimal('0'),\n    fifthCostCoin: new Decimal('8e6'),\n    fifthProduceCoin: 2500,\n\n    firstOwnedDiamonds: 0,\n    firstGeneratedDiamonds: new Decimal('0'),\n    firstCostDiamonds: new Decimal('100'),\n    firstProduceDiamonds: 0.05,\n\n    secondOwnedDiamonds: 0,\n    secondGeneratedDiamonds: new Decimal('0'),\n    secondCostDiamonds: new Decimal('1e5'),\n    secondProduceDiamonds: 0.0005,\n\n    thirdOwnedDiamonds: 0,\n    thirdGeneratedDiamonds: new Decimal('0'),\n    thirdCostDiamonds: new Decimal('1e15'),\n    thirdProduceDiamonds: 0.00005,\n\n    fourthOwnedDiamonds: 0,\n    fourthGeneratedDiamonds: new Decimal('0'),\n    fourthCostDiamonds: new Decimal('1e40'),\n    fourthProduceDiamonds: 0.000005,\n\n    fifthOwnedDiamonds: 0,\n    fifthGeneratedDiamonds: new Decimal('0'),\n    fifthCostDiamonds: new Decimal('1e100'),\n    fifthProduceDiamonds: 0.000005,\n\n    firstOwnedMythos: 0,\n    firstGeneratedMythos: new Decimal('0'),\n    firstCostMythos: new Decimal('1'),\n    firstProduceMythos: 1,\n\n    secondOwnedMythos: 0,\n    secondGeneratedMythos: new Decimal('0'),\n    secondCostMythos: new Decimal('100'),\n    secondProduceMythos: 0.01,\n\n    thirdOwnedMythos: 0,\n    thirdGeneratedMythos: new Decimal('0'),\n    thirdCostMythos: new Decimal('1e4'),\n    thirdProduceMythos: 0.001,\n\n    fourthOwnedMythos: 0,\n    fourthGeneratedMythos: new Decimal('0'),\n    fourthCostMythos: new Decimal('1e8'),\n    fourthProduceMythos: 0.0002,\n\n    fifthOwnedMythos: 0,\n    fifthGeneratedMythos: new Decimal('0'),\n    fifthCostMythos: new Decimal('1e16'),\n    fifthProduceMythos: 0.00004,\n\n    firstOwnedParticles: 0,\n    firstGeneratedParticles: new Decimal('0'),\n    firstCostParticles: new Decimal('1'),\n    firstProduceParticles: .25,\n\n    secondOwnedParticles: 0,\n    secondGeneratedParticles: new Decimal('0'),\n    secondCostParticles: new Decimal('100'),\n    secondProduceParticles: .20,\n\n    thirdOwnedParticles: 0,\n    thirdGeneratedParticles: new Decimal('0'),\n    thirdCostParticles: new Decimal('1e4'),\n    thirdProduceParticles: .15,\n\n    fourthOwnedParticles: 0,\n    fourthGeneratedParticles: new Decimal('0'),\n    fourthCostParticles: new Decimal('1e8'),\n    fourthProduceParticles: .10,\n\n    fifthOwnedParticles: 0,\n    fifthGeneratedParticles: new Decimal('0'),\n    fifthCostParticles: new Decimal('1e16'),\n    fifthProduceParticles: .5,\n\n    firstOwnedAnts: 0,\n    firstGeneratedAnts: new Decimal('0'),\n    firstCostAnts: new Decimal('1e700'),\n    firstProduceAnts: .0001,\n\n    secondOwnedAnts: 0,\n    secondGeneratedAnts: new Decimal('0'),\n    secondCostAnts: new Decimal('3'),\n    secondProduceAnts: .00005,\n\n    thirdOwnedAnts: 0,\n    thirdGeneratedAnts: new Decimal('0'),\n    thirdCostAnts: new Decimal('100'),\n    thirdProduceAnts: .00002,\n\n    fourthOwnedAnts: 0,\n    fourthGeneratedAnts: new Decimal('0'),\n    fourthCostAnts: new Decimal('1e4'),\n    fourthProduceAnts: .00001,\n\n    fifthOwnedAnts: 0,\n    fifthGeneratedAnts: new Decimal('0'),\n    fifthCostAnts: new Decimal('1e12'),\n    fifthProduceAnts: .000005,\n\n    sixthOwnedAnts: 0,\n    sixthGeneratedAnts: new Decimal('0'),\n    sixthCostAnts: new Decimal('1e36'),\n    sixthProduceAnts: .000002,\n\n    seventhOwnedAnts: 0,\n    seventhGeneratedAnts: new Decimal('0'),\n    seventhCostAnts: new Decimal('1e100'),\n    seventhProduceAnts: .000001,\n\n    eighthOwnedAnts: 0,\n    eighthGeneratedAnts: new Decimal('0'),\n    eighthCostAnts: new Decimal('1e300'),\n    eighthProduceAnts: .00000001,\n\n    ascendBuilding1: {\n        cost: 1,\n        owned: 0,\n        generated: new Decimal('0'),\n        multiplier: 0.01\n    },\n    ascendBuilding2: {\n        cost: 10,\n        owned: 0,\n        generated: new Decimal('0'),\n        multiplier: 0.01\n    },\n    ascendBuilding3: {\n        cost: 100,\n        owned: 0,\n        generated: new Decimal('0'),\n        multiplier: 0.01\n    },\n    ascendBuilding4: {\n        cost: 1000,\n        owned: 0,\n        generated: new Decimal('0'),\n        multiplier: 0.01\n    },\n    ascendBuilding5: {\n        cost: 10000,\n        owned: 0,\n        generated: new Decimal('0'),\n        multiplier: 0.01\n    },\n\n    multiplierCost: new Decimal('1e4'),\n    multiplierBought: 0,\n\n    acceleratorCost: new Decimal('500'),\n    acceleratorBought: 0,\n\n    acceleratorBoostBought: 0,\n    acceleratorBoostCost: new Decimal('1e3'),\n\n    upgrades: Array(141).fill(0) as number[],\n\n    prestigeCount: 0,\n    transcendCount: 0,\n    reincarnationCount: 0,\n\n    prestigePoints: new Decimal('0'),\n    transcendPoints: new Decimal('0'),\n    reincarnationPoints: new Decimal('0'),\n\n    prestigeShards: new Decimal('0'),\n    transcendShards: new Decimal('0'),\n    reincarnationShards: new Decimal('0'),\n\n    toggles: {\n        1: false,\n        2: false,\n        3: false,\n        4: false,\n        5: false,\n        6: false,\n        7: false,\n        8: false,\n        9: false,\n        10: false,\n        11: false,\n        12: false,\n        13: false,\n        14: false,\n        15: false,\n        16: false,\n        17: false,\n        18: false,\n        19: false,\n        20: false,\n        21: false,\n        22: false,\n        23: false,\n        24: false,\n        25: false,\n        26: false,\n        27: false,\n        28: true,\n        29: true,\n        30: true,\n        31: true,\n        32: true,\n        33: true,\n        34: true,\n        35: true,\n        36: false,\n        37: false,\n        38: false,\n        39: true,\n        40: true,\n        41: true,\n        42: false,\n        43: false\n    },\n\n    challengecompletions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    highestchallengecompletions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    challenge15Exponent: 0,\n    highestChallenge15Exponent: 0,\n\n    retrychallenges: false,\n    currentChallenge: {\n        transcension: 0,\n        reincarnation: 0,\n        ascension: 0\n    },\n    researchPoints: 0,\n    obtainiumtimer: 0,\n    obtainiumpersecond: 0,\n    maxobtainiumpersecond: 0,\n    maxobtainium: 0,\n    // Ignore the first index. The other 25 are shaped in a 5x5 grid similar to the production appearance\n    researches: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\n    unlocks: {\n        coinone: false,\n        cointwo: false,\n        cointhree: false,\n        coinfour: false,\n        prestige: false,\n        generation: false,\n        transcend: false,\n        reincarnate: false,\n        rrow1: false,\n        rrow2: false,\n        rrow3: false,\n        rrow4: false\n    },\n    achievements: Array(281).fill(0) as number[],\n\n    achievementPoints: 0,\n\n    prestigenomultiplier: true,\n    prestigenoaccelerator: true,\n    transcendnomultiplier: true,\n    transcendnoaccelerator: true,\n    reincarnatenomultiplier: true,\n    reincarnatenoaccelerator: true,\n    prestigenocoinupgrades: true,\n    transcendnocoinupgrades: true,\n    transcendnocoinorprestigeupgrades: true,\n    reincarnatenocoinupgrades: true,\n    reincarnatenocoinorprestigeupgrades: true,\n    reincarnatenocoinprestigeortranscendupgrades: true,\n    reincarnatenocoinprestigetranscendorgeneratorupgrades: true,\n\n    crystalUpgrades: [0, 0, 0, 0, 0, 0, 0, 0],\n    crystalUpgradesCost: [7, 15, 20, 40, 100, 200, 500, 1000],\n\n    runelevels: [1, 1, 1, 1, 1, 0, 0],\n    runeexp: [0, 0, 0, 0, 0, 0, 0],\n    runeshards: 0,\n    maxofferings: 0,\n    offeringpersecond: 0,\n\n    prestigecounter: 0,\n    transcendcounter: 0,\n    reincarnationcounter: 0,\n    offlinetick: 0,\n\n    prestigeamount: 0,\n    transcendamount: 0,\n    reincarnationamount: 0,\n\n    fastestprestige: 9999999999,\n    fastesttranscend: 99999999999,\n    fastestreincarnate: 999999999999,\n\n    resettoggle1: 1,\n    resettoggle2: 1,\n    resettoggle3: 1,\n    resettoggle4: 1,\n\n    tesseractAutoBuyerToggle: 0,\n    tesseractAutoBuyerAmount: 0,\n\n    coinbuyamount: 1,\n    crystalbuyamount: 1,\n    mythosbuyamount: 1,\n    particlebuyamount: 1,\n    offeringbuyamount: 1,\n    tesseractbuyamount: 1,\n\n\n    shoptoggles: {\n        coin: true,\n        prestige: true,\n        transcend: true,\n        generators: true,\n        reincarnate: true\n    },\n    tabnumber: 1,\n    subtabNumber: 0,\n\n    // create a Map with keys defaulting to false\n    codes: new Map(\n        Array.from({ length: 40 }, (_, i) => [i + 1, false])\n    ),\n\n    loaded1009: true,\n    loaded1009hotfix1: true,\n    loaded10091: true,\n    loaded1010: true,\n    loaded10101: true,\n\n    shopUpgrades: {\n        offeringPotion: 1,\n        obtainiumPotion: 1,\n        offeringEX: 0,\n        offeringAuto: 0,\n        obtainiumEX: 0,\n        obtainiumAuto: 0,\n        instantChallenge: 0,\n        antSpeed: 0,\n        cashGrab: 0,\n        shopTalisman: 0,\n        seasonPass: 0,\n        challengeExtension: 0,\n        challengeTome: 0,\n        cubeToQuark: 0,\n        tesseractToQuark: 0,\n        hypercubeToQuark: 0,\n        seasonPass2: 0,\n        seasonPass3: 0,\n        chronometer: 0,\n        infiniteAscent: 0,\n        calculator: 0,\n        calculator2: 0,\n        calculator3: 0,\n        calculator4: 0,\n        calculator5: 0,\n        calculator6: 0,\n        constantEX: 0,\n        powderEX: 0,\n        chronometer2: 0,\n        chronometer3: 0,\n        seasonPassY: 0,\n        seasonPassZ: 0,\n        challengeTome2: 0,\n        instantChallenge2: 0,\n        cashGrab2: 0,\n        chronometerZ: 0,\n        cubeToQuarkAll: 0,\n        offeringEX2: 0,\n        obtainiumEX2: 0,\n        seasonPassLost: 0,\n        powderAuto: 0,\n        challenge15Auto: 0,\n        extraWarp: 0,\n        autoWarp: 0,\n        improveQuarkHept: 0,\n        improveQuarkHept2: 0,\n        improveQuarkHept3: 0,\n        improveQuarkHept4: 0,\n        shopImprovedDaily: 0,\n        shopImprovedDaily2: 0,\n        shopImprovedDaily3: 0,\n        shopImprovedDaily4: 0,\n        offeringEX3: 0,\n        obtainiumEX3: 0,\n        improveQuarkHept5: 0,\n        seasonPassInfinity: 0,\n        chronometerInfinity: 0,\n        shopSingularityPenaltyDebuff: 0\n    },\n    shopBuyMaxToggle: false,\n    shopHideToggle: false,\n    shopConfirmationToggle: true,\n    autoPotionTimer: 0,\n    autoPotionTimerObtainium: 0,\n\n    autoSacrificeToggle: false,\n    autoBuyFragment: false,\n    autoFortifyToggle: false,\n    autoEnhanceToggle: false,\n    autoResearchToggle: false,\n    researchBuyMaxToggle: false,\n    autoResearchMode: 'manual',\n    autoResearch: 0,\n    autoSacrifice: 0,\n    sacrificeTimer: 0,\n    quarkstimer: 90000,\n    goldenQuarksTimer: 90000,\n\n    antPoints: new Decimal('1'),\n    antUpgrades: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    antSacrificePoints: 0,\n    antSacrificeTimer: 900,\n    antSacrificeTimerReal: 900,\n\n    talismanLevels: [0, 0, 0, 0, 0, 0, 0],\n    talismanRarity: [1, 1, 1, 1, 1, 1, 1],\n    talismanOne: [null, -1, 1, 1, 1, -1],\n    talismanTwo: [null, 1, 1, -1, -1, 1],\n    talismanThree: [null, 1, -1, 1, 1, -1],\n    talismanFour: [null, -1, -1, 1, 1, 1],\n    talismanFive: [null, 1, 1, -1, -1, 1],\n    talismanSix: [null, 1, 1, 1, -1, -1],\n    talismanSeven: [null, -1, 1, -1, 1, 1],\n    talismanShards: 0,\n    commonFragments: 0,\n    uncommonFragments: 0,\n    rareFragments: 0,\n    epicFragments: 0,\n    legendaryFragments: 0,\n    mythicalFragments: 0,\n\n    buyTalismanShardPercent: 10,\n\n    autoAntSacrifice: false,\n    autoAntSacTimer: 900,\n    autoAntSacrificeMode: 0,\n    antMax: false,\n\n    ascensionCount: 0,\n    ascensionCounter: 0,\n    ascensionCounterReal: 0,\n    ascensionCounterRealReal: 0,\n    cubeUpgrades: [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    cubeUpgradesBuyMaxToggle: false,\n    autoCubeUpgradesToggle: false,\n    autoPlatonicUpgradesToggle: false,\n    platonicUpgrades: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    wowCubes: new WowCubes(0),\n    wowTesseracts: new WowTesseracts(0),\n    wowHypercubes: new WowHypercubes(0),\n    wowPlatonicCubes: new WowPlatonicCubes(0),\n    saveOfferingToggle: false,\n    wowAbyssals: 0,\n    wowOcteracts: 0,\n    totalWowOcteracts: 0,\n    cubeBlessings: {\n        accelerator: 0,\n        multiplier: 0,\n        offering: 0,\n        runeExp: 0,\n        obtainium: 0,\n        antSpeed: 0,\n        antSacrifice: 0,\n        antELO: 0,\n        talismanBonus: 0,\n        globalSpeed: 0\n    },\n    tesseractBlessings: {\n        accelerator: 0,\n        multiplier: 0,\n        offering: 0,\n        runeExp: 0,\n        obtainium: 0,\n        antSpeed: 0,\n        antSacrifice: 0,\n        antELO: 0,\n        talismanBonus: 0,\n        globalSpeed: 0\n    },\n    hypercubeBlessings: {\n        accelerator: 0,\n        multiplier: 0,\n        offering: 0,\n        runeExp: 0,\n        obtainium: 0,\n        antSpeed: 0,\n        antSacrifice: 0,\n        antELO: 0,\n        talismanBonus: 0,\n        globalSpeed: 0\n    },\n    platonicBlessings: {\n        cubes: 0,\n        tesseracts: 0,\n        hypercubes: 0,\n        platonics: 0,\n        hypercubeBonus: 0,\n        taxes: 0,\n        scoreBonus: 0,\n        globalSpeed: 0\n\n    },\n\n    hepteractCrafts: {\n        chronos: ChronosHepteract,\n        hyperrealism: HyperrealismHepteract,\n        quark: QuarkHepteract,\n        challenge: ChallengeHepteract,\n        abyss: AbyssHepteract,\n        accelerator: AcceleratorHepteract,\n        acceleratorBoost: AcceleratorBoostHepteract,\n        multiplier: MultiplierHepteract\n    },\n\n    ascendShards: new Decimal('0'),\n    autoAscend: false,\n    autoAscendMode: 'c10Completions',\n    autoAscendThreshold: 1,\n    autoOpenCubes: false,\n    openCubes: 0,\n    autoOpenTesseracts: false,\n    openTesseracts: 0,\n    autoOpenHypercubes: false,\n    openHypercubes: 0,\n    autoOpenPlatonicsCubes: false,\n    openPlatonicsCubes: 0,\n    roombaResearchIndex: 0,\n    ascStatToggles: { // false here means show per second\n        1: false,\n        2: false,\n        3: false,\n        4: false,\n        5: false,\n        6: false\n    },\n\n    prototypeCorruptions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    usedCorruptions: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    corruptionLoadouts: {  //If you add loadouts don't forget to add loadout names!\n        1: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        2: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        3: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        4: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        5: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        6: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        7: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        8: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    },\n    corruptionLoadoutNames: [\n        'Loadout 1',\n        'Loadout 2',\n        'Loadout 3',\n        'Loadout 4',\n        'Loadout 5',\n        'Loadout 6',\n        'Loadout 7',\n        'Loadout 8'\n    ],\n    corruptionShowStats: true,\n\n    constantUpgrades: [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    history: { ants: [], ascend: [], reset: [], singularity: [] },\n    historyShowPerSecond: false,\n\n    autoChallengeRunning: false,\n    autoChallengeIndex: 1,\n    autoChallengeToggles: [false, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false],\n    autoChallengeStartExponent: 10,\n    autoChallengeTimer: {\n        start: 10,\n        exit: 2,\n        enter: 2\n    },\n\n    runeBlessingLevels: [0, 0, 0, 0, 0, 0],\n    runeSpiritLevels: [0, 0, 0, 0, 0, 0],\n    runeBlessingBuyAmount: 0,\n    runeSpiritBuyAmount: 0,\n\n    autoTesseracts: [false, false, false, false, false, false],\n\n    saveString: 'Synergism-$VERSION$-$TIME$.txt',\n    exporttest: !testing,\n\n    dayCheck: null,\n    dayTimer: 0,\n    cubeOpenedDaily: 0,\n    cubeQuarkDaily: 0,\n    tesseractOpenedDaily: 0,\n    tesseractQuarkDaily: 0,\n    hypercubeOpenedDaily: 0,\n    hypercubeQuarkDaily: 0,\n    platonicCubeOpenedDaily: 0,\n    platonicCubeQuarkDaily: 0,\n    overfluxOrbs: 0,\n    overfluxOrbsAutoBuy: false,\n    overfluxPowder: 0,\n    dailyPowderResetUses: 1,\n    autoWarpCheck: false,\n    loadedOct4Hotfix: false,\n    loadedNov13Vers: true,\n    loadedDec16Vers: true,\n    loadedV253: true,\n    loadedV255: true,\n    loadedV297Hotfix1: true,\n    loadedV2927Hotfix1: true,\n    loadedV2930Hotfix1: true,\n    loadedV2931Hotfix1: true,\n    loadedV21003Hotfix1: true,\n    loadedV21007Hotfix1: true,\n    version,\n    rngCode: 0,\n    promoCodeTiming: {\n        time: 0\n    },\n    singularityCount: 0,\n    highestSingularityCount: 0,\n    singularityCounter: 0,\n    goldenQuarks: 0,\n    quarksThisSingularity: 0,\n    totalQuarksEver: 0,\n    hotkeys: {},\n    theme: 'Dark Mode',\n    iconSet: 0,\n    notation: 'Default',\n\n    singularityUpgrades: {\n        goldenQuarks1: new SingularityUpgrade(singularityData['goldenQuarks1'], 'goldenQuarks1'),\n        goldenQuarks2: new SingularityUpgrade(singularityData['goldenQuarks2'], 'goldenQuarks2'),\n        goldenQuarks3: new SingularityUpgrade(singularityData['goldenQuarks3'], 'goldenQuarks3'),\n        starterPack: new SingularityUpgrade(singularityData['starterPack'], 'starterPack'),\n        wowPass: new SingularityUpgrade(singularityData['wowPass'], 'wowPass'),\n        cookies: new SingularityUpgrade(singularityData['cookies'], 'cookies'),\n        cookies2: new SingularityUpgrade(singularityData['cookies2'], 'cookies2'),\n        cookies3: new SingularityUpgrade(singularityData['cookies3'], 'cookies3'),\n        cookies4: new SingularityUpgrade(singularityData['cookies4'], 'cookies4'),\n        cookies5: new SingularityUpgrade(singularityData['cookies5'], 'cookies5'),\n        ascensions: new SingularityUpgrade(singularityData['ascensions'], 'ascensions'),\n        corruptionFourteen: new SingularityUpgrade(singularityData['corruptionFourteen'], 'corruptionFourteen'),\n        corruptionFifteen: new SingularityUpgrade(singularityData['corruptionFifteen'], 'corruptionFifteen'),\n        singOfferings1: new SingularityUpgrade(singularityData['singOfferings1'], 'singOfferings1'),\n        singOfferings2: new SingularityUpgrade(singularityData['singOfferings2'], 'singOfferings2'),\n        singOfferings3: new SingularityUpgrade(singularityData['singOfferings3'], 'singOfferings3'),\n        singObtainium1: new SingularityUpgrade(singularityData['singObtainium1'], 'singObtainium1'),\n        singObtainium2: new SingularityUpgrade(singularityData['singObtainium2'], 'singObtainium2'),\n        singObtainium3: new SingularityUpgrade(singularityData['singObtainium3'], 'singObtainium3'),\n        singCubes1: new SingularityUpgrade(singularityData['singCubes1'], 'singCubes1'),\n        singCubes2: new SingularityUpgrade(singularityData['singCubes2'], 'singCubes2'),\n        singCubes3: new SingularityUpgrade(singularityData['singCubes3'], 'singCubes3'),\n        singCitadel: new SingularityUpgrade(singularityData['singCitadel'], 'singCitadel'),\n        singCitadel2: new SingularityUpgrade(singularityData['singCitadel2'], 'singCitadel2'),\n        octeractUnlock: new SingularityUpgrade(singularityData['octeractUnlock'], 'octeractUnlock'),\n        singOcteractPatreonBonus: new SingularityUpgrade(singularityData['singOcteractPatreonBonus'], 'singOcteractPatreonBonus'),\n        intermediatePack: new SingularityUpgrade(singularityData['intermediatePack'], 'intermediatePack'),\n        advancedPack: new SingularityUpgrade(singularityData['advancedPack'], 'advancedPack'),\n        expertPack: new SingularityUpgrade(singularityData['expertPack'], 'expertPack'),\n        masterPack: new SingularityUpgrade(singularityData['masterPack'], 'masterPack'),\n        divinePack: new SingularityUpgrade(singularityData['divinePack'], 'divinePack'),\n        wowPass2: new SingularityUpgrade(singularityData['wowPass2'], 'wowPass2'),\n        potionBuff: new SingularityUpgrade(singularityData['potionBuff'], 'potionBuff'),\n        potionBuff2: new SingularityUpgrade(singularityData['potionBuff2'], 'potionBuff2'),\n        potionBuff3: new SingularityUpgrade(singularityData['potionBuff3'], 'potionBuff3'),\n        singChallengeExtension: new SingularityUpgrade(singularityData['singChallengeExtension'], 'singChallengeExtension'),\n        singChallengeExtension2: new SingularityUpgrade(singularityData['singChallengeExtension2'], 'singChallengeExtension2'),\n        singChallengeExtension3: new SingularityUpgrade(singularityData['singChallengeExtension3'], 'singChallengeExtension3'),\n        singQuarkImprover1: new SingularityUpgrade(singularityData['singQuarkImprover1'], 'singQuarkImprover1'),\n        singQuarkHepteract: new SingularityUpgrade(singularityData['singQuarkHepteract'], 'singQuarkHepteract'),\n        singQuarkHepteract2: new SingularityUpgrade(singularityData['singQuarkHepteract2'], 'singQuarkHepteract2'),\n        singQuarkHepteract3: new SingularityUpgrade(singularityData['singQuarkHepteract3'], 'singQuarkHepteract3'),\n        singOcteractGain: new SingularityUpgrade(singularityData['singOcteractGain'], 'singOcteractGain'),\n        singOcteractGain2: new SingularityUpgrade(singularityData['singOcteractGain2'], 'singOcteractGain2'),\n        singOcteractGain3: new SingularityUpgrade(singularityData['singOcteractGain3'], 'singOcteractGain3'),\n        singOcteractGain4: new SingularityUpgrade(singularityData['singOcteractGain4'], 'singOcteractGain4'),\n        singOcteractGain5: new SingularityUpgrade(singularityData['singOcteractGain5'], 'singOcteractGain5'),\n        wowPass3: new SingularityUpgrade(singularityData['wowPass3'], 'wowPass3'),\n        ultimatePen: new SingularityUpgrade(singularityData['ultimatePen'], 'ultimatePen'),\n        platonicTau: new SingularityUpgrade(singularityData['platonicTau'], 'platonicTau'),\n        platonicAlpha: new SingularityUpgrade(singularityData['platonicAlpha'], 'platonicAlpha'),\n        platonicDelta: new SingularityUpgrade(singularityData['platonicDelta'], 'platonicDelta'),\n        platonicPhi: new SingularityUpgrade(singularityData['platonicPhi'], 'platonicPhi'),\n        singFastForward: new SingularityUpgrade(singularityData['singFastForward'], 'singFastForward'),\n        singFastForward2: new SingularityUpgrade(singularityData['singFastForward2'], 'singFastForward2'),\n        singAscensionSpeed: new SingularityUpgrade(singularityData['singAscensionSpeed'], 'singAscensionSpeed'),\n        singAscensionSpeed2: new SingularityUpgrade(singularityData['singAscensionSpeed2'], 'singAscensionSpeed2'),\n        oneMind: new SingularityUpgrade(singularityData['oneMind'], 'oneMind'),\n        wowPass4: new SingularityUpgrade(singularityData['wowPass4'], 'wowPass4'),\n        offeringAutomatic: new SingularityUpgrade(singularityData['offeringAutomatic'], 'offeringAutomatic'),\n        blueberries: new SingularityUpgrade(singularityData['blueberries'], 'blueberries')\n    },\n\n    octeractUpgrades: {\n        octeractStarter: new OcteractUpgrade(octeractData['octeractStarter'], 'octeractStarter'),\n        octeractGain: new OcteractUpgrade(octeractData['octeractGain'], 'octeractGain'),\n        octeractGain2: new OcteractUpgrade(octeractData['octeractGain2'], 'octeractGain2'),\n        octeractQuarkGain: new OcteractUpgrade(octeractData['octeractQuarkGain'], 'octeractQuarkGain'),\n        octeractQuarkGain2: new OcteractUpgrade(octeractData['octeractQuarkGain2'], 'octeractQuarkGain2'),\n        octeractCorruption: new OcteractUpgrade(octeractData['octeractCorruption'], 'octeractCorruption'),\n        octeractGQCostReduce: new OcteractUpgrade(octeractData['octeractGQCostReduce'], 'octeractGQCostReduce'),\n        octeractExportQuarks: new OcteractUpgrade(octeractData['octeractExportQuarks'], 'octeractExportQuarks'),\n        octeractImprovedDaily: new OcteractUpgrade(octeractData['octeractImprovedDaily'], 'octeractImprovedDaily'),\n        octeractImprovedDaily2: new OcteractUpgrade(octeractData['octeractImprovedDaily2'], 'octeractImprovedDaily2'),\n        octeractImprovedDaily3: new OcteractUpgrade(octeractData['octeractImprovedDaily3'], 'octeractImprovedDaily3'),\n        octeractImprovedQuarkHept: new OcteractUpgrade(octeractData['octeractImprovedQuarkHept'], 'octeractImprovedQuarkHept'),\n        octeractImprovedGlobalSpeed: new OcteractUpgrade(octeractData['octeractImprovedGlobalSpeed'], 'octeractImprovedGlobalSpeed'),\n        octeractImprovedAscensionSpeed: new OcteractUpgrade(octeractData['octeractImprovedAscensionSpeed'], 'octeractImprovedAscensionSpeed'),\n        octeractImprovedAscensionSpeed2: new OcteractUpgrade(octeractData['octeractImprovedAscensionSpeed2'], 'octeractImprovedAscensionSpeed2'),\n        octeractImprovedFree: new OcteractUpgrade(octeractData['octeractImprovedFree'], 'octeractImprovedFree'),\n        octeractImprovedFree2: new OcteractUpgrade(octeractData['octeractImprovedFree2'], 'octeractImprovedFree2'),\n        octeractImprovedFree3: new OcteractUpgrade(octeractData['octeractImprovedFree3'], 'octeractImprovedFree3'),\n        octeractImprovedFree4: new OcteractUpgrade(octeractData['octeractImprovedFree4'], 'octeractImprovedFree4'),\n        octeractSingUpgradeCap: new OcteractUpgrade(octeractData['octeractSingUpgradeCap'], 'octeractSingUpgradeCap'),\n        octeractOfferings1: new OcteractUpgrade(octeractData['octeractOfferings1'], 'octeractOfferings1'),\n        octeractObtainium1: new OcteractUpgrade(octeractData['octeractObtainium1'], 'octeractObtainium1'),\n        octeractAscensions: new OcteractUpgrade(octeractData['octeractAscensions'], 'octeractAscensions'),\n        octeractAscensions2: new OcteractUpgrade(octeractData['octeractAscensions2'], 'octeractAscensions2'),\n        octeractAscensionsOcteractGain: new OcteractUpgrade(octeractData['octeractAscensionsOcteractGain'], 'octeractAscensionsOcteractGain'),\n        octeractFastForward: new OcteractUpgrade(octeractData['octeractFastForward'], 'octeractFastForward'),\n        octeractAutoPotionSpeed: new OcteractUpgrade(octeractData['octeractAutoPotionSpeed'], 'octeractAutoPotionSpeed'),\n        octeractAutoPotionEfficiency: new OcteractUpgrade(octeractData['octeractAutoPotionEfficiency'], 'octeractAutoPotionEfficiency'),\n        octeractOneMindImprover: new OcteractUpgrade(octeractData['octeractOneMindImprover'], 'octeractOneMindImprover'),\n        octeractAmbrosiaLuck: new OcteractUpgrade(octeractData['octeractAmbrosiaLuck'], 'octeractAmbrosiaLuck')\n    },\n\n    dailyCodeUsed: false,\n    hepteractAutoCraftPercentage: 50,\n    octeractTimer: 0,\n    insideSingularityChallenge: false,\n\n    singularityChallenges: {\n        noSingularityUpgrades: new SingularityChallenge(singularityChallengeData['noSingularityUpgrades'], 'noSingularityUpgrades'),\n        oneChallengeCap: new SingularityChallenge(singularityChallengeData['oneChallengeCap'], 'oneChallengeCap'),\n        noOcteracts: new SingularityChallenge(singularityChallengeData['noOcteracts'], 'noOcteracts'),\n        limitedAscensions: new SingularityChallenge(singularityChallengeData['limitedAscensions'], 'limitedAscensions')\n    }\n}\n\nexport const blankSave = Object.assign({}, player, {\n    codes: new Map(Array.from({ length: 44 }, (_, i) => [i + 1, false]))\n});\n\n// The main cause of the double singularity bug was caused by a race condition\n// when the game was saving just as the user was entering a Singularity. To fix\n// this, hopefully, we disable saving the game when in the prompt or currently\n// entering a Singularity.\nexport const saveCheck = { canSave: true }\n\nexport const saveSynergy = async (button?: boolean): Promise<boolean> => {\n    player.offlinetick = Date.now();\n    player.loaded1009 = true;\n    player.loaded1009hotfix1 = true;\n\n    // shallow hold, doesn't modify OG object nor is affected by modifications to OG\n    const p = Object.assign({}, player, {\n        codes: Array.from(player.codes),\n        worlds: Number(player.worlds),\n        wowCubes: Number(player.wowCubes),\n        wowTesseracts: Number(player.wowTesseracts),\n        wowHypercubes: Number(player.wowHypercubes),\n        wowPlatonicCubes: Number(player.wowPlatonicCubes),\n        singularityUpgrades: Object.fromEntries(\n            Object.entries(player.singularityUpgrades).map(([key, value]) => {\n                return [key, {\n                    level: value.level,\n                    goldenQuarksInvested: value.goldenQuarksInvested,\n                    toggleBuy: value.toggleBuy,\n                    freeLevels: value.freeLevels\n                }]\n            })\n        ),\n        octeractUpgrades: Object.fromEntries(\n            Object.entries(player.octeractUpgrades).map(([key, value]) => {\n                return [key, {\n                    level: value.level,\n                    octeractsInvested: value.octeractsInvested,\n                    toggleBuy: value.toggleBuy,\n                    freeLevels: value.freeLevels\n                }]\n            })\n        ),\n        singularityChallenges: Object.fromEntries(\n            Object.entries(player.singularityChallenges).map(([key, value]) => {\n                return [key, {\n                    completions: value.completions,\n                    highestSingularityCompleted: value.highestSingularityCompleted,\n                    enabled: value.enabled\n                }]\n            })\n        )\n    });\n\n    const save = btoa(JSON.stringify(p));\n    if (save !== null) {\n        const saveBlob = new Blob([save], { type: 'text/plain' });\n\n        //Should prevent overwritting of localforage that is currently used\n        if (!saveCheck.canSave) {\n            return false;\n        }\n\n        await localforage.setItem<Blob>('Synergysave2', saveBlob);\n    } else {\n        await Alert(i18next.t('testing.errorSaving'))\n        return false\n    }\n\n    if (button) {\n        const el = DOMCacheGetOrSet('saveinfo');\n        el.textContent = i18next.t('testing.gameSaved');\n        setTimeout(() => el.textContent = '', 4000);\n    }\n\n    return true\n}\n\n/**\n * Map of properties on the Player object to adapt\n */\nconst toAdapt = new Map<keyof Player,(data: PlayerSave) => unknown>([\n    ['worlds', data => new QuarkHandler({ quarks: Number(data.worlds) || 0 })],\n    ['wowCubes', data => new WowCubes(Number(data.wowCubes) || 0)],\n    ['wowTesseracts', data => new WowTesseracts(Number(data.wowTesseracts) || 0)],\n    ['wowHypercubes', data => new WowHypercubes(Number(data.wowHypercubes) || 0)],\n    ['wowPlatonicCubes', data => new WowPlatonicCubes(Number(data.wowPlatonicCubes) || 0)]\n]);\n\nconst loadSynergy = async () => {\n    const save =\n        await localforage.getItem<Blob>('Synergysave2') ??\n        localStorage.getItem('Synergysave2');\n\n    const saveString = typeof save === 'string' ? save : await save?.text();\n    const data = saveString\n        ? JSON.parse(atob(saveString)) as PlayerSave & Record<string, unknown>\n        : null;\n\n    if (testing || prod === false) {\n        Object.defineProperties(window, {\n            player: { value: player },\n            G: { value: G },\n            Decimal: { value: Decimal },\n            i18n: { value: i18next }\n        })\n\n        if (data && testing) {\n            data.exporttest = false;\n        }\n    }\n\n    Object.assign(G, { ...blankGlobals });\n\n    if (data) {\n        if (\n            (data.exporttest === false || data.exporttest === 'NO!') &&\n            !testing\n        ) {\n            return Alert(i18next.t('testing.saveInLive2'));\n        }\n\n        const oldCodesUsed = Array.from(\n            { length: 24 }, // old codes only went up to 24\n            (_, i) => 'offerpromo' + (i + 1) + 'used'\n        );\n\n        // size before loading\n        const size = player.codes.size;\n\n        const oldPromoKeys = Object.keys(data).filter(k => k.includes('offerpromo'));\n        if (oldPromoKeys.length > 0) {\n            oldPromoKeys.forEach(k => {\n                const value = data[k];\n                const num = +k.replace(/[^\\d]/g, '');\n                player.codes.set(num, Boolean(value));\n            });\n        }\n\n        Object.keys(data).forEach((stringProp) => {\n            const prop = stringProp as keyof Player;\n            if (!(prop in player)) {\n                return;\n            } else if (toAdapt.has(prop)) {\n                return ((player[prop] as unknown) = toAdapt.get(prop)!(data));\n            } else if (isDecimal(player[prop])) {\n                return ((player[prop] as Decimal) = new Decimal(data[prop] as DecimalSource));\n            } else if (prop === 'codes') {\n                const codes = data[prop];\n                if (codes != null) {\n                    return (player.codes = new Map(codes));\n                }\n            } else if (oldCodesUsed.includes(prop)) {\n                return;\n            } else if (Array.isArray(data[prop])) {\n                const arr = data[prop] as unknown[];\n                // in old savefiles, some arrays may be 1-based instead of 0-based (newer)\n                // so if the lengths of the savefile key is greater than that of the player obj\n                // it means a key was removed; likely a 1-based index where array[0] was null\n                // so we can get rid of it entirely.\n                if ((player[prop] as unknown[]).length < arr.length) {\n                    return (player[prop] as unknown[]) = arr.slice(arr.length - (player[prop] as unknown[]).length);\n                }\n            }\n\n            return ((player[prop] as unknown) = data[prop]);\n        });\n\n        if (data.offerpromo24used !== undefined) {\n            player.codes.set(25, false)\n        }\n\n        // sets all non-existent codes to default value false\n        if (player.codes.size < size) {\n            for (let i = player.codes.size + 1; i <= size; i++) {\n                if (!player.codes.has(i)) {\n                    player.codes.set(i, false);\n                }\n            }\n        }\n\n        // sets all non-existent codes to default value false\n        if (player.codes.size < size) {\n            for (let i = player.codes.size + 1; i <= size; i++) {\n                if (!player.codes.has(i)) {\n                    player.codes.set(i, false);\n                }\n            }\n        }\n\n        if (!('rngCode' in data)) {\n            player.rngCode = 0;\n        }\n\n        if (data.loaded1009 === undefined || !data.loaded1009) {\n            player.loaded1009 = false;\n        }\n        if (data.loaded1009hotfix1 === undefined || !data.loaded1009hotfix1) {\n            player.loaded1009hotfix1 = false;\n        }\n        if (data.loaded10091 === undefined) {\n            player.loaded10091 = false;\n        }\n        if (data.loaded1010 === undefined) {\n            player.loaded1010 = false;\n        }\n        if (data.loaded10101 === undefined) {\n            player.loaded10101 = false;\n        }\n\n        //Fix dumb shop stuff\n        //First, if shop isn't even defined we just define it as so\n        if (data.shopUpgrades === undefined){\n            player.shopUpgrades = Object.assign({}, blankSave.shopUpgrades);\n        }\n\n        if (typeof player.researches[76] === 'undefined') {\n            player.codes.set(13, false);\n            player.researches.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n            player.achievements.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n            player.maxofferings = player.runeshards;\n            player.maxobtainium = player.researchPoints;\n            player.researchPoints += 51200 * player.researches[50];\n            player.researches[50] = 0;\n        }\n\n        player.maxofferings = player.maxofferings || 0;\n        player.maxobtainium = player.maxobtainium || 0;\n        player.runeshards = player.runeshards || 0;\n        player.researchPoints = player.researchPoints || 0;\n\n        if (!data.loaded1009 || data.loaded1009hotfix1 === null || data.shopUpgrades?.offeringPotion === undefined) {\n            player.firstOwnedParticles = 0;\n            player.secondOwnedParticles = 0;\n            player.thirdOwnedParticles = 0;\n            player.fourthOwnedParticles = 0;\n            player.fifthOwnedParticles = 0;\n            player.firstCostParticles = new Decimal('1');\n            player.secondCostParticles = new Decimal('1e2');\n            player.thirdCostParticles = new Decimal('1e4');\n            player.fourthCostParticles = new Decimal('1e8');\n            player.fifthCostParticles = new Decimal('1e16');\n            player.autoSacrificeToggle = false;\n            player.autoResearchToggle = false;\n            player.autoResearchMode = 'manual';\n            player.autoResearch = 0;\n            player.autoSacrifice = 0;\n            player.sacrificeTimer = 0;\n            player.loaded1009 = true;\n            player.codes.set(18, false);\n        }\n        if (!data.loaded1009hotfix1) {\n            player.loaded1009hotfix1 = true;\n            player.codes.set(19, true);\n            player.firstOwnedParticles = 0;\n            player.secondOwnedParticles = 0;\n            player.thirdOwnedParticles = 0;\n            player.fourthOwnedParticles = 0;\n            player.fifthOwnedParticles = 0;\n            player.firstCostParticles = new Decimal('1');\n            player.secondCostParticles = new Decimal('1e2');\n            player.thirdCostParticles = new Decimal('1e4');\n            player.fourthCostParticles = new Decimal('1e8');\n            player.fifthCostParticles = new Decimal('1e16');\n        }\n        if (data.loaded10091 === undefined || !data.loaded10091 || player.researches[86] > 100 || player.researches[87] > 100 || player.researches[88] > 100 || player.researches[89] > 100 || player.researches[90] > 10) {\n            player.loaded10091 = true;\n            player.researchPoints += 7.5e8 * player.researches[82];\n            player.researchPoints += 2e8 * player.researches[83];\n            player.researchPoints += 4.5e9 * player.researches[84];\n            player.researchPoints += 2.5e7 * player.researches[86];\n            player.researchPoints += 7.5e7 * player.researches[87];\n            player.researchPoints += 3e8 * player.researches[88];\n            player.researchPoints += 1e9 * player.researches[89];\n            player.researchPoints += 2.5e7 * player.researches[90];\n            player.researchPoints += 1e8 * player.researches[91];\n            player.researchPoints += 2e9 * player.researches[92];\n            player.researchPoints += 9e9 * player.researches[93];\n            player.researchPoints += 7.25e10 * player.researches[94];\n            player.researches[86] = 0;\n            player.researches[87] = 0;\n            player.researches[88] = 0;\n            player.researches[89] = 0;\n            player.researches[90] = 0;\n            player.researches[91] = 0;\n            player.researches[92] = 0;\n        }\n\n        //const shop = data.shopUpgrades as LegacyShopUpgrades & Player['shopUpgrades'];\n        if (\n            data.achievements?.[169] === undefined ||\n            typeof player.achievements[169] === 'undefined' ||\n            //    (shop.antSpeed === undefined && shop.antSpeedLevel === undefined) ||\n            //    (shop.antSpeed === undefined && typeof shop.antSpeedLevel === 'undefined') ||\n            data.loaded1010 === undefined ||\n            data.loaded1010 === false\n        ) {\n            player.loaded1010 = true;\n            player.codes.set(21, false);\n\n            player.firstOwnedAnts = 0;\n            player.firstGeneratedAnts = new Decimal('0');\n            player.firstCostAnts = new Decimal('1e700');\n            player.firstProduceAnts = .0001;\n\n            player.secondOwnedAnts = 0;\n            player.secondGeneratedAnts = new Decimal('0');\n            player.secondCostAnts = new Decimal('3');\n            player.secondProduceAnts = .00005;\n\n            player.thirdOwnedAnts = 0;\n            player.thirdGeneratedAnts = new Decimal('0');\n            player.thirdCostAnts = new Decimal('100');\n            player.thirdProduceAnts = .00002;\n\n            player.fourthOwnedAnts = 0;\n            player.fourthGeneratedAnts = new Decimal('0');\n            player.fourthCostAnts = new Decimal('1e4');\n            player.fourthProduceAnts = .00001;\n\n            player.fifthOwnedAnts = 0;\n            player.fifthGeneratedAnts = new Decimal('0');\n            player.fifthCostAnts = new Decimal('1e12');\n            player.fifthProduceAnts = .000005;\n\n            player.sixthOwnedAnts = 0;\n            player.sixthGeneratedAnts = new Decimal('0');\n            player.sixthCostAnts = new Decimal('1e36');\n            player.sixthProduceAnts = .000002;\n\n            player.seventhOwnedAnts = 0;\n            player.seventhGeneratedAnts = new Decimal('0');\n            player.seventhCostAnts = new Decimal('1e100');\n            player.seventhProduceAnts = .000001;\n\n            player.eighthOwnedAnts = 0;\n            player.eighthGeneratedAnts = new Decimal('0');\n            player.eighthCostAnts = new Decimal('1e300');\n            player.eighthProduceAnts = .00000001;\n\n            player.achievements.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n            player.antPoints = new Decimal('1');\n\n            player.upgrades[38] = 0;\n            player.upgrades[39] = 0;\n            player.upgrades[40] = 0;\n\n            player.upgrades[76] = 0;\n            player.upgrades[77] = 0;\n            player.upgrades[78] = 0;\n            player.upgrades[79] = 0;\n            player.upgrades[80] = 0;\n\n\n            //    player.shopUpgrades.antSpeed = 0;\n            //    player.shopUpgrades.shopTalisman = 0;\n\n            player.antUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n            player.unlocks.rrow4 = false;\n            player.researchPoints += 3e7 * player.researches[50];\n            player.researchPoints += 2e9 * player.researches[96];\n            player.researchPoints += 5e9 * player.researches[97];\n            player.researchPoints += 3e10 * player.researches[98];\n            player.researches[50] = 0;\n            player.researches[96] = 0;\n            player.researches[97] = 0;\n            player.researches[98] = 0;\n            player.researches.push(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n\n            player.talismanLevels = [0, 0, 0, 0, 0, 0, 0];\n            player.talismanRarity = [1, 1, 1, 1, 1, 1, 1];\n\n            player.talismanShards = 0;\n            player.commonFragments = 0;\n            player.uncommonFragments = 0;\n            player.rareFragments = 0;\n            player.epicFragments = 0;\n            player.legendaryFragments = 0;\n            player.mythicalFragments = 0;\n            player.buyTalismanShardPercent = 10;\n\n            player.talismanOne = [null, -1, 1, 1, 1, -1];\n            player.talismanTwo = [null, 1, 1, -1, -1, 1];\n            player.talismanThree = [null, 1, -1, 1, 1, -1];\n            player.talismanFour = [null, -1, -1, 1, 1, 1];\n            player.talismanFive = [null, 1, 1, -1, -1, 1];\n            player.talismanSix = [null, 1, 1, 1, -1, -1];\n            player.talismanSeven = [null, -1, 1, -1, 1, 1];\n\n            player.antSacrificePoints = 0;\n            player.antSacrificeTimer = 0;\n\n            player.obtainiumpersecond = 0;\n            player.maxobtainiumpersecond = 0;\n\n        }\n\n        if (data.loaded10101 === undefined || data.loaded10101 === false) {\n            player.loaded10101 = true;\n\n            const refundThese = [0, 31, 32, 61, 62, 63, 64, 76, 77, 78, 79, 80,\n                81, 98, 104, 105, 106, 107, 108,\n                109, 110, 111, 112, 113, 114, 115, 116,\n                117, 118, 119, 120, 121, 122, 123, 125];\n            const refundReward = [0, 2, 20, 5, 10, 80, 5e3, 1e7, 1e7, 2e7, 3e7, 4e7,\n                2e8, 3e10, 1e11, 1e12, 2e11, 1e12, 2e10,\n                2e11, 1e12, 2e13, 5e13, 1e14, 2e14, 5e14, 1e15,\n                2e15, 1e16, 1e15, 1e16, 1e14, 1e15, 1e15, 1e20];\n            for (let i = 1; i < refundThese.length; i++) {\n                player.researchPoints += player.researches[refundThese[i]] * refundReward[i]\n                player.researches[refundThese[i]] = 0;\n            }\n            player.autoAntSacrifice = false;\n            player.antMax = false;\n        }\n\n        if (player.firstOwnedAnts < 1 && player.firstCostAnts.gte('1e1200')) {\n            player.firstCostAnts = new Decimal('1e700');\n            player.firstOwnedAnts = 0;\n        }\n\n        checkVariablesOnLoad(data)\n        if (data.ascensionCount === undefined || player.ascensionCount === 0) {\n            player.ascensionCount = 0;\n            if (player.ascensionCounter === 0 && player.prestigeCount > 0) {\n                player.ascensionCounter = 86400 * 90;\n            }\n            /*player.cubeUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,];*/\n\n            if (player.singularityCount === 0) {\n                player.cubeUpgrades = [...blankSave.cubeUpgrades]\n            }\n            player.wowCubes = new WowCubes(0);\n            player.wowTesseracts = new WowTesseracts(0);\n            player.wowHypercubes = new WowHypercubes(0);\n            player.wowPlatonicCubes = new WowPlatonicCubes(0);\n            player.cubeBlessings = {\n                accelerator: 0,\n                multiplier: 0,\n                offering: 0,\n                runeExp: 0,\n                obtainium: 0,\n                antSpeed: 0,\n                antSacrifice: 0,\n                antELO: 0,\n                talismanBonus: 0,\n                globalSpeed: 0\n            }\n        }\n        if (data.autoAntSacTimer == null) {\n            player.autoAntSacTimer = 900;\n        }\n        if (data.autoAntSacrificeMode === undefined) {\n            player.autoAntSacrificeMode = 0;\n        }\n\n        if (player.transcendCount < 0) {\n            player.transcendCount = 0\n        }\n        if (player.reincarnationCount < 0) {\n            player.reincarnationCount = 0;\n        }\n        if (player.runeshards < 0) {\n            player.runeshards = 0;\n        }\n        if (player.researchPoints < 0) {\n            player.researchPoints = 0;\n        }\n\n        if (player.resettoggle1 === 0) {\n            player.resettoggle1 = 1;\n            player.resettoggle2 = 1;\n            player.resettoggle3 = 1;\n            player.resettoggle4 = 1;\n        }\n        if (player.tesseractAutoBuyerToggle === 0) {\n            player.tesseractAutoBuyerToggle = 1;\n        }\n        if (player.reincarnationCount < 0.5 && player.unlocks.rrow4 === true) {\n            player.unlocks = {\n                coinone: false,\n                cointwo: false,\n                cointhree: false,\n                coinfour: false,\n                prestige: false,\n                generation: false,\n                transcend: false,\n                reincarnate: false,\n                rrow1: false,\n                rrow2: false,\n                rrow3: false,\n                rrow4: false\n            }\n        }\n\n        if (data.history === undefined) {\n            player.history = { ants: [], ascend: [], reset: [], singularity: [] };\n        } else {\n            // See: https://discord.com/channels/677271830838640680/964168000360038481/964168002071330879\n            const keys = Object.keys(blankSave.history) as (keyof typeof blankSave['history'])[];\n\n            for (const historyKey of keys) {\n                if (historyKey in player.history === false) {\n                    player.history[historyKey] = [];\n                }\n            }\n        }\n\n        if (data.historyShowPerSecond === undefined) {\n            player.historyShowPerSecond = false;\n        }\n\n        if (!Number.isInteger(player.ascendBuilding1.cost)) {\n            player.ascendBuilding1.cost = 1;\n            player.ascendBuilding1.owned = 0;\n            player.ascendBuilding2.cost = 10;\n            player.ascendBuilding2.owned = 0;\n            player.ascendBuilding3.cost = 100;\n            player.ascendBuilding3.owned = 0;\n            player.ascendBuilding4.cost = 1000;\n            player.ascendBuilding4.owned = 0;\n            player.ascendBuilding5.cost = 10000;\n            player.ascendBuilding5.owned = 0;\n        }\n\n        if (!player.dayCheck) {\n            player.dayCheck = new Date();\n        }\n        if (typeof player.dayCheck === 'string') {\n            player.dayCheck = new Date(player.dayCheck);\n            if (isNaN(player.dayCheck.getTime())) {\n                player.dayCheck = new Date();\n            }\n        }\n        // Measures for people who play the past\n        let updatedLast = lastUpdated;\n        if (!isNaN(updatedLast.getTime())) {\n            updatedLast = new Date(updatedLast.getFullYear(), updatedLast.getMonth(), updatedLast.getDate() - 1);\n            if (player.dayCheck.getTime() < updatedLast.getTime()) {\n                player.dayCheck = updatedLast;\n            }\n        } else if (player.dayCheck.getTime() < 1654009200000) {\n            player.dayCheck = new Date('06/01/2022 00:00:00');\n        }\n        // Calculate daily\n        player.dayCheck = new Date(player.dayCheck.getFullYear(), player.dayCheck.getMonth(), player.dayCheck.getDate());\n\n        const maxLevel = maxCorruptionLevel();\n        player.usedCorruptions = player.usedCorruptions.map((curr:number, index:number) => {\n            if (index >= 2 && index <= 9) {\n                return Math.min(maxLevel * (player.challengecompletions[corrChallengeMinimum(index)] > 0 ? 1: 0), curr)\n            }\n            return curr\n        })\n\n        for (let i = 1; i <= 5; i++) {\n            const ascendBuildingI = `ascendBuilding${i as OneToFive}` as const;\n            player[ascendBuildingI].generated = new Decimal(player[ascendBuildingI].generated)\n        }\n\n        while (typeof player.achievements[252] === 'undefined') {\n            player.achievements.push(0)\n        }\n        while (typeof player.researches[200] === 'undefined') {\n            player.researches.push(0)\n        }\n        while (typeof player.upgrades[140] === 'undefined') {\n            player.upgrades.push(0)\n        }\n\n        if (player.saveString === '' || player.saveString === 'Synergism-v1011Test.txt') {\n            player.saveString = player.singularityCount === 0 ?\n                'Synergism-$VERSION$-$TIME$.txt' :\n                'Synergism-$VERSION$-$TIME$-$SING$.txt'\n        }\n        (DOMCacheGetOrSet('saveStringInput') as HTMLInputElement).value = cleanString(player.saveString);\n\n        for (let j = 1; j < 126; j++) {\n            upgradeupdate(j, true);\n        }\n\n        for (let j = 1; j <= (200); j++) {\n            updateResearchBG(j);\n        }\n        for (let j = 1; j < player.cubeUpgrades.length; j++) {\n            updateCubeUpgradeBG(j);\n        }\n        const platUpg = document.querySelectorAll('img[id^=\"platUpg\"]');\n        for (let j = 1; j <= platUpg.length; j++) {\n            updatePlatonicUpgradeBG(j);\n        }\n\n        const q = ['coin', 'crystal', 'mythos', 'particle', 'offering', 'tesseract'] as const;\n        if (player.coinbuyamount !== 1 && player.coinbuyamount !== 10 && player.coinbuyamount !== 100 && player.coinbuyamount !== 1000) {\n            player.coinbuyamount = 1;\n        }\n        if (player.crystalbuyamount !== 1 && player.crystalbuyamount !== 10 && player.crystalbuyamount !== 100 && player.crystalbuyamount !== 1000) {\n            player.crystalbuyamount = 1;\n        }\n        if (player.mythosbuyamount !== 1 && player.mythosbuyamount !== 10 && player.mythosbuyamount !== 100 && player.mythosbuyamount !== 1000) {\n            player.mythosbuyamount = 1;\n        }\n        if (player.particlebuyamount !== 1 && player.particlebuyamount !== 10 && player.particlebuyamount !== 100 && player.particlebuyamount !== 1000) {\n            player.particlebuyamount = 1;\n        }\n        if (player.offeringbuyamount !== 1 && player.offeringbuyamount !== 10 && player.offeringbuyamount !== 100 && player.offeringbuyamount !== 1000) {\n            player.offeringbuyamount = 1;\n        }\n        if (player.tesseractbuyamount !== 1 && player.tesseractbuyamount !== 10 && player.tesseractbuyamount !== 100 && player.tesseractbuyamount !== 1000) {\n            player.tesseractbuyamount = 1;\n        }\n        for (let j = 0; j <= 5; j++) {\n            for (let k = 0; k < 4; k++) {\n                let d;\n                if (k === 0) {\n                    d = 'one';\n                }\n                if (k === 1) {\n                    d = 'ten'\n                }\n                if (k === 2) {\n                    d = 'hundred'\n                }\n                if (k === 3) {\n                    d = 'thousand'\n                }\n                const e = q[j] + d;\n                DOMCacheGetOrSet(e).style.backgroundColor = ''\n            }\n            let c;\n            const curBuyAmount = player[`${q[j]}buyamount` as const];\n            if (curBuyAmount === 1) {\n                c = 'one'\n            }\n            if (curBuyAmount === 10) {\n                c = 'ten'\n            }\n            if (curBuyAmount === 100) {\n                c = 'hundred'\n            }\n            if (curBuyAmount === 1000) {\n                c = 'thousand'\n            }\n\n            const b = q[j] + c;\n            DOMCacheGetOrSet(b).style.backgroundColor = 'green'\n\n        }\n\n        const testArray = []\n        //Creates a copy of research costs array\n        for (let i = 0; i < G['researchBaseCosts'].length; i++) {\n            testArray.push(G['researchBaseCosts'][i]);\n        }\n        //Sorts the above array, and returns the index order of sorted array\n        G['researchOrderByCost'] = sortWithIndices(testArray)\n        player.roombaResearchIndex = 0;\n\n        // June 09, 2021: Updated toggleShops() and removed boilerplate - Platonic\n        toggleShops();\n        getChallengeConditions();\n        updateChallengeDisplay();\n        revealStuff();\n        toggleauto();\n\n        // Challenge summary should be displayed\n        if (player.currentChallenge.transcension > 0) {\n            challengeDisplay(player.currentChallenge.transcension);\n        } else if (player.currentChallenge.reincarnation > 0) {\n            challengeDisplay(player.currentChallenge.reincarnation);\n        } else if (player.currentChallenge.ascension > 0) {\n            challengeDisplay(player.currentChallenge.ascension);\n        } else {\n            challengeDisplay(1);\n        }\n\n        corruptionStatsUpdate();\n        const corrs = Math.min(8, Object.keys(player.corruptionLoadouts).length) + 1;\n        for (let i = 0; i < corrs; i++) {\n            corruptionLoadoutTableUpdate(i);\n        }\n        showCorruptionStatsLoadouts()\n        updateCorruptionLoadoutNames()\n\n        DOMCacheGetOrSet('researchrunebonus').textContent = i18next.t('runes.thanksResearches', {\n            percent: format(100 * G['effectiveLevelMult'] - 100, 4, true)\n        })\n\n        DOMCacheGetOrSet('talismanlevelup').style.display = 'none'\n        DOMCacheGetOrSet('talismanrespec').style.display = 'none'\n\n        DOMCacheGetOrSet('antSacrificeSummary').style.display = 'none'\n\n        // This must be initialized at the beginning of the calculation\n        c15RewardUpdate();\n\n        calculatePlatonicBlessings();\n        calculateHypercubeBlessings();\n        calculateTesseractBlessings();\n        calculateCubeBlessings();\n        updateTalismanAppearance(0);\n        updateTalismanAppearance(1);\n        updateTalismanAppearance(2);\n        updateTalismanAppearance(3);\n        updateTalismanAppearance(4);\n        updateTalismanAppearance(5);\n        updateTalismanAppearance(6);\n        for (const id in player.ascStatToggles) {\n            toggleAscStatPerSecond(+id); // toggle each stat twice to make sure the displays are correct and match what they used to be\n            toggleAscStatPerSecond(+id);\n        }\n\n        // Strictly check the input and data with values other than numbers\n        const omit = /e\\+/;\n        let inputd = player.autoChallengeTimer.start;\n        let inpute = Number((DOMCacheGetOrSet('startAutoChallengeTimerInput') as HTMLInputElement).value);\n        if (inpute !== inputd || isNaN(inpute + inputd)) {\n            (DOMCacheGetOrSet('startAutoChallengeTimerInput') as HTMLInputElement).value = ('' + (player.autoChallengeTimer.start || blankSave.autoChallengeTimer.start)).replace(omit, 'e');\n            updateAutoChallenge(1);\n        }\n\n        DOMCacheGetOrSet('startTimerValue').innerHTML = i18next.t('challenges.timeStartSweep', {\n            time: format(player.autoChallengeTimer.start, 2, true)\n        })\n\n        inputd = player.autoChallengeTimer.exit;\n        inpute = Number((DOMCacheGetOrSet('exitAutoChallengeTimerInput') as HTMLInputElement).value);\n        if (inpute !== inputd || isNaN(inpute + inputd)) {\n            (DOMCacheGetOrSet('exitAutoChallengeTimerInput') as HTMLInputElement).value = ('' + (player.autoChallengeTimer.exit || blankSave.autoChallengeTimer.exit)).replace(omit, 'e');\n            updateAutoChallenge(2);\n        }\n\n        DOMCacheGetOrSet('exitTimerValue').innerHTML = i18next.t('challenges.timeExitChallenge', {\n            time: format(player.autoChallengeTimer.exit, 2, true)\n        })\n\n        inputd = player.autoChallengeTimer.enter;\n        inpute = Number((DOMCacheGetOrSet('enterAutoChallengeTimerInput') as HTMLInputElement).value);\n        if (inpute !== inputd || isNaN(inpute + inputd)) {\n            (DOMCacheGetOrSet('enterAutoChallengeTimerInput') as HTMLInputElement).value = ('' + (player.autoChallengeTimer.enter || blankSave.autoChallengeTimer.enter)).replace(omit, 'e');\n            updateAutoChallenge(3);\n        }\n\n        DOMCacheGetOrSet('enterTimerValue').innerHTML = i18next.t('challenges.timeEnterChallenge', {\n            time: format(player.autoChallengeTimer.enter, 2, true)\n        })\n\n        inputd = player.prestigeamount;\n        inpute = Number((DOMCacheGetOrSet('prestigeamount') as HTMLInputElement).value);\n        if (inpute !== inputd || isNaN(inpute + inputd)) {\n            (DOMCacheGetOrSet('prestigeamount') as HTMLInputElement).value = ('' + (player.prestigeamount || blankSave.prestigeamount)).replace(omit, 'e');\n            updateAutoReset(1);\n        }\n        inputd = player.transcendamount;\n        inpute = Number((DOMCacheGetOrSet('transcendamount') as HTMLInputElement).value);\n        if (inpute !== inputd || isNaN(inpute + inputd)) {\n            (DOMCacheGetOrSet('transcendamount') as HTMLInputElement).value = ('' + (player.transcendamount || blankSave.transcendamount)).replace(omit, 'e');\n            updateAutoReset(2);\n        }\n        inputd = player.reincarnationamount;\n        inpute = Number((DOMCacheGetOrSet('reincarnationamount') as HTMLInputElement).value);\n        if (inpute !== inputd || isNaN(inpute + inputd)) {\n            (DOMCacheGetOrSet('reincarnationamount') as HTMLInputElement).value = ('' + (player.reincarnationamount || blankSave.reincarnationamount)).replace(omit, 'e');\n            updateAutoReset(3);\n        }\n        inputd = player.autoAscendThreshold;\n        inpute = Number((DOMCacheGetOrSet('ascensionAmount') as HTMLInputElement).value);\n        if (inpute !== inputd || isNaN(inpute + inputd)) {\n            (DOMCacheGetOrSet('ascensionAmount') as HTMLInputElement).value = ('' + (player.autoAscendThreshold || blankSave.autoAscendThreshold)).replace(omit, 'e');\n            updateAutoReset(4);\n        }\n        inputd = player.autoAntSacTimer;\n        inpute = Number((DOMCacheGetOrSet('autoAntSacrificeAmount') as HTMLInputElement).value);\n        if (inpute !== inputd || isNaN(inpute + inputd)) {\n            (DOMCacheGetOrSet('autoAntSacrificeAmount') as HTMLInputElement).value = ('' + (player.autoAntSacTimer || blankSave.autoAntSacTimer)).replace(omit, 'e');\n            updateAutoReset(5);\n        }\n        inputd = player.tesseractAutoBuyerAmount;\n        inpute = Number((DOMCacheGetOrSet('tesseractAmount') as HTMLInputElement).value);\n        if (inpute !== inputd || isNaN(inpute + inputd)) {\n            (DOMCacheGetOrSet('tesseractAmount') as HTMLInputElement).value = ('' + (player.tesseractAutoBuyerAmount || blankSave.tesseractAutoBuyerAmount)).replace(omit, 'e');\n            updateTesseractAutoBuyAmount();\n        }\n        inputd = player.openCubes;\n        inpute = Number((DOMCacheGetOrSet('cubeOpensInput') as HTMLInputElement).value);\n        if (inpute !== inputd || isNaN(inpute + inputd)) {\n            (DOMCacheGetOrSet('cubeOpensInput') as HTMLInputElement).value = ('' + (player.openCubes || blankSave.openCubes)).replace(omit, 'e');\n            updateAutoCubesOpens(1);\n        }\n        inputd = player.openTesseracts;\n        inpute = Number((DOMCacheGetOrSet('tesseractsOpensInput') as HTMLInputElement).value);\n        if (inpute !== inputd || isNaN(inpute + inputd)) {\n            (DOMCacheGetOrSet('tesseractsOpensInput') as HTMLInputElement).value = ('' + (player.openTesseracts || blankSave.openTesseracts)).replace(omit, 'e');\n            updateAutoCubesOpens(2);\n        }\n        inputd = player.openHypercubes;\n        inpute = Number((DOMCacheGetOrSet('hypercubesOpensInput') as HTMLInputElement).value);\n        if (inpute !== inputd || isNaN(inpute + inputd)) {\n            (DOMCacheGetOrSet('hypercubesOpensInput') as HTMLInputElement).value = ('' + (player.openHypercubes || blankSave.openHypercubes)).replace(omit, 'e');\n            updateAutoCubesOpens(3);\n        }\n        inputd = player.openPlatonicsCubes;\n        inpute = Number((DOMCacheGetOrSet('platonicCubeOpensInput') as HTMLInputElement).value);\n        if (inpute !== inputd || isNaN(inpute + inputd)) {\n            (DOMCacheGetOrSet('platonicCubeOpensInput') as HTMLInputElement).value = ('' + (player.openPlatonicsCubes || blankSave.openPlatonicsCubes)).replace(omit, 'e');\n            updateAutoCubesOpens(4);\n        }\n        inputd = player.runeBlessingBuyAmount;\n        inpute = Number((DOMCacheGetOrSet('buyRuneBlessingInput') as HTMLInputElement).value);\n        if (inpute !== inputd || isNaN(inpute + inputd)) {\n            (DOMCacheGetOrSet('buyRuneBlessingInput') as HTMLInputElement).value = ('' + (player.runeBlessingBuyAmount || blankSave.runeBlessingBuyAmount)).replace(omit, 'e');\n            updateRuneBlessingBuyAmount(1);\n        }\n\n        DOMCacheGetOrSet('buyRuneBlessingToggle').innerHTML = i18next.t('runes.blessings.buyUpTo', {\n            amount: format(player.runeBlessingBuyAmount)\n        })\n\n        inputd = player.runeSpiritBuyAmount;\n        inpute = Number((DOMCacheGetOrSet('buyRuneSpiritInput') as HTMLInputElement).value);\n        if (inpute !== inputd || isNaN(inpute + inputd)) {\n            (DOMCacheGetOrSet('buyRuneSpiritInput') as HTMLInputElement).value = ('' + (player.runeSpiritBuyAmount || blankSave.runeSpiritBuyAmount)).replace(omit, 'e');\n            updateRuneBlessingBuyAmount(2);\n        }\n        DOMCacheGetOrSet('buyRuneSpiritToggleValue').innerHTML = i18next.t('runes.spirits.buyUpTo', {\n            amount: format(player.runeSpiritBuyAmount, 0, true)\n        })\n\n        if (player.resettoggle1 === 1) {\n            DOMCacheGetOrSet('prestigeautotoggle').textContent = i18next.t('toggles.modeAmount')\n        }\n        if (player.resettoggle2 === 1) {\n            DOMCacheGetOrSet('transcendautotoggle').textContent = i18next.t('toggles.modeAmount')\n        }\n        if (player.resettoggle3 === 1) {\n            DOMCacheGetOrSet('reincarnateautotoggle').textContent = i18next.t('toggles.modeAmount')\n        }\n        if (player.resettoggle4 === 1) {\n            DOMCacheGetOrSet('tesseractautobuymode').textContent = i18next.t('toggles.modeAmount')\n        }\n\n        if (player.resettoggle1 === 2) {\n            DOMCacheGetOrSet('prestigeautotoggle').textContent = i18next.t('toggles.modeTime')\n        }\n        if (player.resettoggle2 === 2) {\n            DOMCacheGetOrSet('transcendautotoggle').textContent = i18next.t('toggles.modeTime')\n        }\n        if (player.resettoggle3 === 2) {\n            DOMCacheGetOrSet('reincarnateautotoggle').textContent = i18next.t('toggles.modeTime')\n        }\n        if (player.resettoggle4 === 2) {\n            DOMCacheGetOrSet('tesseractautobuymode').textContent = i18next.t('toggles.modePercentage')\n        }\n\n        if (player.tesseractAutoBuyerToggle === 1) {\n            DOMCacheGetOrSet('tesseractautobuytoggle').textContent = i18next.t('runes.talismans.autoBuyOn')\n            DOMCacheGetOrSet('tesseractautobuytoggle').style.border = '2px solid green'\n        }\n        if (player.tesseractAutoBuyerToggle === 2) {\n            DOMCacheGetOrSet('tesseractautobuytoggle').textContent = i18next.t('runes.talismans.autoBuyOff')\n            DOMCacheGetOrSet('tesseractautobuytoggle').style.border = '2px solid red'\n        }\n\n        if (player.autoOpenCubes) {\n            DOMCacheGetOrSet('openCubes').textContent = i18next.t('wowCubes.autoOn', {percent: format(player.openCubes, 0)});\n            DOMCacheGetOrSet('openCubes').style.border = '1px solid green';\n            DOMCacheGetOrSet('cubeOpensInput').style.border = '1px solid green';\n        } else {\n            DOMCacheGetOrSet('openCubes').textContent = i18next.t('wowCubes.autoOff');\n            DOMCacheGetOrSet('openCubes').style.border = '1px solid red';\n            DOMCacheGetOrSet('cubeOpensInput').style.border = '1px solid red';\n        }\n        if (player.autoOpenTesseracts) {\n            DOMCacheGetOrSet('openTesseracts').textContent = i18next.t('wowCubes.autoOn', {percent: format(player.openTesseracts, 0)});\n            DOMCacheGetOrSet('openTesseracts').style.border = '1px solid green';\n            DOMCacheGetOrSet('tesseractsOpensInput').style.border = '1px solid green';\n        } else {\n            DOMCacheGetOrSet('openTesseracts').textContent = i18next.t('wowCubes.autoOff');\n            DOMCacheGetOrSet('openTesseracts').style.border = '1px solid red';\n            DOMCacheGetOrSet('tesseractsOpensInput').style.border = '1px solid red';\n        }\n        if (player.autoOpenHypercubes) {\n            DOMCacheGetOrSet('openHypercubes').textContent = i18next.t('wowCubes.autoOn', {percent: format(player.openHypercubes, 0)});\n            DOMCacheGetOrSet('openHypercubes').style.border = '1px solid green';\n            DOMCacheGetOrSet('hypercubesOpensInput').style.border = '1px solid green';\n        } else {\n            DOMCacheGetOrSet('openHypercubes').textContent = i18next.t('wowCubes.autoOff');\n            DOMCacheGetOrSet('openHypercubes').style.border = '1px solid red';\n            DOMCacheGetOrSet('hypercubesOpensInput').style.border = '1px solid red';\n        }\n        if (player.autoOpenPlatonicsCubes) {\n            DOMCacheGetOrSet('openPlatonicCube').textContent = i18next.t('wowCubes.autoOn', {percent: format(player.openPlatonicsCubes, 0)});\n            DOMCacheGetOrSet('openPlatonicCube').style.border = '1px solid green';\n            DOMCacheGetOrSet('platonicCubeOpensInput').style.border = '1px solid green';\n        } else {\n            DOMCacheGetOrSet('openPlatonicCube').textContent = i18next.t('wowCubes.autoOff');\n            DOMCacheGetOrSet('openPlatonicCube').style.border = '1px solid red';\n            DOMCacheGetOrSet('platonicCubeOpensInput').style.border = '1px solid red';\n        }\n\n        if (player.autoResearchToggle) {\n            DOMCacheGetOrSet('toggleautoresearch').textContent = i18next.t('researches.automaticOn')\n        } else {\n            DOMCacheGetOrSet('toggleautoresearch').textContent = i18next.t('researches.automaticOff')\n        }\n        if (player.autoResearchMode === 'cheapest') {\n            DOMCacheGetOrSet('toggleautoresearchmode').textContent = i18next.t('researches.autoModeCheapest')\n        } else {\n            DOMCacheGetOrSet('toggleautoresearchmode').textContent = i18next.t('researches.autoModeManual')\n        }\n        if (player.autoSacrificeToggle) {\n            DOMCacheGetOrSet('toggleautosacrifice').textContent = i18next.t('runes.blessings.autoRuneOn')\n            DOMCacheGetOrSet('toggleautosacrifice').style.border = '2px solid green'\n        } else {\n            DOMCacheGetOrSet('toggleautosacrifice').textContent = i18next.t('runes.blessings.autoRuneOff')\n            DOMCacheGetOrSet('toggleautosacrifice').style.border = '2px solid red'\n        }\n        if (player.autoBuyFragment) {\n            DOMCacheGetOrSet('toggleautoBuyFragments').textContent = i18next.t('runes.talismans.autoBuyOn')\n            DOMCacheGetOrSet('toggleautoBuyFragments').style.border = '2px solid white'\n            DOMCacheGetOrSet('toggleautoBuyFragments').style.color = 'orange'\n        } else {\n            DOMCacheGetOrSet('toggleautoBuyFragments').textContent = i18next.t('runes.talismans.autoBuyOff')\n            DOMCacheGetOrSet('toggleautoBuyFragments').style.border = '2px solid orange'\n            DOMCacheGetOrSet('toggleautoBuyFragments').style.color = 'white'\n        }\n        if (player.autoFortifyToggle) {\n            DOMCacheGetOrSet('toggleautofortify').textContent = i18next.t('runes.autoFortifyOn')\n            DOMCacheGetOrSet('toggleautofortify').style.border = '2px solid green'\n        } else {\n            DOMCacheGetOrSet('toggleautofortify').textContent = i18next.t('runes.autoFortifyOff')\n            DOMCacheGetOrSet('toggleautofortify').style.border = '2px solid red'\n        }\n        if (player.autoEnhanceToggle) {\n            DOMCacheGetOrSet('toggleautoenhance').textContent = i18next.t('runes.autoEnhanceOn')\n            DOMCacheGetOrSet('toggleautoenhance').style.border = '2px solid green'\n        } else {\n            DOMCacheGetOrSet('toggleautoenhance').textContent = i18next.t('runes.autoEnhanceOff')\n            DOMCacheGetOrSet('toggleautoenhance').style.border = '2px solid red'\n        }\n        player.saveOfferingToggle = false; //Lint doesnt like it being inside if\n        DOMCacheGetOrSet('saveOffToggle').textContent = i18next.t('toggles.saveOfferingsOff')\n        DOMCacheGetOrSet('saveOffToggle').style.color = 'white'\n        if (player.autoAscend) {\n            DOMCacheGetOrSet('ascensionAutoEnable').textContent = i18next.t('corruptions.autoAscend.on')\n            DOMCacheGetOrSet('ascensionAutoEnable').style.border = '2px solid green'\n        } else {\n            DOMCacheGetOrSet('ascensionAutoEnable').textContent = i18next.t('corruptions.autoAscend.off')\n            DOMCacheGetOrSet('ascensionAutoEnable').style.border = '2px solid red'\n        }\n        if (player.shopConfirmationToggle) {\n            DOMCacheGetOrSet('toggleConfirmShop').textContent = i18next.t('shop.shopConfirmationOn')\n        } else {\n            DOMCacheGetOrSet('toggleConfirmShop').textContent = i18next.t('shop.shopConfirmationOff')\n        }\n        switch (player.shopBuyMaxToggle) {\n            case false:\n                DOMCacheGetOrSet('toggleBuyMaxShopText').textContent = i18next.t('shop.buy1')\n                break;\n            case 'TEN':\n                DOMCacheGetOrSet('toggleBuyMaxShopText').textContent = i18next.t('shop.buy10')\n                break;\n            case true:\n                DOMCacheGetOrSet('toggleBuyMaxShopText').textContent = i18next.t('shop.buyMax')\n                break;\n            case 'ANY':\n                DOMCacheGetOrSet('toggleBuyMaxShopText').textContent = i18next.t('shop.buyAny')\n        }\n        if (player.shopHideToggle) {\n            DOMCacheGetOrSet('toggleHideShop').textContent = i18next.t('shop.hideMaxedOn')\n        } else {\n            DOMCacheGetOrSet('toggleHideShop').textContent = i18next.t('shop.hideMaxedOff')\n        }\n        if (player.researchBuyMaxToggle) {\n            DOMCacheGetOrSet('toggleresearchbuy').textContent = i18next.t('researches.upgradeMax')\n        } else {\n            DOMCacheGetOrSet('toggleresearchbuy').textContent = i18next.t('researches.upgradeOne')\n        }\n        if (player.cubeUpgradesBuyMaxToggle) {\n            DOMCacheGetOrSet('toggleCubeBuy').textContent = i18next.t('toggles.upgradeMaxIfPossible')\n        } else {\n            DOMCacheGetOrSet('toggleCubeBuy').textContent = i18next.t('toggles.upgradeOneLevelWow')\n        }\n        autoCubeUpgradesToggle(false);\n        autoPlatonicUpgradesToggle(false);\n\n        for (let i = 1; i <= 2; i++) {\n            toggleAntMaxBuy();\n            toggleAntAutoSacrifice(0);\n            toggleAntAutoSacrifice(1);\n        }\n\n        for (let i = 1; i <= 2; i++) {\n            toggleAutoAscend(0);\n            toggleAutoAscend(1);\n        }\n\n        DOMCacheGetOrSet('historyTogglePerSecondButton').textContent = 'Per second: ' + (player.historyShowPerSecond ? 'ON' : 'OFF');\n        DOMCacheGetOrSet('historyTogglePerSecondButton').style.borderColor = (player.historyShowPerSecond ? 'green' : 'red');\n\n        //If auto research is enabled and runing; Make sure there is something to try to research if possible\n        if (player.autoResearchToggle && autoResearchEnabled() && player.autoResearchMode === 'cheapest'){\n            player.autoResearch = G['researchOrderByCost'][player.roombaResearchIndex];\n        }\n\n        player.autoResearch = Math.min(200, player.autoResearch)\n        player.autoSacrifice = Math.min(5, player.autoSacrifice)\n\n\n        if (player.researches[61] === 0) {\n            DOMCacheGetOrSet('automaticobtainium').textContent = i18next.t('main.buyResearch3x11')\n        }\n\n        if (player.autoSacrificeToggle && player.autoSacrifice > 0.5) {\n            DOMCacheGetOrSet('rune' + player.autoSacrifice).style.backgroundColor = 'orange'\n        }\n\n        if (player.autoWarpCheck) {\n            DOMCacheGetOrSet('warpAuto').textContent = i18next.t('general.autoOnColon')\n            DOMCacheGetOrSet('warpAuto').style.border = '2px solid green'\n        } else {\n            DOMCacheGetOrSet('warpAuto').textContent = i18next.t('general.autoOffColon')\n            DOMCacheGetOrSet('warpAuto').style.border = '2px solid red'\n        }\n        DOMCacheGetOrSet('autoHepteractPercentage').textContent = i18next.t('wowCubes.hepteractForge.autoSetting', {\n            x: `${player.hepteractAutoCraftPercentage}`\n        })\n        DOMCacheGetOrSet('hepteractToQuarkTradeAuto').textContent = player.overfluxOrbsAutoBuy\n            ? i18next.t('general.autoOnColon')\n            : i18next.t('general.autoOffColon')\n        DOMCacheGetOrSet('hepteractToQuarkTradeAuto').style.border = `2px solid ${player.overfluxOrbsAutoBuy ? 'green' : 'red'}`;\n        toggleAutoBuyOrbs(true, true);\n\n        toggleTalismanBuy(player.buyTalismanShardPercent);\n        updateTalismanInventory();\n        calculateObtainium();\n        calculateAnts();\n        calculateRuneLevels();\n        resetHistoryRenderAllTables();\n        updateSingularityAchievements();\n        updateSingularityGlobalPerks();\n    }\n\n    updateAchievementBG();\n    if (player.currentChallenge.reincarnation) {\n        resetrepeat('reincarnationChallenge');\n    } else if (player.currentChallenge.transcension) {\n        resetrepeat('transcensionChallenge');\n    }\n\n    const d = new Date()\n    const h = d.getHours()\n    const m = d.getMinutes()\n    const s = d.getSeconds()\n    player.dayTimer = (60 * 60 * 24 - (s + 60 * m + 60 * 60 * h))\n}\n\nconst FormatList = ['', 'K', 'M', 'B', 'T', 'Qa', 'Qt', 'Sx', 'Sp', 'Oc', 'No', 'Dc', 'UDc', 'DDc', 'TDc', 'QaDc', 'QtDc', 'SxDc', 'SpDc', 'OcDc', 'NoDc', 'Vg', 'UVg', 'DVg', 'TVg', 'QaVg', 'QtVg', 'SxVg', 'SpVg', 'OcVg', 'NoVg', 'Tg', 'UTg', 'DTg', 'TTg', 'QaTg', 'QtTg', 'SxTg', 'SpTg', 'OTg', 'NTg', 'Qd', 'UQd', 'DQd', 'TQd', 'QaQd', 'QtQd', 'SxQd', 'SpQd', 'OcQd', 'NoQd', 'Qi', 'UQi', 'DQi', 'TQi', 'QaQi', 'QtQi', 'SxQi', 'SpQi', 'OQi', 'NQi', 'Se', 'USe', 'DSe', 'TSe', 'QaSe', 'QtSe', 'SxSe', 'SpSe', 'OcSe', 'NoSe', 'St', 'USt', 'DSt', 'TSt', 'QaSt', 'QtSt', 'SxSt', 'SpSt', 'OcSt', 'NoSt', 'Ocg', 'UOcg', 'DOcg', 'TOcg', 'QaOcg', 'QtOcg', 'SxOcg', 'SpOcg', 'OcOcg', 'NoOcg', 'Nono', 'UNono', 'DNono', 'TNono', 'QaNono', 'QtNono', 'SxNono', 'SpNono', 'OcNono', 'NoNono', 'Ce'];\n\n// Bad browsers (like Safari) only recently implemented this.\n//\nconst supportsFormatToParts = typeof (Intl.NumberFormat.prototype as Intl.NumberFormat).formatToParts === 'function';\n\n// In some browsers, this will return an empty-1 length array (?), causing a \"TypeError: Cannot read property 'value' of undefined\"\n// if we destructure it... To reproduce: ` const [ { value } ] = []; `\n// https://discord.com/channels/677271830838640680/730669616870981674/830218436201283584\nconst IntlFormatter = !supportsFormatToParts ? null : Intl.NumberFormat()\n    .formatToParts(1000.1)\n    .filter(part => part.type === 'decimal' || part.type === 'group');\n\n// gets the system number delimiter and decimal values, defaults to en-US\nconst [{ value: group }, { value: dec }] = IntlFormatter?.length !== 2\n    ? [{ value: ',' }, { value: '.' }]\n    : IntlFormatter;\n\n// Number.toLocaleString opts for 2 decimal places\nconst locOpts = { minimumFractionDigits: 2, maximumFractionDigits: 2 };\n\nconst padEvery = (str: string, places = 3) => {\n    let step = 1, newStr = '';\n    const strParts = str.split('.');\n    // don't take any decimal places\n    for (let i = (strParts[0].length - 1); i >= 0; i--) {\n        // pad every [places] places if we aren't at the beginning of the string\n        if (step++ === places && i !== 0) {\n            step = 1;\n            newStr = group + str[i] + newStr;\n        } else {\n            newStr = str[i] + newStr;\n        }\n    }\n    // re-add decimal places\n    if (typeof strParts[1] !== 'undefined') {\n        newStr += dec + strParts[1];\n    }\n    // see https://www.npmjs.com/package/flatstr\n    // eslint-disable-next-line no-bitwise\n    (newStr as unknown as number) | 0;\n    return newStr;\n}\n\n/**\n * This function displays the numbers such as 1,234 or 1.00e1234 or 1.00e1.234M.\n * @param input value to format\n * @param accuracy\n * how many decimal points that are to be displayed (Values <10 if !long, <1000 if long).\n * only works up to 305 (308 - 3), however it only worked up to ~14 due to rounding errors regardless\n * @param long dictates whether or not a given number displays as scientific at 1,000,000. This auto defaults to short if input >= 1e7\n */\nexport const format = (\n    input: Decimal | number | { [Symbol.toPrimitive]: unknown } | null | undefined,\n    accuracy = 0,\n    long = false,\n    truncate = true,\n    fractional = false\n): string => {\n    if (input == null) {\n        return '0 [null]';\n    }\n\n    if (\n        typeof input === 'object' &&\n        Symbol.toPrimitive in input\n    ) {\n        input = Number(input);\n    }\n\n    if ( // invalid parameter\n        !(input instanceof Decimal) &&\n        typeof input !== 'number' ||\n        isNaN(input as number)\n    ) {\n        return isNaN(input as number) ? '0 [NaN]' : '0 [und.]';\n    } else if ( // this case handles numbers less than 1e-6 and greater than 0\n        typeof input === 'number' &&\n        player.notation == 'Default' &&\n        input < (!fractional ? 1e-3 : 1e-15) && // arbitrary number, don't change 1e-3\n        input > 0 // don't handle negative numbers, probably could be removed\n    ) {\n        return input.toExponential(accuracy);\n    }\n\n    let power!: number;\n    let mantissa!: number;\n    if (isDecimal(input)) {\n        // Gets power and mantissa if input is of type decimal\n        power = input.e;\n        mantissa = input.mantissa;\n    } else if (typeof input === 'number') {\n        if (input === 0) {\n            return '0';\n        }\n\n        // Gets power and mantissa if input is of type number and isn't 0\n        power = Math.floor(Math.log10(Math.abs(input)));\n        mantissa = input / Math.pow(10, power);\n    }\n\n    // This prevents numbers from jittering between two different powers by rounding errors\n    if (mantissa > 9.9999999) {\n        mantissa = 1;\n        ++power;\n    }\n\n    if (mantissa < 1 && mantissa > 0.9999999) {\n        mantissa = 1;\n    }\n\n    // If the power is less than 15 it's effectively 0\n\n    if (power < -15) {\n        return '0';\n    }\n    if (player.notation == 'Pure Engineering') {\n        const powerOver = (power % 3 < 0) ? (3 + power % 3) : (power % 3);\n        power = power - powerOver;\n        mantissa = mantissa * Math.pow(10, powerOver)\n    }\n    if (player.notation == 'Pure Scientific' || player.notation == 'Pure Engineering') {\n        if (power >= 1e6) {\n            if (!Number.isFinite(power)) {\n                return 'Infinity';\n            }\n            return `E${format(power, 3)}`;\n        }\n        accuracy = power === 2 && accuracy > 2 ? 2 : accuracy;\n        if (power >= 6 || power < 0) {\n            accuracy = (accuracy < 2 ? 2 : accuracy);\n            // Makes the power group 3 with commas\n            const mantissaLook = (Math.floor(mantissa * Math.pow(10, accuracy)) / Math.pow(10, accuracy)).toLocaleString(undefined, locOpts);\n            const powerLook = padEvery(power.toString());\n            // returns format (1.23e456,789)\n            return `${mantissaLook}e${powerLook}`;\n        }\n        const mantissaLook = (Math.floor(mantissa * Math.pow(10, power) * Math.pow(10, accuracy)) / Math.pow(10, accuracy)).toLocaleString(undefined, {\n            minimumFractionDigits: accuracy, maximumFractionDigits: accuracy\n        });\n        return `${mantissaLook}`;\n    }\n    // If the power is negative, then we will want to address that separately.\n    if (power < 0 && !isDecimal(input) && fractional) {\n        if (power <= -15) {\n            return `${format(mantissa, accuracy, long)} / ${Math.pow(10, -power - 15)}Qa`\n        }\n        if (power <= -12) {\n            return `${format(mantissa, accuracy, long)} / ${Math.pow(10, -power - 12)}T`\n        }\n        if (power <= -9) {\n            return `${format(mantissa, accuracy, long)} / ${Math.pow(10, -power - 9)}B`\n        }\n        if (power <= -6) {\n            return `${format(mantissa, accuracy, long)} / ${Math.pow(10, -power - 6)}M`\n        }\n        if (power <= -3) {\n            return `${format(mantissa, accuracy, long)} / ${Math.pow(10, -power - 3)}K`\n        }\n        return `${format(mantissa, accuracy, long)} / ${Math.pow(10, -power)}`\n    } else if (power < 6 || (long && power < 7)) {\n        // If the power is less than 6 or format long and less than 7 use standard formatting (1,234,567)\n        // Gets the standard representation of the number, safe as power is guaranteed to be > -12 and < 7\n        let standard = mantissa * Math.pow(10, power);\n        let standardString;\n        // Rounds up if the number experiences a rounding error\n        if (standard - Math.floor(standard) > 0.9999999) {\n            standard = Math.ceil(standard);\n        }\n        // If the power is less than 1 or format long and less than 3 apply toFixed(accuracy) to get decimal places\n        if ((power < 2 || (long && power < 3)) && accuracy > 0) {\n            standardString = standard.toFixed(power === 2 && accuracy > 2 ? 2 : accuracy);\n        } else {\n            // If it doesn't fit those criteria drop the decimal places\n            standard = Math.floor(standard);\n            standardString = standard.toString();\n        }\n\n        // Split it on the decimal place\n        return padEvery(standardString);\n    } else if (power < 1e6) {\n        // If the power is less than 1e6 then apply standard scientific notation\n        // Makes mantissa be rounded down to 2 decimal places\n        const mantissaLook = (Math.floor(mantissa * 100) / 100).toLocaleString(undefined, locOpts);\n        // Makes the power group 3 with commas\n        const powerLook = padEvery(power.toString());\n        // returns format (1.23e456,789)\n        return `${mantissaLook}e${powerLook}`;\n    } else if (power >= 1e6) {\n        if (!Number.isFinite(power)) {\n            return 'Infinity';\n        }\n\n        // if the power is greater than 1e6 apply notation scientific notation\n        // Makes mantissa be rounded down to 2 decimal places\n        const mantissaLook = testing && truncate ? '' : (Math.floor(mantissa * 100) / 100).toLocaleString(undefined, locOpts);\n\n        // Drops the power down to 4 digits total but never greater than 1000 in increments that equate to notations, (1234000 -> 1.234) ( 12340000 -> 12.34) (123400000 -> 123.4) (1234000000 -> 1.234)\n        const powerDigits = Math.ceil(Math.log10(power));\n        let powerFront = ((powerDigits - 1) % 3) + 1;\n        let powerLook = power / Math.pow(10, powerDigits - powerFront);\n        if (powerLook === 1000) {\n            powerLook = 1;\n            powerFront = 1;\n        }\n\n        const powerLookF = powerLook.toLocaleString(undefined, {\n            minimumFractionDigits: 4 - powerFront, maximumFractionDigits: 4 - powerFront\n        });\n        const powerLodge = Math.floor(Math.log10(power) / 3);\n        // Return relevant notations alongside the \"look\" power based on what the power actually is\n        if (typeof FormatList[powerLodge] === 'string') {\n            return `${mantissaLook}e${powerLookF}${FormatList[powerLodge]}`;\n        }\n\n        // If it doesn't fit a notation then default to mantissa e power\n        return `e${power.toExponential(2)}`;\n    } else {\n        return '0 [und.]';\n    }\n}\n\nexport const formatTimeShort = (seconds: number, msMaxSeconds?: number): string => {\n    return ((seconds >= 86400) ? format(Math.floor(seconds / 86400)) + 'd' : '') +\n        ((seconds >= 3600) ? format(Math.floor(seconds / 3600) % 24) + 'h' : '') +\n        ((seconds >= 60)   ? format(Math.floor(seconds / 60) % 60) + 'm'   : '') +\n        ((seconds >= 8640000) ? '' : format(Math.floor(seconds) % 60) + ((msMaxSeconds && seconds < msMaxSeconds)  //Don't show seconds when you're over 100 days, like honestly\n            ? '.' + (Math.floor((seconds % 1) * 1000).toString().padStart(3, '0')) : '') + 's');\n}\n\nexport const updateAllTick = (): void => {\n    let a = 0;\n\n    G['totalAccelerator'] = player.acceleratorBought;\n    G['costDivisor'] = 1;\n\n    if (player.upgrades[8] !== 0) {\n        a += Math.floor(player.multiplierBought / 7);\n    }\n    if (player.upgrades[21] !== 0) {\n        a += 5;\n    }\n    if (player.upgrades[22] !== 0) {\n        a += 4;\n    }\n    if (player.upgrades[23] !== 0) {\n        a += 3;\n    }\n    if (player.upgrades[24] !== 0) {\n        a += 2;\n    }\n    if (player.upgrades[25] !== 0) {\n        a += 1;\n    }\n    if (player.upgrades[27] !== 0) {\n        a += Math.min(250, Math.floor(Decimal.log(player.coins.add(1), 1e3))) + Math.min(1750, Math.max(0, Math.floor(Decimal.log(player.coins.add(1), 1e15)) - 50));\n    }\n    if (player.upgrades[29] !== 0) {\n        a += Math.floor(Math.min(2000, (player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 80))\n    }\n    if (player.upgrades[32] !== 0) {\n        a += Math.min(500, Math.floor(Decimal.log(player.prestigePoints.add(1), 1e25)));\n    }\n    if (player.upgrades[45] !== 0) {\n        a += Math.min(2500, Math.floor(Decimal.log(player.transcendShards.add(1), 10)));\n    }\n    if (player.achievements[5] !== 0) {\n        a += Math.floor(player.firstOwnedCoin / 500)\n    }\n    if (player.achievements[12] !== 0) {\n        a += Math.floor(player.secondOwnedCoin / 500)\n    }\n    if (player.achievements[19] !== 0) {\n        a += Math.floor(player.thirdOwnedCoin / 500)\n    }\n    if (player.achievements[26] !== 0) {\n        a += Math.floor(player.fourthOwnedCoin / 500)\n    }\n    if (player.achievements[33] !== 0) {\n        a += Math.floor(player.fifthOwnedCoin / 500)\n    }\n    if (player.achievements[60] !== 0) {\n        a += 2\n    }\n    if (player.achievements[61] !== 0) {\n        a += 2\n    }\n    if (player.achievements[62] !== 0) {\n        a += 2\n    }\n\n    a += 5 * CalcECC('transcend', player.challengecompletions[2])\n    G['freeUpgradeAccelerator'] = a;\n    a += G['totalAcceleratorBoost'] * (4 + 2 * player.researches[18] + 2 * player.researches[19] + 3 * player.researches[20] + G['cubeBonusMultiplier'][1]);\n    if (player.unlocks.prestige === true) {\n        a += Math.floor(Math.pow(G['rune1level'] * G['effectiveLevelMult'] / 4, 1.25));\n        a *= (1 + G['rune1level'] * 1 / 400 * G['effectiveLevelMult']);\n    }\n\n    calculateAcceleratorMultiplier();\n    a *= G['acceleratorMultiplier']\n    a = Math.pow(a, Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G['viscosityPower'][player.usedCorruptions[2]]))\n    a += 2000 * hepteractEffective('accelerator');\n    a *= G['challenge15Rewards'].accelerator\n    a *= (1 + 3/10000 * hepteractEffective('accelerator'))\n    a = Math.floor(Math.min(1e100, a))\n\n    if (player.usedCorruptions[2] >= 15) {\n        a = Math.pow(a, 0.2)\n    }\n    if (player.usedCorruptions[2] >= 16) {\n        a = 1\n    }\n\n    G['freeAccelerator'] = a;\n    G['totalAccelerator'] += G['freeAccelerator'];\n\n    G['tuSevenMulti'] = 1;\n\n\n    if (player.upgrades[46] > 0.5) {\n        G['tuSevenMulti'] = 1.05;\n    }\n\n    G['acceleratorPower'] = Math.pow(\n        1.1 + G['tuSevenMulti'] *\n        (G['totalAcceleratorBoost'] / 100)\n        * (1 + CalcECC('transcend', player.challengecompletions[2]) / 20),\n        1 + 0.04 * CalcECC('reincarnation', player.challengecompletions[7])\n    );\n    G['acceleratorPower'] += 1 / 200 * Math.floor(CalcECC('transcend', player.challengecompletions[2]) / 2) * 100 / 100\n    for (let i = 1; i <= 5; i++) {\n        if (player.achievements[7 * i - 4] > 0) {\n            G['acceleratorPower'] += 0.0005 * i\n        }\n    }\n\n    //No MA and Sadistic will always overwrite Transcend challenges starting in v2.0.0\n    if (player.currentChallenge.reincarnation !== 7 && player.currentChallenge.reincarnation !== 10) {\n        if (player.currentChallenge.transcension === 1) {\n            G['acceleratorPower'] *= 25 / (50 + player.challengecompletions[1]);\n            G['acceleratorPower'] += 0.55\n            G['acceleratorPower'] = Math.max(1, G['acceleratorPower'])\n        }\n        if (player.currentChallenge.transcension === 2) {\n            G['acceleratorPower'] = 1;\n        }\n        if (player.currentChallenge.transcension === 3) {\n            G['acceleratorPower'] =\n                1.05 +\n                2 * G['tuSevenMulti'] *\n                (G['totalAcceleratorBoost'] / 300) *\n                (1 + CalcECC('transcend', player.challengecompletions[2]) / 20\n                );\n        }\n    }\n    G['acceleratorPower'] = Math.min(1e300, G['acceleratorPower']);\n    if (player.currentChallenge.reincarnation === 7) {\n        G['acceleratorPower'] = 1;\n    }\n    if (player.currentChallenge.reincarnation === 10) {\n        G['acceleratorPower'] = 1;\n    }\n\n    if (player.currentChallenge.transcension !== 1) {\n        G['acceleratorEffect'] = Decimal.pow(G['acceleratorPower'], G['totalAccelerator']);\n    }\n\n    if (player.currentChallenge.transcension === 1) {\n        G['acceleratorEffect'] = Decimal.pow(G['acceleratorPower'], G['totalAccelerator'] + G['totalMultiplier']);\n    }\n    G['acceleratorEffectDisplay'] = new Decimal(G['acceleratorPower'] * 100 - 100);\n    if (player.currentChallenge.reincarnation === 10) {\n        G['acceleratorEffect'] = new Decimal(1);\n    }\n    G['generatorPower'] = new Decimal(1);\n    if (player.upgrades[11] > 0.5 && player.currentChallenge.reincarnation !== 7) {\n        G['generatorPower'] = Decimal.pow(1.02, G['totalAccelerator'])\n    }\n\n}\n\nexport const updateAllMultiplier = (): void => {\n    let a = 0;\n\n    if (player.upgrades[7] > 0) {\n        a += Math.min(4, 1 + Math.floor(Decimal.log(player.fifthOwnedCoin + 1, 10)));\n    }\n    if (player.upgrades[9] > 0) {\n        a += Math.floor(player.acceleratorBought / 10);\n    }\n    if (player.upgrades[21] > 0) {\n        a += 1;\n    }\n    if (player.upgrades[22] > 0) {\n        a += 1;\n    }\n    if (player.upgrades[23] > 0) {\n        a += 1;\n    }\n    if (player.upgrades[24] > 0) {\n        a += 1;\n    }\n    if (player.upgrades[25] > 0) {\n        a += 1;\n    }\n    if (player.upgrades[28] > 0) {\n        a += Math.min(1000, Math.floor((player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 160))\n    }\n    if (player.upgrades[30] > 0) {\n        a += Math.min(75, Math.floor(Decimal.log(player.coins.add(1), 1e10))) + Math.min(925, Math.floor(Decimal.log(player.coins.add(1), 1e30)));\n    }\n    if (player.upgrades[33] > 0) {\n        a += G['totalAcceleratorBoost']\n    }\n    if (player.upgrades[49] > 0) {\n        a += Math.min(50, Math.floor(Decimal.log(player.transcendPoints.add(1), 1e10)));\n    }\n    if (player.upgrades[68] > 0) {\n        a += Math.min(2500, Math.floor(Decimal.log(G['taxdivisor'], 10) * 1 / 1000))\n    }\n    if (player.challengecompletions[1] > 0) {\n        a += 1\n    }\n    if (player.achievements[6] > 0.5) {\n        a += Math.floor(player.firstOwnedCoin / 1000)\n    }\n    if (player.achievements[13] > 0.5) {\n        a += Math.floor(player.secondOwnedCoin / 1000)\n    }\n    if (player.achievements[20] > 0.5) {\n        a += Math.floor(player.thirdOwnedCoin / 1000)\n    }\n    if (player.achievements[27] > 0.5) {\n        a += Math.floor(player.fourthOwnedCoin / 1000)\n    }\n    if (player.achievements[34] > 0.5) {\n        a += Math.floor(player.fifthOwnedCoin / 1000)\n    }\n    if (player.achievements[57] > 0.5) {\n        a += 1\n    }\n    if (player.achievements[58] > 0.5) {\n        a += 1\n    }\n    if (player.achievements[59] > 0.5) {\n        a += 1\n    }\n    a += 20 * player.researches[94] * Math.floor(\n        (G['rune1level'] + G['rune2level'] + G['rune3level'] + G['rune4level'] + G['rune5level']) / 8\n    );\n\n    G['freeUpgradeMultiplier'] = Math.min(1e100, a)\n\n    if (player.achievements[38] > 0.5) {\n        a += Math.floor(Math.floor(\n            G['rune2level'] / 10 * G['effectiveLevelMult']) *\n            Math.floor(1 + G['rune2level'] / 10 * G['effectiveLevelMult']) / 2\n        ) * 100 / 100;\n    }\n\n    a *= (1 + player.achievements[57] / 100)\n    a *= (1 + player.achievements[58] / 100)\n    a *= (1 + player.achievements[59] / 100)\n    a *= Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25])\n    a *= (1 + 0.03 * player.upgrades[34] + 0.02 * player.upgrades[35])\n    a *= (1 + 1 / 5 * player.researches[2] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])))\n    a *= (1 + 1 / 20 * player.researches[11] + 1 / 25 * player.researches[12] + 1 / 40 * player.researches[13] + 3 / 200 * player.researches[14] + 1 / 200 * player.researches[15])\n    a *= (1 + G['rune2level'] / 400 * G['effectiveLevelMult'])\n    a *= (1 + 1 / 20 * player.researches[87])\n    a *= (1 + 1 / 100 * player.researches[128])\n    a *= (1 + 0.8 / 100 * player.researches[143])\n    a *= (1 + 0.6 / 100 * player.researches[158])\n    a *= (1 + 0.4 / 100 * player.researches[173])\n    a *= (1 + 0.2 / 100 * player.researches[188])\n    a *= (1 + 0.01 / 100 * player.researches[200])\n    a *= (1 + 0.01 / 100 * player.cubeUpgrades[50])\n    a *= calculateSigmoidExponential(40, (player.antUpgrades[4]! + G['bonusant5']) / 1000 * 40 / 39)\n    a *= G['cubeBonusMultiplier'][2]\n    if ((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5) {\n        a *= 1.25\n    }\n    a = Math.pow(a, Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G['viscosityPower'][player.usedCorruptions[2]]))\n    a += 1000 * hepteractEffective('multiplier')\n    a *= G['challenge15Rewards'].multiplier\n    a *= (1 + 3/10000 * hepteractEffective('multiplier'))\n    a = Math.floor(Math.min(1e100, a))\n\n    if (player.usedCorruptions[2] >= 15) {\n        a = Math.pow(a, 0.2)\n    }\n    if (player.usedCorruptions[2] >= 16) {\n        a = 1\n    }\n\n    G['freeMultiplier'] = a;\n    G['totalMultiplier'] = G['freeMultiplier'] + player.multiplierBought;\n\n    G['challengeOneLog'] = 3;\n\n    let b = 0;\n    let c = 0;\n    b += Decimal.log(player.transcendShards.add(1), 3);\n    b *= (1 + 11 * player.researches[33] / 100)\n    b *= (1 + 11 * player.researches[34] / 100)\n    b *= (1 + 11 * player.researches[35] / 100)\n    b *= (1 + player.researches[89] / 5)\n    b *= (1 + 10 * G['effectiveRuneBlessingPower'][2])\n\n    c += Math.floor((0.1 * b * CalcECC('transcend', player.challengecompletions[1])))\n    c += (CalcECC('transcend', player.challengecompletions[1]) * 10);\n    G['freeMultiplierBoost'] = c;\n    G['totalMultiplierBoost'] = Math.pow(Math.floor(b) + c, 1 + CalcECC('reincarnation', player.challengecompletions[7]) * 0.04);\n\n    let c7 = 1\n    if (player.challengecompletions[7] > 0.5) {\n        c7 = 1.25\n    }\n\n    G['multiplierPower'] = 2 + 0.005 * G['totalMultiplierBoost'] * c7\n\n    //No MA and Sadistic will always override Transcend Challenges starting in v2.0.0\n    if (player.currentChallenge.reincarnation !== 7 && player.currentChallenge.reincarnation !== 10) {\n        if (player.currentChallenge.transcension === 1) {\n            G['multiplierPower'] = 1;\n        }\n        if (player.currentChallenge.transcension === 2) {\n            G['multiplierPower'] = (1.25 + 0.0012 * (b + c) * c7)\n        }\n    }\n    G['multiplierPower'] = Math.min(1e300, G['multiplierPower']);\n\n    if (player.currentChallenge.reincarnation === 7) {\n        G['multiplierPower'] = 1;\n    }\n    if (player.currentChallenge.reincarnation === 10) {\n        G['multiplierPower'] = 1;\n    }\n\n    G['multiplierEffect'] = Decimal.pow(G['multiplierPower'], G['totalMultiplier']);\n}\n\nexport const multipliers = (): void => {\n    let s = new Decimal(1);\n    let c = new Decimal(1);\n    let crystalExponent = 1 / 3\n    crystalExponent += Math.min(10 + 0.05 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4) + 20 * calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][3], 0.05 * player.crystalUpgrades[3])\n    crystalExponent += 0.04 * CalcECC('transcend', player.challengecompletions[3])\n    crystalExponent += 0.08 * player.researches[28]\n    crystalExponent += 0.08 * player.researches[29]\n    crystalExponent += 0.04 * player.researches[30]\n    crystalExponent += 8 * player.cubeUpgrades[17]\n    G['prestigeMultiplier'] = Decimal.pow(player.prestigeShards, crystalExponent).add(1);\n\n    let c7 = 1;\n    if (player.currentChallenge.reincarnation === 7) {\n        c7 = 0.05\n    }\n    if (player.currentChallenge.reincarnation === 8) {\n        c7 = 0\n    }\n\n    G['buildingPower'] =\n        1 + (1 - Math.pow(2, -1 / 160)) * c7 * Decimal.log(\n            player.reincarnationShards.add(1), 10) *\n            (1 + 1 / 20 * player.researches[36] +\n            1 / 40 * player.researches[37] + 1 / 40 *\n            player.researches[38]) +\n            (c7 + 0.2) * 0.25 / 1.2 *\n            CalcECC('reincarnation', player.challengecompletions[8]\n            );\n\n    G['buildingPower'] = Math.pow(G['buildingPower'], 1 + player.cubeUpgrades[12] * 0.09)\n    G['buildingPower'] = Math.pow(G['buildingPower'], 1 + player.cubeUpgrades[36] * 0.05)\n    G['reincarnationMultiplier'] = Decimal.pow(G['buildingPower'], G['totalCoinOwned']);\n\n    G['antMultiplier'] = Decimal.pow(Decimal.max(1, player.antPoints), calculateCrumbToCoinExp());\n\n    s = s.times(G['multiplierEffect']);\n    s = s.times(G['acceleratorEffect']);\n    s = s.times(G['prestigeMultiplier']);\n    s = s.times(G['reincarnationMultiplier']);\n    s = s.times(G['antMultiplier'])\n    // PLAT - check\n    const first6CoinUp = new Decimal(G['totalCoinOwned'] + 1).times(Decimal.min(1e30, Decimal.pow(1.008, G['totalCoinOwned'])));\n\n    if (player.highestSingularityCount > 0) {\n        s = s.times(Math.pow(player.goldenQuarks + 1, 1.5) * Math.pow(player.highestSingularityCount + 1, 2))\n    }\n    if (player.upgrades[6] > 0.5) {\n        s = s.times(first6CoinUp);\n    }\n    if (player.upgrades[12] > 0.5) {\n        s = s.times(Decimal.min(1e4, Decimal.pow(1.01, player.prestigeCount)));\n    }\n    if (player.upgrades[20] > 0.5) {\n        // PLAT - check\n        s = s.times(Decimal.pow(G['totalCoinOwned'] / 4 + 1, 10));\n    }\n    if (player.upgrades[41] > 0.5) {\n        s = s.times(Decimal.min(1e30, Decimal.pow(player.transcendPoints.add(1), 1 / 2)));\n    }\n    if (player.upgrades[43] > 0.5) {\n        s = s.times(Decimal.min(1e30, Decimal.pow(1.01, player.transcendCount)));\n    }\n    if (player.upgrades[48] > 0.5) {\n        s = s.times(Decimal.pow((G['totalMultiplier'] * G['totalAccelerator'] / 1000 + 1), 8));\n    }\n    if (player.currentChallenge.reincarnation === 6) {\n        s = s.dividedBy(1e250)\n    }\n    if (player.currentChallenge.reincarnation === 7) {\n        s = s.dividedBy('1e1250')\n    }\n    if (player.currentChallenge.reincarnation === 9) {\n        s = s.dividedBy('1e2000000')\n    }\n    if (player.currentChallenge.reincarnation === 10) {\n        s = s.dividedBy('1e12500000')\n    }\n    c = Decimal.pow(s, 1 + 0.001 * player.researches[17]);\n    let lol = Decimal.pow(c, 1 + 0.025 * player.upgrades[123])\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[5] > 0) {\n        lol = Decimal.pow(lol, 1.1)\n    }\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[14] > 0) {\n        lol = Decimal.pow(lol, 1 + 1 / 20 * player.usedCorruptions[9] * Decimal.log(player.coins.add(1), 10) / (1e7 + Decimal.log(player.coins.add(1), 10)))\n    }\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[15] > 0) {\n        lol = Decimal.pow(lol, 1.1)\n    }\n    lol = Decimal.pow(lol, G['challenge15Rewards'].coinExponent)\n    G['globalCoinMultiplier'] = lol;\n    G['globalCoinMultiplier'] = Decimal.pow(G['globalCoinMultiplier'], G['financialcollapsePower'][player.usedCorruptions[9]])\n\n    G['coinOneMulti'] = new Decimal(1);\n    if (player.upgrades[1] > 0.5) {\n        G['coinOneMulti'] = G['coinOneMulti'].times(first6CoinUp);\n    }\n    if (player.upgrades[10] > 0.5) {\n        G['coinOneMulti'] = G['coinOneMulti'].times(Decimal.pow(2, Math.min(50, player.secondOwnedCoin / 15)));\n    }\n    if (player.upgrades[56] > 0.5) {\n        G['coinOneMulti'] = G['coinOneMulti'].times('1e5000')\n    }\n\n    G['coinTwoMulti'] = new Decimal(1);\n    if (player.upgrades[2] > 0.5) {\n        G['coinTwoMulti'] = G['coinTwoMulti'].times(first6CoinUp);\n    }\n    if (player.upgrades[13] > 0.5) {\n        G['coinTwoMulti'] = G['coinTwoMulti'].times(Decimal.min(1e50, Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), 4 / 3).times(1e10)));\n    }\n    if (player.upgrades[19] > 0.5) {\n        G['coinTwoMulti'] = G['coinTwoMulti'].times(Decimal.min(1e200, player.transcendPoints.times(1e30).add(1)));\n    }\n    if (player.upgrades[57] > 0.5) {\n        G['coinTwoMulti'] = G['coinTwoMulti'].times('1e7500')\n    }\n\n    G['coinThreeMulti'] = new Decimal(1);\n    if (player.upgrades[3] > 0.5) {\n        G['coinThreeMulti'] = G['coinThreeMulti'].times(first6CoinUp);\n    }\n    if (player.upgrades[18] > 0.5) {\n        G['coinThreeMulti'] = G['coinThreeMulti'].times(Decimal.min(1e125, player.transcendShards.add(1)));\n    }\n    if (player.upgrades[58] > 0.5) {\n        G['coinThreeMulti'] = G['coinThreeMulti'].times('1e15000')\n    }\n\n    G['coinFourMulti'] = new Decimal(1);\n    if (player.upgrades[4] > 0.5) {\n        G['coinFourMulti'] = G['coinFourMulti'].times(first6CoinUp);\n    }\n    if (player.upgrades[17] > 0.5) {\n        G['coinFourMulti'] = G['coinFourMulti'].times(1e100);\n    }\n    if (player.upgrades[59] > 0.5) {\n        G['coinFourMulti'] = G['coinFourMulti'].times('1e25000')\n    }\n\n    G['coinFiveMulti'] = new Decimal(1);\n    if (player.upgrades[5] > 0.5) {\n        G['coinFiveMulti'] = G['coinFiveMulti'].times(first6CoinUp);\n    }\n    if (player.upgrades[60] > 0.5) {\n        G['coinFiveMulti'] = G['coinFiveMulti'].times('1e35000')\n    }\n\n    G['globalCrystalMultiplier'] = new Decimal(1)\n    if (player.achievements[36] > 0.5) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(2)\n    }\n    if (player.achievements[37] > 0.5 && player.prestigePoints.gte(10)) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.log(player.prestigePoints.add(1), 10))\n    }\n    if (player.achievements[44] > 0.5) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier']\n            .times(Decimal.pow(G['rune3level'] / 2 * G['effectiveLevelMult'], 2)\n                .times(Decimal.pow(2, G['rune3level'] * G['effectiveLevelMult'] / 2 - 8))\n                .add(1));\n    }\n    if (player.upgrades[36] > 0.5) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.min('1e5000', Decimal.pow(player.prestigePoints, 1 / 500)))\n    }\n    if (player.upgrades[63] > 0.5) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.min('1e6000', Decimal.pow(player.reincarnationPoints.add(1), 6)))\n    }\n    if (player.researches[39] > 0.5) {\n        G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(G['reincarnationMultiplier'], 1 / 50))\n    }\n\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.min(Decimal.pow(10, 50 + 2 * player.crystalUpgrades[0]), Decimal.pow(1.05, player.achievementPoints * player.crystalUpgrades[0])))\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.min(Decimal.pow(10, 100 + 5 * player.crystalUpgrades[1]), Decimal.pow(Decimal.log(player.coins.add(1), 10), player.crystalUpgrades[1] / 3)))\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(1 + Math.min(0.12 + 0.88 * player.upgrades[122] + 0.001 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4), 0.001 * player.crystalUpgrades[2]), player.firstOwnedDiamonds + player.secondOwnedDiamonds + player.thirdOwnedDiamonds + player.fourthOwnedDiamonds + player.fifthOwnedDiamonds))\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(1.01, (player.challengecompletions[1] + player.challengecompletions[2] + player.challengecompletions[3] + player.challengecompletions[4] + player.challengecompletions[5]) * player.crystalUpgrades[4]))\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(10, CalcECC('transcend', player.challengecompletions[5])))\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(1e4, player.researches[5] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14]))))\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(2.5, player.researches[26]))\n    G['globalCrystalMultiplier'] = G['globalCrystalMultiplier'].times(Decimal.pow(2.5, player.researches[27]))\n\n    G['globalMythosMultiplier'] = new Decimal(1)\n\n    if (player.upgrades[37] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(Decimal.log(player.prestigePoints.add(10), 10), 2))\n    }\n    if (player.upgrades[42] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.min(1e50, Decimal.pow(player.prestigePoints.add(1), 1 / 50).dividedBy(2.5).add(1)));\n    }\n    if (player.upgrades[47] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(1.05, player.achievementPoints)).times(player.achievementPoints + 1)\n    }\n    if (player.upgrades[51] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(G['totalAcceleratorBoost'], 2))\n    }\n    if (player.upgrades[52] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(G['globalMythosMultiplier'], 0.025))\n    }\n    if (player.upgrades[64] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(player.reincarnationPoints.add(1), 2))\n    }\n    if (player.researches[40] > 0.5) {\n        G['globalMythosMultiplier'] = G['globalMythosMultiplier'].times(Decimal.pow(G['reincarnationMultiplier'], 1 / 250))\n    }\n    G['grandmasterMultiplier'] = new Decimal(1);\n    G['totalMythosOwned'] = player.firstOwnedMythos + player.secondOwnedMythos + player.thirdOwnedMythos + player.fourthOwnedMythos + player.fifthOwnedMythos;\n\n    G['mythosBuildingPower'] = 1 + (CalcECC('transcend', player.challengecompletions[3]) / 200);\n    G['challengeThreeMultiplier'] = Decimal.pow(G['mythosBuildingPower'], G['totalMythosOwned']);\n\n    G['grandmasterMultiplier'] = G['grandmasterMultiplier'].times(G['challengeThreeMultiplier']);\n\n    G['mythosupgrade13'] = new Decimal(1);\n    G['mythosupgrade14'] = new Decimal(1);\n    G['mythosupgrade15'] = new Decimal(1);\n    if (player.upgrades[53] === 1) {\n        G['mythosupgrade13'] = G['mythosupgrade13'].times(Decimal.min('1e1250', Decimal.pow(G['acceleratorEffect'], 1 / 125)))\n    }\n    if (player.upgrades[54] === 1) {\n        G['mythosupgrade14'] = G['mythosupgrade14'].times(Decimal.min('1e2000', Decimal.pow(G['multiplierEffect'], 1 / 180)))\n    }\n    if (player.upgrades[55] === 1) {\n        G['mythosupgrade15'] = G['mythosupgrade15'].times(Decimal.pow('1e1000', Math.min(1000, G['buildingPower'] - 1)))\n    }\n\n    G['globalConstantMult'] = new Decimal('1')\n    G['globalConstantMult'] = G['globalConstantMult'].times(Decimal.pow(1.05 + 0.01 * player.achievements[270] + 0.001 * player.platonicUpgrades[18], player.constantUpgrades[1]))\n    G['globalConstantMult'] = G['globalConstantMult'].times(Decimal.pow(1 + 0.001 * Math.min(100 + 10 * player.achievements[270] + 10 * player.shopUpgrades.constantEX + 1000 * (G['challenge15Rewards'].exponent - 1) + 3 * player.platonicUpgrades[18], player.constantUpgrades[2]), ascendBuildingDR()))\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 2 / 100 * player.researches[139])\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 3 / 100 * player.researches[154])\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 4 / 100 * player.researches[169])\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 5 / 100 * player.researches[184])\n    G['globalConstantMult'] = G['globalConstantMult'].times(1 + 10 / 100 * player.researches[199])\n    G['globalConstantMult'] = G['globalConstantMult'].times(G['challenge15Rewards'].constantBonus)\n    if (player.platonicUpgrades[5] > 0) {\n        G['globalConstantMult'] = G['globalConstantMult'].times(2)\n    }\n    if (player.platonicUpgrades[10] > 0) {\n        G['globalConstantMult'] = G['globalConstantMult'].times(10)\n    }\n    if (player.platonicUpgrades[15] > 0) {\n        G['globalConstantMult'] = G['globalConstantMult'].times(1e250)\n    }\n    G['globalConstantMult'] = G['globalConstantMult'].times(Decimal.pow(player.overfluxPowder + 1, 10 * player.platonicUpgrades[16]))\n}\n\nexport const resourceGain = (dt: number): void => {\n\n    calculateTotalCoinOwned();\n    calculateTotalAcceleratorBoost();\n\n    updateAllTick();\n    updateAllMultiplier();\n    multipliers();\n    calculatetax();\n    if (G['produceTotal'].gte(0.001)) {\n        const addcoin = (Decimal.min(G['produceTotal'].dividedBy(G['taxdivisor']), Decimal.pow(10, G['maxexponent'] - Decimal.log(G['taxdivisorcheck'], 10)))).times(dt / 0.025)\n        player.coins = player.coins.add(addcoin);\n        player.coinsThisPrestige = player.coinsThisPrestige.add(addcoin);\n        player.coinsThisTranscension = player.coinsThisTranscension.add(addcoin);\n        player.coinsThisReincarnation = player.coinsThisReincarnation.add(addcoin);\n        player.coinsTotal = player.coinsTotal.add(addcoin)\n    }\n\n    resetCurrency();\n    if (player.upgrades[93] === 1 && player.coinsThisPrestige.gte(1e16)) {\n        player.prestigePoints = player.prestigePoints.add(Decimal.floor(G['prestigePointGain'].dividedBy(4000).times(dt / 0.025)))\n    }\n    if (player.upgrades[100] === 1 && player.coinsThisTranscension.gte(1e100)) {\n        player.transcendPoints = player.transcendPoints.add(Decimal.floor(G['transcendPointGain'].dividedBy(4000).times(dt / 0.025)))\n    }\n    if (player.cubeUpgrades[28] > 0 && player.transcendShards.gte(1e300)) {\n        player.reincarnationPoints = player.reincarnationPoints.add(Decimal.floor(G['reincarnationPointGain'].dividedBy(4000).times(dt / 0.025)))\n    }\n    G['produceFirstDiamonds'] = player.firstGeneratedDiamonds.add(player.firstOwnedDiamonds).times(player.firstProduceDiamonds).times(G['globalCrystalMultiplier'])\n    G['produceSecondDiamonds'] = player.secondGeneratedDiamonds.add(player.secondOwnedDiamonds).times(player.secondProduceDiamonds).times(G['globalCrystalMultiplier'])\n    G['produceThirdDiamonds'] = player.thirdGeneratedDiamonds.add(player.thirdOwnedDiamonds).times(player.thirdProduceDiamonds).times(G['globalCrystalMultiplier'])\n    G['produceFourthDiamonds'] = player.fourthGeneratedDiamonds.add(player.fourthOwnedDiamonds).times(player.fourthProduceDiamonds).times(G['globalCrystalMultiplier'])\n    G['produceFifthDiamonds'] = player.fifthGeneratedDiamonds.add(player.fifthOwnedDiamonds).times(player.fifthProduceDiamonds).times(G['globalCrystalMultiplier'])\n\n    player.fourthGeneratedDiamonds = player.fourthGeneratedDiamonds.add(G['produceFifthDiamonds'].times(dt / 0.025))\n    player.thirdGeneratedDiamonds = player.thirdGeneratedDiamonds.add(G['produceFourthDiamonds'].times(dt / 0.025))\n    player.secondGeneratedDiamonds = player.secondGeneratedDiamonds.add(G['produceThirdDiamonds'].times(dt / 0.025))\n    player.firstGeneratedDiamonds = player.firstGeneratedDiamonds.add(G['produceSecondDiamonds'].times(dt / 0.025))\n    G['produceDiamonds'] = G['produceFirstDiamonds'];\n\n    if (player.currentChallenge.transcension !== 3 && player.currentChallenge.reincarnation !== 10) {\n        player.prestigeShards = player.prestigeShards.add(G['produceDiamonds'].times(dt / 0.025))\n    }\n\n    G['produceFifthMythos'] = player.fifthGeneratedMythos.add(player.fifthOwnedMythos).times(player.fifthProduceMythos).times(G['globalMythosMultiplier'])\n        .times(G['grandmasterMultiplier'])\n        .times(G['mythosupgrade15'])\n    G['produceFourthMythos'] = player.fourthGeneratedMythos.add(player.fourthOwnedMythos).times(player.fourthProduceMythos).times(G['globalMythosMultiplier'])\n    G['produceThirdMythos'] = player.thirdGeneratedMythos.add(player.thirdOwnedMythos).times(player.thirdProduceMythos).times(G['globalMythosMultiplier'])\n        .times(G['mythosupgrade14'])\n    G['produceSecondMythos'] = player.secondGeneratedMythos.add(player.secondOwnedMythos).times(player.secondProduceMythos).times(G['globalMythosMultiplier'])\n    G['produceFirstMythos'] = player.firstGeneratedMythos.add(player.firstOwnedMythos).times(player.firstProduceMythos).times(G['globalMythosMultiplier'])\n        .times(G['mythosupgrade13'])\n    player.fourthGeneratedMythos = player.fourthGeneratedMythos.add(G['produceFifthMythos'].times(dt / 0.025));\n    player.thirdGeneratedMythos = player.thirdGeneratedMythos.add(G['produceFourthMythos'].times(dt / 0.025));\n    player.secondGeneratedMythos = player.secondGeneratedMythos.add(G['produceThirdMythos'].times(dt / 0.025));\n    player.firstGeneratedMythos = player.firstGeneratedMythos.add(G['produceSecondMythos'].times(dt / 0.025));\n\n\n    G['produceMythos'] = new Decimal('0');\n    G['produceMythos'] = (player.firstGeneratedMythos.add(player.firstOwnedMythos)).times(player.firstProduceMythos).times(G['globalMythosMultiplier'])\n        .times(G['mythosupgrade13']);\n    G['producePerSecondMythos'] = G['produceMythos'].times(40);\n\n    let pm = new Decimal('1');\n    if (player.upgrades[67] > 0.5) {\n        pm = pm.times(Decimal.pow(1.03, player.firstOwnedParticles + player.secondOwnedParticles + player.thirdOwnedParticles + player.fourthOwnedParticles + player.fifthOwnedParticles))\n    }\n    G['produceFifthParticles'] = player.fifthGeneratedParticles.add(player.fifthOwnedParticles).times(player.fifthProduceParticles)\n    G['produceFourthParticles'] = player.fourthGeneratedParticles.add(player.fourthOwnedParticles).times(player.fourthProduceParticles)\n    G['produceThirdParticles'] = player.thirdGeneratedParticles.add(player.thirdOwnedParticles).times(player.thirdProduceParticles)\n    G['produceSecondParticles'] = player.secondGeneratedParticles.add(player.secondOwnedParticles).times(player.secondProduceParticles)\n    G['produceFirstParticles'] = player.firstGeneratedParticles.add(player.firstOwnedParticles).times(player.firstProduceParticles).times(pm)\n    player.fourthGeneratedParticles = player.fourthGeneratedParticles.add(G['produceFifthParticles'].times(dt / 0.025));\n    player.thirdGeneratedParticles = player.thirdGeneratedParticles.add(G['produceFourthParticles'].times(dt / 0.025));\n    player.secondGeneratedParticles = player.secondGeneratedParticles.add(G['produceThirdParticles'].times(dt / 0.025));\n    player.firstGeneratedParticles = player.firstGeneratedParticles.add(G['produceSecondParticles'].times(dt / 0.025));\n\n    G['produceParticles'] = new Decimal('0');\n    G['produceParticles'] = (player.firstGeneratedParticles.add(player.firstOwnedParticles)).times(player.firstProduceParticles).times(pm);\n    G['producePerSecondParticles'] = G['produceParticles'].times(40);\n\n    if (player.currentChallenge.transcension !== 3 && player.currentChallenge.reincarnation !== 10) {\n        player.transcendShards = player.transcendShards.add(G['produceMythos'].times(dt / 0.025));\n    }\n    if (player.currentChallenge.reincarnation !== 10) {\n        player.reincarnationShards = player.reincarnationShards.add(G['produceParticles'].times(dt / 0.025))\n    }\n\n    createAnts(dt);\n    for (let i = 1; i <= 5; i++) {\n        G['ascendBuildingProduction'][G['ordinals'][5 - i as ZeroToFour]] = (player[`ascendBuilding${6 - i as OneToFive}` as const]['generated']).add(player[`ascendBuilding${6 - i as OneToFive}` as const]['owned']).times(player[`ascendBuilding${i as OneToFive}` as const]['multiplier']).times(G['globalConstantMult'])\n\n        if (i !== 5) {\n            const fiveMinusI = 5 - i as 1|2|3|4;\n            player[`ascendBuilding${fiveMinusI}` as const]['generated'] = player[`ascendBuilding${fiveMinusI}` as const]['generated']\n                .add(G['ascendBuildingProduction'][G['ordinals'][fiveMinusI]].times(dt))\n        }\n    }\n\n    player.ascendShards = player.ascendShards.add(G['ascendBuildingProduction'].first.times(dt))\n\n    if (player.ascensionCount > 0) {\n        ascensionAchievementCheck(2)\n    }\n\n    if (player.researches[71] > 0.5 && player.challengecompletions[1] < (Math.min(player.highestchallengecompletions[1], 25 + 5 * player.researches[66] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.25 * G['challengeBaseRequirements'][0] * Math.pow(1 + player.challengecompletions[1], 2)))) {\n        player.challengecompletions[1] += 1;\n        challengeachievementcheck(1, true)\n        updateChallengeLevel(1)\n    }\n    if (player.researches[72] > 0.5 && player.challengecompletions[2] < (Math.min(player.highestchallengecompletions[2], 25 + 5 * player.researches[67] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.6 * G['challengeBaseRequirements'][1] * Math.pow(1 + player.challengecompletions[2], 2)))) {\n        player.challengecompletions[2] += 1\n        challengeachievementcheck(2, true)\n        updateChallengeLevel(2)\n    }\n    if (player.researches[73] > 0.5 && player.challengecompletions[3] < (Math.min(player.highestchallengecompletions[3], 25 + 5 * player.researches[68] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.7 * G['challengeBaseRequirements'][2] * Math.pow(1 + player.challengecompletions[3], 2)))) {\n        player.challengecompletions[3] += 1\n        challengeachievementcheck(3, true)\n        updateChallengeLevel(3)\n    }\n    if (player.researches[74] > 0.5 && player.challengecompletions[4] < (Math.min(player.highestchallengecompletions[4], 25 + 5 * player.researches[69] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 1.45 * G['challengeBaseRequirements'][3] * Math.pow(1 + player.challengecompletions[4], 2)))) {\n        player.challengecompletions[4] += 1\n        challengeachievementcheck(4, true)\n        updateChallengeLevel(4)\n    }\n    if (player.researches[75] > 0.5 && player.challengecompletions[5] < (Math.min(player.highestchallengecompletions[5], 25 + 5 * player.researches[70] + 925 * player.researches[105])) && player.coins.gte(Decimal.pow(10, 2 * G['challengeBaseRequirements'][4] * Math.pow(1 + player.challengecompletions[5], 2)))) {\n        player.challengecompletions[5] += 1\n        challengeachievementcheck(5, true)\n        updateChallengeLevel(5)\n    }\n\n    const chal = player.currentChallenge.transcension;\n    const reinchal = player.currentChallenge.reincarnation;\n    const ascendchal = player.currentChallenge.ascension;\n    if (chal !== 0) {\n        if (player.coinsThisTranscension.gte(challengeRequirement(chal, player.challengecompletions[chal], chal))) {\n            void resetCheck('transcensionChallenge', false);\n            G['autoChallengeTimerIncrement'] = 0;\n        }\n    }\n    if (reinchal < 9 && reinchal !== 0) {\n        if (player.transcendShards.gte(challengeRequirement(reinchal, player.challengecompletions[reinchal], reinchal))) {\n            void resetCheck('reincarnationChallenge', false)\n            G['autoChallengeTimerIncrement'] = 0;\n        }\n    }\n    if (reinchal >= 9) {\n        if (player.coins.gte(challengeRequirement(reinchal, player.challengecompletions[reinchal], reinchal))) {\n            void resetCheck('reincarnationChallenge', false)\n            G['autoChallengeTimerIncrement'] = 0;\n        }\n    }\n    if (ascendchal !== 0 && ascendchal < 15) {\n        if (player.challengecompletions[10] >= challengeRequirement(ascendchal, player.challengecompletions[ascendchal], ascendchal)) {\n            void resetCheck('ascensionChallenge', false)\n            challengeachievementcheck(ascendchal, true)\n        }\n    }\n    if (ascendchal === 15) {\n        if (player.coins.gte(challengeRequirement(ascendchal, player.challengecompletions[ascendchal], ascendchal))) {\n            void resetCheck('ascensionChallenge', false)\n        }\n    }\n}\n\nexport const updateAntMultipliers = (): void => {\n    //Update 2.5.0: Updated to have a base of 10 instead of 1x\n    G['globalAntMult'] = new Decimal(10);\n    //Update 2.9.0: Updated to give a 5x multiplier no matter what\n    G['globalAntMult'] = G['globalAntMult'].times(5);\n    G['globalAntMult'] = G['globalAntMult'].times(1 + 1 / 2500 * Math.pow(G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[84] / 200 * (1 + 1 * G['effectiveRuneSpiritPower'][5] * calculateCorruptionPoints() / 400)), 2))\n    if (player.upgrades[76] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(5)\n    }\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1 + player.upgrades[77] / 250 + player.researches[96] / 5000 + player.cubeUpgrades[65] / 250, player.firstOwnedAnts + player.secondOwnedAnts + player.thirdOwnedAnts + player.fourthOwnedAnts + player.fifthOwnedAnts + player.sixthOwnedAnts + player.seventhOwnedAnts + player.eighthOwnedAnts))\n    G['globalAntMult'] = G['globalAntMult'].times(1 + player.upgrades[78] * 0.005 * Math.pow(Math.log10(player.maxofferings + 1), 2))\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1.11 + player.researches[101] / 1000 + player.researches[162] / 10000, player.antUpgrades[0]! + G['bonusant1']));\n    G['globalAntMult'] = G['globalAntMult'].times(antSacrificePointsToMultiplier(player.antSacrificePoints))\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(Math.max(1, player.researchPoints), G['effectiveRuneBlessingPower'][5]))\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1 + G['runeSum'] / 100, G['talisman6Power']))\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1.1, CalcECC('reincarnation', player.challengecompletions[9])))\n    G['globalAntMult'] = G['globalAntMult'].times(G['cubeBonusMultiplier'][6])\n    if (player.achievements[169] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.log(player.antPoints.add(10), 10))\n    }\n    if (player.achievements[171] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(1.16666)\n    }\n    if (player.achievements[172] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(1 + 2 * (1 - Math.pow(2, -Math.min(1, player.reincarnationcounter / 7200))))\n    }\n    if (player.upgrades[39] === 1) {\n        G['globalAntMult'] = G['globalAntMult'].times(1.60)\n    }\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1 + 0.1 * Decimal.log(player.ascendShards.add(1), 10), player.constantUpgrades[5]))\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1e5, CalcECC('ascension', player.challengecompletions[11])))\n    if (player.researches[147] > 0) {\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.log(player.antPoints.add(10), 10))\n    }\n    if (player.researches[177] > 0) {\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(Decimal.log(player.antPoints.add(10), 10), player.researches[177]))\n    }\n\n    if (player.currentChallenge.ascension === 12) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.5)\n    }\n    if (player.currentChallenge.ascension === 13) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.23)\n    }\n    if (player.currentChallenge.ascension === 14) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.2)\n    }\n\n    if (player.currentChallenge.ascension !== 15) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 1 - 0.9 / 90 * Math.min(99, sumContents(player.usedCorruptions)))\n    } else { // C15 used to have 9 corruptions set to 11, which above would provide a power of 0.01. Now it's hardcoded this way.\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.01)\n    }\n\n    G['globalAntMult'] = Decimal.pow(G['globalAntMult'], G['extinctionMultiplier'][player.usedCorruptions[7]])\n    G['globalAntMult'] = G['globalAntMult'].times(G['challenge15Rewards'].antSpeed)\n    //V2.5.0: Moved ant shop upgrade as 'uncorruptable'\n    G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1.2, player.shopUpgrades.antSpeed));\n\n\n    if (player.platonicUpgrades[12] > 0) {\n        G['globalAntMult'] = G['globalAntMult'].times(Decimal.pow(1 + 1 / 100 * player.platonicUpgrades[12], sumContents(player.highestchallengecompletions)))\n    }\n    if (player.currentChallenge.ascension === 15 && player.platonicUpgrades[10] > 0) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 1.25)\n    }\n    if (player.achievements[274] > 0) {\n        G['globalAntMult'] = G['globalAntMult'].times(4.44)\n    }\n\n    if (player.usedCorruptions[7] >= 14) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.02)\n    }\n    if (player.usedCorruptions[7] >= 15) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.02)\n    }\n    if (player.usedCorruptions[7] >= 16) {\n        G['globalAntMult'] = Decimal.pow(G['globalAntMult'], 0.02)\n    }\n\n    if (player.octeractUpgrades.octeractStarter.getEffect().bonus) {\n        G['globalAntMult'] = G['globalAntMult'].times(100000)\n    }\n\n    if (player.highestSingularityCount >= 30) {\n        G['globalAntMult'] = G['globalAntMult'].times(1000)\n    }\n\n    if (player.highestSingularityCount >= 70) {\n        G['globalAntMult'] = G['globalAntMult'].times(1000)\n    }\n\n    if (player.highestSingularityCount >= 100) {\n        G['globalAntMult'] = G['globalAntMult'].times(1e6)\n    }\n}\n\nexport const createAnts = (dt: number): void => {\n    updateAntMultipliers();\n    G['antEightProduce'] = player.eighthGeneratedAnts.add(player.eighthOwnedAnts).times(player.eighthProduceAnts).times(G['globalAntMult'])\n    G['antSevenProduce'] = player.seventhGeneratedAnts.add(player.seventhOwnedAnts).times(player.seventhProduceAnts).times(G['globalAntMult'])\n    G['antSixProduce'] = player.sixthGeneratedAnts.add(player.sixthOwnedAnts).times(player.sixthProduceAnts).times(G['globalAntMult'])\n    G['antFiveProduce'] = player.fifthGeneratedAnts.add(player.fifthOwnedAnts).times(player.fifthProduceAnts).times(G['globalAntMult'])\n    G['antFourProduce'] = player.fourthGeneratedAnts.add(player.fourthOwnedAnts).times(player.fourthProduceAnts).times(G['globalAntMult'])\n    G['antThreeProduce'] = player.thirdGeneratedAnts.add(player.thirdOwnedAnts).times(player.thirdProduceAnts).times(G['globalAntMult'])\n    G['antTwoProduce'] = player.secondGeneratedAnts.add(player.secondOwnedAnts).times(player.secondProduceAnts).times(G['globalAntMult'])\n    G['antOneProduce'] = player.firstGeneratedAnts.add(player.firstOwnedAnts).times(player.firstProduceAnts).times(G['globalAntMult'])\n    player.seventhGeneratedAnts = player.seventhGeneratedAnts.add(G['antEightProduce'].times(dt / 1))\n    player.sixthGeneratedAnts = player.sixthGeneratedAnts.add(G['antSevenProduce'].times(dt / 1))\n    player.fifthGeneratedAnts = player.fifthGeneratedAnts.add(G['antSixProduce'].times(dt / 1))\n    player.fourthGeneratedAnts = player.fourthGeneratedAnts.add(G['antFiveProduce'].times(dt / 1))\n    player.thirdGeneratedAnts = player.thirdGeneratedAnts.add(G['antFourProduce'].times(dt / 1))\n    player.secondGeneratedAnts = player.secondGeneratedAnts.add(G['antThreeProduce'].times(dt / 1))\n    player.firstGeneratedAnts = player.firstGeneratedAnts.add(G['antTwoProduce'].times(dt / 1))\n\n    player.antPoints = player.antPoints.add(G['antOneProduce'].times(dt / 1))\n}\n\nexport const resetCurrency = (): void => {\n    let prestigePow = 0.5 + CalcECC('transcend', player.challengecompletions[5]) / 100\n    let transcendPow = 0.03\n\n    // Calculates the conversion exponent for resets (Challenges 5 and 10 reduce the exponent accordingly).\n    if (player.currentChallenge.transcension === 5) {\n        prestigePow = 0.01 / (1 + player.challengecompletions[5]);\n        transcendPow = 0.001;\n    }\n    if (player.currentChallenge.reincarnation === 10) {\n        prestigePow = (1e-4) / (1 + player.challengecompletions[10]);\n        transcendPow = 0.001;\n    }\n    prestigePow *= G['deflationMultiplier'][player.usedCorruptions[6]]\n    //Prestige Point Formulae\n    G['prestigePointGain'] = Decimal.floor(Decimal.pow(player.coinsThisPrestige.dividedBy(1e12), prestigePow));\n    if (player.upgrades[16] > 0.5 && player.currentChallenge.transcension !== 5 && player.currentChallenge.reincarnation !== 10) {\n        G['prestigePointGain'] = G['prestigePointGain'].times(Decimal.min(Decimal.pow(10, 1e33), Decimal.pow(G['acceleratorEffect'], 1 / 3 * G['deflationMultiplier'][player.usedCorruptions[6]])));\n    }\n\n    //Transcend Point Formulae\n    G['transcendPointGain'] = Decimal.floor(Decimal.pow(player.coinsThisTranscension.dividedBy(1e100), transcendPow));\n    if (player.upgrades[44] > 0.5 && player.currentChallenge.transcension !== 5 && player.currentChallenge.reincarnation !== 10) {\n        G['transcendPointGain'] = G['transcendPointGain'].times(Decimal.min(1e6, Decimal.pow(1.01, player.transcendCount)));\n    }\n\n    //Reincarnation Point Formulae\n    G['reincarnationPointGain'] = Decimal.floor(Decimal.pow(player.transcendShards.dividedBy(1e300), 0.01));\n    if (player.currentChallenge.reincarnation !== 0) {\n        G['reincarnationPointGain'] = Decimal.pow(G['reincarnationPointGain'], 0.01)\n    }\n    if (player.achievements[50] === 1) {\n        G['reincarnationPointGain'] = G['reincarnationPointGain'].times(2)\n    }\n    if (player.upgrades[65] > 0.5) {\n        G['reincarnationPointGain'] = G['reincarnationPointGain'].times(5)\n    }\n    if (player.currentChallenge.ascension === 12) {\n        G['reincarnationPointGain'] = new Decimal('0')\n    }\n}\n\nexport const resetCheck = async (i: resetNames, manual = true, leaving = false): Promise<void> => {\n    if (i === 'prestige') {\n        if (player.coinsThisPrestige.gte(1e16) || G['prestigePointGain'].gte(100)) {\n            if (manual) {\n                void resetConfirmation('prestige');\n            } else {\n                resetachievementcheck(1);\n                reset('prestige');\n            }\n        }\n    }\n    if (i === 'transcension') {\n        if ((player.coinsThisTranscension.gte(1e100) || G['transcendPointGain'].gte(0.5)) && player.currentChallenge.transcension === 0) {\n            if (manual) {\n                void resetConfirmation('transcend');\n            }\n            if (!manual) {\n                resetachievementcheck(2);\n                reset('transcension');\n            }\n        }\n    }\n    if (i === 'transcensionChallenge' && player.currentChallenge.transcension !== 0) {\n        const q = player.currentChallenge.transcension;\n        const maxCompletions = getMaxChallenges(q);\n        const reqCheck = (comp: number) => player.coinsThisTranscension.gte(challengeRequirement(q, comp, q));\n        if (reqCheck(player.challengecompletions[q]) && player.challengecompletions[q] < maxCompletions) {\n            let maxInc = 1;\n            if (player.shopUpgrades.instantChallenge > 0) {\n                maxInc = 10;\n            }\n            if (player.shopUpgrades.instantChallenge2 > 0) {\n                maxInc += player.highestSingularityCount;\n            }\n            if (player.currentChallenge.ascension === 13) {\n                maxInc = 1;\n            }\n            let counter = 0;\n            let comp = player.challengecompletions[q];\n            while (counter < maxInc) {\n                if (reqCheck(comp) && comp < maxCompletions) {\n                    comp++;\n                }\n                counter++;\n            }\n            player.challengecompletions[q] = comp;\n            challengeDisplay(q, false);\n            updateChallengeLevel(q);\n        }\n        if (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\n            while (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\n                player.highestchallengecompletions[q] += 1;\n                highestChallengeRewards(q, player.highestchallengecompletions[q])\n            }\n            calculateCubeBlessings();\n        }\n        challengeachievementcheck(q);\n        if (!player.retrychallenges || manual || (player.autoChallengeRunning && player.challengecompletions[q] >= maxCompletions)) {\n            toggleAutoChallengeModeText('ENTER');\n            player.currentChallenge.transcension = 0;\n            updateChallengeDisplay();\n        }\n        if (player.shopUpgrades.instantChallenge === 0 || leaving) {\n            reset('transcensionChallenge', false, 'leaveChallenge');\n            player.transcendCount -= 1;\n        }\n    }\n\n    if (i === 'reincarnation') {\n        if (G['reincarnationPointGain'].gt(0.5) && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\n            if (manual) {\n                void resetConfirmation('reincarnate');\n            }\n            if (!manual) {\n                resetachievementcheck(3);\n                reset('reincarnation');\n            }\n        }\n    }\n    if (i === 'reincarnationChallenge' && player.currentChallenge.reincarnation !== 0) {\n        const q = player.currentChallenge.reincarnation;\n        const maxCompletions = getMaxChallenges(q);\n        const reqCheck = (comp: number) => {\n            if (q <= 8) {\n                return player.transcendShards.gte(challengeRequirement(q, comp, q))\n            } else { // challenges 9 and 10\n                return player.coins.gte(challengeRequirement(q, comp, q))\n            }\n        }\n        if (reqCheck(player.challengecompletions[q]) && player.challengecompletions[q] < maxCompletions) {\n            let maxInc = 1;\n            if (player.shopUpgrades.instantChallenge > 0) {\n                maxInc = 10;\n            }\n            if (player.shopUpgrades.instantChallenge2 > 0) {\n                maxInc += player.highestSingularityCount;\n            }\n            if (player.currentChallenge.ascension === 13) {\n                maxInc = 1;\n            }\n            let counter = 0;\n            let comp = player.challengecompletions[q];\n            while (counter < maxInc) {\n                if (reqCheck(comp) && comp < maxCompletions) {\n                    comp++;\n                }\n                counter++;\n            }\n            player.challengecompletions[q] = comp;\n            challengeDisplay(q, false);\n            updateChallengeLevel(q);\n        }\n        if (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\n            while (player.challengecompletions[q] > player.highestchallengecompletions[q]) {\n                player.highestchallengecompletions[q] += 1;\n                highestChallengeRewards(q, player.highestchallengecompletions[q])\n            }\n            calculateHypercubeBlessings();\n            calculateTesseractBlessings();\n            calculateCubeBlessings();\n        }\n        challengeachievementcheck(q);\n        if (!player.retrychallenges || manual || (player.autoChallengeRunning && player.challengecompletions[q] >= maxCompletions)) {\n            toggleAutoChallengeModeText('ENTER');\n            player.currentChallenge.reincarnation = 0;\n            if (player.shopUpgrades.instantChallenge > 0) {\n                for (let i = 1; i <= 5; i++) {\n                    player.challengecompletions[i] = player.highestchallengecompletions[i];\n                }\n            }\n            updateChallengeDisplay();\n            calculateRuneLevels();\n            calculateAnts();\n        }\n        if (player.shopUpgrades.instantChallenge === 0 || leaving) {\n            reset('reincarnationChallenge', false, 'leaveChallenge');\n            player.reincarnationCount -= 1;\n        }\n    }\n\n    if (i === 'ascension') {\n        if (player.achievements[141] > 0 && (player.toggles[31] === false || player.challengecompletions[10] > 0)) {\n            if (manual) {\n                void resetConfirmation('ascend');\n            }\n        }\n    }\n\n    if (i === 'ascensionChallenge' && player.currentChallenge.ascension !== 0) {\n        let conf = true\n        if (manual) {\n            if (player.challengecompletions[11] === 0 || player.toggles[31]) {\n                conf = await Confirm(i18next.t('main.exitAscensionChallenge'))\n            }\n        }\n        if (!conf) {\n            return;\n        }\n        const a = player.currentChallenge.ascension;\n        const maxCompletions = getMaxChallenges(a);\n\n        if (a !== 0 && a < 15) {\n            if (player.challengecompletions[10] >= challengeRequirement(a, player.challengecompletions[a], a) && player.challengecompletions[a] < maxCompletions) {\n                player.challengecompletions[a] += 1;\n                updateChallengeLevel(a);\n                challengeDisplay(a, false);\n            }\n            challengeachievementcheck(a, true);\n        }\n        if (a === 15) {\n            const c15SM = challenge15ScoreMultiplier();\n            if (player.coins.gte(challengeRequirement(a, player.challengecompletions[a], a)) && player.challengecompletions[a] < maxCompletions) {\n                player.challengecompletions[a] += 1;\n                updateChallengeLevel(a);\n                challengeDisplay(a, false);\n            }\n            if ((manual || leaving || player.shopUpgrades.challenge15Auto > 0) && player.usedCorruptions.slice(2, 10).every((a) => a === 11)) {\n                if (player.coins.gte(Decimal.pow(10, player.challenge15Exponent / c15SM))) {\n                    player.challenge15Exponent = Decimal.log(player.coins.add(1), 10) * c15SM;\n                    c15RewardUpdate();\n                }\n            }\n        }\n\n        if (player.challengecompletions[a] > player.highestchallengecompletions[a]) {\n            player.highestchallengecompletions[a] += 1;\n            player.wowHypercubes.add(1);\n            if (player.highestchallengecompletions[a] >= maxCompletions) {\n                leaving = true;\n            }\n        }\n\n        if (!player.retrychallenges || manual || leaving) {\n            if (!(!manual && (autoAscensionChallengeSweepUnlock() || !player.autoChallengeRunning) // If not autochallenge, don't reset\n                             && player.autoAscend && player.challengecompletions[11] > 0\n                             && player.cubeUpgrades[10] > 0)) {\n                player.currentChallenge.ascension = 0;\n                updateChallengeDisplay();\n            }\n        }\n\n        if ((player.shopUpgrades.instantChallenge2 === 0 && a !== 15) || manual) {\n            reset('ascensionChallenge', false);\n        }\n    }\n\n    if (i === 'singularity') {\n        if (player.runelevels[6] === 0) {\n            return Alert(i18next.t('main.noAntiquity'))\n        }\n\n        const thankSing = 300;\n\n        if (player.insideSingularityChallenge) {\n            return Alert(i18next.t('main.insideSingularityChallenge'))\n        }\n\n        if (player.singularityCount >= thankSing) {\n            return Alert(i18next.t('main.gameBeat'))\n        }\n\n        let confirmed = false;\n        const nextSingularityNumber = player.singularityCount + 1 + getFastForwardTotalMultiplier();\n\n        if (!player.toggles[33] && player.singularityCount > 0) {\n            confirmed = await Confirm(i18next.t('main.singularityConfirm0', {\n                x: format(nextSingularityNumber),\n                y: format(calculateGoldenQuarkGain(), 2, true)\n            }))\n        } else {\n            await Alert(i18next.t('main.singularityMessage1', { x: format(player.singularityCount) }))\n            await Alert(i18next.t('main.singularityMessage2'))\n            await Alert(i18next.t('main.singularityMessage3'))\n            await Alert(i18next.t('main.singularityMessage4', {\n                x: format(nextSingularityNumber),\n                y: format(calculateGoldenQuarkGain(), 2, true),\n                z: format(player.worlds.BONUS)\n            }))\n            await Alert(i18next.t('main.singularityMessage5'))\n\n            confirmed = await Confirm(i18next.t('main.singularityConfirm1'))\n            if (confirmed) {\n                confirmed = await Confirm(i18next.t('main.singularityConfirm2'))\n            }\n            if (confirmed) {\n                confirmed = await Confirm(i18next.t('main.singularityConfirm3'))\n            }\n        }\n\n        if (!confirmed) {\n            return Alert(i18next.t('main.singularityCancelled'))\n        } else {\n            await singularity();\n            await saveSynergy();\n            return Alert(i18next.t('main.welcomeToSingularity', { x: format(player.singularityCount) }))\n        }\n    }\n}\n\nexport const resetConfirmation = async (i: string): Promise<void> => {\n    if (i === 'prestige') {\n        if (player.toggles[28] === true) {\n            const r = await Confirm(i18next.t('main.prestigePrompt'))\n            if (r === true) {\n                resetachievementcheck(1);\n                reset('prestige');\n            }\n        } else {\n            resetachievementcheck(1);\n            reset('prestige');\n        }\n    }\n    if (i === 'transcend') {\n        if (player.toggles[29] === true) {\n            const z = await Confirm(i18next.t('main.transcendPrompt'))\n            if (z === true) {\n                resetachievementcheck(2);\n                reset('transcension');\n            }\n        } else {\n            resetachievementcheck(2);\n            reset('transcension');\n        }\n    }\n    if (i === 'reincarnate') {\n        if (player.currentChallenge.ascension !== 12) {\n            if (player.toggles[30] === true) {\n                const z = await Confirm(i18next.t('main.reincarnatePrompt'))\n                if (z === true) {\n                    resetachievementcheck(3);\n                    reset('reincarnation');\n                }\n            } else {\n                resetachievementcheck(3);\n                reset('reincarnation');\n            }\n        }\n    }\n    if (i === 'ascend') {\n        const z = !player.toggles[31] ||\n                  await Confirm(i18next.t('main.ascendPrompt'))\n        if (z) {\n            reset('ascension');\n        }\n    }\n}\n\nexport const updateAll = (): void => {\n    G['uFourteenMulti'] = new Decimal(1);\n    G['uFifteenMulti'] = new Decimal(1);\n\n    if (player.upgrades[14] > 0.5) {\n        G['uFourteenMulti'] = Decimal.pow(1.15, G['freeAccelerator'])\n    }\n    if (player.upgrades[15] > 0.5) {\n        G['uFifteenMulti'] = Decimal.pow(1.15, G['freeAccelerator'])\n    }\n\n    if (player.unlocks.coinone === false && player.coins.gte(500)) {\n        player.unlocks.coinone = true;\n        revealStuff();\n    }\n    if (player.unlocks.cointwo === false && player.coins.gte(10000)) {\n        player.unlocks.cointwo = true;\n        revealStuff();\n    }\n    if (player.unlocks.cointhree === false && player.coins.gte(100000)) {\n        player.unlocks.cointhree = true;\n        revealStuff();\n    }\n    if (player.unlocks.coinfour === false && player.coins.gte(4e6)) {\n        player.unlocks.coinfour = true;\n        revealStuff();\n    }\n    if (player.achievements[169] === 0 && player.antPoints.gte(3)) {\n        achievementaward(169)\n    }\n    if (player.achievements[170] === 0 && player.antPoints.gte(1e5)) {\n        achievementaward(170)\n    }\n    if (player.achievements[171] === 0 && player.antPoints.gte(666666666)) {\n        achievementaward(171)\n    }\n    if (player.achievements[172] === 0 && player.antPoints.gte(1e20)) {\n        achievementaward(172)\n    }\n    if (player.achievements[173] === 0 && player.antPoints.gte(1e40)) {\n        achievementaward(173)\n    }\n    if (player.achievements[174] === 0 && player.antPoints.gte('1e500')) {\n        achievementaward(174)\n    }\n    if (player.achievements[175] === 0 && player.antPoints.gte('1e2500')) {\n        achievementaward(175)\n    }\n\n    if (player.researches[200] >= 1e5 && player.achievements[250] < 1) {\n        achievementaward(250)\n    }\n    if (player.cubeUpgrades[50] >= 1e5 && player.achievements[251] < 1) {\n        achievementaward(251)\n    }\n\n    //Autobuy \"Upgrades\" Tab\n    autoUpgrades();\n\n    //Autobuy \"Building\" Tab\n\n    if (player.toggles[1] === true && player.upgrades[81] === 1 && player.coins.gte(player.firstCostCoin)) {\n        buyMax(1, 'Coin')\n    }\n    if (player.toggles[2] === true && player.upgrades[82] === 1 && player.coins.gte(player.secondCostCoin)) {\n        buyMax(2, 'Coin')\n    }\n    if (player.toggles[3] === true && player.upgrades[83] === 1 && player.coins.gte(player.thirdCostCoin)) {\n        buyMax(3, 'Coin')\n    }\n    if (player.toggles[4] === true && player.upgrades[84] === 1 && player.coins.gte(player.fourthCostCoin)) {\n        buyMax(4, 'Coin')\n    }\n    if (player.toggles[5] === true && player.upgrades[85] === 1 && player.coins.gte(player.fifthCostCoin)) {\n        buyMax(5, 'Coin')\n    }\n    if (player.toggles[6] === true && player.upgrades[86] === 1 && player.coins.gte(player.acceleratorCost)) {\n        buyAccelerator(true);\n    }\n    if (player.toggles[7] === true && player.upgrades[87] === 1 && player.coins.gte(player.multiplierCost)) {\n        buyMultiplier(true);\n    }\n    if (player.toggles[8] === true && player.upgrades[88] === 1 && player.prestigePoints.gte(player.acceleratorBoostCost)) {\n        boostAccelerator(true);\n    }\n\n    //Autobuy \"Prestige\" Tab\n\n    if (player.toggles[10] === true && player.achievements[78] === 1 && player.prestigePoints.gte(player.firstCostDiamonds)) {\n        buyMax(1, 'Diamonds')\n    }\n    if (player.toggles[11] === true && player.achievements[85] === 1 && player.prestigePoints.gte(player.secondCostDiamonds)) {\n        buyMax(2, 'Diamonds')\n    }\n    if (player.toggles[12] === true && player.achievements[92] === 1 && player.prestigePoints.gte(player.thirdCostDiamonds)) {\n        buyMax(3, 'Diamonds')\n    }\n    if (player.toggles[13] === true && player.achievements[99] === 1 && player.prestigePoints.gte(player.fourthCostDiamonds)) {\n        buyMax(4, 'Diamonds')\n    }\n    if (player.toggles[14] === true && player.achievements[106] === 1 && player.prestigePoints.gte(player.fifthCostDiamonds)) {\n        buyMax(5, 'Diamonds')\n    }\n\n    let c = 0;\n    c += Math.floor(G['rune3level'] / 16 * G['effectiveLevelMult']) * 100 / 100\n    if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\n        c += 10\n    }\n    if (player.achievements[79] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][0] + G['crystalUpgradeCostIncrement'][0] * Math.floor(Math.pow(player.crystalUpgrades[0] - 0.5 - c, 2) / 2))))) {\n        buyCrystalUpgrades(1, true)\n    }\n    if (player.achievements[86] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][1] + G['crystalUpgradeCostIncrement'][1] * Math.floor(Math.pow(player.crystalUpgrades[1] - 0.5 - c, 2) / 2))))) {\n        buyCrystalUpgrades(2, true)\n    }\n    if (player.achievements[93] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][2] + G['crystalUpgradeCostIncrement'][2] * Math.floor(Math.pow(player.crystalUpgrades[2] - 0.5 - c, 2) / 2))))) {\n        buyCrystalUpgrades(3, true)\n    }\n    if (player.achievements[100] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][3] + G['crystalUpgradeCostIncrement'][3] * Math.floor(Math.pow(player.crystalUpgrades[3] - 0.5 - c, 2) / 2))))) {\n        buyCrystalUpgrades(4, true)\n    }\n    if (player.achievements[107] > 0.5 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][4] + G['crystalUpgradeCostIncrement'][4] * Math.floor(Math.pow(player.crystalUpgrades[4] - 0.5 - c, 2) / 2))))) {\n        buyCrystalUpgrades(5, true)\n    }\n\n    //Autobuy \"Transcension\" Tab\n\n    if (player.toggles[16] === true && player.upgrades[94] === 1 && player.transcendPoints.gte(player.firstCostMythos)) {\n        buyMax(1, 'Mythos')\n    }\n    if (player.toggles[17] === true && player.upgrades[95] === 1 && player.transcendPoints.gte(player.secondCostMythos)) {\n        buyMax(2, 'Mythos')\n    }\n    if (player.toggles[18] === true && player.upgrades[96] === 1 && player.transcendPoints.gte(player.thirdCostMythos)) {\n        buyMax(3, 'Mythos')\n    }\n    if (player.toggles[19] === true && player.upgrades[97] === 1 && player.transcendPoints.gte(player.fourthCostMythos)) {\n        buyMax(4, 'Mythos')\n    }\n    if (player.toggles[20] === true && player.upgrades[98] === 1 && player.transcendPoints.gte(player.fifthCostMythos)) {\n        buyMax(5, 'Mythos')\n    }\n\n    //Autobuy \"Reincarnation\" Tab\n\n    if (player.toggles[22] === true && player.cubeUpgrades[7] === 1 && player.reincarnationPoints.gte(player.firstCostParticles)) {\n        buyParticleBuilding(1, true)\n    }\n    if (player.toggles[23] === true && player.cubeUpgrades[7] === 1 && player.reincarnationPoints.gte(player.secondCostParticles)) {\n        buyParticleBuilding(2, true)\n    }\n    if (player.toggles[24] === true && player.cubeUpgrades[7] === 1 && player.reincarnationPoints.gte(player.thirdCostParticles)) {\n        buyParticleBuilding(3, true)\n    }\n    if (player.toggles[25] === true && player.cubeUpgrades[7] === 1 && player.reincarnationPoints.gte(player.fourthCostParticles)) {\n        buyParticleBuilding(4, true)\n    }\n    if (player.toggles[26] === true && player.cubeUpgrades[7] === 1 && player.reincarnationPoints.gte(player.fifthCostParticles)) {\n        buyParticleBuilding(5, true)\n    }\n\n    //Autobuy \"ascension\" tab\n    if (player.researches[175] > 0) {\n        for (let i = 1; i <= 10; i++) {\n            if (player.ascendShards.gte(getConstUpgradeMetadata(i).pop()!)) {\n                buyConstantUpgrades(i, true);\n            }\n        }\n    }\n\n    //Autobuy tesseract buildings (Mode: AMOUNT)\n    if (player.researches[190] > 0 && player.tesseractAutoBuyerToggle === 1 && player.resettoggle4 < 2) {\n        const ownedBuildings: TesseractBuildings = [null, null, null, null, null];\n        for (let i = 1; i <= 5; i++) {\n            if (player.autoTesseracts[i]) {\n                ownedBuildings[i-1] = player[`ascendBuilding${i as OneToFive}` as const]['owned'];\n            }\n        }\n        const budget = Number(player.wowTesseracts) - player.tesseractAutoBuyerAmount;\n        const buyToBuildings = calculateTessBuildingsInBudget(ownedBuildings, budget);\n        // Prioritise buying buildings from highest tier to lowest,\n        // in case there are any off-by-ones or floating point errors.\n        for (let i = 5; i >= 1; i--) {\n            const buyFrom = ownedBuildings[i-1];\n            const buyTo = buyToBuildings[i-1];\n            if (buyFrom !== null && buyTo !== null && buyTo !== buyFrom) {\n                buyTesseractBuilding(i as OneToFive, buyTo - buyFrom);\n            }\n        }\n    }\n\n    // Talismans\n    if (player.researches[130] > 0 || player.researches[135] > 0) {\n        const talismansUnlocked = [\n            player.achievements[119] > 0,\n            player.achievements[126] > 0,\n            player.achievements[133] > 0,\n            player.achievements[140] > 0,\n            player.achievements[147] > 0,\n                player.antUpgrades[11]! > 0 || player.ascensionCount > 0,\n                player.shopUpgrades.shopTalisman > 0\n        ];\n        let upgradedTalisman = false;\n\n        // First, we need to enhance all of the talismans. Then, we can fortify all of the talismans.\n        // If we were to do this in one loop, the players resources would be drained on individual expensive levels\n        // of early talismans before buying important enhances for the later ones. This results in drastically\n        // reduced overall gains when talisman resources are scarce.\n        if (player.autoEnhanceToggle && player.researches[135] > 0) {\n            for (let i = 0; i < talismansUnlocked.length; ++i) {\n                if (talismansUnlocked[i] && player.talismanRarity[i] < 6) {\n                    upgradedTalisman = buyTalismanEnhance(i, true) || upgradedTalisman;\n                }\n            }\n        }\n\n        if (player.autoFortifyToggle && player.researches[130] > 0) {\n            for (let i = 0; i < talismansUnlocked.length; ++i) {\n                const maxTalismanLevel = calculateMaxTalismanLevel(i);\n                if (talismansUnlocked[i] && player.talismanLevels[i] < maxTalismanLevel) {\n                    upgradedTalisman = buyTalismanLevels(i, true) || upgradedTalisman;\n                }\n            }\n        }\n\n        // Recalculate talisman-related upgrades and display on success\n        if (upgradedTalisman) {\n            updateTalismanInventory();\n            calculateRuneLevels();\n        }\n    }\n\n    //Generation\n    if (player.upgrades[101] > 0.5) {\n        player.fourthGeneratedCoin = player.fourthGeneratedCoin.add((player.fifthGeneratedCoin.add(player.fifthOwnedCoin)).times(G['uFifteenMulti']).times(G['generatorPower']));\n    }\n    if (player.upgrades[102] > 0.5) {\n        player.thirdGeneratedCoin = player.thirdGeneratedCoin.add((player.fourthGeneratedCoin.add(player.fourthOwnedCoin)).times(G['uFourteenMulti']).times(G['generatorPower']));\n    }\n    if (player.upgrades[103] > 0.5) {\n        player.secondGeneratedCoin = player.secondGeneratedCoin.add((player.thirdGeneratedCoin.add(player.thirdOwnedCoin)).times(G['generatorPower']));\n    }\n    if (player.upgrades[104] > 0.5) {\n        player.firstGeneratedCoin = player.firstGeneratedCoin.add((player.secondGeneratedCoin.add(player.secondOwnedCoin)).times(G['generatorPower']));\n    }\n    if (player.upgrades[105] > 0.5) {\n        player.fifthGeneratedCoin = player.fifthGeneratedCoin.add(player.firstOwnedCoin);\n    }\n    let p = 1;\n    p += 1 / 100 * (player.achievements[71] + player.achievements[72] + player.achievements[73] + player.achievements[74] + player.achievements[75] + player.achievements[76] + player.achievements[77])\n\n    let a = 0;\n    if (player.upgrades[106] > 0.5) {\n        a += 0.10\n    }\n    if (player.upgrades[107] > 0.5) {\n        a += 0.15\n    }\n    if (player.upgrades[108] > 0.5) {\n        a += 0.25\n    }\n    if (player.upgrades[109] > 0.5) {\n        a += 0.25\n    }\n    if (player.upgrades[110] > 0.5) {\n        a += 0.25\n    }\n    a *= p\n\n    let b = 0;\n    if (player.upgrades[111] > 0.5) {\n        b += 0.08\n    }\n    if (player.upgrades[112] > 0.5) {\n        b += 0.08\n    }\n    if (player.upgrades[113] > 0.5) {\n        b += 0.08\n    }\n    if (player.upgrades[114] > 0.5) {\n        b += 0.08\n    }\n    if (player.upgrades[115] > 0.5) {\n        b += 0.08\n    }\n    b *= p\n\n    c = 0;\n    if (player.upgrades[116] > 0.5) {\n        c += 0.05\n    }\n    if (player.upgrades[117] > 0.5) {\n        c += 0.05\n    }\n    if (player.upgrades[118] > 0.5) {\n        c += 0.05\n    }\n    if (player.upgrades[119] > 0.5) {\n        c += 0.05\n    }\n    if (player.upgrades[120] > 0.5) {\n        c += 0.05\n    }\n    c *= p\n\n    if (a !== 0) {\n        player.fifthGeneratedCoin = player.fifthGeneratedCoin.add(Decimal.pow(player.firstGeneratedDiamonds.add(player.firstOwnedDiamonds).add(1), a))\n    }\n    if (b !== 0) {\n        player.fifthGeneratedDiamonds = player.fifthGeneratedDiamonds.add(Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), b))\n    }\n    if (c !== 0) {\n        player.fifthGeneratedMythos = player.fifthGeneratedMythos.add(Decimal.pow(player.firstGeneratedParticles.add(player.firstOwnedParticles).add(1), c))\n    }\n\n    if (player.runeshards > player.maxofferings) {\n        player.maxofferings = player.runeshards;\n    }\n    if (player.researchPoints > player.maxobtainium) {\n        player.maxobtainium = player.researchPoints;\n    }\n\n    if (isNaN(player.runeshards)) {\n        player.runeshards = 0;\n    }\n    if (player.runeshards > 1e300) {\n        player.runeshards = 1e300;\n    }\n    if (isNaN(player.researchPoints)) {\n        player.researchPoints = 0;\n    }\n    if (player.researchPoints > 1e300) {\n        player.researchPoints = 1e300;\n    }\n\n    G['effectiveLevelMult'] = 1;\n    G['effectiveLevelMult'] *= (1 + player.researches[4] / 10 * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14]))) //Research 1x4\n    G['effectiveLevelMult'] *= (1 + player.researches[21] / 100) //Research 2x6\n    G['effectiveLevelMult'] *= (1 + player.researches[90] / 100) //Research 4x15\n    G['effectiveLevelMult'] *= (1 + player.researches[131] / 200) //Research 6x6\n    G['effectiveLevelMult'] *= (1 + player.researches[161] / 200 * 3 / 5) //Research 7x11\n    G['effectiveLevelMult'] *= (1 + player.researches[176] / 200 * 2 / 5) //Research 8x1\n    G['effectiveLevelMult'] *= (1 + player.researches[191] / 200 * 1 / 5) //Research 8x16\n    G['effectiveLevelMult'] *= (1 + player.researches[146] / 200 * 4 / 5) //Research 6x21\n    G['effectiveLevelMult'] *= (1 + 0.01 * Math.log(player.talismanShards + 1) / Math.log(4) * Math.min(1, player.constantUpgrades[9]))\n    G['effectiveLevelMult'] *= G['challenge15Rewards'].runeBonus\n\n    G['optimalOfferingTimer'] = 600 + 30 * player.researches[85] + 0.4 * G['rune5level'] + 120 * player.shopUpgrades.offeringEX;\n    G['optimalObtainiumTimer'] = 3600 + 120 * player.shopUpgrades.obtainiumEX;\n    autoBuyAnts()\n\n    if (player.autoAscend && player.challengecompletions[11] > 0 && player.cubeUpgrades[10] > 0 && player.currentChallenge.reincarnation !== 10) {\n        let ascension = false;\n        if (player.autoAscendMode === 'c10Completions' && player.challengecompletions[10] >= Math.max(1, player.autoAscendThreshold)) {\n            ascension = true;\n        }\n        if (player.autoAscendMode === 'realAscensionTime' && player.ascensionCounterRealReal >= Math.max(0.1, player.autoAscendThreshold)) {\n            ascension = true;\n        }\n        if (ascension === true && player.challengecompletions[10] > 0) {\n            // Auto Ascension and Auto Challenge Sweep enables rotation of the Ascension Challenge\n            if (autoAscensionChallengeSweepUnlock() && player.currentChallenge.ascension !== 0 && player.retrychallenges && player.researches[150] === 1 && player.autoChallengeRunning) {\n                let nextChallenge = getNextChallenge(player.currentChallenge.ascension + 1, false, 11, 15);\n                if (nextChallenge <= 15 && player.currentChallenge.ascension !== nextChallenge) {\n                    void resetCheck('ascensionChallenge', false, true);\n                    player.currentChallenge.ascension = nextChallenge;\n                    reset('ascensionChallenge', false);\n                } else {\n                    nextChallenge = getNextChallenge(player.currentChallenge.ascension + 1, true, 11, 15);\n                    void resetCheck('ascensionChallenge', false, true);\n                    player.currentChallenge.ascension = nextChallenge <= 15 ? nextChallenge : 0;\n                    reset('ascensionChallenge', false);\n                }\n            } else {\n                if (player.currentChallenge.ascension !== 0) {\n                    void resetCheck('ascensionChallenge', false, true);\n                    reset('ascensionChallenge', false);\n                } else {\n                    reset('ascension', false);\n                }\n            }\n        }\n    }\n\n    let metaData = null;\n    if (player.researches[175] > 0) {\n        for (let i = 1; i <= 10; i++) {\n            metaData = getConstUpgradeMetadata(i)\n            if (player.ascendShards.gte(metaData[1])) {\n                buyConstantUpgrades(i, true);\n            }\n        }\n    }\n\n    const reductionValue = getReductionValue();\n    if (reductionValue !== G['prevReductionValue']) {\n        G['prevReductionValue'] = reductionValue;\n        const resources = ['Coin', 'Diamonds', 'Mythos'] as const;\n\n        for (let res = 0; res < resources.length; ++res) {\n            const resource = resources[res];\n            for (let ord = 0; ord < 5; ++ord) {\n                const num = G['ordinals'][ord as ZeroToFour];\n                player[`${num}Cost${resource}` as const] = getCost(ord+1 as OneToFive, resource, player[`${num}Owned${resource}` as const] + 1, reductionValue);\n            }\n        }\n\n        for (let i = 0; i <= 4; i++) {\n            const particleOriginalCost = [1, 1e2, 1e4, 1e8, 1e16];\n            const num = G['ordinals'][i as ZeroToFour];\n            const buyTo = player[`${num}OwnedParticles` as const] + 1\n            player[`${num}CostParticles` as const] = new Decimal(Decimal.pow(2, buyTo - 1).times(Decimal.pow(1.001, Math.max(0, (buyTo - 325000)) * Math.max(0, (buyTo - 325000) + 1) / 2))).times(particleOriginalCost[i])\n        }\n    }\n\n    // Challenge 15 autoupdate\n    if (player.shopUpgrades.challenge15Auto > 0 && player.currentChallenge.ascension === 15 && player.usedCorruptions.slice(2, 10).every((a) => a === 11)) {\n        const c15SM = challenge15ScoreMultiplier();\n        if (player.coins.gte(Decimal.pow(10, player.challenge15Exponent / c15SM))) {\n            player.challenge15Exponent = Decimal.log(player.coins.add(1), 10) * c15SM;\n            c15RewardUpdate();\n        }\n    }\n}\n\nexport const fastUpdates = (): void => {\n    updateAll();\n    htmlInserts();\n}\n\nexport const slowUpdates = (): void => {\n    buttoncolorchange();\n    buildingAchievementCheck();\n}\n\nexport const constantIntervals = (): void => {\n    setInterval(saveSynergy, 5000);\n    setInterval(slowUpdates, 200);\n    setInterval(fastUpdates, 50);\n\n    if (!G['timeWarp']) {\n        exitOffline();\n    }\n}\n\nlet lastUpdate = 0;\n\nexport const createTimer = (): void => {\n    lastUpdate = performance.now();\n    setInterval(tick, 5);\n}\n\nconst dt = 5;\nconst filterStrength = 20;\nlet deltaMean = 0;\n\nconst loadingDate = new Date();\nconst loadingBasePerfTick = performance.now();\n\n// performance.now() doesn't always reset on reload, so we capture a \"base value\"\n// to keep things stable\n// The returned time is pinned to when the page itself was loaded to remain\n// resilient against changed system clocks\nexport const getTimePinnedToLoadDate = () => {\n    return loadingDate.getTime() + (performance.now() - loadingBasePerfTick);\n}\n\nconst tick = () => {\n    const now = performance.now();\n    let delta = now - lastUpdate;\n    // compute pseudo-average delta cf. https://stackoverflow.com/a/5111475/343834\n    deltaMean += (delta - deltaMean) / filterStrength;\n    let dtEffective;\n    while (delta > 5) {\n        // tack will compute dtEffective milliseconds of game time\n        dtEffective = dt;\n        // If the mean lag (deltaMean) is more than a whole frame (16ms), compensate by computing deltaMean - dt ms, up to 1 hour\n        dtEffective += deltaMean > 16 ? Math.min(3600 * 1000, deltaMean - dt) : 0;\n        // compute at max delta ms to avoid negative delta\n        dtEffective = Math.min(delta, dtEffective);\n        // run tack and record timings\n        tack(dtEffective / 1000);\n        lastUpdate += dtEffective;\n        delta -= dtEffective;\n    }\n}\n\nconst tack = (dt: number) => {\n    if (!G['timeWarp']) {\n        //Adds Resources (coins, ants, etc)\n        const timeMult = calculateTimeAcceleration().mult;\n        resourceGain(dt * timeMult)\n        //Adds time (in milliseconds) to all reset functions, and quarks timer.\n        addTimers('prestige', dt)\n        addTimers('transcension', dt)\n        addTimers('reincarnation', dt)\n        addTimers('ascension', dt)\n        addTimers('quarks', dt)\n        addTimers('goldenQuarks', dt)\n        addTimers('octeracts', dt)\n        addTimers('singularity', dt)\n        addTimers('autoPotion', dt)\n\n        //Triggers automatic rune sacrifice (adds milliseconds to payload timer)\n        if (player.shopUpgrades.offeringAuto > 0 && player.autoSacrificeToggle) {\n            automaticTools('runeSacrifice', dt)\n        }\n\n        //Triggers automatic ant sacrifice (adds milliseonds to payload timers)\n        if (player.achievements[173] === 1) {\n            automaticTools('antSacrifice', dt);\n        }\n\n        /*Triggers automatic obtainium gain if research [2x11] is unlocked,\n        Otherwise it just calculates obtainium multiplier values. */\n        if (player.researches[61] === 1) {\n            automaticTools('addObtainium', dt)\n        } else {\n            calculateObtainium();\n        }\n\n        //Automatically tries and buys researches lol\n        if (player.autoResearchToggle && player.autoResearch > 0 && player.autoResearch <= maxRoombaResearchIndex(player) &&\n                (autoResearchEnabled() || player.autoResearchMode === 'manual')) {\n            // buyResearch() probably shouldn't even be called if player.autoResearch exceeds the highest unlocked research\n            let counter = 0;\n            const maxCount = 1 + player.challengecompletions[14];\n            while (counter < maxCount) {\n                if (player.autoResearch > 0) {\n                    const linGrowth = (player.autoResearch === 200) ? 0.01 : 0;\n                    if (!buyResearch(player.autoResearch, true, linGrowth)) {\n                        break;\n                    }\n                } else {\n                    break;\n                }\n                counter++;\n            }\n        }\n    }\n\n    // Adds an offering every 2 seconds\n    if (player.highestchallengecompletions[3] > 0) {\n        automaticTools('addOfferings', dt/2)\n    }\n\n    // Adds an offering every 1/(cube upgrade 1x2) seconds. It shares a timer with the one above.\n    if (player.cubeUpgrades[2] > 0) {\n        automaticTools('addOfferings', dt * player.cubeUpgrades[2])\n    }\n\n    runChallengeSweep(dt);\n\n    //Check for automatic resets\n    //Auto Prestige. === 1 indicates amount, === 2 indicates time.\n    if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\n        if (player.toggles[15] === true && player.achievements[43] === 1 && G['prestigePointGain'].gte(player.prestigePoints.times(Decimal.pow(10, player.prestigeamount))) && player.coinsThisPrestige.gte(1e16)) {\n            resetachievementcheck(1);\n            reset('prestige', true)\n        }\n    }\n    if (player.resettoggle1 === 2) {\n        G['autoResetTimers'].prestige += dt;\n        const time = Math.max(0.01, player.prestigeamount);\n        if (player.toggles[15] === true && player.achievements[43] === 1 && G['autoResetTimers'].prestige >= time && player.coinsThisPrestige.gte(1e16)) {\n            resetachievementcheck(1);\n            reset('prestige', true);\n        }\n    }\n\n    if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\n        if (player.toggles[21] === true && player.upgrades[89] === 1 && G['transcendPointGain'].gte(player.transcendPoints.times(Decimal.pow(10, player.transcendamount))) && player.coinsThisTranscension.gte(1e100) && player.currentChallenge.transcension === 0) {\n            resetachievementcheck(2);\n            reset('transcension', true);\n        }\n    }\n    if (player.resettoggle2 === 2) {\n        G['autoResetTimers'].transcension += dt\n        const time = Math.max(0.01, player.transcendamount);\n        if (player.toggles[21] === true && player.upgrades[89] === 1 && G['autoResetTimers'].transcension >= time && player.coinsThisTranscension.gte(1e100) && player.currentChallenge.transcension === 0) {\n            resetachievementcheck(2);\n            reset('transcension', true);\n        }\n    }\n\n    if (player.currentChallenge.ascension !== 12) {\n        G['autoResetTimers'].reincarnation += dt;\n        if (player.resettoggle3 === 2) {\n            const time = Math.max(0.01, player.reincarnationamount);\n            if (player.toggles[27] === true && player.researches[46] > 0.5 && player.transcendShards.gte('1e300') && G['autoResetTimers'].reincarnation >= time && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\n                resetachievementcheck(3);\n                reset('reincarnation', true);\n            }\n        }\n        if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\n            if (player.toggles[27] === true && player.researches[46] > 0.5 && G['reincarnationPointGain'].gte(player.reincarnationPoints.add(1).times(Decimal.pow(10, player.reincarnationamount))) && player.transcendShards.gte(1e300) && player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) {\n                resetachievementcheck(3);\n                reset('reincarnation', true)\n            }\n        }\n    }\n    calculateOfferings('reincarnation')\n}\n\nexport const synergismHotkeys = (event: KeyboardEvent, key: string): void => {\n    if (player.toggles[40] === false) {\n        return;\n    }\n\n    const types = {\n        coin: 'Coin',\n        diamond: 'Diamonds',\n        mythos: 'Mythos',\n        particle: 'Particles',\n        tesseract: 'Tesseracts'\n    } as const;\n\n    const type = types[G['buildingSubTab']];\n\n    if (event.shiftKey) {\n        let num = Number(key) - 1;\n        if (key ==='BACKQUOTE') {\n            num = -1;\n        }\n        if (player.challengecompletions[11] > 0 && !isNaN(num)) {\n            if (num >= 0 && num < player.corruptionLoadoutNames.length) {\n                if (player.toggles[41] === true) {\n                    void Notification(\n                        i18next.t('main.corruptionLoadoutApplied', {\n                            x: num + 1,\n                            y: player.corruptionLoadoutNames[num]\n                        }),\n                        5000\n                    )\n                }\n                corruptionLoadoutSaveLoad(false, num + 1);\n            } else {\n                if (player.toggles[41] === true) {\n                    void Notification(i18next.t('main.allCorruptionsZero'), 5000);\n                }\n                corruptionLoadoutSaveLoad(false, 0);\n            }\n            event.preventDefault();\n        }\n        return;\n    }\n\n    switch (key) {\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5': {\n            const num = Number(key) as OneToFive;\n\n            if (G['currentTab'] === 'buildings') {\n                if (type === 'Particles') {\n                    buyParticleBuilding(num);\n                } else if (type === 'Tesseracts') {\n                    buyTesseractBuilding(num);\n                } else {\n                    buyMax(num, type);\n                }\n            }\n            if (G['currentTab'] === 'upgrades') {\n                categoryUpgrades(num, false);\n            }\n            if (G['currentTab'] === 'runes') {\n                if (G['runescreen'] === 'runes') {\n                    redeemShards(num)\n                }\n                if (G['runescreen'] === 'blessings') {\n                    buyRuneBonusLevels('Blessings', num)\n                }\n                if (G['runescreen'] === 'spirits') {\n                    buyRuneBonusLevels('Spirits', num)\n                }\n            }\n            if (G['currentTab'] === 'challenges') {\n                toggleChallenges(num)\n                challengeDisplay(num);\n            }\n            break;\n        }\n\n        case '6':\n            if (G['currentTab'] === 'upgrades') {\n                categoryUpgrades(6, false);\n            }\n            if (G['currentTab'] === 'buildings' && G['buildingSubTab'] === 'diamond') {\n                buyCrystalUpgrades(1)\n            }\n            if (G['currentTab'] === 'challenges' && player.reincarnationCount > 0) {\n                toggleChallenges(6)\n                challengeDisplay(6);\n            }\n            break;\n        case '7':\n            if (G['currentTab'] === 'buildings' && G['buildingSubTab'] === 'diamond') {\n                buyCrystalUpgrades(2)\n            }\n            if (G['currentTab'] === 'challenges' && player.achievements[113] === 1) {\n                toggleChallenges(7)\n                challengeDisplay(7);\n            }\n            break;\n        case '8':\n            if (G['currentTab'] === 'buildings' && G['buildingSubTab'] === 'diamond') {\n                buyCrystalUpgrades(3)\n            }\n            if (G['currentTab'] === 'challenges' && player.achievements[120] === 1) {\n                toggleChallenges(8)\n                challengeDisplay(8);\n            }\n            break;\n        case '9':\n            if (G['currentTab'] === 'buildings' && G['buildingSubTab'] === 'diamond') {\n                buyCrystalUpgrades(4)\n            }\n            if (G['currentTab'] === 'challenges' && player.achievements[127] === 1) {\n                toggleChallenges(9)\n                challengeDisplay(9);\n            }\n            break;\n        case '0':\n            if (G['currentTab'] === 'buildings' && G['buildingSubTab'] === 'diamond') {\n                buyCrystalUpgrades(5)\n            }\n            if (G['currentTab'] === 'challenges' && player.achievements[134] === 1) {\n                toggleChallenges(10)\n                challengeDisplay(10);\n            }\n            break;\n    }\n\n}\n\nexport const showExitOffline = () => {\n    const el = DOMCacheGetOrSet('exitOffline');\n    el.style.visibility = 'visible';\n    setTimeout(() => el.focus(), 100);\n}\n\n/**\n * Reloads shit.\n * @param reset if this param is passed, offline progression will not be calculated.\n */\nexport const reloadShit = async (reset = false) => {\n    clearTimers()\n\n    // Shows a reset button when page loading seems to stop or cause an error\n    const preloadDeleteGame = setTimeout(() => DOMCacheGetOrSet('preloadDeleteGame').style.display = 'block', 10000);\n\n    disableHotkeys();\n\n    // Wait a tick to continue. This is a (likely futile) attempt to see if this solves save corrupting.\n    // This ensures all queued tasks are executed before continuing on.\n    await new Promise((res) => {\n        setTimeout(res, 0);\n    });\n\n    const save =\n        await localforage.getItem<Blob>('Synergysave2') ??\n        localStorage.getItem('Synergysave2');\n\n    const saveObject = typeof save === 'string' ? save : await save?.text();\n\n    if (saveObject) {\n        const dec = LZString.decompressFromBase64(saveObject);\n        const isLZString = dec !== '';\n\n        if (isLZString) {\n            if (!dec) {\n                return Alert(i18next.t('save.loadFailed'));\n            }\n\n            const saveString = btoa(dec);\n\n            if (saveString === null) {\n                return Alert(i18next.t('save.loadFailed'));\n            }\n\n            localStorage.clear();\n            const blob = new Blob([saveString], { type: 'text/plain' });\n            await localforage.setItem<Blob>('Synergysave2', blob);\n            await Alert(i18next.t('main.transferredFromLZ'));\n        }\n\n        await loadSynergy();\n    }\n\n    if (!reset) {\n        await calculateOffline();\n    } else {\n        player.worlds = new QuarkHandler({ bonus: 0, quarks: 0 });\n        // saving is disabled during a singularity event to prevent bug\n        // early return here if the save fails can keep game state from properly resetting after a singularity\n        if (saveCheck.canSave) {\n            const saved = await saveSynergy();\n            if (!saved) {\n                return\n            }\n        }\n    }\n\n    toggleTheme(true);\n    settingAnnotation();\n    toggleIconSet();\n    toggleauto();\n    htmlInserts();\n    createTimer();\n\n    //Reset Displays\n    toggleTabs('buildings');\n    toggleSubTab(1, 0);\n    toggleSubTab(4, 0); // Set 'runes' subtab back to 'runes' tab\n    toggleSubTab(8, 0); // Set 'cube tribues' subtab back to 'cubes' tab\n    toggleSubTab(9, 0); // set 'corruption main'\n    toggleSubTab(10, 0); // set 'singularity main'\n    toggleSubTab(-1, 0); // set 'statistics main'\n\n    dailyResetCheck();\n    setInterval(dailyResetCheck, 30000);\n\n    constantIntervals();\n    changeTabColor();\n\n    eventCheck();\n    setInterval(eventCheck, 15000);\n    showExitOffline();\n    clearTimeout(preloadDeleteGame);\n\n    if (localStorage.getItem('pleaseStar') === null) {\n        void Alert(i18next.t('main.starRepo'));\n        localStorage.setItem('pleaseStar', '');\n    }\n\n    // All versions of Chrome and Firefox supported by the game have this API,\n    // but not all versions of Edge and Safari do.\n    if (\n        /* eslint-disable @typescript-eslint/no-unnecessary-condition */\n        typeof navigator.storage?.persist === 'function' &&\n        typeof navigator.storage?.persisted === 'function'\n        /* eslint-enable @typescript-eslint/no-unnecessary-condition */\n    ) {\n        const persistent = await navigator.storage.persisted();\n\n        if (!persistent) {\n            const isPersistentNow = await navigator.storage.persist();\n\n            if (isPersistentNow) {\n                void Alert(i18next.t('main.dataPersistent'));\n            }\n        } else {\n            // eslint-disable-next-line no-console\n            console.log(`Storage is persistent! (persistent = ${persistent})`);\n        }\n    }\n\n    const saveType = DOMCacheGetOrSet('saveType') as HTMLInputElement\n    saveType.checked = localStorage.getItem('copyToClipboard') !== null\n}\n\n// eslint-disable-next-line @typescript-eslint/no-misused-promises\nwindow.addEventListener('load', async () => {\n    await i18nInit()\n\n    const ver = DOMCacheGetOrSet('versionnumber');\n    const addZero = (n: number) => `${n}`.padStart(2, '0')\n    if (ver instanceof HTMLElement) {\n        const textUpdate = !isNaN(lastUpdated.getTime()) ? ` [Last Update: ${addZero(lastUpdated.getHours())}:${addZero(lastUpdated.getMinutes())} UTC ${addZero(lastUpdated.getDate())}-${lastUpdated.toLocaleString('en-us', {month: 'short'})}-${lastUpdated.getFullYear()}].` : '';\n        ver.textContent =\n            `You're ${testing ? 'testing' : 'playing'} v${version} - The Alternate Reality` +\n            textUpdate +\n            ` ${testing ? i18next.t('testing.saveInLive') : ''}`;\n    }\n    document.title = `Synergism v${version}`;\n\n    generateEventHandlers();\n\n    void reloadShit();\n\n    corruptionButtonsAdd();\n    corruptionLoadoutTableCreate();\n});\n\nwindow.addEventListener('unload', () => {\n    // This fixes a bug in Chrome (who would have guessed?) that\n    // wouldn't properly load elements if the user scrolled down\n    // and reloaded a page. Why is this a bug, Chrome? Why would\n    // a page that is reloaded be affected by what the user did\n    // beforehand? How does anyone use this buggy browser???????\n    window.scrollTo(0, 0);\n});\n", "/**\n * A cache for DOM elements\n */\nexport const DOMCache = new Map<string, HTMLElement>();\n\nexport const DOMCacheGetOrSet = (id: string) => {\n    const cachedEl = DOMCache.get(id);\n    if (cachedEl) {\n        return cachedEl;\n    }\n\n    const el = document.getElementById(id);\n\n    if (!el) {\n        throw new TypeError(`Element with id \"${id}\" was not found on page?`);\n    }\n\n    DOMCache.set(id, el);\n    return el;\n}", "import Decimal from 'break_infinity.js';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport { format } from './Synergism';\n\nexport const isDecimal = (o: unknown): o is Decimal =>\n    o instanceof Decimal ||\n    (typeof o === 'object' &&\n    o !== null &&\n    Object.keys(o).length === 2 &&\n    'mantissa' in o &&\n    'exponent' in o)\n;\n\n/**\n * This function calculates the smallest integer increment/decrement that can be applied to a number that is\n * guaranteed to affect the numbers value\n * @param x\n * @returns {number} 1 if x < 2^53 and 2^ceil(log2(x)-53) otherwise\n * Since ceil(log2(x)-53) was 53 until 2^53+23, I changed it to floor(log2(x)-52)\n * This is incremented to 53 at 2^53-21 and is probably guaranteed thereafter. from by httpsnet\n */\nexport const smallestInc = (x = 0): number => {\n    if (x <= Number.MAX_SAFE_INTEGER) {\n        return 1;\n    } else {\n        return 2 ** Math.floor(Math.log2(x) - 52)\n    }\n}\n\n/**\n * Returns the sum of all contents in an array\n * @param array {(number|string)[]}\n * @returns {number}\n */\nexport const sumContents = (array: number[]): number => {\n    array = Array.isArray(array)\n        ? array\n        : Object.values(array);\n\n    return array.reduce((a, b) => a + b, 0);\n}\n\n/**\n * Returns the product of all contents in an array\n * @param array {number[]}\n * @returns {number}\n */\n// TODO: Add a productContents for Decimal, but callable using productContents...\nexport const productContents = (array: number[]): number => array.reduce((a, b) => a * b);\n\n\nexport const sortWithIndices = (toSort: number[]) => {\n    return Array\n        .from([...toSort.keys()])\n        .sort((a, b) => toSort[a] < toSort[b] ? -1 : +(toSort[b] < toSort[a]));\n}\n\n/**\n * Identical to @see {DOMCacheGetOrSet} but casts the type.\n * @param id {string}\n */\nexport const getElementById = <T extends HTMLElement>(id: string) => DOMCacheGetOrSet(id) as T;\n\n/**\n * Remove leading indents at the beginning of new lines in a template literal.\n */\ntype ValidInterpolatedType = string | number | Date;\nexport const stripIndents = (temp: TemplateStringsArray, ...args: ValidInterpolatedType[]) => {\n    const s = temp.raw;\n    let f = '';\n    for (let i = 0; i < s.length; i++) {\n        // rather than using \\s+ for all whitespace, we use a normal space\n        // this fixes a bug where two+ new lines will be transformed into 1\n        f += `${s[i].replace(/\\n +/g, '\\n')}${args.shift() ?? ''}`\n    }\n\n    return f.trim();\n}\n\n/**\n * Pads an array (a) with param (b) (c) times\n * @param a array to be padded\n * @param b item to pad to array\n * @param length Length to pad array to\n */\nexport const padArray = <T>(a: T[], b: T, length: number) => {\n    for (let i = 0; i < length; i++) {\n        if (!(i in a)) {\n            a[i] = b;\n        }\n    }\n\n    return a;\n}\n\nexport const updateClassList = (targetElement: string, additions: string[], removals: string[]) => {\n    const target = DOMCacheGetOrSet(targetElement);\n    for (const addition of additions) {\n        target.classList.add(addition);\n    }\n    for (const removal of removals) {\n        target.classList.remove(removal);\n    }\n}\n\nexport const btoa = (s: string) => {\n    try {\n        return window.btoa(s);\n    } catch (err) {\n        // eslint-disable-next-line no-console\n        console.error('An error occurred:', err)\n        // e.code = 5\n        return null;\n    }\n}\n\n/**\n *\n * Creates a string of the ordinal representation of an integer.\n * @param int An integer, which can be negative or positive.\n * @returns A string which follows the conventions of ordinal numbers\n *          in standard English\n */\nexport const toOrdinal = (int: number):string => {\n    let suffix = 'th'\n    if (int % 10 === 1) {\n        suffix = (int % 100 === 11)? 'th': 'st'\n    }\n    if (int % 10 === 2) {\n        suffix = (int % 100 === 12)? 'th': 'nd'\n    }\n    if (int % 10 === 3) {\n        suffix = (int % 100 === 13)? 'th': 'rd'\n    }\n\n    return format(int,0,true)+suffix\n}\n\nexport const formatMS = (ms: number) => Object.entries({\n    d: format(Math.floor(ms / 86400000), 0, true),\n    h: Math.floor(ms / 3600000) % 24,\n    m: Math.floor(ms / 60000) % 60,\n    s: Math.floor(ms / 1000) % 60\n})\n    .filter(f => f[1] > 0)\n    .map(t => `${t[1]}${t[0]}`)\n    .join(' ') || '0s'\n\nexport const formatS = (s: number) => {\n    return formatMS(1000 * s)\n}\n\nexport const cleanString = (s: string): string => {\n    let cleaned = ''\n\n    for (let i = 0; i < s.length; i++) {\n        const code = s.charCodeAt(i)\n\n        cleaned += code > 255 ? '_' : s[i]\n    }\n\n    return cleaned\n}\n", "import Decimal from 'break_infinity.js';\nimport type { GlobalVariables } from './types/Synergism';\n\nexport enum Upgrade {\n     coin = 'coins',\n     prestige = 'prestigePoints',\n     transcend = 'transcendPoints',\n     reincarnation = 'reincarnationPoints',\n}\n\nexport const Globals: GlobalVariables = {\n    runediv: [1.5, 2, 3, 5, 8, 1, 1],\n    runeexpbase: [1, 4, 9, 16, 1000, 1e75, 1e256],\n    runeMaxLvl: 40000,\n\n    // this shows the logarithm of costs. ex: upgrade one will cost 1e+6 coins, upgrade 2 1e+7, etc.\n    upgradeCosts: [0, 6, 7, 8, 10, 12, 20, 25, 30, 35, 45, 55, 75, 110, 150, 200, 250, 500, 750, 1000, 1500,\n        2, 3, 4, 5, 6, 7, 10, 13, 20, 30, 150, 400, 800, 1600, 3200, 10000, 20000, 50000, 100000, 200000,\n        1, 2, 3, 5, 6, 7, 42, 65, 87, 150, 300, 500, 1000, 1500, 2000, 3000, 6000, 12000, 25000, 75000,\n        0, 1, 2, 2, 3, 5, 6, 10, 15, 22, 30, 37, 45, 52, 60, 1900, 2500, 3000, 7482, 21397,\n        3, 6, 9, 12, 15, 20, 30, 6, 8, 8, 10, 13, 60, 1, 2, 4, 8, 16, 25, 40,\n        12, 16, 20, 30, 50, 500, 1250, 5000, 25000, 125000, 1500, 7500, 30000, 150000, 1000000, 250, 1000, 5000, 25000, 125000,\n        1e3, 1e6, 1e9, 1e12, 1e15],\n\n    // Mega list of Variables to be used elsewhere\n    crystalUpgradesCost: [6, 15, 20, 40, 100, 200, 500, 1000],\n    crystalUpgradeCostIncrement: [8, 15, 20, 40, 100, 200, 500, 1000],\n    researchBaseCosts: [1e200,\n        1, 1, 1, 1, 1,\n        1, 1e2, 1e4, 1e6, 1e8,\n        2, 2e2, 2e4, 2e6, 2e8,\n        4e4, 4e8, 10, 1e5, 1e9,\n        100, 100, 1e4, 2e3, 2e5,\n        40, 200, 50, 5000, 20000000,\n        777, 7777, 50000, 500000, 5000000,\n        2e3, 2e6, 2e9, 1e5, 1e9,\n        1, 1, 5, 25, 125,\n        2, 5, 320, 1280, 2.5e9,\n        10, 2e3, 4e5, 8e7, 2e9,\n        5, 400, 1e4, 3e6, 9e8,\n        100, 2500, 100, 2000, 2e5,\n        1, 20, 3e3, 4e5, 5e7,\n        10, 40, 160, 1000, 10000,\n        4e9, 7e9, 1e10, 1.2e10, 1.5e10,\n        1e12, 1e13, 3e12, 2e13, 2e13,\n        2e14, 6e14, 2e15, 6e15, 2e16,\n        1e16, 2e16, 2e17, 4e17, 1e18,\n        1e13, 1e14, 1e15, 7.777e18, 7.777e20,\n        1e16, 3e16, 1e17, 3e17, 1e20,\n        1e18, 3e18, 1e19, 3e19, 1e20,\n        1e20, 2e20, 4e20, 8e20, 1e21,\n        2e21, 4e21, 8e21, 2e22, 4e22,\n        3.2e21, 2e23, 4e23, 1e21, 7.777e32,\n        5e8, 5e12, 5e16, 5e20, 5e24, /*ascension tier */\n        1e25, 2e25, 4e25, 8e25, 1e26,\n        4e26, 8e26, 1e27, 2e27, 1e28,\n        5e9, 5e15, 5e21, 5e27, 1e28, /*challenge 11 tier */\n        1e29, 2e29, 4e29, 8e29, 1e27,\n        2e30, 4e30, 8e30, 1e31, 2e31,\n        5e31, 1e32, 2e32, 4e32, 8e32, /*challenge 12 tier */\n        1e33, 2e33, 4e33, 8e33, 1e34,\n        3e34, 1e35, 3e35, 6e35, 1e36,\n        3e36, 1e37, 3e37, 1e38, 3e38, /*challenge 13 tier */\n        1e39, 3e39, 1e40, 3e40, 1e50,\n        3e41, 1e42, 3e42, 6e42, 1e43,\n        3e43, 1e44, 3e44, 1e45, 3e45, /*challenge 14 tier */\n        2e46, 6e46, 2e47, 6e47, 1e64,\n        6e48, 2e49, 1e50, 1e51, 4e56\n    ],\n\n    researchMaxLevels: [0, 1, 1, 1, 1, 1,\n        10, 10, 10, 10, 10,\n        10, 10, 10, 10, 10,\n        10, 10, 1, 1, 1,\n        25, 25, 25, 20, 20,\n        10, 10, 10, 10, 10,\n        12, 12, 10, 10, 10,\n        10, 10, 10, 1, 1,\n        1, 1, 1, 1, 1,\n        1, 1, 1, 1, 1,\n        10, 10, 10, 10, 10,\n        20, 20, 20, 20, 20,\n        1, 5, 4, 5, 5,\n        10, 10, 10, 10, 10,\n        1, 1, 1, 1, 1,\n        10, 50, 50, 50, 50,\n        10, 1, 20, 20, 20,\n        20, 20, 20, 20, 10,\n        20, 20, 20, 20, 1,\n        20, 5, 5, 3, 2,\n        10, 10, 10, 10, 1,\n        10, 10, 20, 25, 25,\n        50, 50, 50, 50, 100,\n        10, 10, 10, 100, 100,\n        25, 25, 25, 1, 5,\n        10, 10, 10, 10, 1,\n        10, 10, 10, 1, 1,\n        25, 25, 25, 15, 1,\n        10, 10, 10, 10, 1,\n        10, 1, 6, 10, 1,\n        25, 25, 1, 15, 1,\n        10, 10, 10, 1, 1,\n        10, 10, 10, 10, 1,\n        25, 25, 25, 15, 1,\n        10, 10, 10, 1, 1,\n        10, 3, 6, 10, 5,\n        25, 25, 1, 15, 1,\n        20, 20, 20, 1, 1,\n        20, 1, 50, 50, 10,\n        25, 25, 25, 15, 100000\n    ],\n\n    ticker: 0,\n\n    costDivisor: 1,\n\n    freeAccelerator: 0,\n    totalAccelerator: 0,\n    freeAcceleratorBoost: 0,\n    totalAcceleratorBoost: 0,\n    acceleratorPower: 1.10,\n    acceleratorEffect: new Decimal(1),\n    acceleratorEffectDisplay: new Decimal(1),\n    generatorPower: new Decimal(1),\n\n    freeMultiplier: 0,\n    totalMultiplier: 0,\n    multiplierPower: 2,\n    multiplierEffect: new Decimal(1),\n    challengeOneLog: 3,\n    freeMultiplierBoost: 0,\n    totalMultiplierBoost: 0,\n\n    globalCoinMultiplier: new Decimal(1),\n    totalCoinOwned: 0,\n    prestigeMultiplier: new Decimal(1),\n    buildingPower: 1,\n    reincarnationMultiplier: new Decimal(1),\n\n    coinOneMulti: new Decimal(1),\n    coinTwoMulti: new Decimal(1),\n    coinThreeMulti: new Decimal(1),\n    coinFourMulti: new Decimal(1),\n    coinFiveMulti: new Decimal(1),\n\n    globalCrystalMultiplier: new Decimal(1),\n    globalMythosMultiplier: new Decimal(0.01),\n    grandmasterMultiplier: new Decimal(1),\n\n    atomsMultiplier: new Decimal(1),\n\n    mythosBuildingPower: 1,\n    challengeThreeMultiplier: new Decimal(1),\n    totalMythosOwned: 0,\n\n    prestigePointGain: new Decimal(0),\n    challengeFivePower: 1 / 3,\n\n    transcendPointGain: new Decimal(0),\n    reincarnationPointGain: new Decimal(0),\n\n    produceFirst: new Decimal(0),\n    produceSecond: new Decimal(0),\n    produceThird: new Decimal(0),\n    produceFourth: new Decimal(0),\n    produceFifth: new Decimal(0),\n    produceTotal: new Decimal(0),\n\n    produceFirstDiamonds: new Decimal(0),\n    produceSecondDiamonds: new Decimal(0),\n    produceThirdDiamonds: new Decimal(0),\n    produceFourthDiamonds: new Decimal(0),\n    produceFifthDiamonds: new Decimal(0),\n    produceDiamonds: new Decimal(0),\n\n    produceFirstMythos: new Decimal(0),\n    produceSecondMythos: new Decimal(0),\n    produceThirdMythos: new Decimal(0),\n    produceFourthMythos: new Decimal(0),\n    produceFifthMythos: new Decimal(0),\n    produceMythos: new Decimal(0),\n\n    produceFirstParticles: new Decimal(0),\n    produceSecondParticles: new Decimal(0),\n    produceThirdParticles: new Decimal(0),\n    produceFourthParticles: new Decimal(0),\n    produceFifthParticles: new Decimal(0),\n    produceParticles: new Decimal(0),\n\n    producePerSecond: new Decimal(0),\n    producePerSecondDiamonds: new Decimal(0),\n    producePerSecondMythos: new Decimal(0),\n    producePerSecondParticles: new Decimal(0),\n\n    uFourteenMulti: new Decimal(1),\n    uFifteenMulti: new Decimal(1),\n    tuSevenMulti: 1,\n    currentTab: 'buildings',\n\n    researchfiller1: 'Hover over the grid to get details about researches!',\n    researchfiller2: 'Level: ',\n\n    ordinals: ['first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh', 'eighth', 'ninth', 'tenth', 'eleventh', 'twelfth', 'thirteenth', 'fourteenth', 'fifteenth', 'sixteenth', 'seventeenth', 'eighteenth', 'nineteenth', 'twentieth'] as const,\n    cardinals: ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen', 'twenty', 'twentyone', 'twentytwo', 'twentythree', 'twentyfour', 'twentyfive', 'twentysix', 'twentyseven', 'twentyeight', 'twentynine', 'thirty', 'thirtyone', 'thirtytwo', 'thirtythree', 'thirtyfour'],\n\n    challengeBaseRequirements: [10, 20, 60, 100, 200, 125, 500, 7500, 2.0e8, 3.5e9],\n\n    prestigeamount: 1,\n    taxdivisor: new Decimal('1'),\n    taxdivisorcheck: new Decimal('1'),\n    runemultiplierincrease: {\n        one: 1,\n        two: 1,\n        three: 1,\n        four: 1,\n        five: 1\n    },\n\n    mythosupgrade13: new Decimal('1'),\n    mythosupgrade14: new Decimal('1'),\n    mythosupgrade15: new Decimal('1'),\n    challengefocus: 0,\n\n    maxexponent: 10000,\n\n    effectiveLevelMult: 1,\n    optimalOfferingTimer: 600,\n    optimalObtainiumTimer: 3600,\n\n    runeSum: 0,\n\n    globalAntMult: new Decimal('1'),\n    antMultiplier: new Decimal('1'),\n\n    antOneProduce: new Decimal('1'),\n    antTwoProduce: new Decimal('1'),\n    antThreeProduce: new Decimal('1'),\n    antFourProduce: new Decimal('1'),\n    antFiveProduce: new Decimal('1'),\n    antSixProduce: new Decimal('1'),\n    antSevenProduce: new Decimal('1'),\n    antEightProduce: new Decimal('1'),\n\n    antCostGrowth: [1e41, 3, 10, 1e2, 1e4, 1e8, 1e16, 1e32],\n\n    antUpgradeBaseCost: [100, 100, 1000, 1000, 1e5, 1e6, 1e8, 1e11, 1e15, 1e20, 1e40, 1e100],\n    antUpgradeCostIncreases: [10, 10, 10, 10, 100, 100, 100, 100, 1000, 1000, 1000, 1e100],\n\n    bonusant1: 0,\n    bonusant2: 0,\n    bonusant3: 0,\n    bonusant4: 0,\n    bonusant5: 0,\n    bonusant6: 0,\n    bonusant7: 0,\n    bonusant8: 0,\n    bonusant9: 0,\n    bonusant10: 0,\n    bonusant11: 0,\n    bonusant12: 0,\n\n    rune1level: 1,\n    rune2level: 1,\n    rune3level: 1,\n    rune4level: 1,\n    rune5level: 1,\n    rune1Talisman: 0,\n    rune2Talisman: 0,\n    rune3Talisman: 0,\n    rune4Talisman: 0,\n    rune5Talisman: 0,\n\n\n    talisman1Effect: [null, 0, 0, 0, 0, 0],\n    talisman2Effect: [null, 0, 0, 0, 0, 0],\n    talisman3Effect: [null, 0, 0, 0, 0, 0],\n    talisman4Effect: [null, 0, 0, 0, 0, 0],\n    talisman5Effect: [null, 0, 0, 0, 0, 0],\n    talisman6Effect: [null, 0, 0, 0, 0, 0],\n    talisman7Effect: [null, 0, 0, 0, 0, 0],\n\n    talisman6Power: 0,\n    talisman7Quarks: 0,\n\n    runescreen: 'runes',\n    settingscreen: 'settings',\n    singularityscreen: 'shop',\n\n    talismanResourceObtainiumCosts: [1e13, 1e14, 1e16, 1e18, 1e20, 1e22, 1e24],\n    talismanResourceOfferingCosts: [100, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9],\n\n\n    talismanLevelCostMultiplier: [1, 4, 1e4, 1e8, 1e13, 10, 100],\n\n    talismanPositiveModifier: [null, 0.75, 1.5, 2.25, 3, 3.75, 4.5],\n    talismanNegativeModifier: [null, 0, 0, 0, 0, 0, 0],\n\n    commonTalismanEnhanceCost: [null, 0, 3000, 1000, 0, 0, 0, 0],\n    uncommonTalismanEnchanceCost: [null, 0, 10000, 3000, 1000, 0, 0, 0],\n    rareTalismanEnchanceCost: [null, 0, 100000, 20000, 2000, 500, 0, 0],\n    epicTalismanEnhanceCost: [null, 0, 2e6, 2e5, 2e4, 2000, 1000, 0],\n    legendaryTalismanEnchanceCost: [null, 0, 4e7, 2e6, 1e5, 20000, 2500, 200],\n    mythicalTalismanEnchanceCost: [null, 0, 0, 0, 0, 0, 0, 0],\n\n    talismanRespec: 1,\n\n    obtainiumGain: 0,\n\n    mirrorTalismanStats: [null, 1, 1, 1, 1, 1],\n    antELO: 0,\n    effectiveELO: 0,\n\n    timeWarp: false,\n\n    blessingMultiplier: 1,\n    spiritMultiplier: 1,\n    runeBlessings: [0, 0, 0, 0, 0, 0],\n    runeSpirits: [0, 0, 0, 0, 0, 0],\n\n    effectiveRuneBlessingPower: [0, 0, 0, 0, 0, 0],\n    effectiveRuneSpiritPower: [0, 0, 0, 0, 0, 0],\n\n    blessingBaseCost: 1e6,\n    spiritBaseCost: 1e20,\n\n    triggerChallenge: 0,\n\n    prevReductionValue: -1,\n\n    buildingSubTab: 'coin',\n    //1,000 of each before Diminishing Returns\n    blessingbase: [null, 1 / 500, 1 / 5000, 1 / 2000, 1 / 750, 1 / 200, 1 / 10000, 1 / 5000, 1 / 10, 1 / 10000, 1 / 1000],\n    blessingDRPower: [null, 1 / 3, 1 / 3, 2 / 3, 1 / 2, 2 / 3, 2, 1 / 3, 1 / 3, 1 / 16, 1 / 16],\n    giftbase: [1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000],\n    giftDRPower: [1 / 6, 1 / 6, 1 / 3, 1 / 4, 1 / 3, 1, 1 / 6, 1 / 6, 1 / 32, 1 / 32],\n    benedictionbase: [null, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000, 1 / 1000],\n    benedictionDRPower: [null, 1 / 12, 1 / 12, 1 / 6, 1 / 8, 1 / 6, 1 / 2, 1 / 12, 1 / 12, 1 / 64, 1 / 64],\n    //10 Million of each before Diminishing returns on first 3, 200k for second, and 10k for the last few\n    platonicCubeBase: [2/4e6, 1.5/4e6, 1/4e6, 1/8e4, 1/1e4, 1/1e5, 1/1e4, 1/1e4],\n    platonicDRPower: [1/5, 1/5, 1/5, 1/5, 1/16, 1/16, 1/4, 1/8],\n\n    cubeBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    tesseractBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    hypercubeBonusMultiplier: [null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    platonicBonusMultiplier: [1, 1, 1, 1, 1, 1, 1, 1],\n\n    autoOfferingCounter: 0,\n    researchOrderByCost: [],\n\n    viscosityPower: [1, 0.87, 0.80, 0.75, 0.70, 0.6, 0.54, 0.45, 0.39, 0.33, 0.3, 0.2, 0.1, 0.05, 0, 0, 0],\n    lazinessMultiplier: [1, 1 / 3, 1 / 10, 1 / 40, 1 / 200, 1 / 1e5, 1 / 1e7, 1 / 1e10, 1/1e13, 1/1e16, 1/1e20, 1/1e25, 1/1e35, 1/1e50, 1/1e65, 1/1e80, 1/1e100],\n    hyperchallengedMultiplier: [1, 1.2, 1.5, 1.7, 3, 5, 8, 13, 21, 34, 55, 100, 400, 1600, 7777, 18888, 88888],\n    illiteracyPower: [1, 0.8, 0.7, 0.6, 0.5, 0.3, 0.2, 0.15, 0.10, 0.06, 0.04, 0.02, 0.01, 0.005, 0, 0, 0],\n    deflationMultiplier: [1, 0.3, 0.1, 0.03, 0.01, 1/1e6, 1/1e8, 1/1e10, 1/1e12, 1/1e15, 1/1e18, 1/1e25, 1/1e35, 1/1e50, 1/1e77, 0, 0],\n    extinctionMultiplier: [1, 0.92, 0.86, 0.8, 0.74, 0.65, 0.55, 0.5, 0.45, 0.4, 0.35, 0.3, 0.1, 0, 0, 0, 0],\n    droughtMultiplier: [1, 5, 25, 200, 1e4, 1e7, 1e11, 1e16, 1e22, 1e30, 1e40, 1e55, 1e80, 1e120, 1e177, 1e200, 1e250],\n    financialcollapsePower: [1, 0.9, 0.7, 0.6, 0.5, 0.37, 0.30, 0.23, 0.18, 0.15, 0.12, 0.09, 0.03, 0.01, 0.007, 0.0007, 0.00007],\n\n    corruptionPointMultipliers: [1, 3, 4, 5, 6, 7, 7.75, 8.5, 9.25, 10, 10.75, 11.5, 12.25, 13, 16, 20, 25, 33, 35],\n    ascendBuildingProduction: {\n        first: new Decimal('0'),\n        second: new Decimal('0'),\n        third: new Decimal('0'),\n        fourth: new Decimal('0'),\n        fifth: new Decimal('0')\n    },\n    freeUpgradeAccelerator: 0,\n    freeUpgradeMultiplier: 0,\n\n    acceleratorMultiplier: 1,\n    multiplierMultiplier: 1,\n\n    constUpgradeCosts: [null, 1, 13, 17, 237, 316, 4216, 5623, 74989, 1e10, 1e24],\n\n    globalConstantMult: new Decimal('1'),\n    autoTalismanTimer: 0,\n\n    autoChallengeTimerIncrement: 0,\n    corruptionTrigger: 1,\n\n    challenge15Rewards: {\n        cube1: 1,\n        ascensions: 1,\n        coinExponent: 1,\n        taxes: 1,\n        obtainium: 1,\n        offering: 1,\n        accelerator: 1,\n        multiplier: 1,\n        runeExp: 1,\n        runeBonus: 1,\n        cube2: 1,\n        transcendChallengeReduction: 1,\n        reincarnationChallengeReduction: 1,\n        antSpeed: 1,\n        bonusAntLevel: 1,\n        cube3: 1,\n        talismanBonus: 1,\n        globalSpeed: 1,\n        blessingBonus: 1,\n        constantBonus: 1,\n        cube4: 1,\n        spiritBonus: 1,\n        score: 1,\n        quarks: 1,\n        hepteractUnlocked: 0,\n        cube5: 1,\n        powder: 1,\n        exponent: 1,\n        freeOrbs: 0,\n        ascensionSpeed: 1\n    },\n\n    autoResetTimers: {\n        prestige: 0,\n        transcension: 0,\n        reincarnation: 0,\n        ascension: 0\n    },\n\n    timeMultiplier: 1,\n    upgradeMultiplier: 1,\n\n    historyCountMax: 20,\n\n    isEvent: false,\n    shopEnhanceVision: false,\n\n    // talismanResourceObtainiumCosts: [1e13, 1e14, 1e16, 1e18, 1e20, 1e22, 1e24]\n    // talismanResourceOfferingCosts: [0, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9]\n\n    eventClicked: false\n}\n\nexport const blankGlobals = { ...Globals };\n", "// EventTarget is lacking.\nimport EventEmitter from 'eventemitter3';\nimport type { SynergismEvents } from './types/Synergism';\n\nexport const Synergism = new EventEmitter<SynergismEvents>();", "export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}", "export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}", "import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}", "import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}", "import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}", "export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}", "export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}", "import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}", "import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}", "export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}", "import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}", "export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}", "export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}", "export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}", "import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}", "export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}", "import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}", "import _typeof from '@babel/runtime/helpers/esm/typeof';\nimport _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inherits from '@babel/runtime/helpers/esm/inherits';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/esm/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/esm/getPrototypeOf';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport _toArray from '@babel/runtime/helpers/esm/toArray';\n\nfunction ownKeys$6(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$6(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$6(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$6(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar consoleLogger = {\n  type: 'logger',\n  log: function log(args) {\n    this.output('log', args);\n  },\n  warn: function warn(args) {\n    this.output('warn', args);\n  },\n  error: function error(args) {\n    this.output('error', args);\n  },\n  output: function output(type, args) {\n    if (console && console[type]) console[type].apply(console, args);\n  }\n};\nvar Logger = function () {\n  function Logger(concreteLogger) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Logger);\n    this.init(concreteLogger, options);\n  }\n  _createClass(Logger, [{\n    key: \"init\",\n    value: function init(concreteLogger) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.prefix = options.prefix || 'i18next:';\n      this.logger = concreteLogger || consoleLogger;\n      this.options = options;\n      this.debug = options.debug;\n    }\n  }, {\n    key: \"setDebug\",\n    value: function setDebug(bool) {\n      this.debug = bool;\n    }\n  }, {\n    key: \"log\",\n    value: function log() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return this.forward(args, 'log', '', true);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return this.forward(args, 'warn', '', true);\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      return this.forward(args, 'error', '');\n    }\n  }, {\n    key: \"deprecate\",\n    value: function deprecate() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n    }\n  }, {\n    key: \"forward\",\n    value: function forward(args, lvl, prefix, debugOnly) {\n      if (debugOnly && !this.debug) return null;\n      if (typeof args[0] === 'string') args[0] = \"\".concat(prefix).concat(this.prefix, \" \").concat(args[0]);\n      return this.logger[lvl](args);\n    }\n  }, {\n    key: \"create\",\n    value: function create(moduleName) {\n      return new Logger(this.logger, _objectSpread$6(_objectSpread$6({}, {\n        prefix: \"\".concat(this.prefix, \":\").concat(moduleName, \":\")\n      }), this.options));\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(options) {\n      options = options || this.options;\n      options.prefix = options.prefix || this.prefix;\n      return new Logger(this.logger, options);\n    }\n  }]);\n  return Logger;\n}();\nvar baseLogger = new Logger();\n\nvar EventEmitter = function () {\n  function EventEmitter() {\n    _classCallCheck(this, EventEmitter);\n    this.observers = {};\n  }\n  _createClass(EventEmitter, [{\n    key: \"on\",\n    value: function on(events, listener) {\n      var _this = this;\n      events.split(' ').forEach(function (event) {\n        _this.observers[event] = _this.observers[event] || [];\n        _this.observers[event].push(listener);\n      });\n      return this;\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, listener) {\n      if (!this.observers[event]) return;\n      if (!listener) {\n        delete this.observers[event];\n        return;\n      }\n      this.observers[event] = this.observers[event].filter(function (l) {\n        return l !== listener;\n      });\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      if (this.observers[event]) {\n        var cloned = [].concat(this.observers[event]);\n        cloned.forEach(function (observer) {\n          observer.apply(void 0, args);\n        });\n      }\n      if (this.observers['*']) {\n        var _cloned = [].concat(this.observers['*']);\n        _cloned.forEach(function (observer) {\n          observer.apply(observer, [event].concat(args));\n        });\n      }\n    }\n  }]);\n  return EventEmitter;\n}();\n\nfunction defer() {\n  var res;\n  var rej;\n  var promise = new Promise(function (resolve, reject) {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n}\nfunction makeString(object) {\n  if (object == null) return '';\n  return '' + object;\n}\nfunction copy(a, s, t) {\n  a.forEach(function (m) {\n    if (s[m]) t[m] = s[m];\n  });\n}\nfunction getLastOfPath(object, path, Empty) {\n  function cleanKey(key) {\n    return key && key.indexOf('###') > -1 ? key.replace(/###/g, '.') : key;\n  }\n  function canNotTraverseDeeper() {\n    return !object || typeof object === 'string';\n  }\n  var stack = typeof path !== 'string' ? [].concat(path) : path.split('.');\n  while (stack.length > 1) {\n    if (canNotTraverseDeeper()) return {};\n    var key = cleanKey(stack.shift());\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n  }\n  if (canNotTraverseDeeper()) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack.shift())\n  };\n}\nfunction setPath(object, path, newValue) {\n  var _getLastOfPath = getLastOfPath(object, path, Object),\n    obj = _getLastOfPath.obj,\n    k = _getLastOfPath.k;\n  obj[k] = newValue;\n}\nfunction pushPath(object, path, newValue, concat) {\n  var _getLastOfPath2 = getLastOfPath(object, path, Object),\n    obj = _getLastOfPath2.obj,\n    k = _getLastOfPath2.k;\n  obj[k] = obj[k] || [];\n  if (concat) obj[k] = obj[k].concat(newValue);\n  if (!concat) obj[k].push(newValue);\n}\nfunction getPath(object, path) {\n  var _getLastOfPath3 = getLastOfPath(object, path),\n    obj = _getLastOfPath3.obj,\n    k = _getLastOfPath3.k;\n  if (!obj) return undefined;\n  return obj[k];\n}\nfunction getPathWithDefaults(data, defaultData, key) {\n  var value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n}\nfunction deepExtend(target, source, overwrite) {\n  for (var prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (typeof target[prop] === 'string' || target[prop] instanceof String || typeof source[prop] === 'string' || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n}\nfunction regexEscape(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n}\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nfunction escape(data) {\n  if (typeof data === 'string') {\n    return data.replace(/[&<>\"'\\/]/g, function (s) {\n      return _entityMap[s];\n    });\n  }\n  return data;\n}\nvar isIE10 = typeof window !== 'undefined' && window.navigator && typeof window.navigator.userAgentData === 'undefined' && window.navigator.userAgent && window.navigator.userAgent.indexOf('MSIE') > -1;\nvar chars = [' ', ',', '?', '!', ';'];\nfunction looksLikeObjectPath(key, nsSeparator, keySeparator) {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  var possibleChars = chars.filter(function (c) {\n    return nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0;\n  });\n  if (possibleChars.length === 0) return true;\n  var r = new RegExp(\"(\".concat(possibleChars.map(function (c) {\n    return c === '?' ? '\\\\?' : c;\n  }).join('|'), \")\"));\n  var matched = !r.test(key);\n  if (!matched) {\n    var ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n}\n\nfunction ownKeys$5(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$5(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$5(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$5(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper$3(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$3(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$3() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction deepFind(obj, path) {\n  var keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  if (!obj) return undefined;\n  if (obj[path]) return obj[path];\n  var paths = path.split(keySeparator);\n  var current = obj;\n  for (var i = 0; i < paths.length; ++i) {\n    if (!current) return undefined;\n    if (typeof current[paths[i]] === 'string' && i + 1 < paths.length) {\n      return undefined;\n    }\n    if (current[paths[i]] === undefined) {\n      var j = 2;\n      var p = paths.slice(i, i + j).join(keySeparator);\n      var mix = current[p];\n      while (mix === undefined && paths.length > i + j) {\n        j++;\n        p = paths.slice(i, i + j).join(keySeparator);\n        mix = current[p];\n      }\n      if (mix === undefined) return undefined;\n      if (mix === null) return null;\n      if (path.endsWith(p)) {\n        if (typeof mix === 'string') return mix;\n        if (p && typeof mix[p] === 'string') return mix[p];\n      }\n      var joinedPath = paths.slice(i + j).join(keySeparator);\n      if (joinedPath) return deepFind(mix, joinedPath, keySeparator);\n      return undefined;\n    }\n    current = current[paths[i]];\n  }\n  return current;\n}\nvar ResourceStore = function (_EventEmitter) {\n  _inherits(ResourceStore, _EventEmitter);\n  var _super = _createSuper$3(ResourceStore);\n  function ResourceStore(data) {\n    var _this;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n    _classCallCheck(this, ResourceStore);\n    _this = _super.call(this);\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n    _this.data = data || {};\n    _this.options = options;\n    if (_this.options.keySeparator === undefined) {\n      _this.options.keySeparator = '.';\n    }\n    if (_this.options.ignoreJSONStructure === undefined) {\n      _this.options.ignoreJSONStructure = true;\n    }\n    return _this;\n  }\n  _createClass(ResourceStore, [{\n    key: \"addNamespaces\",\n    value: function addNamespaces(ns) {\n      if (this.options.ns.indexOf(ns) < 0) {\n        this.options.ns.push(ns);\n      }\n    }\n  }, {\n    key: \"removeNamespaces\",\n    value: function removeNamespaces(ns) {\n      var index = this.options.ns.indexOf(ns);\n      if (index > -1) {\n        this.options.ns.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"getResource\",\n    value: function getResource(lng, ns, key) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      var ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n      var path = [lng, ns];\n      if (key && typeof key !== 'string') path = path.concat(key);\n      if (key && typeof key === 'string') path = path.concat(keySeparator ? key.split(keySeparator) : key);\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n      }\n      var result = getPath(this.data, path);\n      if (result || !ignoreJSONStructure || typeof key !== 'string') return result;\n      return deepFind(this.data && this.data[lng] && this.data[lng][ns], key, keySeparator);\n    }\n  }, {\n    key: \"addResource\",\n    value: function addResource(lng, ns, key, value) {\n      var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n        silent: false\n      };\n      var keySeparator = this.options.keySeparator;\n      if (keySeparator === undefined) keySeparator = '.';\n      var path = [lng, ns];\n      if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n        value = ns;\n        ns = path[1];\n      }\n      this.addNamespaces(ns);\n      setPath(this.data, path, value);\n      if (!options.silent) this.emit('added', lng, ns, key, value);\n    }\n  }, {\n    key: \"addResources\",\n    value: function addResources(lng, ns, resources) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n        silent: false\n      };\n      for (var m in resources) {\n        if (typeof resources[m] === 'string' || Object.prototype.toString.apply(resources[m]) === '[object Array]') this.addResource(lng, ns, m, resources[m], {\n          silent: true\n        });\n      }\n      if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n  }, {\n    key: \"addResourceBundle\",\n    value: function addResourceBundle(lng, ns, resources, deep, overwrite) {\n      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n        silent: false\n      };\n      var path = [lng, ns];\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n        deep = resources;\n        resources = ns;\n        ns = path[1];\n      }\n      this.addNamespaces(ns);\n      var pack = getPath(this.data, path) || {};\n      if (deep) {\n        deepExtend(pack, resources, overwrite);\n      } else {\n        pack = _objectSpread$5(_objectSpread$5({}, pack), resources);\n      }\n      setPath(this.data, path, pack);\n      if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n  }, {\n    key: \"removeResourceBundle\",\n    value: function removeResourceBundle(lng, ns) {\n      if (this.hasResourceBundle(lng, ns)) {\n        delete this.data[lng][ns];\n      }\n      this.removeNamespaces(ns);\n      this.emit('removed', lng, ns);\n    }\n  }, {\n    key: \"hasResourceBundle\",\n    value: function hasResourceBundle(lng, ns) {\n      return this.getResource(lng, ns) !== undefined;\n    }\n  }, {\n    key: \"getResourceBundle\",\n    value: function getResourceBundle(lng, ns) {\n      if (!ns) ns = this.options.defaultNS;\n      if (this.options.compatibilityAPI === 'v1') return _objectSpread$5(_objectSpread$5({}, {}), this.getResource(lng, ns));\n      return this.getResource(lng, ns);\n    }\n  }, {\n    key: \"getDataByLanguage\",\n    value: function getDataByLanguage(lng) {\n      return this.data[lng];\n    }\n  }, {\n    key: \"hasLanguageSomeTranslations\",\n    value: function hasLanguageSomeTranslations(lng) {\n      var data = this.getDataByLanguage(lng);\n      var n = data && Object.keys(data) || [];\n      return !!n.find(function (v) {\n        return data[v] && Object.keys(data[v]).length > 0;\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.data;\n    }\n  }]);\n  return ResourceStore;\n}(EventEmitter);\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor: function addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle: function handle(processors, value, key, options, translator) {\n    var _this = this;\n    processors.forEach(function (processor) {\n      if (_this.processors[processor]) value = _this.processors[processor].process(value, key, options, translator);\n    });\n    return value;\n  }\n};\n\nfunction ownKeys$4(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$4(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$4(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$4(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper$2(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$2(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$2() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar checkedLoadedFor = {};\nvar Translator = function (_EventEmitter) {\n  _inherits(Translator, _EventEmitter);\n  var _super = _createSuper$2(Translator);\n  function Translator(services) {\n    var _this;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Translator);\n    _this = _super.call(this);\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, _assertThisInitialized(_this));\n    _this.options = options;\n    if (_this.options.keySeparator === undefined) {\n      _this.options.keySeparator = '.';\n    }\n    _this.logger = baseLogger.create('translator');\n    return _this;\n  }\n  _createClass(Translator, [{\n    key: \"changeLanguage\",\n    value: function changeLanguage(lng) {\n      if (lng) this.language = lng;\n    }\n  }, {\n    key: \"exists\",\n    value: function exists(key) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        interpolation: {}\n      };\n      if (key === undefined || key === null) {\n        return false;\n      }\n      var resolved = this.resolve(key, options);\n      return resolved && resolved.res !== undefined;\n    }\n  }, {\n    key: \"extractFromKey\",\n    value: function extractFromKey(key, options) {\n      var nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n      if (nsSeparator === undefined) nsSeparator = ':';\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      var namespaces = options.ns || this.options.defaultNS || [];\n      var wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n      var seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n      if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n        var m = key.match(this.interpolator.nestingRegexp);\n        if (m && m.length > 0) {\n          return {\n            key: key,\n            namespaces: namespaces\n          };\n        }\n        var parts = key.split(nsSeparator);\n        if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n        key = parts.join(keySeparator);\n      }\n      if (typeof namespaces === 'string') namespaces = [namespaces];\n      return {\n        key: key,\n        namespaces: namespaces\n      };\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(keys, options, lastKey) {\n      var _this2 = this;\n      if (_typeof(options) !== 'object' && this.options.overloadTranslationOptionHandler) {\n        options = this.options.overloadTranslationOptionHandler(arguments);\n      }\n      if (!options) options = {};\n      if (keys === undefined || keys === null) return '';\n      if (!Array.isArray(keys)) keys = [String(keys)];\n      var returnDetails = options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      var _this$extractFromKey = this.extractFromKey(keys[keys.length - 1], options),\n        key = _this$extractFromKey.key,\n        namespaces = _this$extractFromKey.namespaces;\n      var namespace = namespaces[namespaces.length - 1];\n      var lng = options.lng || this.language;\n      var appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n      if (lng && lng.toLowerCase() === 'cimode') {\n        if (appendNamespaceToCIMode) {\n          var nsSeparator = options.nsSeparator || this.options.nsSeparator;\n          if (returnDetails) {\n            resolved.res = \"\".concat(namespace).concat(nsSeparator).concat(key);\n            return resolved;\n          }\n          return \"\".concat(namespace).concat(nsSeparator).concat(key);\n        }\n        if (returnDetails) {\n          resolved.res = key;\n          return resolved;\n        }\n        return key;\n      }\n      var resolved = this.resolve(keys, options);\n      var res = resolved && resolved.res;\n      var resUsedKey = resolved && resolved.usedKey || key;\n      var resExactUsedKey = resolved && resolved.exactUsedKey || key;\n      var resType = Object.prototype.toString.apply(res);\n      var noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n      var joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n      var handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n      var handleAsObject = typeof res !== 'string' && typeof res !== 'boolean' && typeof res !== 'number';\n      if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(typeof joinArrays === 'string' && resType === '[object Array]')) {\n        if (!options.returnObjects && !this.options.returnObjects) {\n          if (!this.options.returnedObjectHandler) {\n            this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n          }\n          var r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, _objectSpread$4(_objectSpread$4({}, options), {}, {\n            ns: namespaces\n          })) : \"key '\".concat(key, \" (\").concat(this.language, \")' returned an object instead of string.\");\n          if (returnDetails) {\n            resolved.res = r;\n            return resolved;\n          }\n          return r;\n        }\n        if (keySeparator) {\n          var resTypeIsArray = resType === '[object Array]';\n          var copy = resTypeIsArray ? [] : {};\n          var newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n          for (var m in res) {\n            if (Object.prototype.hasOwnProperty.call(res, m)) {\n              var deepKey = \"\".concat(newKeyToUse).concat(keySeparator).concat(m);\n              copy[m] = this.translate(deepKey, _objectSpread$4(_objectSpread$4({}, options), {\n                joinArrays: false,\n                ns: namespaces\n              }));\n              if (copy[m] === deepKey) copy[m] = res[m];\n            }\n          }\n          res = copy;\n        }\n      } else if (handleAsObjectInI18nFormat && typeof joinArrays === 'string' && resType === '[object Array]') {\n        res = res.join(joinArrays);\n        if (res) res = this.extendTranslation(res, keys, options, lastKey);\n      } else {\n        var usedDefault = false;\n        var usedKey = false;\n        var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n        var hasDefaultValue = Translator.hasDefaultValue(options);\n        var defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : '';\n        var defaultValue = options[\"defaultValue\".concat(defaultValueSuffix)] || options.defaultValue;\n        if (!this.isValidLookup(res) && hasDefaultValue) {\n          usedDefault = true;\n          res = defaultValue;\n        }\n        if (!this.isValidLookup(res)) {\n          usedKey = true;\n          res = key;\n        }\n        var missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n        var resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n        var updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n        if (usedKey || usedDefault || updateMissing) {\n          this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n          if (keySeparator) {\n            var fk = this.resolve(key, _objectSpread$4(_objectSpread$4({}, options), {}, {\n              keySeparator: false\n            }));\n            if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n          }\n          var lngs = [];\n          var fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n          if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n            for (var i = 0; i < fallbackLngs.length; i++) {\n              lngs.push(fallbackLngs[i]);\n            }\n          } else if (this.options.saveMissingTo === 'all') {\n            lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n          } else {\n            lngs.push(options.lng || this.language);\n          }\n          var send = function send(l, k, specificDefaultValue) {\n            var defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n            if (_this2.options.missingKeyHandler) {\n              _this2.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);\n            } else if (_this2.backendConnector && _this2.backendConnector.saveMissing) {\n              _this2.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);\n            }\n            _this2.emit('missingKey', l, namespace, k, res);\n          };\n          if (this.options.saveMissing) {\n            if (this.options.saveMissingPlurals && needsPluralHandling) {\n              lngs.forEach(function (language) {\n                _this2.pluralResolver.getSuffixes(language, options).forEach(function (suffix) {\n                  send([language], key + suffix, options[\"defaultValue\".concat(suffix)] || defaultValue);\n                });\n              });\n            } else {\n              send(lngs, key, defaultValue);\n            }\n          }\n        }\n        res = this.extendTranslation(res, keys, options, resolved, lastKey);\n        if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = \"\".concat(namespace, \":\").concat(key);\n        if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n          if (this.options.compatibilityAPI !== 'v1') {\n            res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? \"\".concat(namespace, \":\").concat(key) : key, usedDefault ? res : undefined);\n          } else {\n            res = this.options.parseMissingKeyHandler(res);\n          }\n        }\n      }\n      if (returnDetails) {\n        resolved.res = res;\n        return resolved;\n      }\n      return res;\n    }\n  }, {\n    key: \"extendTranslation\",\n    value: function extendTranslation(res, key, options, resolved, lastKey) {\n      var _this3 = this;\n      if (this.i18nFormat && this.i18nFormat.parse) {\n        res = this.i18nFormat.parse(res, _objectSpread$4(_objectSpread$4({}, this.options.interpolation.defaultVariables), options), resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n          resolved: resolved\n        });\n      } else if (!options.skipInterpolation) {\n        if (options.interpolation) this.interpolator.init(_objectSpread$4(_objectSpread$4({}, options), {\n          interpolation: _objectSpread$4(_objectSpread$4({}, this.options.interpolation), options.interpolation)\n        }));\n        var skipOnVariables = typeof res === 'string' && (options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n        var nestBef;\n        if (skipOnVariables) {\n          var nb = res.match(this.interpolator.nestingRegexp);\n          nestBef = nb && nb.length;\n        }\n        var data = options.replace && typeof options.replace !== 'string' ? options.replace : options;\n        if (this.options.interpolation.defaultVariables) data = _objectSpread$4(_objectSpread$4({}, this.options.interpolation.defaultVariables), data);\n        res = this.interpolator.interpolate(res, data, options.lng || this.language, options);\n        if (skipOnVariables) {\n          var na = res.match(this.interpolator.nestingRegexp);\n          var nestAft = na && na.length;\n          if (nestBef < nestAft) options.nest = false;\n        }\n        if (options.nest !== false) res = this.interpolator.nest(res, function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          if (lastKey && lastKey[0] === args[0] && !options.context) {\n            _this3.logger.warn(\"It seems you are nesting recursively key: \".concat(args[0], \" in key: \").concat(key[0]));\n            return null;\n          }\n          return _this3.translate.apply(_this3, args.concat([key]));\n        }, options);\n        if (options.interpolation) this.interpolator.reset();\n      }\n      var postProcess = options.postProcess || this.options.postProcess;\n      var postProcessorNames = typeof postProcess === 'string' ? [postProcess] : postProcess;\n      if (res !== undefined && res !== null && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) {\n        res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? _objectSpread$4({\n          i18nResolved: resolved\n        }, options) : options, this);\n      }\n      return res;\n    }\n  }, {\n    key: \"resolve\",\n    value: function resolve(keys) {\n      var _this4 = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var found;\n      var usedKey;\n      var exactUsedKey;\n      var usedLng;\n      var usedNS;\n      if (typeof keys === 'string') keys = [keys];\n      keys.forEach(function (k) {\n        if (_this4.isValidLookup(found)) return;\n        var extracted = _this4.extractFromKey(k, options);\n        var key = extracted.key;\n        usedKey = key;\n        var namespaces = extracted.namespaces;\n        if (_this4.options.fallbackNS) namespaces = namespaces.concat(_this4.options.fallbackNS);\n        var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n        var needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0 && _this4.pluralResolver.shouldUseIntlApi();\n        var needsContextHandling = options.context !== undefined && (typeof options.context === 'string' || typeof options.context === 'number') && options.context !== '';\n        var codes = options.lngs ? options.lngs : _this4.languageUtils.toResolveHierarchy(options.lng || _this4.language, options.fallbackLng);\n        namespaces.forEach(function (ns) {\n          if (_this4.isValidLookup(found)) return;\n          usedNS = ns;\n          if (!checkedLoadedFor[\"\".concat(codes[0], \"-\").concat(ns)] && _this4.utils && _this4.utils.hasLoadedNamespace && !_this4.utils.hasLoadedNamespace(usedNS)) {\n            checkedLoadedFor[\"\".concat(codes[0], \"-\").concat(ns)] = true;\n            _this4.logger.warn(\"key \\\"\".concat(usedKey, \"\\\" for languages \\\"\").concat(codes.join(', '), \"\\\" won't get resolved as namespace \\\"\").concat(usedNS, \"\\\" was not yet loaded\"), 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n          }\n          codes.forEach(function (code) {\n            if (_this4.isValidLookup(found)) return;\n            usedLng = code;\n            var finalKeys = [key];\n            if (_this4.i18nFormat && _this4.i18nFormat.addLookupKeys) {\n              _this4.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n            } else {\n              var pluralSuffix;\n              if (needsPluralHandling) pluralSuffix = _this4.pluralResolver.getSuffix(code, options.count, options);\n              var zeroSuffix = \"\".concat(_this4.options.pluralSeparator, \"zero\");\n              if (needsPluralHandling) {\n                finalKeys.push(key + pluralSuffix);\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(key + zeroSuffix);\n                }\n              }\n              if (needsContextHandling) {\n                var contextKey = \"\".concat(key).concat(_this4.options.contextSeparator).concat(options.context);\n                finalKeys.push(contextKey);\n                if (needsPluralHandling) {\n                  finalKeys.push(contextKey + pluralSuffix);\n                  if (needsZeroSuffixLookup) {\n                    finalKeys.push(contextKey + zeroSuffix);\n                  }\n                }\n              }\n            }\n            var possibleKey;\n            while (possibleKey = finalKeys.pop()) {\n              if (!_this4.isValidLookup(found)) {\n                exactUsedKey = possibleKey;\n                found = _this4.getResource(code, ns, possibleKey, options);\n              }\n            }\n          });\n        });\n      });\n      return {\n        res: found,\n        usedKey: usedKey,\n        exactUsedKey: exactUsedKey,\n        usedLng: usedLng,\n        usedNS: usedNS\n      };\n    }\n  }, {\n    key: \"isValidLookup\",\n    value: function isValidLookup(res) {\n      return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n    }\n  }, {\n    key: \"getResource\",\n    value: function getResource(code, ns, key) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      if (this.i18nFormat && this.i18nFormat.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n      return this.resourceStore.getResource(code, ns, key, options);\n    }\n  }], [{\n    key: \"hasDefaultValue\",\n    value: function hasDefaultValue(options) {\n      var prefix = 'defaultValue';\n      for (var option in options) {\n        if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }]);\n  return Translator;\n}(EventEmitter);\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\nvar LanguageUtil = function () {\n  function LanguageUtil(options) {\n    _classCallCheck(this, LanguageUtil);\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  _createClass(LanguageUtil, [{\n    key: \"getScriptPartFromCode\",\n    value: function getScriptPartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return null;\n      var p = code.split('-');\n      if (p.length === 2) return null;\n      p.pop();\n      if (p[p.length - 1].toLowerCase() === 'x') return null;\n      return this.formatLanguageCode(p.join('-'));\n    }\n  }, {\n    key: \"getLanguagePartFromCode\",\n    value: function getLanguagePartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return code;\n      var p = code.split('-');\n      return this.formatLanguageCode(p[0]);\n    }\n  }, {\n    key: \"formatLanguageCode\",\n    value: function formatLanguageCode(code) {\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        var specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n        var p = code.split('-');\n        if (this.options.lowerCaseLng) {\n          p = p.map(function (part) {\n            return part.toLowerCase();\n          });\n        } else if (p.length === 2) {\n          p[0] = p[0].toLowerCase();\n          p[1] = p[1].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        } else if (p.length === 3) {\n          p[0] = p[0].toLowerCase();\n          if (p[1].length === 2) p[1] = p[1].toUpperCase();\n          if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n          if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n        }\n        return p.join('-');\n      }\n      return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n    }\n  }, {\n    key: \"isSupportedCode\",\n    value: function isSupportedCode(code) {\n      if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n        code = this.getLanguagePartFromCode(code);\n      }\n      return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n    }\n  }, {\n    key: \"getBestMatchFromCodes\",\n    value: function getBestMatchFromCodes(codes) {\n      var _this = this;\n      if (!codes) return null;\n      var found;\n      codes.forEach(function (code) {\n        if (found) return;\n        var cleanedLng = _this.formatLanguageCode(code);\n        if (!_this.options.supportedLngs || _this.isSupportedCode(cleanedLng)) found = cleanedLng;\n      });\n      if (!found && this.options.supportedLngs) {\n        codes.forEach(function (code) {\n          if (found) return;\n          var lngOnly = _this.getLanguagePartFromCode(code);\n          if (_this.isSupportedCode(lngOnly)) return found = lngOnly;\n          found = _this.options.supportedLngs.find(function (supportedLng) {\n            if (supportedLng.indexOf(lngOnly) === 0) return supportedLng;\n          });\n        });\n      }\n      if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n      return found;\n    }\n  }, {\n    key: \"getFallbackCodes\",\n    value: function getFallbackCodes(fallbacks, code) {\n      if (!fallbacks) return [];\n      if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n      if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n      if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;\n      if (!code) return fallbacks[\"default\"] || [];\n      var found = fallbacks[code];\n      if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n      if (!found) found = fallbacks[this.formatLanguageCode(code)];\n      if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n      if (!found) found = fallbacks[\"default\"];\n      return found || [];\n    }\n  }, {\n    key: \"toResolveHierarchy\",\n    value: function toResolveHierarchy(code, fallbackCode) {\n      var _this2 = this;\n      var fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n      var codes = [];\n      var addCode = function addCode(c) {\n        if (!c) return;\n        if (_this2.isSupportedCode(c)) {\n          codes.push(c);\n        } else {\n          _this2.logger.warn(\"rejecting language code not found in supportedLngs: \".concat(c));\n        }\n      };\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n        if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n        if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n      } else if (typeof code === 'string') {\n        addCode(this.formatLanguageCode(code));\n      }\n      fallbackCodes.forEach(function (fc) {\n        if (codes.indexOf(fc) < 0) addCode(_this2.formatLanguageCode(fc));\n      });\n      return codes;\n    }\n  }]);\n  return LanguageUtil;\n}();\n\nvar sets = [{\n  lngs: ['ach', 'ak', 'am', 'arn', 'br', 'fil', 'gun', 'ln', 'mfe', 'mg', 'mi', 'oc', 'pt', 'pt-BR', 'tg', 'tl', 'ti', 'tr', 'uz', 'wa'],\n  nr: [1, 2],\n  fc: 1\n}, {\n  lngs: ['af', 'an', 'ast', 'az', 'bg', 'bn', 'ca', 'da', 'de', 'dev', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fi', 'fo', 'fur', 'fy', 'gl', 'gu', 'ha', 'hi', 'hu', 'hy', 'ia', 'it', 'kk', 'kn', 'ku', 'lb', 'mai', 'ml', 'mn', 'mr', 'nah', 'nap', 'nb', 'ne', 'nl', 'nn', 'no', 'nso', 'pa', 'pap', 'pms', 'ps', 'pt-PT', 'rm', 'sco', 'se', 'si', 'so', 'son', 'sq', 'sv', 'sw', 'ta', 'te', 'tk', 'ur', 'yo'],\n  nr: [1, 2],\n  fc: 2\n}, {\n  lngs: ['ay', 'bo', 'cgg', 'fa', 'ht', 'id', 'ja', 'jbo', 'ka', 'km', 'ko', 'ky', 'lo', 'ms', 'sah', 'su', 'th', 'tt', 'ug', 'vi', 'wo', 'zh'],\n  nr: [1],\n  fc: 3\n}, {\n  lngs: ['be', 'bs', 'cnr', 'dz', 'hr', 'ru', 'sr', 'uk'],\n  nr: [1, 2, 5],\n  fc: 4\n}, {\n  lngs: ['ar'],\n  nr: [0, 1, 2, 3, 11, 100],\n  fc: 5\n}, {\n  lngs: ['cs', 'sk'],\n  nr: [1, 2, 5],\n  fc: 6\n}, {\n  lngs: ['csb', 'pl'],\n  nr: [1, 2, 5],\n  fc: 7\n}, {\n  lngs: ['cy'],\n  nr: [1, 2, 3, 8],\n  fc: 8\n}, {\n  lngs: ['fr'],\n  nr: [1, 2],\n  fc: 9\n}, {\n  lngs: ['ga'],\n  nr: [1, 2, 3, 7, 11],\n  fc: 10\n}, {\n  lngs: ['gd'],\n  nr: [1, 2, 3, 20],\n  fc: 11\n}, {\n  lngs: ['is'],\n  nr: [1, 2],\n  fc: 12\n}, {\n  lngs: ['jv'],\n  nr: [0, 1],\n  fc: 13\n}, {\n  lngs: ['kw'],\n  nr: [1, 2, 3, 4],\n  fc: 14\n}, {\n  lngs: ['lt'],\n  nr: [1, 2, 10],\n  fc: 15\n}, {\n  lngs: ['lv'],\n  nr: [1, 2, 0],\n  fc: 16\n}, {\n  lngs: ['mk'],\n  nr: [1, 2],\n  fc: 17\n}, {\n  lngs: ['mnk'],\n  nr: [0, 1, 2],\n  fc: 18\n}, {\n  lngs: ['mt'],\n  nr: [1, 2, 11, 20],\n  fc: 19\n}, {\n  lngs: ['or'],\n  nr: [2, 1],\n  fc: 2\n}, {\n  lngs: ['ro'],\n  nr: [1, 2, 20],\n  fc: 20\n}, {\n  lngs: ['sl'],\n  nr: [5, 1, 2, 3],\n  fc: 21\n}, {\n  lngs: ['he', 'iw'],\n  nr: [1, 2, 20, 21],\n  fc: 22\n}];\nvar _rulesPluralsTypes = {\n  1: function _(n) {\n    return Number(n > 1);\n  },\n  2: function _(n) {\n    return Number(n != 1);\n  },\n  3: function _(n) {\n    return 0;\n  },\n  4: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  5: function _(n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);\n  },\n  6: function _(n) {\n    return Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2);\n  },\n  7: function _(n) {\n    return Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  8: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3);\n  },\n  9: function _(n) {\n    return Number(n >= 2);\n  },\n  10: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);\n  },\n  11: function _(n) {\n    return Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3);\n  },\n  12: function _(n) {\n    return Number(n % 10 != 1 || n % 100 == 11);\n  },\n  13: function _(n) {\n    return Number(n !== 0);\n  },\n  14: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3);\n  },\n  15: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  16: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2);\n  },\n  17: function _(n) {\n    return Number(n == 1 || n % 10 == 1 && n % 100 != 11 ? 0 : 1);\n  },\n  18: function _(n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : 2);\n  },\n  19: function _(n) {\n    return Number(n == 1 ? 0 : n == 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3);\n  },\n  20: function _(n) {\n    return Number(n == 1 ? 0 : n == 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2);\n  },\n  21: function _(n) {\n    return Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0);\n  },\n  22: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : (n < 0 || n > 10) && n % 10 == 0 ? 2 : 3);\n  }\n};\nvar deprecatedJsonVersions = ['v1', 'v2', 'v3'];\nvar suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nfunction createRules() {\n  var rules = {};\n  sets.forEach(function (set) {\n    set.lngs.forEach(function (l) {\n      rules[l] = {\n        numbers: set.nr,\n        plurals: _rulesPluralsTypes[set.fc]\n      };\n    });\n  });\n  return rules;\n}\nvar PluralResolver = function () {\n  function PluralResolver(languageUtils) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, PluralResolver);\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    if ((!this.options.compatibilityJSON || this.options.compatibilityJSON === 'v4') && (typeof Intl === 'undefined' || !Intl.PluralRules)) {\n      this.options.compatibilityJSON = 'v3';\n      this.logger.error('Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.');\n    }\n    this.rules = createRules();\n  }\n  _createClass(PluralResolver, [{\n    key: \"addRule\",\n    value: function addRule(lng, obj) {\n      this.rules[lng] = obj;\n    }\n  }, {\n    key: \"getRule\",\n    value: function getRule(code) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (this.shouldUseIntlApi()) {\n        try {\n          return new Intl.PluralRules(code, {\n            type: options.ordinal ? 'ordinal' : 'cardinal'\n          });\n        } catch (_unused) {\n          return;\n        }\n      }\n      return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];\n    }\n  }, {\n    key: \"needsPlural\",\n    value: function needsPlural(code) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var rule = this.getRule(code, options);\n      if (this.shouldUseIntlApi()) {\n        return rule && rule.resolvedOptions().pluralCategories.length > 1;\n      }\n      return rule && rule.numbers.length > 1;\n    }\n  }, {\n    key: \"getPluralFormsOfKey\",\n    value: function getPluralFormsOfKey(code, key) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.getSuffixes(code, options).map(function (suffix) {\n        return \"\".concat(key).concat(suffix);\n      });\n    }\n  }, {\n    key: \"getSuffixes\",\n    value: function getSuffixes(code) {\n      var _this = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var rule = this.getRule(code, options);\n      if (!rule) {\n        return [];\n      }\n      if (this.shouldUseIntlApi()) {\n        return rule.resolvedOptions().pluralCategories.sort(function (pluralCategory1, pluralCategory2) {\n          return suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2];\n        }).map(function (pluralCategory) {\n          return \"\".concat(_this.options.prepend).concat(pluralCategory);\n        });\n      }\n      return rule.numbers.map(function (number) {\n        return _this.getSuffix(code, number, options);\n      });\n    }\n  }, {\n    key: \"getSuffix\",\n    value: function getSuffix(code, count) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var rule = this.getRule(code, options);\n      if (rule) {\n        if (this.shouldUseIntlApi()) {\n          return \"\".concat(this.options.prepend).concat(rule.select(count));\n        }\n        return this.getSuffixRetroCompatible(rule, count);\n      }\n      this.logger.warn(\"no plural rule found for: \".concat(code));\n      return '';\n    }\n  }, {\n    key: \"getSuffixRetroCompatible\",\n    value: function getSuffixRetroCompatible(rule, count) {\n      var _this2 = this;\n      var idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));\n      var suffix = rule.numbers[idx];\n      if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n        if (suffix === 2) {\n          suffix = 'plural';\n        } else if (suffix === 1) {\n          suffix = '';\n        }\n      }\n      var returnSuffix = function returnSuffix() {\n        return _this2.options.prepend && suffix.toString() ? _this2.options.prepend + suffix.toString() : suffix.toString();\n      };\n      if (this.options.compatibilityJSON === 'v1') {\n        if (suffix === 1) return '';\n        if (typeof suffix === 'number') return \"_plural_\".concat(suffix.toString());\n        return returnSuffix();\n      } else if (this.options.compatibilityJSON === 'v2') {\n        return returnSuffix();\n      } else if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n        return returnSuffix();\n      }\n      return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();\n    }\n  }, {\n    key: \"shouldUseIntlApi\",\n    value: function shouldUseIntlApi() {\n      return !deprecatedJsonVersions.includes(this.options.compatibilityJSON);\n    }\n  }]);\n  return PluralResolver;\n}();\n\nfunction ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar Interpolator = function () {\n  function Interpolator() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, Interpolator);\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options.interpolation && options.interpolation.format || function (value) {\n      return value;\n    };\n    this.init(options);\n  }\n  _createClass(Interpolator, [{\n    key: \"init\",\n    value: function init() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!options.interpolation) options.interpolation = {\n        escapeValue: true\n      };\n      var iOpts = options.interpolation;\n      this.escape = iOpts.escape !== undefined ? iOpts.escape : escape;\n      this.escapeValue = iOpts.escapeValue !== undefined ? iOpts.escapeValue : true;\n      this.useRawValueToEscape = iOpts.useRawValueToEscape !== undefined ? iOpts.useRawValueToEscape : false;\n      this.prefix = iOpts.prefix ? regexEscape(iOpts.prefix) : iOpts.prefixEscaped || '{{';\n      this.suffix = iOpts.suffix ? regexEscape(iOpts.suffix) : iOpts.suffixEscaped || '}}';\n      this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n      this.unescapePrefix = iOpts.unescapeSuffix ? '' : iOpts.unescapePrefix || '-';\n      this.unescapeSuffix = this.unescapePrefix ? '' : iOpts.unescapeSuffix || '';\n      this.nestingPrefix = iOpts.nestingPrefix ? regexEscape(iOpts.nestingPrefix) : iOpts.nestingPrefixEscaped || regexEscape('$t(');\n      this.nestingSuffix = iOpts.nestingSuffix ? regexEscape(iOpts.nestingSuffix) : iOpts.nestingSuffixEscaped || regexEscape(')');\n      this.nestingOptionsSeparator = iOpts.nestingOptionsSeparator ? iOpts.nestingOptionsSeparator : iOpts.nestingOptionsSeparator || ',';\n      this.maxReplaces = iOpts.maxReplaces ? iOpts.maxReplaces : 1000;\n      this.alwaysFormat = iOpts.alwaysFormat !== undefined ? iOpts.alwaysFormat : false;\n      this.resetRegExp();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.options) this.init(this.options);\n    }\n  }, {\n    key: \"resetRegExp\",\n    value: function resetRegExp() {\n      var regexpStr = \"\".concat(this.prefix, \"(.+?)\").concat(this.suffix);\n      this.regexp = new RegExp(regexpStr, 'g');\n      var regexpUnescapeStr = \"\".concat(this.prefix).concat(this.unescapePrefix, \"(.+?)\").concat(this.unescapeSuffix).concat(this.suffix);\n      this.regexpUnescape = new RegExp(regexpUnescapeStr, 'g');\n      var nestingRegexpStr = \"\".concat(this.nestingPrefix, \"(.+?)\").concat(this.nestingSuffix);\n      this.nestingRegexp = new RegExp(nestingRegexpStr, 'g');\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(str, data, lng, options) {\n      var _this = this;\n      var match;\n      var value;\n      var replaces;\n      var defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n      function regexSafe(val) {\n        return val.replace(/\\$/g, '$$$$');\n      }\n      var handleFormat = function handleFormat(key) {\n        if (key.indexOf(_this.formatSeparator) < 0) {\n          var path = getPathWithDefaults(data, defaultData, key);\n          return _this.alwaysFormat ? _this.format(path, undefined, lng, _objectSpread$3(_objectSpread$3(_objectSpread$3({}, options), data), {}, {\n            interpolationkey: key\n          })) : path;\n        }\n        var p = key.split(_this.formatSeparator);\n        var k = p.shift().trim();\n        var f = p.join(_this.formatSeparator).trim();\n        return _this.format(getPathWithDefaults(data, defaultData, k), f, lng, _objectSpread$3(_objectSpread$3(_objectSpread$3({}, options), data), {}, {\n          interpolationkey: k\n        }));\n      };\n      this.resetRegExp();\n      var missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;\n      var skipOnVariables = options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n      var todos = [{\n        regex: this.regexpUnescape,\n        safeValue: function safeValue(val) {\n          return regexSafe(val);\n        }\n      }, {\n        regex: this.regexp,\n        safeValue: function safeValue(val) {\n          return _this.escapeValue ? regexSafe(_this.escape(val)) : regexSafe(val);\n        }\n      }];\n      todos.forEach(function (todo) {\n        replaces = 0;\n        while (match = todo.regex.exec(str)) {\n          var matchedVar = match[1].trim();\n          value = handleFormat(matchedVar);\n          if (value === undefined) {\n            if (typeof missingInterpolationHandler === 'function') {\n              var temp = missingInterpolationHandler(str, match, options);\n              value = typeof temp === 'string' ? temp : '';\n            } else if (options && options.hasOwnProperty(matchedVar)) {\n              value = '';\n            } else if (skipOnVariables) {\n              value = match[0];\n              continue;\n            } else {\n              _this.logger.warn(\"missed to pass in variable \".concat(matchedVar, \" for interpolating \").concat(str));\n              value = '';\n            }\n          } else if (typeof value !== 'string' && !_this.useRawValueToEscape) {\n            value = makeString(value);\n          }\n          var safeValue = todo.safeValue(value);\n          str = str.replace(match[0], safeValue);\n          if (skipOnVariables) {\n            todo.regex.lastIndex += value.length;\n            todo.regex.lastIndex -= match[0].length;\n          } else {\n            todo.regex.lastIndex = 0;\n          }\n          replaces++;\n          if (replaces >= _this.maxReplaces) {\n            break;\n          }\n        }\n      });\n      return str;\n    }\n  }, {\n    key: \"nest\",\n    value: function nest(str, fc) {\n      var _this2 = this;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var match;\n      var value;\n      var clonedOptions;\n      function handleHasOptions(key, inheritedOptions) {\n        var sep = this.nestingOptionsSeparator;\n        if (key.indexOf(sep) < 0) return key;\n        var c = key.split(new RegExp(\"\".concat(sep, \"[ ]*{\")));\n        var optionsString = \"{\".concat(c[1]);\n        key = c[0];\n        optionsString = this.interpolate(optionsString, clonedOptions);\n        var matchedSingleQuotes = optionsString.match(/'/g);\n        var matchedDoubleQuotes = optionsString.match(/\"/g);\n        if (matchedSingleQuotes && matchedSingleQuotes.length % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n          optionsString = optionsString.replace(/'/g, '\"');\n        }\n        try {\n          clonedOptions = JSON.parse(optionsString);\n          if (inheritedOptions) clonedOptions = _objectSpread$3(_objectSpread$3({}, inheritedOptions), clonedOptions);\n        } catch (e) {\n          this.logger.warn(\"failed parsing options string in nesting for key \".concat(key), e);\n          return \"\".concat(key).concat(sep).concat(optionsString);\n        }\n        delete clonedOptions.defaultValue;\n        return key;\n      }\n      while (match = this.nestingRegexp.exec(str)) {\n        var formatters = [];\n        clonedOptions = _objectSpread$3({}, options);\n        clonedOptions = clonedOptions.replace && typeof clonedOptions.replace !== 'string' ? clonedOptions.replace : clonedOptions;\n        clonedOptions.applyPostProcessor = false;\n        delete clonedOptions.defaultValue;\n        var doReduce = false;\n        if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n          var r = match[1].split(this.formatSeparator).map(function (elem) {\n            return elem.trim();\n          });\n          match[1] = r.shift();\n          formatters = r;\n          doReduce = true;\n        }\n        value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n        if (value && match[0] === str && typeof value !== 'string') return value;\n        if (typeof value !== 'string') value = makeString(value);\n        if (!value) {\n          this.logger.warn(\"missed to resolve \".concat(match[1], \" for nesting \").concat(str));\n          value = '';\n        }\n        if (doReduce) {\n          value = formatters.reduce(function (v, f) {\n            return _this2.format(v, f, options.lng, _objectSpread$3(_objectSpread$3({}, options), {}, {\n              interpolationkey: match[1].trim()\n            }));\n          }, value.trim());\n        }\n        str = str.replace(match[0], value);\n        this.regexp.lastIndex = 0;\n      }\n      return str;\n    }\n  }]);\n  return Interpolator;\n}();\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction parseFormatStr(formatStr) {\n  var formatName = formatStr.toLowerCase().trim();\n  var formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    var p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    var optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      var opts = optStr.split(';');\n      opts.forEach(function (opt) {\n        if (!opt) return;\n        var _opt$split = opt.split(':'),\n          _opt$split2 = _toArray(_opt$split),\n          key = _opt$split2[0],\n          rest = _opt$split2.slice(1);\n        var val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n        if (!formatOptions[key.trim()]) formatOptions[key.trim()] = val;\n        if (val === 'false') formatOptions[key.trim()] = false;\n        if (val === 'true') formatOptions[key.trim()] = true;\n        if (!isNaN(val)) formatOptions[key.trim()] = parseInt(val, 10);\n      });\n    }\n  }\n  return {\n    formatName: formatName,\n    formatOptions: formatOptions\n  };\n}\nfunction createCachedFormatter(fn) {\n  var cache = {};\n  return function invokeFormatter(val, lng, options) {\n    var key = lng + JSON.stringify(options);\n    var formatter = cache[key];\n    if (!formatter) {\n      formatter = fn(lng, options);\n      cache[key] = formatter;\n    }\n    return formatter(val);\n  };\n}\nvar Formatter = function () {\n  function Formatter() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, Formatter);\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.formats = {\n      number: createCachedFormatter(function (lng, options) {\n        var formatter = new Intl.NumberFormat(lng, options);\n        return function (val) {\n          return formatter.format(val);\n        };\n      }),\n      currency: createCachedFormatter(function (lng, options) {\n        var formatter = new Intl.NumberFormat(lng, _objectSpread$2(_objectSpread$2({}, options), {}, {\n          style: 'currency'\n        }));\n        return function (val) {\n          return formatter.format(val);\n        };\n      }),\n      datetime: createCachedFormatter(function (lng, options) {\n        var formatter = new Intl.DateTimeFormat(lng, _objectSpread$2({}, options));\n        return function (val) {\n          return formatter.format(val);\n        };\n      }),\n      relativetime: createCachedFormatter(function (lng, options) {\n        var formatter = new Intl.RelativeTimeFormat(lng, _objectSpread$2({}, options));\n        return function (val) {\n          return formatter.format(val, options.range || 'day');\n        };\n      }),\n      list: createCachedFormatter(function (lng, options) {\n        var formatter = new Intl.ListFormat(lng, _objectSpread$2({}, options));\n        return function (val) {\n          return formatter.format(val);\n        };\n      })\n    };\n    this.init(options);\n  }\n  _createClass(Formatter, [{\n    key: \"init\",\n    value: function init(services) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        interpolation: {}\n      };\n      var iOpts = options.interpolation;\n      this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n    }\n  }, {\n    key: \"add\",\n    value: function add(name, fc) {\n      this.formats[name.toLowerCase().trim()] = fc;\n    }\n  }, {\n    key: \"addCached\",\n    value: function addCached(name, fc) {\n      this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n    }\n  }, {\n    key: \"format\",\n    value: function format(value, _format, lng, options) {\n      var _this = this;\n      var formats = _format.split(this.formatSeparator);\n      var result = formats.reduce(function (mem, f) {\n        var _parseFormatStr = parseFormatStr(f),\n          formatName = _parseFormatStr.formatName,\n          formatOptions = _parseFormatStr.formatOptions;\n        if (_this.formats[formatName]) {\n          var formatted = mem;\n          try {\n            var valOptions = options && options.formatParams && options.formatParams[options.interpolationkey] || {};\n            var l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n            formatted = _this.formats[formatName](mem, l, _objectSpread$2(_objectSpread$2(_objectSpread$2({}, formatOptions), options), valOptions));\n          } catch (error) {\n            _this.logger.warn(error);\n          }\n          return formatted;\n        } else {\n          _this.logger.warn(\"there was no format function for \".concat(formatName));\n        }\n        return mem;\n      }, value);\n      return result;\n    }\n  }]);\n  return Formatter;\n}();\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$1(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$1() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction removePending(q, name) {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n}\nvar Connector = function (_EventEmitter) {\n  _inherits(Connector, _EventEmitter);\n  var _super = _createSuper$1(Connector);\n  function Connector(backend, store, services) {\n    var _this;\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    _classCallCheck(this, Connector);\n    _this = _super.call(this);\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n    _this.backend = backend;\n    _this.store = store;\n    _this.services = services;\n    _this.languageUtils = services.languageUtils;\n    _this.options = options;\n    _this.logger = baseLogger.create('backendConnector');\n    _this.waitingReads = [];\n    _this.maxParallelReads = options.maxParallelReads || 10;\n    _this.readingCalls = 0;\n    _this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    _this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    _this.state = {};\n    _this.queue = [];\n    if (_this.backend && _this.backend.init) {\n      _this.backend.init(services, options.backend, options);\n    }\n    return _this;\n  }\n  _createClass(Connector, [{\n    key: \"queueLoad\",\n    value: function queueLoad(languages, namespaces, options, callback) {\n      var _this2 = this;\n      var toLoad = {};\n      var pending = {};\n      var toLoadLanguages = {};\n      var toLoadNamespaces = {};\n      languages.forEach(function (lng) {\n        var hasAllNamespaces = true;\n        namespaces.forEach(function (ns) {\n          var name = \"\".concat(lng, \"|\").concat(ns);\n          if (!options.reload && _this2.store.hasResourceBundle(lng, ns)) {\n            _this2.state[name] = 2;\n          } else if (_this2.state[name] < 0) ; else if (_this2.state[name] === 1) {\n            if (pending[name] === undefined) pending[name] = true;\n          } else {\n            _this2.state[name] = 1;\n            hasAllNamespaces = false;\n            if (pending[name] === undefined) pending[name] = true;\n            if (toLoad[name] === undefined) toLoad[name] = true;\n            if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n          }\n        });\n        if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n      });\n      if (Object.keys(toLoad).length || Object.keys(pending).length) {\n        this.queue.push({\n          pending: pending,\n          pendingCount: Object.keys(pending).length,\n          loaded: {},\n          errors: [],\n          callback: callback\n        });\n      }\n      return {\n        toLoad: Object.keys(toLoad),\n        pending: Object.keys(pending),\n        toLoadLanguages: Object.keys(toLoadLanguages),\n        toLoadNamespaces: Object.keys(toLoadNamespaces)\n      };\n    }\n  }, {\n    key: \"loaded\",\n    value: function loaded(name, err, data) {\n      var s = name.split('|');\n      var lng = s[0];\n      var ns = s[1];\n      if (err) this.emit('failedLoading', lng, ns, err);\n      if (data) {\n        this.store.addResourceBundle(lng, ns, data);\n      }\n      this.state[name] = err ? -1 : 2;\n      var loaded = {};\n      this.queue.forEach(function (q) {\n        pushPath(q.loaded, [lng], ns);\n        removePending(q, name);\n        if (err) q.errors.push(err);\n        if (q.pendingCount === 0 && !q.done) {\n          Object.keys(q.loaded).forEach(function (l) {\n            if (!loaded[l]) loaded[l] = {};\n            var loadedKeys = q.loaded[l];\n            if (loadedKeys.length) {\n              loadedKeys.forEach(function (ns) {\n                if (loaded[l][ns] === undefined) loaded[l][ns] = true;\n              });\n            }\n          });\n          q.done = true;\n          if (q.errors.length) {\n            q.callback(q.errors);\n          } else {\n            q.callback();\n          }\n        }\n      });\n      this.emit('loaded', loaded);\n      this.queue = this.queue.filter(function (q) {\n        return !q.done;\n      });\n    }\n  }, {\n    key: \"read\",\n    value: function read(lng, ns, fcName) {\n      var _this3 = this;\n      var tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.retryTimeout;\n      var callback = arguments.length > 5 ? arguments[5] : undefined;\n      if (!lng.length) return callback(null, {});\n      if (this.readingCalls >= this.maxParallelReads) {\n        this.waitingReads.push({\n          lng: lng,\n          ns: ns,\n          fcName: fcName,\n          tried: tried,\n          wait: wait,\n          callback: callback\n        });\n        return;\n      }\n      this.readingCalls++;\n      var resolver = function resolver(err, data) {\n        _this3.readingCalls--;\n        if (_this3.waitingReads.length > 0) {\n          var next = _this3.waitingReads.shift();\n          _this3.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n        }\n        if (err && data && tried < _this3.maxRetries) {\n          setTimeout(function () {\n            _this3.read.call(_this3, lng, ns, fcName, tried + 1, wait * 2, callback);\n          }, wait);\n          return;\n        }\n        callback(err, data);\n      };\n      var fc = this.backend[fcName].bind(this.backend);\n      if (fc.length === 2) {\n        try {\n          var r = fc(lng, ns);\n          if (r && typeof r.then === 'function') {\n            r.then(function (data) {\n              return resolver(null, data);\n            })[\"catch\"](resolver);\n          } else {\n            resolver(null, r);\n          }\n        } catch (err) {\n          resolver(err);\n        }\n        return;\n      }\n      return fc(lng, ns, resolver);\n    }\n  }, {\n    key: \"prepareLoading\",\n    value: function prepareLoading(languages, namespaces) {\n      var _this4 = this;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var callback = arguments.length > 3 ? arguments[3] : undefined;\n      if (!this.backend) {\n        this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n        return callback && callback();\n      }\n      if (typeof languages === 'string') languages = this.languageUtils.toResolveHierarchy(languages);\n      if (typeof namespaces === 'string') namespaces = [namespaces];\n      var toLoad = this.queueLoad(languages, namespaces, options, callback);\n      if (!toLoad.toLoad.length) {\n        if (!toLoad.pending.length) callback();\n        return null;\n      }\n      toLoad.toLoad.forEach(function (name) {\n        _this4.loadOne(name);\n      });\n    }\n  }, {\n    key: \"load\",\n    value: function load(languages, namespaces, callback) {\n      this.prepareLoading(languages, namespaces, {}, callback);\n    }\n  }, {\n    key: \"reload\",\n    value: function reload(languages, namespaces, callback) {\n      this.prepareLoading(languages, namespaces, {\n        reload: true\n      }, callback);\n    }\n  }, {\n    key: \"loadOne\",\n    value: function loadOne(name) {\n      var _this5 = this;\n      var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var s = name.split('|');\n      var lng = s[0];\n      var ns = s[1];\n      this.read(lng, ns, 'read', undefined, undefined, function (err, data) {\n        if (err) _this5.logger.warn(\"\".concat(prefix, \"loading namespace \").concat(ns, \" for language \").concat(lng, \" failed\"), err);\n        if (!err && data) _this5.logger.log(\"\".concat(prefix, \"loaded namespace \").concat(ns, \" for language \").concat(lng), data);\n        _this5.loaded(name, err, data);\n      });\n    }\n  }, {\n    key: \"saveMissing\",\n    value: function saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n      var clb = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : function () {};\n      if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)) {\n        this.logger.warn(\"did not save key \\\"\".concat(key, \"\\\" as the namespace \\\"\").concat(namespace, \"\\\" was not yet loaded\"), 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        return;\n      }\n      if (key === undefined || key === null || key === '') return;\n      if (this.backend && this.backend.create) {\n        var opts = _objectSpread$1(_objectSpread$1({}, options), {}, {\n          isUpdate: isUpdate\n        });\n        var fc = this.backend.create.bind(this.backend);\n        if (fc.length < 6) {\n          try {\n            var r;\n            if (fc.length === 5) {\n              r = fc(languages, namespace, key, fallbackValue, opts);\n            } else {\n              r = fc(languages, namespace, key, fallbackValue);\n            }\n            if (r && typeof r.then === 'function') {\n              r.then(function (data) {\n                return clb(null, data);\n              })[\"catch\"](clb);\n            } else {\n              clb(null, r);\n            }\n          } catch (err) {\n            clb(err);\n          }\n        } else {\n          fc(languages, namespace, key, fallbackValue, clb, opts);\n        }\n      }\n      if (!languages || !languages[0]) return;\n      this.store.addResource(languages[0], namespace, key, fallbackValue);\n    }\n  }]);\n  return Connector;\n}(EventEmitter);\n\nfunction get() {\n  return {\n    debug: false,\n    initImmediate: true,\n    ns: ['translation'],\n    defaultNS: ['translation'],\n    fallbackLng: ['dev'],\n    fallbackNS: false,\n    supportedLngs: false,\n    nonExplicitSupportedLngs: false,\n    load: 'all',\n    preload: false,\n    simplifyPluralSuffix: true,\n    keySeparator: '.',\n    nsSeparator: ':',\n    pluralSeparator: '_',\n    contextSeparator: '_',\n    partialBundledLanguages: false,\n    saveMissing: false,\n    updateMissing: false,\n    saveMissingTo: 'fallback',\n    saveMissingPlurals: true,\n    missingKeyHandler: false,\n    missingInterpolationHandler: false,\n    postProcess: false,\n    postProcessPassResolved: false,\n    returnNull: true,\n    returnEmptyString: true,\n    returnObjects: false,\n    joinArrays: false,\n    returnedObjectHandler: false,\n    parseMissingKeyHandler: false,\n    appendNamespaceToMissingKey: false,\n    appendNamespaceToCIMode: false,\n    overloadTranslationOptionHandler: function handle(args) {\n      var ret = {};\n      if (_typeof(args[1]) === 'object') ret = args[1];\n      if (typeof args[1] === 'string') ret.defaultValue = args[1];\n      if (typeof args[2] === 'string') ret.tDescription = args[2];\n      if (_typeof(args[2]) === 'object' || _typeof(args[3]) === 'object') {\n        var options = args[3] || args[2];\n        Object.keys(options).forEach(function (key) {\n          ret[key] = options[key];\n        });\n      }\n      return ret;\n    },\n    interpolation: {\n      escapeValue: true,\n      format: function format(value, _format, lng, options) {\n        return value;\n      },\n      prefix: '{{',\n      suffix: '}}',\n      formatSeparator: ',',\n      unescapePrefix: '-',\n      nestingPrefix: '$t(',\n      nestingSuffix: ')',\n      nestingOptionsSeparator: ',',\n      maxReplaces: 1000,\n      skipOnVariables: true\n    }\n  };\n}\nfunction transformOptions(options) {\n  if (typeof options.ns === 'string') options.ns = [options.ns];\n  if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];\n  if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs && options.supportedLngs.indexOf('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  return options;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction noop() {}\nfunction bindMemberFunctions(inst) {\n  var mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(function (mem) {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n}\nvar I18n = function (_EventEmitter) {\n  _inherits(I18n, _EventEmitter);\n  var _super = _createSuper(I18n);\n  function I18n() {\n    var _this;\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var callback = arguments.length > 1 ? arguments[1] : undefined;\n    _classCallCheck(this, I18n);\n    _this = _super.call(this);\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n    _this.options = transformOptions(options);\n    _this.services = {};\n    _this.logger = baseLogger;\n    _this.modules = {\n      external: []\n    };\n    bindMemberFunctions(_assertThisInitialized(_this));\n    if (callback && !_this.isInitialized && !options.isClone) {\n      if (!_this.options.initImmediate) {\n        _this.init(options, callback);\n        return _possibleConstructorReturn(_this, _assertThisInitialized(_this));\n      }\n      setTimeout(function () {\n        _this.init(options, callback);\n      }, 0);\n    }\n    return _this;\n  }\n  _createClass(I18n, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n      if (!options.defaultNS && options.defaultNS !== false && options.ns) {\n        if (typeof options.ns === 'string') {\n          options.defaultNS = options.ns;\n        } else if (options.ns.indexOf('translation') < 0) {\n          options.defaultNS = options.ns[0];\n        }\n      }\n      var defOpts = get();\n      this.options = _objectSpread(_objectSpread(_objectSpread({}, defOpts), this.options), transformOptions(options));\n      if (this.options.compatibilityAPI !== 'v1') {\n        this.options.interpolation = _objectSpread(_objectSpread({}, defOpts.interpolation), this.options.interpolation);\n      }\n      if (options.keySeparator !== undefined) {\n        this.options.userDefinedKeySeparator = options.keySeparator;\n      }\n      if (options.nsSeparator !== undefined) {\n        this.options.userDefinedNsSeparator = options.nsSeparator;\n      }\n      function createClassOnDemand(ClassOrObject) {\n        if (!ClassOrObject) return null;\n        if (typeof ClassOrObject === 'function') return new ClassOrObject();\n        return ClassOrObject;\n      }\n      if (!this.options.isClone) {\n        if (this.modules.logger) {\n          baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n        } else {\n          baseLogger.init(null, this.options);\n        }\n        var formatter;\n        if (this.modules.formatter) {\n          formatter = this.modules.formatter;\n        } else if (typeof Intl !== 'undefined') {\n          formatter = Formatter;\n        }\n        var lu = new LanguageUtil(this.options);\n        this.store = new ResourceStore(this.options.resources, this.options);\n        var s = this.services;\n        s.logger = baseLogger;\n        s.resourceStore = this.store;\n        s.languageUtils = lu;\n        s.pluralResolver = new PluralResolver(lu, {\n          prepend: this.options.pluralSeparator,\n          compatibilityJSON: this.options.compatibilityJSON,\n          simplifyPluralSuffix: this.options.simplifyPluralSuffix\n        });\n        if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n          s.formatter = createClassOnDemand(formatter);\n          s.formatter.init(s, this.options);\n          this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n        }\n        s.interpolator = new Interpolator(this.options);\n        s.utils = {\n          hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n        };\n        s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n        s.backendConnector.on('*', function (event) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          _this2.emit.apply(_this2, [event].concat(args));\n        });\n        if (this.modules.languageDetector) {\n          s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n          if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n        }\n        if (this.modules.i18nFormat) {\n          s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n          if (s.i18nFormat.init) s.i18nFormat.init(this);\n        }\n        this.translator = new Translator(this.services, this.options);\n        this.translator.on('*', function (event) {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n          _this2.emit.apply(_this2, [event].concat(args));\n        });\n        this.modules.external.forEach(function (m) {\n          if (m.init) m.init(_this2);\n        });\n      }\n      this.format = this.options.interpolation.format;\n      if (!callback) callback = noop;\n      if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n        var codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n      }\n      if (!this.services.languageDetector && !this.options.lng) {\n        this.logger.warn('init: no languageDetector is used and no lng is defined');\n      }\n      var storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n      storeApi.forEach(function (fcName) {\n        _this2[fcName] = function () {\n          var _this2$store;\n          return (_this2$store = _this2.store)[fcName].apply(_this2$store, arguments);\n        };\n      });\n      var storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n      storeApiChained.forEach(function (fcName) {\n        _this2[fcName] = function () {\n          var _this2$store2;\n          (_this2$store2 = _this2.store)[fcName].apply(_this2$store2, arguments);\n          return _this2;\n        };\n      });\n      var deferred = defer();\n      var load = function load() {\n        var finish = function finish(err, t) {\n          if (_this2.isInitialized && !_this2.initializedStoreOnce) _this2.logger.warn('init: i18next is already initialized. You should call init just once!');\n          _this2.isInitialized = true;\n          if (!_this2.options.isClone) _this2.logger.log('initialized', _this2.options);\n          _this2.emit('initialized', _this2.options);\n          deferred.resolve(t);\n          callback(err, t);\n        };\n        if (_this2.languages && _this2.options.compatibilityAPI !== 'v1' && !_this2.isInitialized) return finish(null, _this2.t.bind(_this2));\n        _this2.changeLanguage(_this2.options.lng, finish);\n      };\n      if (this.options.resources || !this.options.initImmediate) {\n        load();\n      } else {\n        setTimeout(load, 0);\n      }\n      return deferred;\n    }\n  }, {\n    key: \"loadResources\",\n    value: function loadResources(language) {\n      var _this3 = this;\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n      var usedCallback = callback;\n      var usedLng = typeof language === 'string' ? language : this.language;\n      if (typeof language === 'function') usedCallback = language;\n      if (!this.options.resources || this.options.partialBundledLanguages) {\n        if (usedLng && usedLng.toLowerCase() === 'cimode') return usedCallback();\n        var toLoad = [];\n        var append = function append(lng) {\n          if (!lng) return;\n          var lngs = _this3.services.languageUtils.toResolveHierarchy(lng);\n          lngs.forEach(function (l) {\n            if (toLoad.indexOf(l) < 0) toLoad.push(l);\n          });\n        };\n        if (!usedLng) {\n          var fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n          fallbacks.forEach(function (l) {\n            return append(l);\n          });\n        } else {\n          append(usedLng);\n        }\n        if (this.options.preload) {\n          this.options.preload.forEach(function (l) {\n            return append(l);\n          });\n        }\n        this.services.backendConnector.load(toLoad, this.options.ns, function (e) {\n          if (!e && !_this3.resolvedLanguage && _this3.language) _this3.setResolvedLanguage(_this3.language);\n          usedCallback(e);\n        });\n      } else {\n        usedCallback(null);\n      }\n    }\n  }, {\n    key: \"reloadResources\",\n    value: function reloadResources(lngs, ns, callback) {\n      var deferred = defer();\n      if (!lngs) lngs = this.languages;\n      if (!ns) ns = this.options.ns;\n      if (!callback) callback = noop;\n      this.services.backendConnector.reload(lngs, ns, function (err) {\n        deferred.resolve();\n        callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"use\",\n    value: function use(module) {\n      if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n      if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n      if (module.type === 'backend') {\n        this.modules.backend = module;\n      }\n      if (module.type === 'logger' || module.log && module.warn && module.error) {\n        this.modules.logger = module;\n      }\n      if (module.type === 'languageDetector') {\n        this.modules.languageDetector = module;\n      }\n      if (module.type === 'i18nFormat') {\n        this.modules.i18nFormat = module;\n      }\n      if (module.type === 'postProcessor') {\n        postProcessor.addPostProcessor(module);\n      }\n      if (module.type === 'formatter') {\n        this.modules.formatter = module;\n      }\n      if (module.type === '3rdParty') {\n        this.modules.external.push(module);\n      }\n      return this;\n    }\n  }, {\n    key: \"setResolvedLanguage\",\n    value: function setResolvedLanguage(l) {\n      if (!l || !this.languages) return;\n      if (['cimode', 'dev'].indexOf(l) > -1) return;\n      for (var li = 0; li < this.languages.length; li++) {\n        var lngInLngs = this.languages[li];\n        if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n        if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n          this.resolvedLanguage = lngInLngs;\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"changeLanguage\",\n    value: function changeLanguage(lng, callback) {\n      var _this4 = this;\n      this.isLanguageChangingTo = lng;\n      var deferred = defer();\n      this.emit('languageChanging', lng);\n      var setLngProps = function setLngProps(l) {\n        _this4.language = l;\n        _this4.languages = _this4.services.languageUtils.toResolveHierarchy(l);\n        _this4.resolvedLanguage = undefined;\n        _this4.setResolvedLanguage(l);\n      };\n      var done = function done(err, l) {\n        if (l) {\n          setLngProps(l);\n          _this4.translator.changeLanguage(l);\n          _this4.isLanguageChangingTo = undefined;\n          _this4.emit('languageChanged', l);\n          _this4.logger.log('languageChanged', l);\n        } else {\n          _this4.isLanguageChangingTo = undefined;\n        }\n        deferred.resolve(function () {\n          return _this4.t.apply(_this4, arguments);\n        });\n        if (callback) callback(err, function () {\n          return _this4.t.apply(_this4, arguments);\n        });\n      };\n      var setLng = function setLng(lngs) {\n        if (!lng && !lngs && _this4.services.languageDetector) lngs = [];\n        var l = typeof lngs === 'string' ? lngs : _this4.services.languageUtils.getBestMatchFromCodes(lngs);\n        if (l) {\n          if (!_this4.language) {\n            setLngProps(l);\n          }\n          if (!_this4.translator.language) _this4.translator.changeLanguage(l);\n          if (_this4.services.languageDetector && _this4.services.languageDetector.cacheUserLanguage) _this4.services.languageDetector.cacheUserLanguage(l);\n        }\n        _this4.loadResources(l, function (err) {\n          done(err, l);\n        });\n      };\n      if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n        setLng(this.services.languageDetector.detect());\n      } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n        if (this.services.languageDetector.detect.length === 0) {\n          this.services.languageDetector.detect().then(setLng);\n        } else {\n          this.services.languageDetector.detect(setLng);\n        }\n      } else {\n        setLng(lng);\n      }\n      return deferred;\n    }\n  }, {\n    key: \"getFixedT\",\n    value: function getFixedT(lng, ns, keyPrefix) {\n      var _this5 = this;\n      var fixedT = function fixedT(key, opts) {\n        var options;\n        if (_typeof(opts) !== 'object') {\n          for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n            rest[_key3 - 2] = arguments[_key3];\n          }\n          options = _this5.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n        } else {\n          options = _objectSpread({}, opts);\n        }\n        options.lng = options.lng || fixedT.lng;\n        options.lngs = options.lngs || fixedT.lngs;\n        options.ns = options.ns || fixedT.ns;\n        options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;\n        var keySeparator = _this5.options.keySeparator || '.';\n        var resultKey;\n        if (options.keyPrefix && Array.isArray(key)) {\n          resultKey = key.map(function (k) {\n            return \"\".concat(options.keyPrefix).concat(keySeparator).concat(k);\n          });\n        } else {\n          resultKey = options.keyPrefix ? \"\".concat(options.keyPrefix).concat(keySeparator).concat(key) : key;\n        }\n        return _this5.t(resultKey, options);\n      };\n      if (typeof lng === 'string') {\n        fixedT.lng = lng;\n      } else {\n        fixedT.lngs = lng;\n      }\n      fixedT.ns = ns;\n      fixedT.keyPrefix = keyPrefix;\n      return fixedT;\n    }\n  }, {\n    key: \"t\",\n    value: function t() {\n      var _this$translator;\n      return this.translator && (_this$translator = this.translator).translate.apply(_this$translator, arguments);\n    }\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      var _this$translator2;\n      return this.translator && (_this$translator2 = this.translator).exists.apply(_this$translator2, arguments);\n    }\n  }, {\n    key: \"setDefaultNamespace\",\n    value: function setDefaultNamespace(ns) {\n      this.options.defaultNS = ns;\n    }\n  }, {\n    key: \"hasLoadedNamespace\",\n    value: function hasLoadedNamespace(ns) {\n      var _this6 = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!this.isInitialized) {\n        this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n        return false;\n      }\n      if (!this.languages || !this.languages.length) {\n        this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n        return false;\n      }\n      var lng = this.resolvedLanguage || this.languages[0];\n      var fallbackLng = this.options ? this.options.fallbackLng : false;\n      var lastLng = this.languages[this.languages.length - 1];\n      if (lng.toLowerCase() === 'cimode') return true;\n      var loadNotPending = function loadNotPending(l, n) {\n        var loadState = _this6.services.backendConnector.state[\"\".concat(l, \"|\").concat(n)];\n        return loadState === -1 || loadState === 2;\n      };\n      if (options.precheck) {\n        var preResult = options.precheck(this, loadNotPending);\n        if (preResult !== undefined) return preResult;\n      }\n      if (this.hasResourceBundle(lng, ns)) return true;\n      if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n      if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n      return false;\n    }\n  }, {\n    key: \"loadNamespaces\",\n    value: function loadNamespaces(ns, callback) {\n      var _this7 = this;\n      var deferred = defer();\n      if (!this.options.ns) {\n        callback && callback();\n        return Promise.resolve();\n      }\n      if (typeof ns === 'string') ns = [ns];\n      ns.forEach(function (n) {\n        if (_this7.options.ns.indexOf(n) < 0) _this7.options.ns.push(n);\n      });\n      this.loadResources(function (err) {\n        deferred.resolve();\n        if (callback) callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"loadLanguages\",\n    value: function loadLanguages(lngs, callback) {\n      var deferred = defer();\n      if (typeof lngs === 'string') lngs = [lngs];\n      var preloaded = this.options.preload || [];\n      var newLngs = lngs.filter(function (lng) {\n        return preloaded.indexOf(lng) < 0;\n      });\n      if (!newLngs.length) {\n        if (callback) callback();\n        return Promise.resolve();\n      }\n      this.options.preload = preloaded.concat(newLngs);\n      this.loadResources(function (err) {\n        deferred.resolve();\n        if (callback) callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"dir\",\n    value: function dir(lng) {\n      if (!lng) lng = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language);\n      if (!lng) return 'rtl';\n      var rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n      var languageUtils = this.services && this.services.languageUtils || new LanguageUtil(get());\n      return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n    }\n  }, {\n    key: \"cloneInstance\",\n    value: function cloneInstance() {\n      var _this8 = this;\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n      var mergedOptions = _objectSpread(_objectSpread(_objectSpread({}, this.options), options), {\n        isClone: true\n      });\n      var clone = new I18n(mergedOptions);\n      if (options.debug !== undefined || options.prefix !== undefined) {\n        clone.logger = clone.logger.clone(options);\n      }\n      var membersToCopy = ['store', 'services', 'language'];\n      membersToCopy.forEach(function (m) {\n        clone[m] = _this8[m];\n      });\n      clone.services = _objectSpread({}, this.services);\n      clone.services.utils = {\n        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n      };\n      clone.translator = new Translator(clone.services, clone.options);\n      clone.translator.on('*', function (event) {\n        for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n          args[_key4 - 1] = arguments[_key4];\n        }\n        clone.emit.apply(clone, [event].concat(args));\n      });\n      clone.init(mergedOptions, callback);\n      clone.translator.options = clone.options;\n      clone.translator.backendConnector.services.utils = {\n        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n      };\n      return clone;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        options: this.options,\n        store: this.store,\n        language: this.language,\n        languages: this.languages,\n        resolvedLanguage: this.resolvedLanguage\n      };\n    }\n  }]);\n  return I18n;\n}(EventEmitter);\n_defineProperty(I18n, \"createInstance\", function () {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var callback = arguments.length > 1 ? arguments[1] : undefined;\n  return new I18n(options, callback);\n});\nvar instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nvar createInstance = instance.createInstance;\nvar dir = instance.dir;\nvar init = instance.init;\nvar loadResources = instance.loadResources;\nvar reloadResources = instance.reloadResources;\nvar use = instance.use;\nvar changeLanguage = instance.changeLanguage;\nvar getFixedT = instance.getFixedT;\nvar t = instance.t;\nvar exists = instance.exists;\nvar setDefaultNamespace = instance.setDefaultNamespace;\nvar hasLoadedNamespace = instance.hasLoadedNamespace;\nvar loadNamespaces = instance.loadNamespaces;\nvar loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n", "import { format, player } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { Alert, Notification, revealStuff } from './UpdateHTML';\nimport { Synergism } from './Events';\nimport { sumContents } from './Utility';\nimport Decimal from 'break_infinity.js';\nimport { CalcCorruptionStuff, calculateTimeAcceleration } from './Calculate';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport i18next from 'i18next';\n\nexport const achievementpointvalues = [0,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    2, 8, 10, 2, 8, 10, 10,\n    2, 8, 10, 10, 10, 10, 10,\n    2, 4, 6, 8, 10, 10, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    1, 2, 4, 6, 8, 9, 10,\n    10, 10, 10, 10, 10, 10, 10,\n    10, 10, 10, 10, 10, 10, 10,\n    20, 20, 20, 40, 60, 60, 100,\n    20, 20, 40, 40, 60, 60, 100,\n    20, 20, 40, 40, 60, 60, 100,\n    20, 40, 40, 40, 60, 60, 100,\n    40, 40, 40, 60, 60, 100, 100,\n    40, 40, 60, 60, 100, 100, 100,\n    20, 40, 40, 60, 60, 100, 100,\n    40, 60, 100, 60, 100, 100, 40,\n    40, 40, 40, 40, 40, 40, 40,\n    40, 40, 40, 40, 100, 100, 0,\n    50, 75, 75, 75, 100, 100, 150,\n    50, 75, 75, 75, 100, 100, 150,\n    50, 75, 75, 75, 100, 100, 150,\n    10, 10, 20, 20, 30, 40, 50\n];\n\nexport const totalachievementpoints = achievementpointvalues.reduce((a, b) => a + b, 0);\n\nexport const areward = (i: number): string => {\n    // May 22, 2021: Allow achievement bonus values display directly in the description\n    // Using areward as const object did not allow ${player object}\n\n    //Effective score is 3rd index\n    const corr = CalcCorruptionStuff();\n\n    const extra: Record<number, string | Record<string, string>> = {\n        118: format(Math.pow(0.9925, player.challengecompletions[6] + player.challengecompletions[7] + player.challengecompletions[8] + player.challengecompletions[9] + player.challengecompletions[10]), 4),\n        169: format(Decimal.log(player.antPoints.add(10), 10), 2),\n        174: format(0.4 * Decimal.log(player.antPoints.add(1), 10), 2),\n        187: { x: format(Math.max(1, Math.log10(corr[3]+1) - 7), 2), y: format(Math.min(100, player.ascensionCount / 10000), 2) },\n        188: format(Math.min(100, player.ascensionCount / 50000), 2),\n        189: format(Math.min(200, player.ascensionCount / 2.5e6), 2),\n        193: format(Decimal.log(player.ascendShards.add(1), 10) / 4, 2),\n        195: format(Math.min(25000, Decimal.log(player.ascendShards.add(1), 10) / 4), 2),\n        196: format(Math.min(2000, Decimal.log(player.ascendShards.add(1), 10) / 50), 2),\n        202: format(Math.min(200, player.ascensionCount / 5e6), 2),\n        216: format(Math.min(200, player.ascensionCount / 1e7), 2),\n        223: format(Math.min(200, player.ascensionCount / 13370000), 2),\n        240: format(Math.min(1.5, 1 + Math.max(2, Math.log10(calculateTimeAcceleration().mult))/20), 2),\n        254: format(Math.min(15, Math.log10(corr[3]+1) * 0.6), 2, true),\n        255: format(Math.min(15, Math.log10(corr[3]+1) * 0.6), 2, true),\n        256: format(Math.min(15, Math.log10(corr[3]+1) * 0.6), 2, true),\n        257: format(Math.min(15, Math.log10(corr[3]+1) * 0.6), 2, true),\n        258: format(Math.min(15, Math.log10(corr[3]+1) * 0.6), 2, true),\n        262: format(Math.min(10, Math.log10(player.ascensionCount+1)), 2),\n        263: format(Math.min(10, Math.log10(player.ascensionCount+1)), 2),\n        264: format(Math.min(40, player.ascensionCount / 2e11), 2),\n        265: format(Math.min(20, player.ascensionCount / 8e12), 2),\n        266: format(Math.min(10, player.ascensionCount / 1e14), 2),\n        267: format(Math.min(100, Decimal.log(player.ascendShards.add(1), 10) / 1000), 2),\n        270: format(Math.min(100, Decimal.log(player.ascendShards.add(1), 10) / 10000), 2),\n        271: format(Math.max(0, Math.min(1, (Decimal.log(player.ascendShards.add(1), 10) - 1e5) / 9e5)), 2, true)\n    }\n\n    const descs: number[] = [\n        3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 17, 18, 19,\n        20, 21, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35,\n        36, 37, 38, 43, 44, 45, 46, 47, 50, 51, 52, 53,\n        57, 58, 59, 60, 61, 62, 71, 72, 73, 74, 75, 76,\n        77, 78, 79, 80, 82, 84, 85, 86, 87, 89, 91, 92,\n        93, 94, 96, 98, 99, 100, 101, 102, 103, 105, 106,\n        107, 108, 110, 112, 115, 117, 119, 122, 124, 126,\n        127, 128, 129, 131, 132, 133, 134, 135, 136, 137,\n        140, 141, 147,171, 172, 173, 176, 177, 178, 179,\n        180, 181, 182, 197, 198, 199, 200, 201, 204, 205,\n        206, 207, 208, 209, 211, 212, 213, 214, 215, 218,\n        219, 220, 221, 222, 250, 251, 253, 259, 260, 261,\n        274, 275, 276, 277, 278, 279, 280\n    ]\n\n    if (descs.includes(i) || i in extra) {\n        const obj = extra[i]\n        const map = typeof obj === 'object' ? obj : { x: obj }\n\n        return i18next.t(`achievements.rewards.${i}`, map)\n    }\n\n    return ''\n}\n\nexport const achievementAlerts = async (num: number) => {\n    if (player.highestSingularityCount === 0) {\n        if (num === 36 || num == 38 || num === 255) {\n            return Alert(i18next.t(`achievements.alerts.${num}`))\n        }\n    }\n}\n//${format(Decimal.log(player.ascendShards.add(1), 10) / 1000, 2)} (log(constant)/1000)%!\n\n// TODO: clean this up\nexport const resetachievementcheck = (i: number) => {\n    if (i === 1) {\n        if (player.prestigenoaccelerator === true) {\n            achievementaward(60)\n        }\n        if (player.prestigenomultiplier === true) {\n            achievementaward(57)\n        }\n        if (player.prestigenocoinupgrades === true) {\n            achievementaward(64)\n        }\n        if (G['prestigePointGain'].gte(1)) {\n            achievementaward(36)\n\n        }\n        if (G['prestigePointGain'].gte(1e6)) {\n            achievementaward(37)\n\n        }\n        if (G['prestigePointGain'].gte(1e100)) {\n            achievementaward(38)\n        }\n        if (G['prestigePointGain'].gte('1e1000')) {\n            achievementaward(39)\n\n        }\n        if (G['prestigePointGain'].gte('1e10000')) {\n            achievementaward(40)\n\n        }\n        if (G['prestigePointGain'].gte('1e77777')) {\n            achievementaward(41)\n\n        }\n        if (G['prestigePointGain'].gte('1e250000')) {\n            achievementaward(42)\n\n        }\n    }\n    if (i === 2) {\n        if (player.transcendnoaccelerator === true) {\n            achievementaward(61)\n        }\n        if (player.transcendnomultiplier === true) {\n            achievementaward(58)\n        }\n        if (player.transcendnocoinupgrades === true) {\n            achievementaward(65)\n        }\n        if (player.transcendnocoinorprestigeupgrades === true) {\n            achievementaward(66)\n        }\n        if (G['transcendPointGain'].gte(1)) {\n            achievementaward(43)\n        }\n        if (G['transcendPointGain'].gte(1e6)) {\n            achievementaward(44)\n        }\n        if (G['transcendPointGain'].gte(1e50)) {\n            achievementaward(45)\n        }\n        if (G['transcendPointGain'].gte(1e308)) {\n            achievementaward(46)\n        }\n        if (G['transcendPointGain'].gte('1e1500')) {\n            achievementaward(47)\n        }\n        if (G['transcendPointGain'].gte('1e25000')) {\n            achievementaward(48)\n        }\n        if (G['transcendPointGain'].gte('1e100000')) {\n            achievementaward(49)\n        }\n    }\n    if (i === 3) {\n        if (player.reincarnatenoaccelerator === true) {\n            achievementaward(62)\n        }\n        if (player.reincarnatenomultiplier === true) {\n            achievementaward(59)\n        }\n        if (player.reincarnatenocoinupgrades === true) {\n            achievementaward(67)\n        }\n        if (player.reincarnatenocoinorprestigeupgrades === true) {\n            achievementaward(68)\n        }\n        if (player.reincarnatenocoinprestigeortranscendupgrades === true) {\n            achievementaward(69)\n        }\n        if (player.reincarnatenocoinprestigetranscendorgeneratorupgrades === true) {\n            achievementaward(70)\n        }\n        if (G['reincarnationPointGain'].gte(1)) {\n            achievementaward(50)\n\n        }\n        if (G['reincarnationPointGain'].gte(1e5)) {\n            achievementaward(51)\n\n        }\n        if (G['reincarnationPointGain'].gte(1e30)) {\n            achievementaward(52)\n\n        }\n        if (G['reincarnationPointGain'].gte(1e200)) {\n            achievementaward(53)\n\n        }\n        if (G['reincarnationPointGain'].gte('1e1500')) {\n            achievementaward(54)\n\n        }\n        if (G['reincarnationPointGain'].gte('1e5000')) {\n            achievementaward(55)\n\n        }\n        if (G['reincarnationPointGain'].gte('1e7777')) {\n            achievementaward(56)\n\n        }\n    }\n}\n\n/**\n * Array of [index, bar to get achievement if greater than, achievement number]\n */\nconst challengeCompletionsBar: [number, number, number][] = [\n    [1, 0.5, 78], [1, 2.5, 79], [1, 4.5, 80], [1, 9.5, 81], [1, 19.5, 82], [1, 49.5, 83], [1, 74.5, 84],\n    [2, 0.5, 85], [2, 2.5, 86], [2, 4.5, 87], [2, 9.5, 88], [2, 19.5, 89], [2, 49.5, 90], [2, 74.5, 91],\n    [3, 0.5, 92], [3, 2.5, 93], [3, 4.5, 94], [3, 9.5, 95], [3, 19.5, 96], [3, 49.5, 97], [3, 74.5, 98],\n    [4, 0.5, 99], [4, 2.5, 100], [4, 4.5, 101], [4, 9.5, 102], [4, 19.5, 103], [4, 49.5, 104], [4, 74.5, 105],\n    [5, 0.5, 106], [5, 2.5, 107], [5, 4.5, 108], [5, 9.5, 109], [5, 19.5, 110], [5, 49.5, 111], [5, 74.5, 112],\n    [6, 0.5, 113], [6, 1.5, 114], [6, 2.5, 115], [6, 4.5, 116], [6, 9.5, 117], [6, 14.5, 118], [6, 24.5, 119],\n    [7, 0.5, 120], [7, 1.5, 121], [7, 2.5, 122], [7, 4.5, 123], [7, 9.5, 124], [7, 14.5, 125], [7, 24.5, 126],\n    [8, 0.5, 127], [8, 1.5, 128], [8, 2.5, 129], [8, 4.5, 130], [8, 9.5, 131], [8, 19.5, 132], [8, 24.5, 133],\n    [9, 0.5, 134], [9, 1.5, 135], [9, 2.5, 136], [9, 4.5, 137], [9, 9.5, 138], [9, 19.5, 139], [9, 24.5, 140],\n    [10, 0.5, 141], [10, 1.5, 142], [10, 2.5, 143], [10, 4.5, 144], [10, 9.5, 145], [10, 19.5, 146], [10, 24.5, 147],\n    [15, 0.5, 252]\n];\n\nconst challengeCompletionsNotAuto: Record<number, [string, number]> = {\n    1: ['1e1000', 75],\n    2: ['1e1000', 76],\n    3: ['1e99999', 77],\n    5: ['1e120000', 63]\n}\n\nexport const challengeachievementcheck = (i: number, auto?: boolean) => {\n    const generatorcheck = sumContents(player.upgrades.slice(101, 106));\n\n    for (const [, bar, ach] of challengeCompletionsBar.filter(([o]) => o === i)) {\n        if (player.challengecompletions[i] > bar && player.achievements[ach] < 1) {\n            achievementaward(ach);\n        }\n    }\n\n    // Challenges 1, 2, 3 check for not buying generators and getting X coins\n    // Challenge 5 check for not buying Acc/Acc Boosts and getting 1.00e120,000 coins\n    if ([1, 2, 3, 5].includes(i) && !auto) {\n        const [gte, ach] = challengeCompletionsNotAuto[i];\n        if (i === 5) {\n            if (player.coinsThisTranscension.gte(gte) && player.acceleratorBought === 0 && player.acceleratorBoostBought === 0) {\n                achievementaward(ach)\n            }\n        } else if (player.coinsThisTranscension.gte(gte) && generatorcheck === 0) {\n            achievementaward(ach);\n        }\n    }\n\n    if (i >= 11 && i <= 14) {\n        const challengeArray = [0, 1, 2, 3, 5, 10, 20, 30]\n        for (let j = 1; j <= 7; j++) {\n            if (player.challengecompletions[i] >= challengeArray[j] && player.achievements[119 + 7 * i + j] < 1) {\n                achievementaward(119 + 7 * i + j)\n            }\n        }\n    }\n\n    if (player.challengecompletions[10] >= 50 && i === 11 && player.usedCorruptions[7] >= 5 && player.achievements[247] < 1) {\n        achievementaward(247)\n    }\n}\n\n// \\) \\{\\n\\s+achievementaward\\(\\d+\\)\\n\\s+\\}\n\n/**\n * Requirements for each building achievement\n * @type {(() => boolean)[]}\n */\nconst buildAchievementReq: (() => boolean)[] = [\n    () => (player.firstOwnedCoin >= 1 && player.achievements[1] < 0.5),\n    () => (player.firstOwnedCoin >= 10 && player.achievements[2] < 0.5),\n    () => (player.firstOwnedCoin >= 100 && player.achievements[3] < 0.5),\n    () => (player.firstOwnedCoin >= 1000 && player.achievements[4] < 0.5),\n    () => (player.firstOwnedCoin >= 5000 && player.achievements[5] < 0.5),\n    () => (player.firstOwnedCoin >= 10000 && player.achievements[6] < 0.5),\n    () => (player.firstOwnedCoin >= 20000 && player.achievements[7] < 0.5),\n    () => (player.secondOwnedCoin >= 1 && player.achievements[8] < 0.5),\n    () => (player.secondOwnedCoin >= 10 && player.achievements[9] < 0.5),\n    () => (player.secondOwnedCoin >= 100 && player.achievements[10] < 0.5),\n    () => (player.secondOwnedCoin >= 1000 && player.achievements[11] < 0.5),\n    () => (player.secondOwnedCoin >= 5000 && player.achievements[12] < 0.5),\n    () => (player.secondOwnedCoin >= 10000 && player.achievements[13] < 0.5),\n    () => (player.secondOwnedCoin >= 20000 && player.achievements[14] < 0.5),\n    () => (player.thirdOwnedCoin >= 1 && player.achievements[15] < 0.5),\n    () => (player.thirdOwnedCoin >= 10 && player.achievements[16] < 0.5),\n    () => (player.thirdOwnedCoin >= 100 && player.achievements[17] < 0.5),\n    () => (player.thirdOwnedCoin >= 1000 && player.achievements[18] < 0.5),\n    () => (player.thirdOwnedCoin >= 5000 && player.achievements[19] < 0.5),\n    () => (player.thirdOwnedCoin >= 10000 && player.achievements[20] < 0.5),\n    () => (player.thirdOwnedCoin >= 20000 && player.achievements[21] < 0.5),\n    () => (player.fourthOwnedCoin >= 1 && player.achievements[22] < 0.5),\n    () => (player.fourthOwnedCoin >= 10 && player.achievements[23] < 0.5),\n    () => (player.fourthOwnedCoin >= 100 && player.achievements[24] < 0.5),\n    () => (player.fourthOwnedCoin >= 1000 && player.achievements[25] < 0.5),\n    () => (player.fourthOwnedCoin >= 5000 && player.achievements[26] < 0.5),\n    () => (player.fourthOwnedCoin >= 10000 && player.achievements[27] < 0.5),\n    () => (player.fourthOwnedCoin >= 20000 && player.achievements[28] < 0.5),\n    () => (player.fifthOwnedCoin >= 1 && player.achievements[29] < 0.5),\n    () => (player.fifthOwnedCoin >= 10 && player.achievements[30] < 0.5),\n    () => (player.fifthOwnedCoin >= 66 && player.achievements[31] < 0.5),\n    () => (player.fifthOwnedCoin >= 666 && player.achievements[32] < 0.5),\n    () => (player.fifthOwnedCoin >= 6666 && player.achievements[33] < 0.5),\n    () => (player.fifthOwnedCoin >= 17777 && player.achievements[34] < 0.5),\n    () => (player.fifthOwnedCoin >= 42777 && player.achievements[35] < 0.5)\n];\n\nexport const buildingAchievementCheck = () => {\n    for (const req of buildAchievementReq) {\n        if (req()) {\n            const idx = buildAchievementReq.indexOf(req) + 1;\n            achievementaward(idx);\n        }\n    }\n}\n\nexport const ascensionAchievementCheck = (i: number, score = 0) => {\n    if (i === 1) {\n        const ascendCountArray = [0, 1, 2, 10, 100, 1000, 14142, 141421, 1414213, //Column 1\n            1e7, 1e8, 2e9, 4e10, 8e11, 1.6e13, 1e14] //Column 2\n        for (let j = 1; j <= 7; j++) {\n            if (player.ascensionCount >= ascendCountArray[j] && player.achievements[182 + j] < 1) {\n                achievementaward(182 + j)\n            }\n            if (player.ascensionCount >= ascendCountArray[j + 8] && player.achievements[259 + j] < 1) {\n                achievementaward(259 + j)\n            }\n        }\n        if (player.ascensionCount >= ascendCountArray[8] && player.achievements[240] < 1) {\n            achievementaward(240)\n        }\n    }\n    if (i === 2) {\n        const constantArray = [0, 3.14, 1e6, 4.32e10, 6.9e21, 1.509e33, 1e66, '1.8e308', //Column 1\n            '1e1000', '1e5000', '1e15000', '1e50000', '1e100000', '1e300000', '1e1000000'] //Column 2\n        for (let j = 1; j <= 7; j++) {\n            if (player.ascendShards.gte(constantArray[j]) && player.achievements[189 + j] < 1) {\n                achievementaward(189 + j)\n            }\n            if (player.ascendShards.gte(constantArray[j + 7]) && player.achievements[266 + j] < 1) {\n                achievementaward(266 + j)\n            }\n        }\n    }\n    if (i === 3) {\n        const scoreArray = [0, 1e5, 1e6, 1e7, 1e8, 1e9, 5e9, 2.5e10, //Column 1\n            1e12, 1e14, 1e17, 2e18, 4e19, 1e21, 1e23] //Column 2\n        for (let j = 1; j <= 7; j++) {\n            if (score >= scoreArray[j] && player.achievements[224 + j] < 1) {\n                achievementaward(224 + j)\n            }\n\n            if (score >= scoreArray[7 + j] && player.achievements[252 + j] < 1) {\n                achievementaward(252 + j)\n            }\n        }\n    }\n}\n\nexport const getAchievementQuarks = (i: number) => {\n    let multiplier = 1\n    if (i >= 183) {\n        multiplier = 5\n    }\n    if (i >= 253) {\n        multiplier = 40\n    }\n\n    const globalQuarkMultiplier = player.worlds.applyBonus(1)\n    let actualMultiplier = multiplier * globalQuarkMultiplier;\n    if (actualMultiplier > 100) {\n        actualMultiplier = Math.pow(100, 0.6) * Math.pow(actualMultiplier, 0.4)\n    }\n\n    return Math.floor(achievementpointvalues[i] * actualMultiplier)\n}\n\nexport const achievementdescriptions = (i: number) => {\n    const y = i18next.t(`achievements.descriptions.${i}`, { number: `${i}` })\n    const z = player.achievements[i] > 0.5 ? i18next.t('achievements.completed') : '';\n    const k = areward(i)\n\n    DOMCacheGetOrSet('achievementdescription').textContent = y + z\n    DOMCacheGetOrSet('achievementreward').textContent = i18next.t('achievements.rewardGainMessage', {\n        x: achievementpointvalues[i],\n        y: format(getAchievementQuarks(i), 0, true),\n        z: k\n    })\n\n    if (player.achievements[i] > 0.5) {\n        DOMCacheGetOrSet('achievementdescription').style.color = 'gold'\n    } else {\n        DOMCacheGetOrSet('achievementdescription').style.color = 'white'\n    }\n}\n\nexport const achievementaward = (num: number) => {\n    if (player.achievements[num] < 1) {\n        if (player.toggles[34]) {\n            const description = i18next.t(`achievements.descriptions.${num}`, { number: `${num}` })\n            void Notification(i18next.t('achievements.notification', { m: description }));\n        }\n\n        void achievementAlerts(num)\n        player.achievementPoints += achievementpointvalues[num]\n        player.worlds.add(getAchievementQuarks(num), false)\n\n        DOMCacheGetOrSet('achievementprogress').textContent = i18next.t('achievements.totalPoints', {\n            x: format(player.achievementPoints),\n            y: format(totalachievementpoints),\n            z: (100 * player.achievementPoints / totalachievementpoints).toPrecision(4)\n        })\n\n        player.achievements[num] = 1;\n        revealStuff()\n    }\n\n    DOMCacheGetOrSet(`ach${num}`).style.backgroundColor = 'Green';\n    Synergism.emit('achievement', num);\n}\n\n", "import { player, format } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { CalcECC } from './Challenges';\nimport { calculateRuneLevels } from './Calculate';\nimport { achievementaward } from './Achievements';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport i18next from 'i18next';\n\nconst talismanResourceCosts = {\n    shard: {\n        obtainium: 1e13,\n        offerings: 1e2,\n        name: 'Talisman Shard'\n    },\n    commonFragment: {\n        obtainium: 1e14,\n        offerings: 1e4,\n        name: 'Common Fragment'\n    },\n    uncommonFragment: {\n        obtainium: 1e16,\n        offerings: 1e5,\n        name: 'Uncommon Fragment'\n    },\n    rareFragment: {\n        obtainium: 1e18,\n        offerings: 1e6,\n        name: 'Rare Fragment'\n    },\n    epicFragment: {\n        obtainium: 1e20,\n        offerings: 1e7,\n        name: 'Epic Fragment'\n    },\n    legendaryFragment: {\n        obtainium: 1e22,\n        offerings: 1e8,\n        name: 'Legendary Fragment'\n    },\n    mythicalFragment: {\n        obtainium: 1e24,\n        offerings: 1e9,\n        name: 'Mythical Fragment'\n    }\n}\n\nconst num = ['One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven'] as const;\n\nexport const calculateMaxTalismanLevel = (i: number) => {\n    let maxLevel = 30 * player.talismanRarity[i]\n    maxLevel += 6 * CalcECC('ascension', player.challengecompletions[13])\n    maxLevel += Math.floor(player.researches[200] / 400)\n\n    if (player.cubeUpgrades[67] > 0 && i === 3) {\n        maxLevel += 1337\n    }\n\n    return maxLevel\n}\n\nconst getTalismanResourceInfo = (type: keyof typeof talismanResourceCosts, percentage = player.buyTalismanShardPercent) => {\n    const obtainiumCost = talismanResourceCosts[type].obtainium;\n    const offeringCost = talismanResourceCosts[type].offerings;\n\n    const maxBuyObtainium = Math.max(1, Math.floor(player.researchPoints / obtainiumCost));\n    const maxBuyOffering = Math.max(1, Math.floor(player.runeshards / (offeringCost)));\n    const amountToBuy = Math.max(1, Math.floor(percentage / 100 * Math.min(maxBuyObtainium, maxBuyOffering)));\n    const canBuy = (obtainiumCost <= player.researchPoints && offeringCost <= player.runeshards) ? true : false;\n    return {\n        canBuy: canBuy, //Boolean, if false will not buy any fragments\n        buyAmount: amountToBuy, //Integer, will buy as specified above.\n        obtainiumCost: obtainiumCost * amountToBuy, //Integer, cost in obtainium to buy (buyAmount) resource\n        offeringCost: offeringCost * amountToBuy //Integer, cost in offerings to buy (buyAmount) resource\n    };\n};\n\nexport const updateTalismanCostDisplay = (type: keyof typeof talismanResourceCosts | null, percentage = player.buyTalismanShardPercent) => {\n    const el = DOMCacheGetOrSet('talismanFragmentCost');\n    if (type) {\n        const talismanCostInfo = getTalismanResourceInfo(type, percentage);\n        const TalismanName = talismanResourceCosts[type].name;\n\n        el.textContent = i18next.t('runes.talismans.costToBuy', {\n            name: TalismanName,\n            buyAmount: format(talismanCostInfo.buyAmount),\n            obtainium: format(talismanCostInfo.obtainiumCost),\n            offerings: format(talismanCostInfo.offeringCost)\n        })\n    } else {\n        // Buy All\n        el.textContent = i18next.t('runes.talismans.clickBuyEveryType')\n    }\n}\n\nexport const toggleTalismanBuy = (i = player.buyTalismanShardPercent) => {\n    DOMCacheGetOrSet('talismanTen').style.backgroundColor = ''\n    DOMCacheGetOrSet('talismanTwentyFive').style.backgroundColor = ''\n    DOMCacheGetOrSet('talismanFifty').style.backgroundColor = ''\n    DOMCacheGetOrSet('talismanHundred').style.backgroundColor = ''\n    player.buyTalismanShardPercent = i\n    let x = 'Ten';\n    if (i === 25) {\n        x = 'TwentyFive'\n    }\n    if (i === 50) {\n        x = 'Fifty'\n    }\n    if (i === 100) {\n        x = 'Hundred'\n    }\n\n    DOMCacheGetOrSet(`talisman${x}`).style.backgroundColor = 'green'\n}\n\nexport const updateTalismanInventory = () => {\n    DOMCacheGetOrSet('talismanShardInventory').textContent = format(player.talismanShards);\n    DOMCacheGetOrSet('commonFragmentInventory').textContent = format(player.commonFragments);\n    DOMCacheGetOrSet('uncommonFragmentInventory').textContent = format(player.uncommonFragments);\n    DOMCacheGetOrSet('rareFragmentInventory').textContent = format(player.rareFragments);\n    DOMCacheGetOrSet('epicFragmentInventory').textContent = format(player.epicFragments);\n    DOMCacheGetOrSet('legendaryFragmentInventory').textContent = format(player.legendaryFragments);\n    DOMCacheGetOrSet('mythicalFragmentInventory').textContent = format(player.mythicalFragments);\n}\n\nexport const buyAllTalismanResources = () => {\n    const talismanItemNames = ['shard', 'commonFragment', 'uncommonFragment', 'rareFragment', 'epicFragment', 'legendaryFragment', 'mythicalFragment'] as const;\n    for (let index = talismanItemNames.length - 1; index >= 0; index--) {\n        buyTalismanResources(talismanItemNames[index]);\n    }\n}\n\nexport const buyTalismanResources = (type: keyof typeof talismanResourceCosts, percentage = player.buyTalismanShardPercent) => {\n    const talismanResourcesData = getTalismanResourceInfo(type, percentage)\n\n    if (talismanResourcesData.canBuy) {\n        if (type === 'shard') {\n            player.talismanShards += talismanResourcesData.buyAmount\n        } else {\n            player[`${type}s` as const] += talismanResourcesData.buyAmount\n        }\n        if (type === 'mythicalFragment' && player.mythicalFragments >= 1e25 && player.achievements[239] < 1) {\n            achievementaward(239)\n        }\n\n        player.researchPoints -= talismanResourcesData.obtainiumCost;\n        player.runeshards -= talismanResourcesData.offeringCost;\n\n        // When dealing with high values, calculations can be very slightly off due to floating point precision\n        // and result in buying slightly (usually 1) more than the player can actually afford.\n        // This results in negative obtainium or offerings with further calcs somehow resulting in NaN/undefined.\n        // Instead of trying to work around floating point limits, just make sure nothing breaks as a result.\n        // The calculation being done overall is similar to the following calculation:\n        // 2.9992198253874083e47 - (Math.floor(2.9992198253874083e47 / 1e20) * 1e20)\n        // which, for most values, returns 0, but values like this example will return a negative number instead.\n        if (player.researchPoints < 0) {\n            player.researchPoints = 0;\n        }\n        if (player.runeshards < 0) {\n            player.runeshards = 0;\n        }\n    }\n    updateTalismanCostDisplay(type, percentage)\n    updateTalismanInventory()\n}\n\nexport const showTalismanEffect = (i: number) => {\n    DOMCacheGetOrSet('talismanlevelup').style.display = 'none'\n    DOMCacheGetOrSet('talismanEffect').style.display = 'block'\n    DOMCacheGetOrSet('talismanrespec').style.display = 'none'\n    const a = DOMCacheGetOrSet('talismanSummary')\n    const b = DOMCacheGetOrSet('talismanBonus')\n    const c = DOMCacheGetOrSet('talismanRune1Effect')\n    const d = DOMCacheGetOrSet('talismanRune2Effect')\n    const e = DOMCacheGetOrSet('talismanRune3Effect')\n    const f = DOMCacheGetOrSet('talismanRune4Effect')\n    const g = DOMCacheGetOrSet('talismanRune5Effect')\n    const h = DOMCacheGetOrSet('talismanMythicEffect')\n\n    switch (i) {\n        case 0:\n            a.textContent = '=-=-=-= Exemption Talisman Effects =-=-=-=';\n            b.textContent = 'Taxes -' + format(10 * (player.talismanRarity[0] - 1)) + '%'\n            c.textContent = 'Bonus Speed Rune Levels: ' + format(G['talisman1Effect'][1], 2, true)\n            d.textContent = 'Bonus Duplication Rune Levels: ' + format(G['talisman1Effect'][2], 2, true)\n            e.textContent = 'Bonus Prism Rune Levels: ' + format(G['talisman1Effect'][3], 2, true)\n            f.textContent = 'Bonus Thrift Rune Levels: ' + format(G['talisman1Effect'][4], 2, true)\n            g.textContent = 'Bonus SI Rune Levels: ' + format(G['talisman1Effect'][5], 2, true)\n            h.textContent = 'Mythic Effect: +400 Duplication Rune Levels!'\n            break;\n        case 1:\n            a.textContent = '=-=-=-= Chronos Talisman Effects =-=-=-=';\n            b.textContent = 'Gain +' + format(10 * (player.talismanRarity[1] - 1)) + '% Global Speed Acceleration.'\n            c.textContent = 'Bonus Speed Rune Levels: ' + format(G['talisman2Effect'][1], 2, true)\n            d.textContent = 'Bonus Duplication Rune Levels: ' + format(G['talisman2Effect'][2], 2, true)\n            e.textContent = 'Bonus Prism Rune Levels: ' + format(G['talisman2Effect'][3], 2, true)\n            f.textContent = 'Bonus Thrift Rune Levels: ' + format(G['talisman2Effect'][4], 2, true)\n            g.textContent = 'Bonus SI Rune Levels: ' + format(G['talisman2Effect'][5], 2, true)\n            h.textContent = 'Mythic Effect: +400 Speed Rune Levels!'\n            break;\n        case 2:\n            a.textContent = '=-=-=-= Midas Talisman Effects =-=-=-=';\n            b.textContent = 'Rune Blessing bonuses +' + format(10 * (player.talismanRarity[2] - 1)) + '%'\n            c.textContent = 'Bonus Speed Rune Levels: ' + format(G['talisman3Effect'][1], 2, true)\n            d.textContent = 'Bonus Duplication Rune Levels: ' + format(G['talisman3Effect'][2], 2, true)\n            e.textContent = 'Bonus Prism Rune Levels: ' + format(G['talisman3Effect'][3], 2, true)\n            f.textContent = 'Bonus Thrift Rune Levels: ' + format(G['talisman3Effect'][4], 2, true)\n            g.textContent = 'Bonus SI Rune Levels: ' + format(G['talisman3Effect'][5], 2, true)\n            h.textContent = 'Mythic Effect: +400 Thrift Rune Levels!'\n            break;\n        case 3:\n            a.textContent = '=-=-=-= Metaphysics Talisman Effects =-=-=-=';\n            b.textContent = 'Talismans\\' Bonus Rune Levels +' + format(0.02 * (player.talismanRarity[3] - 1), 2) + ' per level'\n            c.textContent = 'Bonus Speed Rune Levels: ' + format(G['talisman4Effect'][1], 2, true)\n            d.textContent = 'Bonus Duplication Rune Levels: ' + format(G['talisman4Effect'][2], 2, true)\n            e.textContent = 'Bonus Prism Rune Levels: ' + format(G['talisman4Effect'][3], 2, true)\n            f.textContent = 'Bonus Thrift Rune Levels: ' + format(G['talisman4Effect'][4], 2, true)\n            g.textContent = 'Bonus SI Rune Levels: ' + format(G['talisman4Effect'][5], 2, true)\n            h.textContent = 'Mythic Effect: +400 Prism Rune Levels!'\n            break;\n        case 4:\n            a.textContent = '=-=-=-= Polymath Talisman Effects =-=-=-=';\n            b.textContent = 'Rune Spirit Bonuses +' + format(1 * (player.talismanRarity[4] - 1)) + '%'\n            c.textContent = 'Bonus Speed Rune Levels: ' + format(G['talisman5Effect'][1], 2, true)\n            d.textContent = 'Bonus Duplication Rune Levels: ' + format(G['talisman5Effect'][2], 2, true)\n            e.textContent = 'Bonus Prism Rune Levels: ' + format(G['talisman5Effect'][3], 2, true)\n            f.textContent = 'Bonus Thrift Rune Levels: ' + format(G['talisman5Effect'][4], 2, true)\n            g.textContent = 'Bonus SI Rune Levels: ' + format(G['talisman5Effect'][5], 2, true)\n            h.textContent = 'Mythic Effect: +400 SI Rune Levels!'\n            break;\n        case 5:\n            a.textContent = '=-=-=-= Mortuus Est Talisman Effects =-=-=-=';\n            b.textContent = 'Bonus Ant Levels: +' + format(2 * (player.talismanRarity[5] - 1))\n            c.textContent = 'Bonus Speed Rune Levels: ' + format(G['talisman6Effect'][1], 2, true)\n            d.textContent = 'Bonus Duplication Rune Levels: ' + format(G['talisman6Effect'][2], 2, true)\n            e.textContent = 'Bonus Prism Rune Levels: ' + format(G['talisman6Effect'][3], 2, true)\n            f.textContent = 'Bonus Thrift Rune Levels: ' + format(G['talisman6Effect'][4], 2, true)\n            g.textContent = 'Bonus SI Rune Levels: ' + format(G['talisman6Effect'][5], 2, true)\n            h.textContent = 'Mythic Effect: Gain ant speed based on your total rune level!'\n            break;\n        case 6:\n            a.textContent = '=-=-=-= Plastic Talisman Effects =-=-=-=';\n            b.textContent = 'Gain 1x normal production (Joke)!'\n            c.textContent = 'Bonus Speed Rune Levels: ' + format(G['talisman7Effect'][1], 2, true)\n            d.textContent = 'Bonus Duplication Rune Levels: ' + format(G['talisman7Effect'][2], 2, true)\n            e.textContent = 'Bonus Prism Rune Levels: ' + format(G['talisman7Effect'][3], 2, true)\n            f.textContent = 'Bonus Thrift Rune Levels: ' + format(G['talisman7Effect'][4], 2, true)\n            g.textContent = 'Bonus SI Rune Levels: ' + format(G['talisman7Effect'][5], 2, true)\n            h.textContent = 'Mythic Effect: Gain 1x your normal quark values (Joke)!'\n            break;\n    }\n    if (player.talismanRarity[i] !== 6) {\n        h.textContent = 'Get Max Enhance for a Mythical bonus effect!'\n    }\n}\n\nexport const showTalismanPrices = (i: number) => {\n    DOMCacheGetOrSet('talismanEffect').style.display = 'none'\n    DOMCacheGetOrSet('talismanlevelup').style.display = 'block'\n    DOMCacheGetOrSet('talismanrespec').style.display = 'none'\n    const a = DOMCacheGetOrSet('talismanShardCost')\n    const b = DOMCacheGetOrSet('talismanCommonFragmentCost')\n    const c = DOMCacheGetOrSet('talismanUncommonFragmentCost')\n    const d = DOMCacheGetOrSet('talismanRareFragmentCost')\n    const e = DOMCacheGetOrSet('talismanEpicFragmentCost')\n    const f = DOMCacheGetOrSet('talismanLegendaryFragmentCost')\n    const g = DOMCacheGetOrSet('talismanMythicalFragmentCost')\n\n    DOMCacheGetOrSet('talismanLevelUpSummary').textContent = i18next.t('runes.resourcesToLevelup')\n    DOMCacheGetOrSet('talismanLevelUpSummary').style.color = 'silver'\n\n    let m = G['talismanLevelCostMultiplier'][i]\n    if (player.talismanLevels[i] >= 120) {\n        m *= (player.talismanLevels[i] - 90) / 30\n    }\n    if (player.talismanLevels[i] >= 150) {\n        m *= (player.talismanLevels[i] - 120) / 30\n    }\n    if (player.talismanLevels[i] >= 180) {\n        m *= (player.talismanLevels[i] - 170) / 10\n    }\n    a.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i], 3))));\n    b.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i] - 30, 3))));\n    c.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i] - 60, 3))));\n    d.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i] - 90, 3))));\n    e.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i] - 120, 3))));\n    f.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i] - 150, 3))));\n    g.textContent = format(m * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i] - 150, 3))));\n}\n\nexport const showEnhanceTalismanPrices = (i: number) => {\n    DOMCacheGetOrSet('talismanEffect').style.display = 'none'\n    DOMCacheGetOrSet('talismanlevelup').style.display = 'block'\n    DOMCacheGetOrSet('talismanrespec').style.display = 'none'\n    const a = DOMCacheGetOrSet('talismanShardCost')\n    const b = DOMCacheGetOrSet('talismanCommonFragmentCost')\n    const c = DOMCacheGetOrSet('talismanUncommonFragmentCost')\n    const d = DOMCacheGetOrSet('talismanRareFragmentCost')\n    const e = DOMCacheGetOrSet('talismanEpicFragmentCost')\n    const f = DOMCacheGetOrSet('talismanLegendaryFragmentCost')\n    const g = DOMCacheGetOrSet('talismanMythicalFragmentCost')\n\n    DOMCacheGetOrSet('talismanLevelUpSummary').textContent = i18next.t('runes.resourcesToEnhance')\n    DOMCacheGetOrSet('talismanLevelUpSummary').style.color = 'gold'\n\n    const array = [G['commonTalismanEnhanceCost'], G['uncommonTalismanEnchanceCost'], G['rareTalismanEnchanceCost'], G['epicTalismanEnhanceCost'], G['legendaryTalismanEnchanceCost'], G['mythicalTalismanEnchanceCost']]\n    const index = player.talismanRarity[i];\n    const costArray = array[index-1];\n    const m = G['talismanLevelCostMultiplier'][i]\n    a.textContent = format(m * costArray[1]);\n    b.textContent = format(m * costArray[2]);\n    c.textContent = format(m * costArray[3]);\n    d.textContent = format(m * costArray[4]);\n    e.textContent = format(m * costArray[5]);\n    f.textContent = format(m * costArray[6]);\n    g.textContent = format(m * costArray[7]);\n}\n\nexport const showRespecInformation = (i: number) => {\n    G['talismanRespec'] = i;\n    DOMCacheGetOrSet('talismanEffect').style.display = 'none'\n    DOMCacheGetOrSet('talismanlevelup').style.display = 'none'\n    DOMCacheGetOrSet('talismanrespec').style.display = 'block'\n\n    const runeName = ['Speed Rune', 'Duplication Rune', 'Prism Rune', 'Thrift Rune', 'SI Rune']\n    const runeModifier = ['Positive', 'Positive', 'Positive', 'Positive']\n    if (i <= 6) {\n        for (let k = 1; k <= 5; k++) {\n            G['mirrorTalismanStats'][k] = player[`talisman${num[i]}` as const][k];\n        }\n        DOMCacheGetOrSet('confirmTalismanRespec').textContent = 'Confirm [-100,000 Offerings]'\n    }\n    if (i === 7) {\n        for (let k = 1; k <= 5; k++) {\n            G['mirrorTalismanStats'][k] = 1;\n        }\n        DOMCacheGetOrSet('confirmTalismanRespec').textContent = 'Confirm ALL [-400,000 Offerings]'\n    }\n    for (let j = 1; j <= 5; j++) {\n        if (G['mirrorTalismanStats'][j] === 1) {\n            DOMCacheGetOrSet('talismanRespecButton' + j).style.border = '2px solid limegreen';\n            runeModifier[j-1] = 'Positive'\n        } else if (G['mirrorTalismanStats'][j] === -1) {\n            DOMCacheGetOrSet('talismanRespecButton' + j).style.border = '2px solid crimson';\n            runeModifier[j-1] = 'Negative'\n        }\n        DOMCacheGetOrSet('talismanRespecButton' + j).textContent = runeName[j-1] + ': ' + runeModifier[j-1]\n    }\n\n    DOMCacheGetOrSet('confirmTalismanRespec').style.display = 'none'\n}\n\nexport const changeTalismanModifier = (i: number) => {\n    const runeName = [null, 'Speed Rune', 'Duplication Rune', 'Prism Rune', 'Thrift Rune', 'SI Rune'];\n    const el = DOMCacheGetOrSet('talismanRespecButton' + i);\n    if (G['mirrorTalismanStats'][i] === 1) {\n        G['mirrorTalismanStats'][i] = (-1);\n        el.textContent = runeName[i] + ': Negative';\n        el.style.border = '2px solid crimson';\n    } else {\n        G['mirrorTalismanStats'][i] = (1);\n        el.textContent = runeName[i] + ': Positive';\n        el.style.border = '2px solid limegreen';\n    }\n\n    const checkSum = G['mirrorTalismanStats'].reduce((a, b) => a! + b!, 0);\n\n    if (checkSum === 1) {\n        DOMCacheGetOrSet('confirmTalismanRespec').style.display = 'block';\n    } else {\n        DOMCacheGetOrSet('confirmTalismanRespec').style.display = 'none';\n    }\n\n}\n\nexport const respecTalismanConfirm = (i: number) => {\n    if (player.runeshards >= 100000 && i < 7) {\n        for (let j = 1; j <= 5; j++) {\n            player[`talisman${num[i]}` as const][j] = G['mirrorTalismanStats'][j];\n        }\n        player.runeshards -= 100000;\n        DOMCacheGetOrSet('confirmTalismanRespec').style.display = 'none';\n        DOMCacheGetOrSet('talismanrespec').style.display = 'none';\n        DOMCacheGetOrSet('talismanEffect').style.display = 'block';\n        showTalismanEffect(i);\n    } else if (player.runeshards >= 400000 && i === 7) {\n        player.runeshards -= 400000\n        for (let j = 0; j < 7; j++) {\n            for (let k = 1; k <= 5; k++) {\n                player[`talisman${num[j]}` as const][k] = G['mirrorTalismanStats'][k];\n            }\n        }\n        DOMCacheGetOrSet('confirmTalismanRespec').style.display = 'none';\n    }\n\n    calculateRuneLevels();\n}\n\nexport const respecTalismanCancel = (i: number) => {\n    DOMCacheGetOrSet('talismanrespec').style.display = 'none'\n    if (i < 7) {\n        DOMCacheGetOrSet('talismanEffect').style.display = 'block';\n        showTalismanEffect(i);\n    }\n}\n\nexport const updateTalismanAppearance = (i: number) => {\n    const el = DOMCacheGetOrSet('talisman' + (i+1))\n    const la = DOMCacheGetOrSet('talisman' + (i+1) + 'level')\n\n    const rarity = player.talismanRarity[i];\n    if (rarity === 1) {\n        el.style.border = '4px solid white';\n        la.style.color = 'white'\n    }\n    if (rarity === 2) {\n        el.style.border = '4px solid limegreen';\n        la.style.color = 'limegreen'\n    }\n    if (rarity === 3) {\n        el.style.border = '4px solid lightblue';\n        la.style.color = 'lightblue'\n    }\n    if (rarity === 4) {\n        el.style.border = '4px solid plum';\n        la.style.color = 'plum'\n    }\n    if (rarity === 5) {\n        el.style.border = '4px solid orange';\n        la.style.color = 'orange'\n    }\n    if (rarity === 6) {\n        el.style.border = '4px solid crimson';\n        la.style.color = 'var(--crimson-text-color)'\n    }\n}\n\n// Attempt to buy a fixed number of levels (number varies based on\n// ascension). Returns true if any levels were bought, false otherwise.\nexport const buyTalismanLevels = (i: number, auto = false): boolean => {\n    let max = 1;\n    if (player.ascensionCount > 0) {\n        max = 30\n    }\n    if (player.highestSingularityCount > 0) {\n        max = 180\n    }\n    let hasPurchased = false;\n    for (let j = 1; j <= max; j++) {\n        let checkSum = 0;\n        let priceMult = G['talismanLevelCostMultiplier'][i]\n        if (player.talismanLevels[i] >= 120) {\n            priceMult *= (player.talismanLevels[i] - 90) / 30\n        }\n        if (player.talismanLevels[i] >= 150) {\n            priceMult *= (player.talismanLevels[i] - 120) / 30\n        }\n        if (player.talismanLevels[i] >= 180) {\n            priceMult *= (player.talismanLevels[i] - 170) / 10\n        }\n\n        if (player.talismanLevels[i] < calculateMaxTalismanLevel(i)) {\n            if (player.talismanShards >= priceMult * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i], 3)))) {\n                checkSum++\n            }\n            if (player.commonFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i] - 30, 3)))) {\n                checkSum++\n            }\n            if (player.uncommonFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i] - 60, 3)))) {\n                checkSum++\n            }\n            if (player.rareFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i] - 90, 3)))) {\n                checkSum++\n            }\n            if (player.epicFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i] - 120, 3)))) {\n                checkSum++\n            }\n            if (player.legendaryFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i] - 150, 3)))) {\n                checkSum++\n            }\n            if (player.mythicalFragments >= priceMult * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i] - 150, 3)))) {\n                checkSum++\n            }\n        }\n\n        if (checkSum === 7) {\n            player.talismanShards -= priceMult * Math.max(0, Math.floor(1 + 1 / 8 * Math.pow(player.talismanLevels[i], 3)))\n            player.commonFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 32 * Math.pow(player.talismanLevels[i] - 30, 3)))\n            player.uncommonFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 384 * Math.pow(player.talismanLevels[i] - 60, 3)))\n            player.rareFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 500 * Math.pow(player.talismanLevels[i] - 90, 3)))\n            player.epicFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 375 * Math.pow(player.talismanLevels[i] - 120, 3)))\n            player.legendaryFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 192 * Math.pow(player.talismanLevels[i] - 150, 3)))\n            player.mythicalFragments -= priceMult * Math.max(0, Math.floor(1 + 1 / 1280 * Math.pow(player.talismanLevels[i] - 150, 3)))\n            player.talismanLevels[i] += 1;\n            hasPurchased = true;\n        } else {\n            break;\n        }\n    }\n\n    if (!auto && hasPurchased) {\n        showTalismanPrices(i);\n        // When adding game state recalculations, update the talisman autobuyer in tack() as well\n        updateTalismanInventory();\n        calculateRuneLevels();\n    }\n\n    return hasPurchased;\n}\n\nexport const buyTalismanEnhance = (i: number, auto = false): boolean => {\n    let checkSum = 0;\n    if (player.talismanRarity[i] < 6) {\n        const priceMult = G['talismanLevelCostMultiplier'][i];\n        const array = [G['commonTalismanEnhanceCost'], G['uncommonTalismanEnchanceCost'], G['rareTalismanEnchanceCost'], G['epicTalismanEnhanceCost'], G['legendaryTalismanEnchanceCost'], G['mythicalTalismanEnchanceCost']];\n        const index = player.talismanRarity[i] - 1;\n        const costArray = array[index];\n        if (player.commonFragments >= priceMult * costArray[2]) {\n            checkSum++\n        }\n        if (player.uncommonFragments >= priceMult * costArray[3]) {\n            checkSum++\n        }\n        if (player.rareFragments >= priceMult * costArray[4]) {\n            checkSum++\n        }\n        if (player.epicFragments >= priceMult * costArray[5]) {\n            checkSum++\n        }\n        if (player.legendaryFragments >= priceMult * costArray[6]) {\n            checkSum++\n        }\n        if (player.mythicalFragments >= priceMult * costArray[7]) {\n            checkSum++\n        }\n\n\n        if (checkSum === 6) {\n            player.commonFragments -= (priceMult * costArray[2])\n            player.uncommonFragments -= (priceMult * costArray[3])\n            player.rareFragments -= (priceMult * costArray[4])\n            player.epicFragments -= (priceMult * costArray[5])\n            player.legendaryFragments -= (priceMult * costArray[6])\n            player.mythicalFragments -= (priceMult * costArray[7])\n            player.talismanRarity[i] += 1\n\n            // Appearance always needs updating if bought\n            updateTalismanAppearance(i);\n            if (!auto) {\n                showEnhanceTalismanPrices(i);\n                // When adding game state recalculations, update the talisman autobuyer in tack() as well\n                updateTalismanInventory();\n                calculateRuneLevels();\n            }\n\n            return true;\n        }\n    }\n    return false;\n}\n", "import { player, format } from './Synergism';\nimport { calculateRuneExpGiven, calculateCorruptionPoints, calculateOfferings, calculateMaxRunes, calculateRuneExpToLevel, calculateRuneLevels, calculateEffectiveIALevel } from './Calculate';\nimport { Globals as G } from './Variables';\n\nimport Decimal from 'break_infinity.js';\nimport type { resetNames } from './types/Synergism';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport i18next, { type StringMap } from 'i18next';\n\nexport const displayRuneInformation = (i: number, updatelevelup = true) => {\n    const m = G['effectiveLevelMult']\n    const SILevelMult = (1 + player.researches[84] / 200 * (1 + 1 * G['effectiveRuneSpiritPower'][5] * calculateCorruptionPoints()/400))\n    const amountPerOffering = calculateRuneExpGiven(i - 1, false, player.runelevels[i - 1]);\n\n    let options: StringMap\n\n    if (i === 1) {\n        options = {\n            bonus: format(Math.floor(Math.pow(G['rune1level'] * m / 4, 1.25))),\n            percent: format((G['rune1level'] / 4 * m), 2, true),\n            boost: format(Math.floor(G['rune1level'] / 20 * m))\n        }\n    } else if (i === 2) {\n        options = {\n            mult1: format(Math.floor(G['rune2level'] * m / 10) * Math.floor(1 + G['rune2level'] * m / 10) / 2),\n            mult2: format(m * G['rune2level'] / 4, 1, true),\n            tax: (99.9 * (1 - Math.pow(6, -(G['rune2level'] * m) / 1000))).toPrecision(4)\n        }\n    } else if (i === 3) {\n        options = {\n            mult: format(Decimal.pow(G['rune3level'] * m / 2, 2).times(Decimal.pow(2, G['rune3level'] * m / 2 - 8)).add(1), 3),\n            gain: format(Math.floor(G['rune3level'] / 16 * m))\n        }\n    } else if (i === 4) {\n        options = {\n            delay: (G['rune4level'] / 8 * m).toPrecision(3),\n            chance: Math.min(25, G['rune4level'] / 16),\n            tax: (99 * (1 - Math.pow(4, Math.min(0, (400 - G['rune4level']) / 1100)))).toPrecision(4)\n        }\n    } else if (i === 5) {\n        options = {\n            gain: format((1 + G['rune5level'] / 200 * m * SILevelMult), 2, true),\n            speed: format(1 + Math.pow(G['rune5level'] * m * SILevelMult, 2) / 2500),\n            offerings: format((G['rune5level'] * m * SILevelMult * 0.005), 3, true)\n        }\n    } else if (i === 6) {\n        options = {\n            percent1: format(10 + 15/75 * calculateEffectiveIALevel(), 1, true),\n            percent2: format(1 * calculateEffectiveIALevel(), 0, true)\n        }\n    } else if (i === 7 && updatelevelup) {\n        options = { exp: format(1e256 * (1 + player.singularityCount)) }\n    }\n\n    if (updatelevelup) {\n        DOMCacheGetOrSet('runeshowlevelup').textContent = i18next.t(`runes.levelup.${i}`, options!)\n    }\n\n    DOMCacheGetOrSet(`runeshowpower${i}`).textContent = i18next.t(`runes.power.${i}`, options!)\n\n    if (updatelevelup) {\n        const arr = calculateOfferingsToLevelXTimes(i - 1, player.runelevels[i - 1], player.offeringbuyamount);\n        let offerings = 0;\n        let j = 0;\n        while (j < arr.length && (offerings + arr[j] <= player.runeshards || j === 0)) {\n            offerings += arr[j]\n            j++;\n        }\n        const s = j === 1 ? 'once' : `${j} times`\n\n        DOMCacheGetOrSet('runeDisplayInfo').textContent = i18next.t('runes.perOfferingText', {\n            exp: format(amountPerOffering),\n            x: format(offerings),\n            y: s\n        })\n    }\n\n}\n\nexport const resetofferings = (input: resetNames) => {\n    player.runeshards = Math.min(1e300, player.runeshards + calculateOfferings(input));\n}\n\nexport const unlockedRune = (runeIndexPlusOne: number) => {\n    // Whether or not a rune is unlocked array\n    const unlockedRune = [\n        false,\n        true,\n        player.achievements[38] > 0.5,\n        player.achievements[44] > 0.5,\n        player.achievements[102] > 0.5,\n        player.researches[82] > 0.5,\n        player.shopUpgrades.infiniteAscent,\n        player.platonicUpgrades[20] > 0\n    ];\n    return unlockedRune[runeIndexPlusOne];\n}\n\n/**\n * checkMaxRunes returns how many unique runes are at the maximum level.\n * Does not take in params, returns a number equal to number of maxed runes.\n */\nexport const checkMaxRunes = (runeIndex: number) => {\n    let maxed = 0;\n    for (let i = 0; i < runeIndex; i++) {\n        if (!unlockedRune(i + 1) || player.runelevels[i] >= calculateMaxRunes(i + 1)) {\n            maxed++;\n        }\n    }\n    return maxed;\n}\n\nexport const redeemShards = (runeIndexPlusOne: number, auto = false, cubeUpgraded = 0) => {\n    // if automated && 2x10 cube upgrade bought, this will be >0.\n    // runeIndex, the rune being added to\n    const runeIndex = runeIndexPlusOne - 1;\n\n    let levelsToAdd = player.offeringbuyamount\n    if (auto) {\n        levelsToAdd = Math.pow(2, player.shopUpgrades.offeringAuto);\n    }\n    if (auto && cubeUpgraded > 0) {\n        levelsToAdd = Math.min(1e4, calculateMaxRunes(runeIndex + 1)) // limit to max 10k levels per call so the execution doesn't take too long if things get stuck\n    }\n    let levelsAdded = 0\n    if (player.runeshards > 0 && player.runelevels[runeIndex] < calculateMaxRunes(runeIndex + 1) && unlockedRune(runeIndex + 1)) {\n        let all = 0\n        const maxLevel = calculateMaxRunes(runeIndex + 1)\n        const amountArr = calculateOfferingsToLevelXTimes(runeIndex, player.runelevels[runeIndex], levelsToAdd)\n        let toSpendTotal = Math.min(player.runeshards, amountArr.reduce((x, y) => x + y, 0))\n        if (cubeUpgraded > 0) {\n            toSpendTotal = Math.min(player.runeshards, cubeUpgraded)\n        }\n        const fact = calculateRuneExpGiven(runeIndex, false, player.runelevels[runeIndex], true)\n        const a = player.upgrades[71] / 25\n        const add = fact[0] - a * player.runelevels[runeIndex]\n        const mult = fact.slice(1, fact.length).reduce((x, y) => x * y, 1)\n        while (toSpendTotal > 0 && levelsAdded < levelsToAdd && player.runelevels[runeIndex] < maxLevel) {\n            const exp = calculateRuneExpToLevel(runeIndex, player.runelevels[runeIndex]) - player.runeexp[runeIndex]\n            const expPerOff = (add + a * player.runelevels[runeIndex]) * mult;\n            let toSpend = Math.min(toSpendTotal, Math.ceil(exp / expPerOff))\n            if (isNaN(toSpend)) {\n                toSpend = toSpendTotal\n            }\n            toSpendTotal -= toSpend\n            player.runeshards -= toSpend\n            player.runeexp[runeIndex] += toSpend * expPerOff\n            all += toSpend\n            while (player.runeexp[runeIndex] >= calculateRuneExpToLevel(runeIndex) && player.runelevels[runeIndex] < maxLevel) {\n                player.runelevels[runeIndex] += 1;\n                levelsAdded++;\n            }\n        }\n        for (let runeToUpdate = 0; runeToUpdate < 5; ++runeToUpdate) {\n            if (unlockedRune(runeToUpdate + 1)) {\n                if (runeToUpdate !== runeIndex) {\n                    player.runeexp[runeToUpdate] += all * calculateRuneExpGiven(runeToUpdate, true)\n                }\n                while (player.runeexp[runeToUpdate] >= calculateRuneExpToLevel(runeToUpdate) && player.runelevels[runeToUpdate] < calculateMaxRunes(runeToUpdate + 1)) {\n                    player.runelevels[runeToUpdate] += 1;\n                }\n            }\n        }\n        displayRuneInformation(runeIndexPlusOne);\n    }\n    calculateRuneLevels();\n    if (player.runeshards < 0 || !player.runeshards) {\n        player.runeshards = 0\n    }\n}\n\nexport const calculateOfferingsToLevelXTimes = (runeIndex: number, runeLevel: number, levels: number) => {\n    let exp = calculateRuneExpToLevel(runeIndex, runeLevel) - player.runeexp[runeIndex]\n    const maxLevel = calculateMaxRunes(runeIndex + 1)\n    const arr = []\n    let sum = 0\n    const off = player.runeshards\n    let levelsAdded = 0\n    const fact = calculateRuneExpGiven(runeIndex, false, runeLevel, true);\n    const a = player.upgrades[71] / 25\n    const add = fact[0] - a * runeLevel\n    const mult = fact.slice(1, fact.length).reduce((x, y) => x * y, 1)\n    while (levelsAdded < levels && runeLevel + levelsAdded < maxLevel && sum < off) {\n        const expPerOff = (add + a * (runeLevel + levelsAdded)) * mult\n        const amount = Math.ceil(exp / expPerOff)\n        sum += amount\n        arr.push(amount)\n        levelsAdded += 1\n        exp = calculateRuneExpToLevel(runeIndex, runeLevel + levelsAdded)\n            - calculateRuneExpToLevel(runeIndex, runeLevel + levelsAdded - 1)\n    }\n    return arr;\n}\n", "import { player } from './Synergism';\nimport { Globals as G } from './Variables';\n\nexport const calculateTesseractBlessings = () => {\n    // The visual updates are handled in visualUpdateCubes()\n    const tesseractArray = [player.tesseractBlessings.accelerator, player.tesseractBlessings.multiplier, player.tesseractBlessings.offering, player.tesseractBlessings.runeExp, player.tesseractBlessings.obtainium, player.tesseractBlessings.antSpeed, player.tesseractBlessings.antSacrifice, player.tesseractBlessings.antELO, player.tesseractBlessings.talismanBonus, player.tesseractBlessings.globalSpeed]\n\n    for (let i = 0; i < 10; i++) {\n        let power = 1;\n        let mult = 1;\n        if (tesseractArray[i] >= 1000 && i !== 5) {\n            power = G['giftDRPower'][i];\n            mult *= Math.pow(1000, (1 - G['giftDRPower'][i]));\n        }\n\n        G['tesseractBonusMultiplier'][i+1] = 1 + mult * G['giftbase'][i] * Math.pow(tesseractArray[i], power) * G['hypercubeBonusMultiplier'][i+1]!;\n    }\n}", "import { player, updateAllTick, updateAllMultiplier, format } from './Synergism';\nimport { CalcECC } from './Challenges';\nimport type { DecimalSource } from 'break_infinity.js';\nimport Decimal from 'break_infinity.js';\nimport { achievementaward } from './Achievements';\nimport { smallestInc } from './Utility';\nimport { upgradeupdate, crystalupgradedescriptions } from './Upgrades';\nimport { reset } from './Reset';\nimport { calculateSummationLinear, calculateCorruptionPoints, calculateRuneBonuses } from './Calculate';\nimport { Globals as G, Upgrade } from './Variables';\nimport type { FirstToFifth, OneToFive, ZeroToFour } from './types/Synergism';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport i18next from 'i18next';\n\nexport const getReductionValue = () => {\n    let reduction = 1;\n    reduction += Math.min(1e15, (G['rune4level'] * G['effectiveLevelMult']) / 160);\n    reduction += (player.researches[56] + player.researches[57] + player.researches[58] + player.researches[59] + player.researches[60]) / 200;\n    reduction += CalcECC('transcend', player.challengecompletions[4]) / 200;\n    reduction += Math.min(99999.9, (3 * (player.antUpgrades[7-1]! + G['bonusant7'])) / 100);\n    return reduction;\n}\n\nconst getCostAccelerator = (buyingTo: number): Decimal => {\n    --buyingTo;\n\n    const originalCost = 500;\n    let cost = new Decimal(originalCost);\n\n    cost = cost.times(Decimal.pow(4 / G['costDivisor'], buyingTo));\n\n    if (buyingTo > (125 + 5 * CalcECC('transcend', player.challengecompletions[4]))) {\n        const num = buyingTo - 125 - 5 * CalcECC('transcend', player.challengecompletions[4]);\n        const factorialBit = new Decimal(num).factorial();\n        const multBit = Decimal.pow(4, num);\n        cost = cost.times(multBit.times(factorialBit));\n    }\n\n    if (buyingTo > (2000 + 5 * CalcECC('transcend', player.challengecompletions[4]))) {\n        const sumNum = buyingTo - 2000 - 5 * CalcECC('transcend', player.challengecompletions[4]);\n        const sumBit = sumNum * (sumNum + 1) / 2\n        cost = cost.times(Decimal.pow(2, sumBit));\n    }\n\n    if (player.currentChallenge.transcension === 4) {\n        const sumBit = buyingTo * (buyingTo + 1) / 2;\n        cost = cost.times(Decimal.pow(10, sumBit));\n    }\n\n    if (player.currentChallenge.reincarnation === 8) {\n        const sumBit = buyingTo * (buyingTo + 1) / 2;\n        cost = cost.times(Decimal.pow(1e50, sumBit));\n    }\n    const buymax = Math.pow(10, 15);\n    if (buyingTo > buymax) {\n        const diminishingExponent = 1/8\n\n        const QuadrillionCost = getCostAccelerator(buymax)\n\n        const newCost = QuadrillionCost.pow(Math.pow(buyingTo / buymax, 1 / diminishingExponent));\n        const newExtra = newCost.exponent - Math.floor(newCost.exponent);\n        newCost.exponent = Math.floor(newCost.exponent);\n        newCost.mantissa *= Math.pow(10, newExtra);\n        newCost.normalize();\n        return Decimal.max(cost,newCost);\n    }\n    return cost;\n}\n\nexport const buyAccelerator = (autobuyer?: boolean) => {\n    const buyStart = player.acceleratorBought;\n    const buymax = Math.pow(10, 15);\n    // If at least buymax, we will use a different formulae\n    if (buyStart >= buymax) {\n        const diminishingExponent = 1/8\n\n        const log10Resource = Decimal.log10(player.coins)\n        const log10QuadrillionCost = Decimal.log10(getCostAccelerator(buymax))\n\n        let hi = Math.floor(buymax * Math.max(1, Math.pow(log10Resource / log10QuadrillionCost, diminishingExponent)))\n        let lo = buymax;\n        while (hi - lo > 0.5) {\n            const mid = Math.floor(lo + (hi - lo) / 2);\n            if (mid === lo || mid === hi) {\n                break;\n            }\n            if (!player.coins.gte(getCostAccelerator(mid))) {\n                hi = mid;\n            } else {\n                lo = mid;\n            }\n        }\n        const buyable = lo;\n        const thisCost = getCostAccelerator(buyable);\n\n        player.acceleratorBought = buyable;\n        player.acceleratorCost = thisCost;\n        return;\n    }\n\n    // Start buying at the current amount bought + 1\n    const buydefault = buyStart + smallestInc(buyStart);\n    let buyTo = buydefault;\n\n    let cashToBuy = getCostAccelerator(buyTo);\n    while (player.coins.gte(cashToBuy)) {\n        // then multiply by 4 until it reaches just above the amount needed\n        buyTo = buyTo * 4;\n        cashToBuy = getCostAccelerator(buyTo);\n    }\n    let stepdown = Math.floor(buyTo / 8);\n    while (stepdown >= smallestInc(buyTo)) {\n        // if step down would push it below out of expense range then divide step down by 2\n        if (getCostAccelerator(buyTo - stepdown).lte(player.coins)) {\n            stepdown = Math.floor(stepdown / 2);\n        } else {\n            buyTo = buyTo - Math.max(smallestInc(buyTo), stepdown);\n        }\n    }\n\n    if (!autobuyer && (player.coinbuyamount as number | string) !== 'max') {\n        if (player.acceleratorBought + player.coinbuyamount < buyTo) {\n            buyTo = player.acceleratorBought + player.coinbuyamount;\n        }\n    }\n\n    let buyFrom = Math.max(buyTo - 6 - smallestInc(buyTo), buydefault);\n    let thisCost = getCostAccelerator(buyFrom);\n    while (buyFrom <= buyTo && player.coins.gte(thisCost)) {\n        if (buyFrom >= buymax){\n            buyFrom = buymax;\n        }\n        player.coins = player.coins.sub(thisCost);\n        player.acceleratorBought = buyFrom;\n        buyFrom = buyFrom + smallestInc(buyFrom);\n        thisCost = getCostAccelerator(buyFrom);\n        player.acceleratorCost = thisCost;\n        if (buyFrom >= buymax){\n            return;\n        }\n    }\n\n    player.prestigenoaccelerator = false;\n    player.transcendnoaccelerator = false;\n    player.reincarnatenoaccelerator = false;\n    updateAllTick();\n    if (player.acceleratorBought >= 5 && player.achievements[148] === 0) {\n        achievementaward(148)\n    }\n    if (player.acceleratorBought >= 25 && player.achievements[149] === 0) {\n        achievementaward(149)\n    }\n    if (player.acceleratorBought >= 100 && player.achievements[150] === 0) {\n        achievementaward(150)\n    }\n    if (player.acceleratorBought >= 666 && player.achievements[151] === 0) {\n        achievementaward(151)\n    }\n    if (player.acceleratorBought >= 2000 && player.achievements[152] === 0) {\n        achievementaward(152)\n    }\n    if (player.acceleratorBought >= 12500 && player.achievements[153] === 0) {\n        achievementaward(153)\n    }\n    if (player.acceleratorBought >= 100000 && player.achievements[154] === 0) {\n        achievementaward(154)\n    }\n}\n\nconst getCostMultiplier = (buyingTo: number): Decimal => {\n    --buyingTo;\n\n    const originalCost = 1e4;\n    let cost = new Decimal(originalCost);\n    cost = cost.times(Decimal.pow(10, buyingTo / G['costDivisor']));\n\n    if (buyingTo > (75 + 2 * CalcECC('transcend', player.challengecompletions[4]))) {\n        const num = buyingTo - 75 - 2 * CalcECC('transcend', player.challengecompletions[4]);\n        const factorialBit = new Decimal(num).factorial();\n        const powBit = Decimal.pow(10, num);\n        cost = cost.times(factorialBit.times(powBit));\n    }\n\n    if (buyingTo > (2000 + 2 * CalcECC('transcend', player.challengecompletions[4]))) {\n        const sumNum = buyingTo - 2000 - 2 * CalcECC('transcend', player.challengecompletions[4]);\n        const sumBit = sumNum * (sumNum + 1) / 2;\n        cost = cost.times(Decimal.pow(2, sumBit));\n    }\n    if (player.currentChallenge.transcension === 4) {\n        const sumBit = buyingTo * (buyingTo + 1) / 2;\n        cost = cost.times(Decimal.pow(10, sumBit));\n    }\n    if (player.currentChallenge.reincarnation === 8) {\n        const sumBit = buyingTo * (buyingTo + 1) / 2;\n        cost = cost.times(Decimal.pow(1e50, sumBit));\n    }\n    const buymax = Math.pow(10, 15);\n    if (buyingTo > buymax) {\n        const diminishingExponent = 1/8\n\n        const QuadrillionCost = getCostMultiplier(buymax)\n\n        const newCost = QuadrillionCost.pow(Math.pow(buyingTo / buymax, 1 / diminishingExponent));\n        const newExtra = newCost.exponent - Math.floor(newCost.exponent);\n        newCost.exponent = Math.floor(newCost.exponent);\n        newCost.mantissa *= Math.pow(10, newExtra);\n        newCost.normalize();\n        return Decimal.max(cost,newCost);\n    }\n    return cost;\n}\n\nexport const buyMultiplier = (autobuyer?: boolean) => {\n    const buyStart = player.multiplierBought;\n    const buymax = Math.pow(10, 15);\n    // If at least buymax, we will use a different formulae\n    if (buyStart >= buymax) {\n        const diminishingExponent = 1/8\n\n        const log10Resource = Decimal.log10(player.coins)\n        const log10QuadrillionCost = Decimal.log10(getCostMultiplier(buymax))\n\n        let hi = Math.floor(buymax * Math.max(1, Math.pow(log10Resource / log10QuadrillionCost, diminishingExponent)))\n        let lo = buymax;\n        while (hi - lo > 0.5) {\n            const mid = Math.floor(lo + (hi - lo) / 2);\n            if (mid === lo || mid === hi) {\n                break;\n            }\n            if (!player.coins.gte(getCostMultiplier(mid))) {\n                hi = mid;\n            } else {\n                lo = mid;\n            }\n        }\n        const buyable = lo;\n        const thisCost = getCostMultiplier(buyable)\n\n        player.multiplierBought = buyable;\n        player.multiplierCost = thisCost;\n        return;\n    }\n\n    // Start buying at the current amount bought + 1\n    const buydefault = buyStart + smallestInc(buyStart);\n    let buyTo = buydefault;\n\n    let cashToBuy = getCostMultiplier(buyTo);\n    while (player.coins.gte(cashToBuy)) {\n        // then multiply by 4 until it reaches just above the amount needed\n        buyTo = buyTo * 4;\n        cashToBuy = getCostMultiplier(buyTo);\n    }\n    let stepdown = Math.floor(buyTo / 8);\n    while (stepdown >= smallestInc(buyTo)) {\n        // if step down would push it below out of expense range then divide step down by 2\n        if (getCostMultiplier(buyTo - stepdown).lte(player.coins)) {\n            stepdown = Math.floor(stepdown / 2);\n        } else {\n            buyTo = buyTo - Math.max(smallestInc(buyTo), stepdown);\n        }\n    }\n\n    if (!autobuyer && (player.coinbuyamount as number | string) !== 'max') {\n        if (player.multiplierBought + player.coinbuyamount < buyTo) {\n            buyTo = player.multiplierBought + player.coinbuyamount;\n        }\n    }\n\n    let buyFrom = Math.max(buyTo - 6 - smallestInc(buyTo), buydefault);\n    let thisCost = getCostMultiplier(buyFrom);\n    while (buyFrom <= buyTo && player.coins.gte(thisCost)) {\n        if (buyFrom >= buymax){\n            buyFrom = buymax;\n        }\n        player.coins = player.coins.sub(thisCost);\n        player.multiplierBought = buyFrom;\n        buyFrom = buyFrom + smallestInc(buyFrom);\n        thisCost = getCostMultiplier(buyFrom);\n        player.multiplierCost = thisCost;\n        if (buyFrom >= buymax){\n            return;\n        }\n    }\n\n    player.prestigenomultiplier = false;\n    player.transcendnomultiplier = false;\n    player.reincarnatenomultiplier = false;\n    updateAllMultiplier();\n    if (player.multiplierBought >= 2 && player.achievements[155] === 0) {\n        achievementaward(155)\n    }\n    if (player.multiplierBought >= 20 && player.achievements[156] === 0) {\n        achievementaward(156)\n    }\n    if (player.multiplierBought >= 100 && player.achievements[157] === 0) {\n        achievementaward(157)\n    }\n    if (player.multiplierBought >= 500 && player.achievements[158] === 0) {\n        achievementaward(158)\n    }\n    if (player.multiplierBought >= 2000 && player.achievements[159] === 0) {\n        achievementaward(159)\n    }\n    if (player.multiplierBought >= 12500 && player.achievements[160] === 0) {\n        achievementaward(160)\n    }\n    if (player.multiplierBought >= 100000 && player.achievements[161] === 0) {\n        achievementaward(161)\n    }\n}\n\n/*\n// Uses same as Decimal prototype but does so without creating new objects\nDecimal.prototype.factorial = function () {\n  // Using Stirling's Approximation.\n  // https://en.wikipedia.org/wiki/Stirling%27s_approximation#Versions_suitable_for_calculators\n  var n = this.toNumber() + 1;\n  return Decimal.pow(n / Math.E * Math.sqrt(n * Math.sinh(1 / n) + 1 / (810 * Math.pow(n, 6))), n).mul(Math.sqrt(2 * Math.PI / n));\n};\n*/\n\nconst mantissaFactorialPartExtra = Math.log10(2 * Math.PI);\nconst exponentFactorialPartExtra = Math.log10(Math.E);\n\nconst factorialByExponent = (fact: number) => {\n    if (++fact === 0) {\n        return 0;\n    }\n    return ((Math.log10(fact * Math.sqrt(fact * Math.sinh(1 / fact) + 1 / (810 * Math.pow(fact, 6)))) - exponentFactorialPartExtra) * fact) + ((mantissaFactorialPartExtra - Math.log10(fact)) / 2);\n}\n\nconst fact100exponent = Math.log10(9.332621544394e+157);\n\n// system of equations\n// 16 digits of precision\n// log10(1.25)xn = log10(x)+16\n// see: https://www.wolframalpha.com/input/?i=log10%28x%29%2B16+%3D+log10%281.25%29x\n// xn ~= 188.582\n// x ~= 188.582/n\nconst precision16_loss_addition_of_ones = 188.582;\nconst known_log10s = function () {\n    // needed logs\n    const needed = [1.03, 1.25];\n    const nums = [1, 2, 3, 4, 5, 6, 10, 15];\n    for (const num of nums) {\n        needed.push(100 + (100 * num));\n        needed.push(10 + (10 * num));\n    }\n\n    // Gets all possible challenge 8 completion amounts\n    const chalcompletions = 1000;\n    for (let i = 0; i < chalcompletions; ++i) {\n        needed.push(1 + (i / 2));\n    }\n\n    // constructing all logs\n    const obj: Record<number, number> = {};\n    for (const need of needed) {\n        if (typeof obj[need] === 'undefined') {\n            obj[need] = Math.log10(need);\n        }\n    }\n    return obj;\n}();\n\nconst coinBuildingCosts = [100, 1000, 2e4, 4e5, 8e6] as const;\nconst diamondBuildingCosts = [100, 1e5, 1e15, 1e40, 1e100] as const;\nconst mythosAndParticleBuildingCosts = [1, 1e2, 1e4, 1e8, 1e16] as const;\n\nconst getCostInternal = (originalCost: DecimalSource, buyingTo: number, type: keyof typeof buyProducerTypes, num: number, r: number): Decimal => {\n    // It's 0 indexed by mistake so you have to subtract 1 somewhere.\n    --buyingTo;\n    const buymax = Math.pow(10, 15);\n    // Accounts for the multiplies by 1.25^num buyingTo times\n    const cost = new Decimal(originalCost);\n    let mlog10125 = num * buyingTo;\n    // Accounts for the add 1s\n    if (buyingTo < precision16_loss_addition_of_ones / num) {\n        cost.mantissa += buyingTo / Math.pow(10, cost.exponent);\n    }\n    let fastFactMultBuyTo = 0;\n    // floored r value gets used a lot in removing calculations\n    let fr = Math.floor(r * 1000);\n    if (buyingTo >= r * 1000) {\n        // This code is such a mess at this point, just know that this is equivalent to what it was before\n        ++fastFactMultBuyTo;\n        cost.exponent -= factorialByExponent(fr);\n        cost.exponent += (-3 + Math.log10(1 + (num / 2))) * (buyingTo - fr);\n    }\n\n    fr = Math.floor(r * 5000);\n    if (buyingTo >= r * 5000) {\n        // This code is such a mess at this point, just know that this is equivalent to what it was before\n        ++fastFactMultBuyTo;\n        cost.exponent -= factorialByExponent(fr);\n        cost.exponent += ((known_log10s[10 + num * 10] + 1) * (buyingTo - fr - 1)) + 1;\n    }\n\n    fr = Math.floor(r * 20000);\n    if (buyingTo >= r * 20000) {\n        // This code is such a mess at this point, just know that this is equivalent to what it was before\n        fastFactMultBuyTo += 3;\n        cost.exponent -= factorialByExponent(fr) * 3;\n        cost.exponent += (known_log10s[100 + (100 * num)] + 5) * (buyingTo - fr);\n    }\n\n    fr = Math.floor(r * 250000);\n    if (buyingTo >= r * 250000) {\n        //1.03^x*1.03^y = 1.03^(x+y), we'll abuse this for this section of the algorithm\n        // 1.03^(x+y-((number of terms)250000*r))\n        // up to 250003 case\n        // assume r = 1 for this case\n        // (1.03^250000-250000)(1.03^250001-250000)(1.03^250002-250000)(1.03^250003) = (1.03^0*1.03^1*1.03^2*1.03^3)\n        // so in reality we just need to take buyingTo - fr and sum the power up to it\n        // (1.03^(sum from 0 to buyingTo - fr)) is the multiplier\n        // so (1.03^( (buyingTo-fr)(buyingTo-fr+1)/2 )\n        // god damn that was hard to make an algo for\n        cost.exponent += Math.log10(1.03) * (buyingTo - fr) * ((buyingTo - fr + 1) / 2);\n    }\n    // Applies the factorials from earlier without computing them 5 times\n    cost.exponent += factorialByExponent(buyingTo) * fastFactMultBuyTo;\n    let fastFactMultBuyTo100 = 0;\n    if ((player.currentChallenge.transcension === 4) && (type === 'Coin' || type === 'Diamonds')) {\n        // you would not fucking believe how long it took me to figure this out\n        // (100*costofcurrent + 10000)^n = (((100+buyingTo)!/100!)*100^buyingTo)^n\n        ++fastFactMultBuyTo100;\n        if (buyingTo >= (1000 - (10 * player.challengecompletions[4]))) {\n            // and I changed this to be a summation of all the previous buys 1.25 to the sum from 1 to buyingTo\n            mlog10125 += (buyingTo * (buyingTo + 1) / 2);\n        }\n    }\n    if ((player.currentChallenge.reincarnation === 10) && (type === 'Coin' || type === 'Diamonds')) {\n        // you would not fucking believe how long it took me to figure this out\n        // (100*costofcurrent + 10000)^n = (((100+buyingTo)!/100!)*100^buyingTo)^n\n        ++fastFactMultBuyTo100;\n        if (buyingTo >= (r * 25000)) {\n            // and I changed this to be a summation of all the previous buys 1.25 to the sum from 1 to buyingTo\n            mlog10125 += (buyingTo * (buyingTo + 1) / 2);\n        }\n    }\n    // Applies the factorial w/ formula from earlier n times to avoid multiple computations\n    cost.exponent += fastFactMultBuyTo100 * ((factorialByExponent(buyingTo + 100) - fact100exponent + (2 * buyingTo)) * (1.25 + (player.challengecompletions[4] / 4)));\n    // Applies all the Math.log10(1.25)s from earlier n times to avoid multiple computations\n    // log10(1.25)\n    cost.exponent += known_log10s[1.25] * mlog10125;\n    fr = Math.floor(r * 1000 * player.challengecompletions[8]);\n    if (player.currentChallenge.reincarnation === 8 && (type === 'Coin' || type === 'Diamonds' || type === 'Mythos') && buyingTo >= (1000 * player.challengecompletions[8] * r)) {\n        cost.exponent += ((known_log10s[2] * ((buyingTo - fr + 1) / 2)) - known_log10s[1 + (player.challengecompletions[8] / 2)]) * (buyingTo - fr);\n    }\n\n    const extra = cost.exponent - Math.floor(cost.exponent);\n    cost.exponent = Math.floor(cost.exponent);\n    cost.mantissa *= Math.pow(10, extra);\n    cost.normalize();\n    if (buyingTo > buymax) {\n        const diminishingExponent = 1/8\n\n        const QuadrillionCost = getCostInternal(originalCost, buymax, type, num, r)\n\n        const newCost = QuadrillionCost.pow(Math.pow(buyingTo / buymax, 1 / diminishingExponent));\n        const newExtra = newCost.exponent - Math.floor(newCost.exponent);\n        newCost.exponent = Math.floor(newCost.exponent);\n        newCost.mantissa *= Math.pow(10, newExtra);\n        newCost.normalize();\n        return Decimal.max(cost,newCost);\n    }\n    return cost;\n}\n\nconst getOriginalCostAndNum = (index: OneToFive, type: keyof typeof buyProducerTypes) => {\n    const originalCostArray = (\n        type === 'Coin'\n            ? coinBuildingCosts\n            : type === 'Diamonds'\n                ? diamondBuildingCosts\n                : mythosAndParticleBuildingCosts);\n    const num = type === 'Coin' ? index : index * (index + 1) / 2;\n    const originalCost = originalCostArray[index - 1 as ZeroToFour];\n    return [originalCost, num] as const;\n}\n\nexport const getCost = (index: OneToFive, type: keyof typeof buyProducerTypes, buyingTo: number, r?: number) => {\n    const [originalCost, num] = getOriginalCostAndNum(index, type);\n    return getCostInternal(originalCost, buyingTo, type, num, r ?? getReductionValue());\n}\n\nexport const buyMax = (index: OneToFive, type: keyof typeof buyProducerTypes) => {\n    const zeroIndex = index-1 as ZeroToFour;\n    const pos = G['ordinals'][zeroIndex];\n    const [originalCost, num] = getOriginalCostAndNum(index, type);\n\n    const buymax = Math.pow(10, 15);\n    const coinmax = 1e99;\n    const r = getReductionValue();\n    const tag = buyProducerTypes[type][0];\n\n    const posOwnedType = `${pos}Owned${type}` as const;\n\n    const buyStart = player[posOwnedType];\n    // If at least buymax, we will use a different formulae\n    if (buyStart >= buymax) {\n        const diminishingExponent = 1/8\n\n        const log10Resource = Decimal.log10(player[tag])\n        const log10QuadrillionCost = Decimal.log10(getCostInternal(originalCost, buymax, type, num, r))\n\n        let hi = Math.floor(buymax * Math.max(1, Math.pow(log10Resource / log10QuadrillionCost, diminishingExponent)))\n        let lo = buymax;\n        while (hi - lo > 0.5) {\n            const mid = Math.floor(lo + (hi - lo) / 2);\n            if (mid === lo || mid === hi) {\n                break;\n            }\n            if (!player[tag].gte(getCostInternal(originalCost, mid, type, num, r))) {\n                hi = mid;\n            } else {\n                lo = mid;\n            }\n        }\n        const buyable = lo;\n        const thisCost = getCostInternal(originalCost, buyable, type, num, r);\n\n        player[posOwnedType] = buyable;\n        player[`${pos}Cost${type}` as const] = thisCost;\n        return;\n    }\n\n    // Start buying at the current amount bought + 1\n    const buydefault = buyStart + smallestInc(buyStart);\n    let buyInc = 1;\n\n    let cashToBuy = getCostInternal(originalCost, buyStart + buyInc, type, num, r);\n\n    // Degenerate Case: return maximum if coins is too large\n    if (cashToBuy.exponent >= coinmax || !player[tag].gte(cashToBuy)) {\n        return;\n    }\n\n    while (cashToBuy.exponent < coinmax && player[tag].gte(cashToBuy)) {\n        // then multiply by 4 until it reaches just above the amount needed\n        buyInc = buyInc * 4;\n        cashToBuy = getCostInternal(originalCost, buyStart + buyInc, type, num, r);\n    }\n    let stepdown = Math.floor(buyInc / 8);\n    while (stepdown >= smallestInc(buyInc)) {\n        // if step down would push it below out of expense range then divide step down by 2\n        if (getCostInternal(originalCost, buyStart + buyInc - stepdown, type, num, r).lte(player[tag])) {\n            stepdown = Math.floor(stepdown / 2);\n        } else {\n            buyInc = buyInc - Math.max(smallestInc(buyInc), stepdown);\n        }\n    }\n\n    // Resolves the infamous autobuyer bug, for large values. This prevents the notion of even being able\n    // to go above the buymax. Future instances will also not check more than the first few lines\n    // meaning that the code below this cannot run if this ever runs.\n    if (buyStart + buyInc >= buymax) {\n        player[posOwnedType] = buymax\n        player[`${pos}Cost${type}` as const] = getCostInternal(originalCost, buymax, type, num, r)\n        return\n    }\n\n    // go down by 7 steps below the last one able to be bought and spend the cost of 25 up to the one that you started with and stop if coin goes below requirement\n    let buyFrom = Math.max(buyStart + buyInc - 6 - smallestInc(buyInc), buydefault);\n    let thisCost = getCostInternal(originalCost, buyFrom, type, num, r);\n    while (buyFrom <= buyStart + buyInc && player[tag].gte(thisCost)) {\n        player[tag] = player[tag].sub(thisCost);\n        player[posOwnedType] = buyFrom;\n        buyFrom = buyFrom + smallestInc(buyFrom);\n        thisCost = getCostInternal(originalCost, buyFrom, type, num, r);\n        player[`${pos}Cost${type}` as const] = thisCost;\n    }\n}\n\nconst buyProducerTypes = {\n    Diamonds: ['prestigePoints', 'crystal'],\n    Mythos: ['transcendPoints', 'mythos'],\n    Particles: ['reincarnationPoints', 'particle'],\n    Coin: ['coins', 'coin']\n} as const;\n\nexport const buyProducer = (pos: FirstToFifth, type: keyof typeof buyProducerTypes, num: number, autobuyer?: boolean) => {\n    const [tag, amounttype] = buyProducerTypes[type];\n    const buythisamount = autobuyer ? 500 : player[`${amounttype}buyamount` as const];\n    let r = 1;\n    r += (G['rune4level'] * G['effectiveLevelMult']) / 160;\n    r += (player.researches[56] + player.researches[57] + player.researches[58] + player.researches[59] + player.researches[60]) / 200;\n    r += CalcECC('transcend', player.challengecompletions[4]) / 200\n    r += (3 * (G['bonusant7'] + player.antUpgrades[7-1]!)) / 100;\n\n    const posCostType = `${pos}Cost${type}` as const;\n    const posOwnedType = `${pos}Owned${type}` as const;\n\n\n    while (player[tag].gte(player[posCostType]) && G['ticker'] < buythisamount && player[posOwnedType] < Number.MAX_SAFE_INTEGER) {\n        player[tag] = player[tag].sub(player[posCostType]);\n        player[posOwnedType] += 1;\n        player[posCostType] = player[posCostType].times(Decimal.pow(1.25, num));\n        player[posCostType] = player[posCostType].add(1);\n        if (player[posOwnedType] >= (1000 * r)) {\n            player[posCostType] = player[posCostType].times(player[posOwnedType]).dividedBy(1000).times(1 + num / 2);\n        }\n        if (player[posOwnedType] >= (5000 * r)) {\n            player[posCostType] = player[posCostType].times(player[posOwnedType]).times(10).times(10 + num * 10);\n        }\n        if (player[posOwnedType] >= (20000 * r)) {\n            player[posCostType] = player[posCostType].times(Decimal.pow(player[posOwnedType], 3)).times(100000).times(100 + num * 100)\n        }\n        if (player[posOwnedType] >= (250000 * r)) {\n            player[posCostType] = player[posCostType].times(Decimal.pow(1.03, player[posOwnedType] - 250000 * r))\n        }\n        if (player.currentChallenge.transcension === 4 && (type === 'Coin' || type === 'Diamonds')) {\n            player[posCostType] = player[posCostType].times(Math.pow(100 * player[posOwnedType] + 10000, 1.25 + 1 / 4 * player.challengecompletions[4]));\n            if (player[posOwnedType] >= 1000 - (10 * player.challengecompletions[4])) {\n                player[posCostType] = player[posCostType].times(Decimal.pow(1.25, player[posOwnedType]));\n            }\n        }\n        if (player.currentChallenge.reincarnation === 8 && (type === 'Coin' || type === 'Diamonds' || type === 'Mythos') && player[posOwnedType] >= (1000 * player.challengecompletions[8] * r)) {\n            player[posCostType] = player[posCostType].times(Decimal.pow(2, (player[posOwnedType] - (1000 * player.challengecompletions[8] * r)) / (1 + (player.challengecompletions[8] / 2))));\n        }\n        G['ticker'] += 1;\n    }\n    G['ticker'] = 0;\n}\n\nexport const buyUpgrades = (type: Upgrade, pos: number, state?: boolean) => {\n    const currency = type;\n    if (player[currency].gte(Decimal.pow(10, G['upgradeCosts'][pos])) && player.upgrades[pos] === 0) {\n        player[currency] = player[currency].sub(Decimal.pow(10, G['upgradeCosts'][pos]))\n        player.upgrades[pos] = 1;\n        upgradeupdate(pos, state)\n    }\n\n    if (type === Upgrade.transcend) {\n        player.reincarnatenocoinprestigeortranscendupgrades = false;\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false;\n    }\n    if (type === Upgrade.prestige) {\n        player.transcendnocoinorprestigeupgrades = false;\n        player.reincarnatenocoinorprestigeupgrades = false;\n        player.reincarnatenocoinprestigeortranscendupgrades = false;\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false;\n    }\n    if (type === Upgrade.coin) {\n        player.prestigenocoinupgrades = false;\n        player.transcendnocoinupgrades = false;\n        player.transcendnocoinorprestigeupgrades = false;\n        player.reincarnatenocoinupgrades = false;\n        player.reincarnatenocoinorprestigeupgrades = false;\n        player.reincarnatenocoinprestigeortranscendupgrades = false;\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = false;\n    }\n\n}\n\nexport const calculateCrystalBuy = (i: number) => {\n    const u = i - 1;\n    const exponent = Decimal.log(player.prestigeShards.add(1), 10);\n\n    const toBuy = Math.floor(Math.pow(Math.max(0, 2 * (exponent - G['crystalUpgradesCost'][u]) / G['crystalUpgradeCostIncrement'][u] + 1 / 4), 1 / 2) + 1 / 2)\n    return toBuy;\n}\n\nexport const buyCrystalUpgrades = (i: number, auto = false) => {\n    const u = i - 1;\n\n    let c = 0;\n    c += Math.floor(G['rune3level'] / 16 * G['effectiveLevelMult']) * 100 / 100\n    if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\n        c += 10\n    }\n\n    const toBuy = calculateCrystalBuy(i);\n\n    if (toBuy + c > player.crystalUpgrades[u]) {\n        player.crystalUpgrades[u] = 100 / 100 * (toBuy + c)\n        if (toBuy > 0) {\n            player.prestigeShards = player.prestigeShards.sub(Decimal.pow(10, G['crystalUpgradesCost'][u] + G['crystalUpgradeCostIncrement'][u] * (1 / 2 * Math.pow(toBuy - 1 / 2, 2) - 1 / 8)))\n            if (!auto) {\n                crystalupgradedescriptions(i)\n            }\n        }\n    }\n}\n\nexport const boostAccelerator = (automated?: boolean) => {\n    let buyamount = 1;\n    if (player.upgrades[46] === 1) {\n        buyamount = automated ? 9999 : player.coinbuyamount;\n    }\n\n    if (player.upgrades[46] < 1) {\n        while (player.prestigePoints.gte(player.acceleratorBoostCost) && G['ticker'] < buyamount) {\n            if (player.prestigePoints.gte(player.acceleratorBoostCost)) {\n                player.acceleratorBoostBought += 1;\n                player.acceleratorBoostCost = player.acceleratorBoostCost.times(1e10).times(Decimal.pow(10, player.acceleratorBoostBought));\n                if (player.acceleratorBoostBought > (1000 * (1 + 2 * G['effectiveRuneBlessingPower'][4]))) {\n                    player.acceleratorBoostCost = player.acceleratorBoostCost.times(Decimal.pow(10, Math.pow(player.acceleratorBoostBought - (1000 * (1 + 2 * G['effectiveRuneBlessingPower'][4])), 2) / (1 + 2 * G['effectiveRuneBlessingPower'][4])))\n                }\n                player.transcendnoaccelerator = false;\n                player.reincarnatenoaccelerator = false;\n                if (player.upgrades[46] < 0.5) {\n                    for (let j = 21; j < 41; j++) {\n                        player.upgrades[j] = 0;\n                    }\n                    reset('prestige');\n                    player.prestigePoints = new Decimal(0);\n                }\n            }\n        }\n    } else {\n        const buyStart = player.acceleratorBoostBought;\n        const buymax = Math.pow(10, 15);\n        // If at least buymax, we will use a different formulae\n        if (buyStart >= buymax) {\n            const diminishingExponent = 1/8\n\n            const log10Resource = Decimal.log10(player.prestigePoints)\n            const log10QuadrillionCost = Decimal.log10(getAcceleratorBoostCost(buymax))\n\n            let hi = Math.floor(buymax * Math.max(1, Math.pow(log10Resource / log10QuadrillionCost, diminishingExponent)))\n            let lo = buymax;\n            while (hi - lo > 0.5) {\n                const mid = Math.floor(lo + (hi - lo) / 2);\n                if (mid === lo || mid === hi) {\n                    break;\n                }\n                if (!player.prestigePoints.gte(getAcceleratorBoostCost(mid))) {\n                    hi = mid;\n                } else {\n                    lo = mid;\n                }\n            }\n            const buyable = lo;\n            const thisCost = getAcceleratorBoostCost(buyable)\n\n            player.acceleratorBoostBought = buyable;\n            player.acceleratorBoostCost = thisCost;\n            return;\n        }\n\n        // Start buying at the current amount bought + 1\n        const buydefault = buyStart + smallestInc(buyStart);\n        let buyInc = 1;\n\n        let cost = getAcceleratorBoostCost(buyStart + buyInc);\n        while (player.prestigePoints.gte(cost)) {\n            buyInc *= 4;\n            cost = getAcceleratorBoostCost(buyStart + buyInc);\n        }\n        let stepdown = Math.floor(buyInc / 8)\n        while (stepdown >= smallestInc(buyInc)) {\n            // if step down would push it below out of expense range then divide step down by 2\n            if (getAcceleratorBoostCost(buyStart + buyInc - stepdown).lte(player.prestigePoints)) {\n                stepdown = Math.floor(stepdown / 2);\n            } else {\n                buyInc = buyInc - Math.max(smallestInc(buyInc),stepdown);\n            }\n        }\n        // go down by 7 steps below the last one able to be bought and spend the cost of 25 up to the one that you started with and stop if coin goes below requirement\n        let buyFrom = Math.max(buyStart + buyInc - 6 - smallestInc(buyInc), buydefault);\n        let thisCost = getAcceleratorBoostCost(player.acceleratorBoostBought);\n        while (buyFrom <= buyStart + buyInc && player.prestigePoints.gte(getAcceleratorBoostCost(buyFrom))) {\n            player.prestigePoints = player.prestigePoints.sub(thisCost);\n            if (buyFrom >= buymax){\n                buyFrom = buymax;\n            }\n            player.acceleratorBoostBought = buyFrom;\n            buyFrom = buyFrom + smallestInc(buyFrom);\n            thisCost = getAcceleratorBoostCost(buyFrom);\n            player.acceleratorBoostCost = thisCost;\n\n            player.transcendnoaccelerator = false;\n            player.reincarnatenoaccelerator = false;\n            if (buyFrom >= buymax){\n                return;\n            }\n        }\n    }\n\n    G['ticker'] = 0;\n    if (player.acceleratorBoostBought >= 2 && player.achievements[162] === 0) {\n        achievementaward(162)\n    }\n    if (player.acceleratorBoostBought >= 10 && player.achievements[163] === 0) {\n        achievementaward(163)\n    }\n    if (player.acceleratorBoostBought >= 50 && player.achievements[164] === 0) {\n        achievementaward(164)\n    }\n    if (player.acceleratorBoostBought >= 200 && player.achievements[165] === 0) {\n        achievementaward(165)\n    }\n    if (player.acceleratorBoostBought >= 1000 && player.achievements[166] === 0) {\n        achievementaward(166)\n    }\n    if (player.acceleratorBoostBought >= 5000 && player.achievements[167] === 0) {\n        achievementaward(167)\n    }\n    if (player.acceleratorBoostBought >= 15000 && player.achievements[168] === 0) {\n        achievementaward(168)\n    }\n\n\n}\n\nconst getAcceleratorBoostCost = (level = 1): Decimal => {\n    // formula starts at 0 but buying starts at 1\n    level--;\n    const buymax = Math.pow(10, 15);\n    const base = new Decimal(1e3)\n    const eff = 1 + 2 * G['effectiveRuneBlessingPower'][4]\n    const linSum = (n: number) => n * (n + 1) / 2\n    const sqrSum = (n: number) => n * (n + 1) * (2 * n + 1) / 6\n    let cost = base;\n    if (level > 1000 * eff) {\n        cost = base.times(Decimal.pow(10, 10 * level\n            + linSum(level) // each level increases the exponent by 1 more each time\n            + sqrSum(level - 1000 * eff) / eff)) // after cost delay is passed each level increases the cost by the square each time\n    } else {\n        cost = base.times(Decimal.pow(10, 10 * level + linSum(level)))\n    }\n    if (level > buymax) {\n        const diminishingExponent = 1/8\n\n        const QuadrillionCost = getAcceleratorBoostCost(buymax)\n\n        const newCost = QuadrillionCost.pow(Math.pow(level / buymax, 1 / diminishingExponent));\n        const newExtra = newCost.exponent - Math.floor(newCost.exponent);\n        newCost.exponent = Math.floor(newCost.exponent);\n        newCost.mantissa *= Math.pow(10, newExtra);\n        newCost.normalize();\n        return Decimal.max(cost,newCost);\n    }\n    return cost;\n}\n\nconst getParticleCost = (originalCost: DecimalSource, buyTo: number): Decimal => {\n    --buyTo;\n    originalCost = new Decimal(originalCost)\n    let cost = originalCost.times(Decimal.pow(2, buyTo));\n\n    const DR = (player.currentChallenge.ascension !== 15)? 325000: 1000;\n\n    if (buyTo > DR) {\n        cost = cost.times(Decimal.pow(1.001, (buyTo - DR) * ((buyTo - DR + 1) / 2)));\n    }\n    const buymax = Math.pow(10, 15);\n    if (buyTo > buymax) {\n        const diminishingExponent = 1/8\n\n        const QuadrillionCost = getParticleCost(originalCost, buymax)\n\n        const newCost = QuadrillionCost.pow(Math.pow(buyTo / buymax, 1 / diminishingExponent));\n        const newExtra = newCost.exponent - Math.floor(newCost.exponent);\n        newCost.exponent = Math.floor(newCost.exponent);\n        newCost.mantissa *= Math.pow(10, newExtra);\n        newCost.normalize();\n        return Decimal.max(cost,newCost);\n    }\n    return cost\n}\n\nexport const buyParticleBuilding = (\n    index: OneToFive,\n    autobuyer = false\n) => {\n    const zeroIndex = index-1 as ZeroToFour;\n    const originalCost = mythosAndParticleBuildingCosts[zeroIndex];\n    const pos = G['ordinals'][zeroIndex];\n    const key = `${pos}OwnedParticles` as const;\n    const buyStart = player[key];\n    const buymax = Math.pow(10, 15);\n    // If at least buymax, we will use a different formulae\n    if (buyStart >= buymax) {\n        const diminishingExponent = 1/8\n\n        const log10Resource = Decimal.log10(player.reincarnationPoints)\n        const log10QuadrillionCost = Decimal.log10(getParticleCost(originalCost, buymax))\n\n        let hi = Math.floor(buymax * Math.max(1, Math.pow(log10Resource / log10QuadrillionCost, diminishingExponent)))\n        let lo = buymax;\n        while (hi - lo > 0.5) {\n            const mid = Math.floor(lo + (hi - lo) / 2);\n            if (mid === lo || mid === hi) {\n                break;\n            }\n            if (!player.reincarnationPoints.gte(getParticleCost(originalCost, mid))) {\n                hi = mid;\n            } else {\n                lo = mid;\n            }\n        }\n        const buyable = lo;\n        const thisCost = getParticleCost(originalCost, buyable)\n\n        player[key] = buyable;\n        player[`${pos}CostParticles` as const] = thisCost;\n        return;\n    }\n\n    // Start buying at the current amount bought + 1\n    const buydefault = buyStart + smallestInc(buyStart);\n    let buyTo = buydefault;\n\n    let cashToBuy = getParticleCost(originalCost, buyTo);\n    while (player.reincarnationPoints.gte(cashToBuy)) {\n        // then multiply by 4 until it reaches just above the amount needed\n        buyTo = buyTo * 4;\n        cashToBuy = getParticleCost(originalCost, buyTo);\n    }\n    let stepdown = Math.floor(buyTo / 8);\n    while (stepdown >= smallestInc(buyTo)) {\n        // if step down would push it below out of expense range then divide step down by 2\n        if (getParticleCost(originalCost, buyTo - stepdown).lte(player.reincarnationPoints)) {\n            stepdown = Math.floor(stepdown / 2);\n        } else {\n            buyTo = buyTo - Math.max(smallestInc(buyTo), stepdown);\n        }\n    }\n\n    if (!autobuyer) {\n        if (player.particlebuyamount + buyStart < buyTo) {\n            buyTo = buyStart + player.particlebuyamount + smallestInc(player[key] + player.particlebuyamount);\n        }\n    }\n\n    // go down by 7 steps below the last one able to be bought and spend the cost of 25 up to the one that you started with and stop if coin goes below requirement\n    let buyFrom = Math.max(buyTo - 6 - smallestInc(buyTo), buydefault);\n    let thisCost = getParticleCost(originalCost, buyFrom);\n    while (buyFrom <= buyTo && player.reincarnationPoints.gte(thisCost)) {\n        player.reincarnationPoints = player.reincarnationPoints.sub(thisCost);\n        player[key] = buyFrom;\n        buyFrom = buyFrom + smallestInc(buyFrom);\n        thisCost = getParticleCost(originalCost, buyFrom);\n        player[`${pos}CostParticles` as const] = thisCost;\n    }\n}\n\nexport const tesseractBuildingCosts = [1, 10, 100, 1000, 10000] as const;\n\n// The nth tesseract building of tier i costs\n//   tesseractBuildingCosts[i-1] * n^3.\n// so the first n tesseract buildings of tier i costs\n//   cost(n) = tesseractBuildingCosts[i-1] * (n * (n+1) / 2)^2\n// in total. Use cost(owned+buyAmount) - cost(owned) to figure the cost of\n// buying multiple buildings.\n\nexport type TesseractBuildings = [number|null, number|null, number|null, number|null, number|null];\n\nconst buyTessBuildingsToCheapestPrice = (ownedBuildings: TesseractBuildings, cheapestPrice: number): [number, TesseractBuildings] => {\n    const buyToBuildings = ownedBuildings.map((currentlyOwned, index) => {\n        if (currentlyOwned === null) {\n            return null;\n        }\n        // thisPrice >= cheapestPrice = tesseractBuildingCosts[index] * (buyTo+1)^3\n        // buyTo = cuberoot(cheapestPrice / tesseractBuildingCosts[index]) - 1\n        // If buyTo has a fractional part, we want to round UP so that this\n        // price costs more than the cheapest price.\n        // If buyTo doesn't have a fractional part, thisPrice = cheapestPrice.\n        const buyTo = Math.ceil(Math.pow(cheapestPrice / tesseractBuildingCosts[index], 1/3) - 1);\n        // It could be possible that cheapestPrice is less than the CURRENT\n        // price of this building, so take the max of the number of buildings\n        // we currently have.\n        return Math.max(currentlyOwned, buyTo);\n    }) as TesseractBuildings;\n\n    let price = 0;\n    for (let i = 0; i < ownedBuildings.length; i++) {\n        const buyFrom = ownedBuildings[i];\n        const buyTo = buyToBuildings[i];\n        if (buyFrom === null || buyTo === null) {\n            continue;\n        }\n        price += tesseractBuildingCosts[i] * (Math.pow(buyTo * (buyTo + 1) / 2, 2) - Math.pow(buyFrom * (buyFrom + 1) / 2, 2));\n    }\n\n    return [price, buyToBuildings];\n};\n\n/**\n * Calculate the result of repeatedly buying the cheapest tesseract building,\n * given an initial list of owned buildings and a budget.\n *\n * This function is pure and does not rely on any global state other than\n * constants for ease of testing.\n *\n * For tests:\n * calculateInBudget([0, 0, 0, 0, 0], 100) = [3, 1, 0, 0, 0]\n * calculateInBudget([null, 0, 0, 0, 0], 100) = [null, 2, 0, 0, 0]\n * calculateInBudget([3, 1, 0, 0, 0], 64+80-1) = [4, 1, 0, 0, 0]\n * calculateInBudget([3, 1, 0, 0, 0], 64+80) = [4, 2, 0, 0, 0]\n * calculateInBudget([9, 100, 100, 0, 100], 1000) = [9, 100, 100, 1, 100]\n * calculateInBudget([9, 100, 100, 0, 100], 2000) = [10, 100, 100, 1, 100]\n *\n * and calculateInBudget([0, 0, 0, 0, 0], 1e46) should run in less than a\n * second.\n *\n * @param ownedBuildings The amount of buildings owned, or null if the building\n * should not be bought.\n * @param budget The number of tesseracts to spend.\n * @returns The amount of buildings owned after repeatedly buying the cheapest\n * building with the budget.\n */\nexport const calculateTessBuildingsInBudget = (ownedBuildings: TesseractBuildings, budget: number): TesseractBuildings => {\n    // Nothing is affordable.\n    // Also catches the case when budget <= 0, and all values are null.\n    let minCurrentPrice: number|null = null;\n    for (let i = 0; i < ownedBuildings.length; i++) {\n        const owned = ownedBuildings[i];\n        if (owned === null) {\n            continue;\n        }\n        const price = tesseractBuildingCosts[i] * Math.pow(owned + 1, 3);\n        if (minCurrentPrice === null || price < minCurrentPrice) {\n            minCurrentPrice = price;\n        }\n    }\n\n    if (minCurrentPrice === null || minCurrentPrice > budget) {\n        return ownedBuildings;\n    }\n\n    // Every time the cheapest building is bought, the cheapest price either\n    // stays constant (if there are two or more cheapest buildings), or\n    // increases.\n    //\n    // Additionally, given the price of a building, calculating\n    // - the amount of buildings needed to hit that price and\n    // - the cumulative cost to buy to that amount of buildings\n    // can be done with a constant number of floating point operations.\n    //\n    // Therefore, by binary searching over \"cheapest price when finished\", we\n    // are able to efficiently (O(log budget)) determine the number of buildings\n    // owned after repeatedly buying the cheapest building. Calculating the\n    // cheapest building and buying one at a time would take O(budget^(1/4))\n    // time - and as the budget could get very large (this is Synergism after\n    // all), this is probably too slow.\n    //\n    // That is, we have a function f(cheapestPrice) which returns the cost of\n    // buying buildings until all prices to buy are cheapestPrice or higher, and\n    // we want to find the maximum value of cheapestPrice such that\n    // f(cheapestPrice) <= budget.\n    // In this case, f(x) = buyTessBuildingsToCheapestPrice(ownedBuildings, x)[0].\n\n    // f(minCurrentPrice) = 0 < budget. We also know that we can definitely buy\n    // at least one thing.\n    let lo = minCurrentPrice;\n    // Do an exponential search to find the upper bound.\n    let hi = lo * 2;\n    while (buyTessBuildingsToCheapestPrice(ownedBuildings, hi)[0] <= budget) {\n        lo = hi;\n        hi *= 2;\n    }\n    // Invariant:\n    // f(lo) <= budget < f(hi).\n    while (hi - lo > 0.5) {\n        const mid = lo + (hi - lo) / 2;\n        // It's possible to get into an infinite loop if mid here is equal to\n        // the boundaries, even if hi !== lo (due to floating point inaccuracy).\n        if (mid === lo || mid === hi) {\n            break;\n        }\n        if (buyTessBuildingsToCheapestPrice(ownedBuildings, mid)[0] <= budget) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n\n    // Binary search is done (with lo being the best candidate).\n    const [cost, buildings] = buyTessBuildingsToCheapestPrice(ownedBuildings, lo);\n\n    // Note that this has a slight edge case when 2 <= N <= 5 buildings are the\n    // same price, and it is optimal to buy only M < N of them at that price.\n    // The result of this edge case is that we can finish the binary search with\n    // a set of buildings which are affordable, but more buildings can still be\n    // bought. To fix this, we greedily buy the cheapest building one at a time,\n    // which should take 4 or less iterations to run out of budget.\n    let remainingBudget = budget - cost;\n    const currentPrices = buildings.map((num, index) => {\n        if (num === null) {\n            return null;\n        }\n        return tesseractBuildingCosts[index] * Math.pow(num+1, 3);\n    });\n\n    for (let iteration = 1; iteration <= 5; iteration++) {\n        let minimum: {price: number, index: number}|null = null;\n        for (let index = 0; index < currentPrices.length; index++) {\n            const price = currentPrices[index];\n            if (price === null) {\n                continue;\n            }\n            // <= is used instead of < to prioritise the higher tier buildings\n            // over the lower tier ones if they have the same price.\n            if (minimum === null || price <= minimum.price) {\n                minimum = {price, index};\n            }\n        }\n        if (minimum !== null && minimum.price <= remainingBudget) {\n            remainingBudget -= minimum.price;\n            // buildings[minimum.index] should always be a number.\n            // In extreme situations (when buildings[minimum.index] is bigger\n            // than Number.MAX_SAFE_INTEGER), this below increment won't work.\n            // However, that requires 1e47 tesseracts to get to, which shouldn't\n            // ever happen.\n            buildings[minimum.index]!++;\n            currentPrices[minimum.index] = tesseractBuildingCosts[minimum.index] * Math.pow(buildings[minimum.index]!+1, 3);\n        } else {\n            // Can't afford cheapest any more - break.\n            break;\n        }\n    }\n\n    return buildings;\n};\n\n/**\n * @param index Which tesseract building to get the cost of.\n * @param amount The amount to buy. Defaults to tesseract buy amount.\n * @param checkCanAfford Whether to limit the purchase amount to the number of buildings the player can afford.\n * @returns A pair of [number of buildings after purchase, cost of purchase].\n */\nexport const getTesseractCost = (index: OneToFive, amount?: number, checkCanAfford = true, buyFrom?: number): [number, number] => {\n    amount ??= player.tesseractbuyamount;\n    buyFrom ??= player[`ascendBuilding${index}` as const]['owned'];\n    const intCost = tesseractBuildingCosts[index - 1];\n    const subCost = intCost * Math.pow(buyFrom * (buyFrom + 1) / 2, 2);\n\n    let actualBuy: number;\n    if (checkCanAfford) {\n        const buyTo = Math.floor(-1 / 2 + 1 / 2 * Math.pow(1 + 8 * Math.pow((Number(player.wowTesseracts) + subCost) / intCost, 1 / 2), 1 / 2));\n        actualBuy = Math.min(buyTo, buyFrom + amount);\n    } else {\n        actualBuy = buyFrom + amount;\n    }\n    const actualCost = intCost * Math.pow(actualBuy * (actualBuy + 1) / 2, 2) - subCost;\n    return [actualBuy, actualCost];\n}\n\nexport const buyTesseractBuilding = (index: OneToFive, amount = player.tesseractbuyamount) => {\n    const intCost = tesseractBuildingCosts[index - 1];\n    const ascendBuildingIndex = `ascendBuilding${index}` as const;\n    // Destructuring FTW!\n    const [buyTo, actualCost] = getTesseractCost(index, amount);\n\n    player[ascendBuildingIndex]['owned'] = buyTo;\n    player.wowTesseracts.sub(actualCost);\n    player[ascendBuildingIndex]['cost'] = intCost * Math.pow(1 + buyTo, 3)\n}\n\nexport const buyRuneBonusLevels = (type: 'Blessings' | 'Spirits', index: number) => {\n    const unlocked = type === 'Spirits' ? player.challengecompletions[12] > 0 : player.achievements[134] === 1;\n    if (unlocked && isFinite(player.runeshards) && player.runeshards > 0) {\n        let baseCost;\n        let baseLevels;\n        let levelCap;\n        if (type === 'Spirits') {\n            baseCost = G['spiritBaseCost'];\n            baseLevels = player.runeSpiritLevels[index];\n            levelCap = player.runeSpiritBuyAmount;\n        } else {\n            baseCost = G['blessingBaseCost'];\n            baseLevels = player.runeBlessingLevels[index];\n            levelCap = player.runeBlessingBuyAmount;\n        }\n\n        const [level, cost] = calculateSummationLinear(baseLevels, baseCost, player.runeshards, levelCap);\n        if (type === 'Spirits') {\n            player.runeSpiritLevels[index] = level;\n        } else {\n            player.runeBlessingLevels[index] = level;\n        }\n\n        player.runeshards -= cost;\n\n        if (player.runeshards < 0) {\n            player.runeshards = 0;\n        }\n\n        updateRuneBlessing(type, index);\n    }\n}\n\nexport const updateRuneBlessing = (type: 'Blessings' | 'Spirits', index: number) => {\n    if (index === 1) {\n        const requirementArray = [0, 1e5, 1e8, 1e11]\n        for (let i = 1; i <= 3; i++) {\n            if (player.runeBlessingLevels[1] >= requirementArray[i] && player.achievements[231 + i] < 1) {\n                achievementaward(231 + i)\n            }\n            if (player.runeSpiritLevels[1] >= 10 * requirementArray[i] && player.achievements[234 + i] < 1) {\n                achievementaward(234 + i)\n            }\n        }\n        if (player.runeBlessingLevels[1] >= 1e22 && player.achievements[245] < 1) {\n            achievementaward(245)\n        }\n    }\n\n    calculateRuneBonuses()\n\n    if (type === 'Blessings') {\n        const blessingMultiplierArray = [0, 8, 10, 6.66, 2, 1]\n        const t = (index === 5) ? 1 : 0;\n        DOMCacheGetOrSet(`runeBlessingPower${index}Value1`).innerHTML = i18next.t('runes.blessings.blessingPower', {\n            reward: i18next.t(`runes.blessings.rewards.${index - 1}`),\n            value: format(G['runeBlessings'][index]),\n            speed: format(1 - t + blessingMultiplierArray[index] * G['effectiveRuneBlessingPower'][index], 4, true)\n        })\n    } else if (type === 'Spirits') { // eslint-disable-line @typescript-eslint/no-unnecessary-condition\n        const spiritMultiplierArray = [0, 1, 1, 20, 1, 100]\n        spiritMultiplierArray[index] *= (calculateCorruptionPoints() / 400)\n        const t = (index === 3) ? 1 : 0;\n\n        DOMCacheGetOrSet(`runeSpiritPower${index}Value1`).innerHTML = i18next.t('runes.spirits.spiritPower', {\n            reward: i18next.t(`runes.spirits.rewards.${index - 1}`),\n            value: format(G['runeSpirits'][index]),\n            speed: format(1 - t + spiritMultiplierArray[index] * G['effectiveRuneSpiritPower'][index], 4, true)\n        })\n    }\n}\n\nexport const buyAllBlessings = (type: 'Blessings' | 'Spirits', percentage = 100, auto = false) => {\n    const unlocked = type === 'Spirits' ? player.challengecompletions[12] > 0 : player.achievements[134] === 1;\n    if (unlocked) {\n        const runeshards = Math.floor(player.runeshards / 100 * percentage / 5);\n        for (let index = 1; index < 6; index++) {\n            if (isFinite(player.runeshards) && player.runeshards > 0) {\n                let baseCost;\n                let baseLevels;\n                const levelCap = 1e300;\n                if (type === 'Spirits') {\n                    baseCost = G['spiritBaseCost'];\n                    baseLevels = player.runeSpiritLevels[index];\n                } else {\n                    baseCost = G['blessingBaseCost'];\n                    baseLevels = player.runeBlessingLevels[index];\n                }\n\n                const [level, cost] = calculateSummationLinear(baseLevels, baseCost, runeshards, levelCap);\n                if (level > baseLevels && (!auto || (level - baseLevels) * 10000 > baseLevels)) {\n                    if (type === 'Spirits') {\n                        player.runeSpiritLevels[index] = level;\n                    } else {\n                        player.runeBlessingLevels[index] = level;\n                    }\n\n                    player.runeshards -= cost;\n\n                    if (player.runeshards < 0) {\n                        player.runeshards = 0;\n                    }\n\n                    updateRuneBlessing(type, index);\n                }\n            }\n        }\n    }\n}\n", "import { player } from './Synergism';\nimport { achievementaward } from './Achievements';\nimport Decimal from 'break_infinity.js';\nimport { upgradeupdate, clickUpgrades } from './Upgrades';\nimport { Globals as G, Upgrade } from './Variables';\nimport { buyUpgrades } from './Buy';\n\nexport const buyGenerator = (i: number, state: boolean) => {\n    if (i === 1 && player.prestigePoints.gte(1e12) && player.unlocks.generation === false) {\n        player.unlocks.generation = true\n    }\n    const q = 100 + i\n    let type: 'transcendPoints' | 'coins' | 'prestigePoints' = 'transcendPoints'\n    if (q <= 110 && q >= 106) {\n        type = 'coins'\n    } else if (q <= 115) {\n        type = 'prestigePoints'\n    }\n\n    const cost = Decimal.pow(10, G['upgradeCosts'][q])\n    const achievementCheck = Math.max(player.upgrades[101], player.upgrades[102], player.upgrades[103], player.upgrades[104], player.upgrades[105])\n\n    if (player.upgrades[q] === 0 && player[type].gte(cost)) {\n        if (achievementCheck === 0 && q >= 102 && q <= 105) {\n            achievementaward(q - 31);\n        }\n        player[type] = player[type].sub(cost);\n        player.upgrades[q] = 1;\n        upgradeupdate(q, state)\n    }\n}\n\nexport const buyAutobuyers = (i: number, state?: boolean) => {\n    const q = i + 80\n    let type: 'prestigePoints' | 'transcendPoints' | 'reincarnationPoints' = 'reincarnationPoints';\n    if (q <= 87) {\n        type = 'prestigePoints'\n    } else if (q <= 93) {\n        type = 'transcendPoints'\n    }\n\n    const cost = Decimal.pow(10, G['upgradeCosts'][q]);\n    if (player.upgrades[q] === 0 && player[type].gte(cost)) {\n        player[type] = player[type].sub(cost);\n        player.upgrades[q] = 1;\n        upgradeupdate(q, state);\n    }\n}\n\nexport const autoUpgrades = () => {\n    if (player.upgrades[90] > 0.5 && player.shoptoggles.generators === true) {\n\n        for (let i = 1; i < 6; i++) {\n            if (player.upgrades[100 + i] === 0 && player.prestigePoints.gte(Decimal.pow(10, G['upgradeCosts'][(100 + i)]))) {\n                buyGenerator(i, true)\n            }\n        }\n        for (let j = 6; j < 11; j++) {\n            if (player.upgrades[100 + j] === 0 && player.coins.gte(Decimal.pow(10, G['upgradeCosts'][(100 + j)]))) {\n                buyGenerator(j, true)\n            }\n        }\n        for (let k = 11; k < 16; k++) {\n            if (player.upgrades[100 + k] === 0 && player.prestigePoints.gte(Decimal.pow(10, G['upgradeCosts'][(100 + k)]))) {\n                buyGenerator(k, true)\n            }\n        }\n        for (let l = 16; l < 21; l++) {\n            if (player.upgrades[100 + l] === 0 && player.transcendPoints.gte(Decimal.pow(10, G['upgradeCosts'][(100 + l)]))) {\n                buyGenerator(l, true)\n            }\n        }\n    }\n    if (player.upgrades[91] > 0.5) {\n        for (let i = 1; i < 21; i++) {\n            if (player.upgrades[i] === 0 && player.coins.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.coin === true) {\n                buyUpgrades(Upgrade.coin, i, true)\n            }\n        }\n        for (let i = 121; i <= 125; i++){\n            if (player.upgrades[i] === 0 && player.coins.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.coin === true && player.cubeUpgrades[19] > 0) {\n                buyUpgrades(Upgrade.coin,i,true)\n            }\n        }\n    }\n    if (player.upgrades[92] > 0.5) {\n        for (let i = 21; i < 38; i++) {\n            if (player.upgrades[i] === 0 && player.prestigePoints.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.prestige === true) {\n                buyUpgrades(Upgrade.prestige, i, true)\n            }\n        }\n        if (player.upgrades[38] === 0 && player.prestigePoints.gte(Decimal.pow(10, 50000)) && player.shoptoggles.prestige === true && player.achievements[120] === 1) {\n            buyUpgrades(Upgrade.prestige, 38, true)\n        }\n        if (player.upgrades[39] === 0 && player.prestigePoints.gte(Decimal.pow(10, 100000)) && player.shoptoggles.prestige === true && player.achievements[127] === 1) {\n            buyUpgrades(Upgrade.prestige, 39, true)\n        }\n        if (player.upgrades[40] === 0 && player.prestigePoints.gte(Decimal.pow(10, 200000)) && player.shoptoggles.prestige === true && player.achievements[134] === 1) {\n            buyUpgrades(Upgrade.prestige, 40, true)\n        }\n\n    }\n    if (player.upgrades[99] > 0.5) {\n        for (let i = 41; i < 61; i++) {\n            if (player.upgrades[i] === 0 && player.transcendPoints.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.transcend === true) {\n                buyUpgrades(Upgrade.transcend, i, true)\n            }\n        }\n    }\n\n    if (player.cubeUpgrades[8] > 0) {\n        for (let i = 61; i <= 80; i++) {\n            if (player.upgrades[i] === 0 && player.reincarnationPoints.gte(Decimal.pow(10, G['upgradeCosts'][i])) && player.shoptoggles.reincarnate) {\n                buyUpgrades(Upgrade.reincarnation, i, true)\n            }\n        }\n    }\n\n    if (player.highestSingularityCount >= 25) {\n        for (let i = 81; i <= 100; i++) {\n            if (player.upgrades[i] === 0) {\n                clickUpgrades(i, true);\n            }\n        }\n    }\n}\n", "import { player, format } from './Synergism';\nimport { Globals as G, Upgrade } from './Variables';\nimport Decimal from 'break_infinity.js';\nimport { calculateAnts, calculateCorruptionPoints, calculateRuneLevels } from './Calculate';\nimport { sumContents } from './Utility';\nimport { buyUpgrades } from './Buy';\nimport { buyGenerator, buyAutobuyers } from './Automation';\nimport { revealStuff } from './UpdateHTML';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport i18next from 'i18next';\n\nconst crystalupgdesc: Record<number, () => Record<string, string>> = {\n    3: () => ({\n        max: format(\n            100 * (0.12 + 0.88 * player.upgrades[122] + 0.001 * player.researches[129] *\n        Math.log(player.commonFragments + 1) / Math.log(4)), 2, true\n        )\n    }),\n    4: () => ({\n        max: format(\n            10 + 0.05 * player.researches[129] * Math.log(player.commonFragments + 1) /\n        Math.log(4) + 20 * calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][3]\n        )\n    })\n}\n\nconst constantUpgDesc: Record<number, () => Record<string, string>> = {\n    1: () => ({ level: format(5 + player.achievements[270] + 0.1 * player.platonicUpgrades[18], 1, true) }),\n    2: () => ({\n        max: format(\n            10 + player.achievements[270] + player.shopUpgrades.constantEX + 100 *\n        (G['challenge15Rewards'].exponent - 1) + 0.3 * player.platonicUpgrades[18], 2, true\n        )\n    })\n}\n\nconst upgradetexts = [\n    () => format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => format((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 2),\n    () => Math.min(4, 1 + Math.floor(Decimal.log(player.fifthOwnedCoin + 1, 10))),\n    () => Math.floor(player.multiplierBought / 7),\n    () => Math.floor(player.acceleratorBought / 10),\n    () => format(Decimal.pow(2, Math.min(50, player.secondOwnedCoin / 15)), 2),\n    () => format(Decimal.pow(1.02, G['freeAccelerator']), 2),\n    () => format(Decimal.min(1e4, Decimal.pow(1.01, player.prestigeCount)), 2),\n    () => format(Decimal.min(1e50, Decimal.pow(player.firstGeneratedMythos.add(player.firstOwnedMythos).add(1), 4 / 3).times(1e10)), 2),\n    () => format(Decimal.pow(1.15, G['freeAccelerator']), 2),\n    () => format(Decimal.pow(1.15, G['freeAccelerator']), 2),\n    () => format(Decimal.pow(G['acceleratorEffect'], 1 / 3), 2),\n    () => null,\n    () => format(Decimal.min(1e125, player.transcendShards.add(1))),\n    () => format(Decimal.min(1e200, player.transcendPoints.times(1e30).add(1))),\n    () => format(Decimal.pow((G['totalCoinOwned'] + 1) * Math.min(1e30, Math.pow(1.008, G['totalCoinOwned'])), 10), 2),\n    () => ({ x: format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))), y: format(Math.floor((5 + (1 / 101 * G['freeAccelerator'])))) }),\n    () => ({ x: format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))), y: format(Math.floor((4 + (1 / 101 * G['freeAccelerator'])))) }),\n    () => ({ x: format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))), y: format(Math.floor((3 + (1 / 101 * G['freeAccelerator'])))) }),\n    () => ({ x: format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))), y: format(Math.floor((2 + (1 / 101 * G['freeAccelerator'])))) }),\n    () => ({ x: format(Math.floor((1 + (1 / 101 * G['freeMultiplier'])))), y: format(Math.floor((1 + (1 / 101 * G['freeAccelerator'])))) }),\n    () => null,\n    () => format(Math.min(250, Math.floor(Decimal.log(player.coins.add(1), 1e3))) + Math.max(0, Math.min(1750, Math.floor(Decimal.log(player.coins.add(1), 1e15)) - 50))),\n    () => format(Math.min(1000, Math.floor((player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 160))),\n    () => format(Math.floor(Math.min(2000, (player.firstOwnedCoin + player.secondOwnedCoin + player.thirdOwnedCoin + player.fourthOwnedCoin + player.fifthOwnedCoin) / 80))),\n    () => format(Math.min(75, Math.floor(Decimal.log(player.coins.add(1), 1e10))) + Math.min(925, Math.floor(Decimal.log(player.coins.add(1), 1e30)))),\n    () => format(Math.floor(G['totalCoinOwned'] / 2000)),\n    () => format(Math.min(500, Math.floor(Decimal.log(player.prestigePoints.add(1), 1e25)))),\n    () => format(G['totalAcceleratorBoost']),\n    () => format(Math.floor(3 / 103 * G['freeMultiplier'])),\n    () => format(Math.floor(2 / 102 * G['freeMultiplier'])),\n    () => format(Decimal.min('1e5000', Decimal.pow(player.prestigePoints, 1 / 500)), 2),\n    () => format(Decimal.pow(Decimal.log(player.prestigePoints.add(10), 10), 2), 2),\n    () => null,\n    () => null,\n    () => null,\n    () => format(Decimal.min(1e30, Decimal.pow(player.transcendPoints.add(1), 1 / 2))),\n    () => format(Decimal.min(1e50, Decimal.pow(player.prestigePoints.add(1), 1 / 50).dividedBy(2.5).add(1)), 2),\n    () => format(Decimal.min(1e30, Decimal.pow(1.01, player.transcendCount)), 2),\n    () => format(Decimal.min(1e6, Decimal.pow(1.01, player.transcendCount)), 2),\n    () => format(Math.min(2500, Math.floor(Decimal.log(player.transcendShards.add(1), 10)))),\n    () => null,\n    () => format(Math.pow(1.05, player.achievementPoints) * (player.achievementPoints + 1), 2),\n    () => format(Math.pow((Math.min(1e25, G['totalMultiplier'] * G['totalAccelerator']) / 1000 + 1), 8)),\n    () => format(Math.min(50, Math.floor(Decimal.log(player.transcendPoints.add(1), 1e10)))),\n    () => null,\n    () => format(Math.pow(G['totalAcceleratorBoost'], 2), 2),\n    () => format(Decimal.pow(G['globalMythosMultiplier'], 0.025), 2),\n    () => format(Decimal.min('1e1250', Decimal.pow(G['acceleratorEffect'], 1 / 125)), 2),\n    () => format(Decimal.min('1e2000', Decimal.pow(G['multiplierEffect'], 1 / 180)), 2),\n    () => format((Decimal.pow('1e1000', Math.min(1000, G['buildingPower'] - 1))), 2),\n    () => null,\n    () => null,\n    () => null,\n    () => null,\n    () => null,\n    () => null,\n    () => Math.floor(1 / 5 * (sumContents(player.challengecompletions))),\n    () => format(Decimal.min('1e6000', Decimal.pow(player.reincarnationPoints.add(1), 6))),\n    () => format(Decimal.pow(player.reincarnationPoints.add(1), 2)),\n    () => null,\n    () => null,\n    () => format(Decimal.pow(1.03, player.firstOwnedParticles + player.secondOwnedParticles + player.thirdOwnedParticles + player.fourthOwnedParticles + player.fifthOwnedParticles), 2),\n    () => format(Math.min(2500, Math.floor(1 / 1000 * Decimal.log(G['taxdivisor'], 10)))),\n    () => {\n        const a = Decimal.pow(Decimal.log(G['reincarnationPointGain'].add(10), 10), 0.5);\n        const b = Decimal.pow(Decimal.log(G['reincarnationPointGain'].add(10), 10), 0.5);\n        return {\n            x: format(Math.min(10, new Decimal(a).toNumber()), 2),\n            y: format(Math.min(3, new Decimal(b).toNumber()), 2)\n        }\n    },\n    () => format(1/3 * Math.log(player.maxobtainium + 1)/Math.log(10),2,true),\n    () => null,\n    () => Math.min(50, (1 + 2 * player.challengecompletions[6] + 2 * player.challengecompletions[7] + 2 * player.challengecompletions[8] + 2 * player.challengecompletions[9] + 2 * player.challengecompletions[10])),\n    () => null,\n    () => format((1 + 4 * Math.min(1, Math.pow(player.maxofferings / 100000, 0.5))), 2),\n    () => format((1 + 2 * Math.min(1, Math.pow(player.maxobtainium / 30000000, 0.5))), 2),\n    () => null,\n    () => format((Decimal.pow(1.004 + 4 / 100000 * player.researches[96], player.firstOwnedAnts + player.secondOwnedAnts + player.thirdOwnedAnts + player.fourthOwnedAnts + player.fifthOwnedAnts + player.sixthOwnedAnts + player.seventhOwnedAnts + player.eighthOwnedAnts)), 3),\n    () => format(1 + 0.005 * Math.pow(Math.log(player.maxofferings + 1) / Math.log(10), 2), 2, true),\n    () => null,\n    () => null,\n    ...Array.from({ length: 39 }, () => () => null),\n    () => null,\n    () => null,\n    () => null,\n    () => null,\n    () => format(0.333 * player.challengecompletions[10], 0),\n    () => format(0.333 * player.challengecompletions[10], 0)\n]\n\nexport const upgradeeffects = (i: number) => {\n    const effect = upgradetexts[i - 1]?.()\n    const type = typeof effect\n    const element = DOMCacheGetOrSet('upgradeeffect')\n\n    if (i >= 81 && i <= 119) {\n        element.textContent = i18next.t('upgrades.effects.81')\n    } else if (effect == null) {\n        element.textContent = i18next.t(`upgrades.effects.${i}`)\n    } else if (type === 'string' || type === 'number') {\n        element.textContent = i18next.t(`upgrades.effects.${i}`, { x: effect })\n    } else {\n        element.textContent = i18next.t(`upgrades.effects.${i}`, effect as Exclude<typeof effect, string | number>)\n    }\n}\n\nexport const upgradedescriptions = (i: number) => {\n    const y = i18next.t(`upgrades.descriptions.${i}`)\n    const z = player.upgrades[i] > 0.5 ? ' BOUGHT!' : '';\n\n    const el = DOMCacheGetOrSet('upgradedescription');\n    el.textContent = y + z;\n    el.style.color = player.upgrades[i] > 0.5 ? 'gold' : 'white';\n\n    if (player.toggles[9] === true) {\n        clickUpgrades(i, false);\n    }\n\n    let currency = ''\n    let color = ''\n    if ((i <= 20 && i >= 1) || (i <= 110 && i >= 106) || (i <= 125 && i >= 121)) {\n        currency = 'Coins';\n        color = 'yellow'\n    }\n    if ((i <= 40 && i >= 21) || (i <= 105 && i >= 101) || (i <= 115 && i >= 111) || (i <= 87 && i >= 81)) {\n        currency = 'Diamonds';\n        color = 'cyan'\n    }\n    if ((i <= 60 && i >= 41) || (i <= 120 && i >= 116) || (i <= 93 && i >= 88)) {\n        currency = 'Mythos';\n        color = 'plum'\n    }\n    if ((i <= 80 && i >= 61) || (i <= 100 && i >= 94)) {\n        currency = 'Particles';\n        color = 'limegreen'\n    }\n\n    DOMCacheGetOrSet('upgradecost').textContent = 'Cost: ' + format(Decimal.pow(10, G['upgradeCosts'][i])) + ' ' + currency\n    DOMCacheGetOrSet('upgradecost').style.color = color\n    upgradeeffects(i)\n}\n\nexport const clickUpgrades = (i: number, auto: boolean) => {\n    // Make sure the upgrade is locked\n    if (\n        player.upgrades[i] !== 0 ||\n        (i <= 40 && i >= 21 && !player.unlocks.prestige) ||\n        (i <= 60 && i >= 41 && !player.unlocks.transcend) ||\n        (i <= 80 && i >= 61 && !player.unlocks.reincarnate) ||\n        (i <= 120 && i >= 81 && !player.unlocks.prestige) ||\n        DOMCacheGetOrSet(`upg${i}`)!.style.display === 'none'\n    ) {\n        return;\n    }\n\n    let type: Upgrade | undefined\n    if (i <= 20 && i >= 1) {\n        type = Upgrade.coin;\n    }\n    if (i <= 40 && i >= 21) {\n        type = Upgrade.prestige;\n    }\n    if (i <= 60 && i >= 41) {\n        type = Upgrade.transcend;\n    }\n    if (i <= 80 && i >= 61) {\n        type = Upgrade.reincarnation;\n    }\n    if (i <= 87 && i >= 81) {\n        type = Upgrade.prestige;\n    }\n    if (i <= 93 && i >= 88) {\n        type = Upgrade.transcend;\n    }\n    if (i <= 100 && i >= 94) {\n        type = Upgrade.reincarnation;\n    }\n    if (type && i <= 80 && i >= 1) {\n        buyUpgrades(type, i, auto);\n    }\n    if (type && i <= 100 && i >= 81) {\n        buyAutobuyers(i - 80, auto);\n    }\n    if (i <= 120 && i >= 101) {\n        buyGenerator(i - 100, auto);\n    }\n    if (i <= 125 && i >= 121) {\n        buyUpgrades(Upgrade.coin, i, auto);\n    }\n}\n\nexport const categoryUpgrades = (i: number, auto: boolean) => {\n    let min = 0;\n    let max = 0;\n    if (i === 1) {\n        min = 121;\n        max = 125;\n        for (let i = 1; i <= 20; i++) {\n            clickUpgrades(i, auto);\n        }\n    }\n    if (i === 2) {\n        min = 21;\n        max = 40;\n    }\n    if (i === 3) {\n        min = 41;\n        max = 60;\n    }\n    if (i === 4) {\n        min = 101;\n        max = 120;\n    }\n    if (i === 5) {\n        min = 81;\n        max = 100;\n    }\n    if (i === 6) {\n        min = 61;\n        max = 80;\n    }\n    for (let i = min; i <= max; i++) {\n        clickUpgrades(i, auto);\n    }\n}\n\nconst crystalupgeffect: Record<number, () => string> = {\n    1: () => `Crystal production x${format(Decimal.min(Decimal.pow(10, 50 + 2 * player.crystalUpgrades[0]), Decimal.pow(1.05, player.achievementPoints * player.crystalUpgrades[0])), 2, true)}`,\n    2: () => `Crystal production x${format(Decimal.min(Decimal.pow(10, 100 + 5 * player.crystalUpgrades[1]), Decimal.pow(Decimal.log(player.coins.add(1), 10), player.crystalUpgrades[1] / 3)), 2, true)}`,\n    3: () => `Crystal production x${format(Decimal.pow(1 + Math.min(0.12 + 0.88 * player.upgrades[122] + 0.001 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4), 0.001 * player.crystalUpgrades[2]), player.firstOwnedDiamonds + player.secondOwnedDiamonds + player.thirdOwnedDiamonds + player.fourthOwnedDiamonds + player.fifthOwnedDiamonds), 2, true)}`,\n    4: () => `Coin production multiplier exponent +${format(Math.min(10 + 0.05 * player.researches[129] * Math.log(player.commonFragments + 1) / Math.log(4) + 20 * calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][3], 0.05 * player.crystalUpgrades[3]), 2, true)}`,\n    5: () => `Crystal production x${format(Decimal.pow(1.01, (player.challengecompletions[1] + player.challengecompletions[2] + player.challengecompletions[3] + player.challengecompletions[4] + player.challengecompletions[5]) * player.crystalUpgrades[4]), 2, true)}`\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nconst returnCrystalUpgDesc = (i: number) => i18next.t(`upgrades.crystalUpgrades.${i}`, crystalupgdesc[i]?.())\nconst returnCrystalUpgEffect = (i: number) => i18next.t('buildings.crystalUpgrades.currentEffect', {\n    effect: i in crystalupgeffect ? crystalupgeffect[i]() : ''\n})\n\nexport const crystalupgradedescriptions = (i: number) => {\n    const p = player.crystalUpgrades[i - 1];\n    const c =\n        (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0 ? 10 : 0) +\n        (Math.floor(G['rune3level'] * G['effectiveLevelMult'] /16) * 100 / 100);\n\n    const q = Decimal.pow(10, (G['crystalUpgradesCost'][i - 1] + G['crystalUpgradeCostIncrement'][i - 1] * Math.floor(Math.pow(player.crystalUpgrades[i - 1] + 0.5 - c, 2) / 2)));\n    DOMCacheGetOrSet('crystalupgradedescription').textContent = returnCrystalUpgDesc(i);\n    DOMCacheGetOrSet('crystalupgradeslevel1').innerHTML = i18next.t('buildings.crystalUpgrades.currentLevel', {\n        amount: format(p, 0, true)\n    })\n    DOMCacheGetOrSet('crystalupgradescost1').innerHTML = i18next.t('buildings.crystalUpgrades.cost', { amount: format(q) })\n    DOMCacheGetOrSet('crystalupgradeseffect1').innerHTML = returnCrystalUpgEffect(i);\n}\n\n\nexport const upgradeupdate = (num: number, fast?: boolean) => {\n    const el = DOMCacheGetOrSet(`upg${num}`);\n    if (player.upgrades[num] > 0.5) {\n        el.style.backgroundColor = 'green';\n    } else {\n        el.style.backgroundColor = '';\n    }\n\n    const b = i18next.t(`upgrades.descriptions.${num}`)\n    const c = player.upgrades[num] > 0.5 ? ' BOUGHT!' : '';\n    if (player.upgrades[num] > 0.5) {\n        if (!fast) {\n            DOMCacheGetOrSet('upgradedescription').textContent = b + c\n            DOMCacheGetOrSet('upgradedescription').style.color = 'gold'\n        }\n    }\n\n    if (!fast) {\n        revealStuff()\n    }\n}\n\nexport const ascendBuildingDR = () => {\n    const sum = player.ascendBuilding1.owned + player.ascendBuilding2.owned + player.ascendBuilding3.owned + player.ascendBuilding4.owned + player.ascendBuilding5.owned\n\n    if (sum > 100000) {\n        return Math.pow(100000, 0.5) * Math.pow(sum, 0.5)\n    } else {\n        return sum\n    }\n}\n\nconst constUpgEffect: Record<number, () => string> = {\n    1: () => `Tesseract building production x${format(Decimal.pow(1.05 + 0.01 * player.achievements[270] + 0.001 * player.platonicUpgrades[18], player.constantUpgrades[1]), 2, true)}`,\n    2: () => `Tesseract building production x${format(Decimal.pow(1 + 0.001 * Math.min(100 + 10 * player.achievements[270] + 10 * player.shopUpgrades.constantEX + 3 * player.platonicUpgrades[18] + 1000 * (G['challenge15Rewards'].exponent - 1), player.constantUpgrades[2]), ascendBuildingDR()), 2, true)}`,\n    3: () => `Offering gain x${format(1 + 0.02 * player.constantUpgrades[3], 2, true)}`,\n    4: () => `Obtainium gain x${format(1 + 0.04 * player.constantUpgrades[4], 2, true)}`,\n    5: () => `Ant Speed x${format(Decimal.pow(1 + 0.1 * Decimal.log(player.ascendShards.add(1), 10), player.constantUpgrades[5]), 2, true)}`,\n    6: () => `+ ${format(2 * player.constantUpgrades[6])} free Ant Levels`,\n    7: () => `+${format(7 * player.constantUpgrades[7])} free Rune Levels, +${format(3 * player.constantUpgrades[7])} to Rune Cap`,\n    8: () => `Rune EXP x${format(1 + 1 / 10 * player.constantUpgrades[8], 2, true)}`,\n    9: () => `Runes effectiveness x${format(1 + 0.01 * Math.log(player.talismanShards + 1) / Math.log(4) * Math.min(1, player.constantUpgrades[9]), 4, true)}`,\n    10: () => `Cubes/Tesseracts on Ascension x${format(1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]), 4, true)}`\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nconst returnConstUpgDesc = (i: number) => i18next.t(`upgrades.constantUpgrades.${i}`, constantUpgDesc[i]?.())\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nconst returnConstUpgEffect = (i: number) => constUpgEffect[i]?.();\n\nexport const getConstUpgradeMetadata = (i: number): [number, Decimal] => {\n    const toBuy = Math.max(0, Math.floor(1 + Decimal.log(Decimal.max(0.01, player.ascendShards), 10) - Math.log(G['constUpgradeCosts'][i]!) / Math.log(10)));\n    let cost: Decimal\n\n    if (toBuy > player.constantUpgrades[i]!) {\n        cost = Decimal.pow(10, toBuy - 1).times(G['constUpgradeCosts'][i]!)\n    } else {\n        cost = Decimal.pow(10, player.constantUpgrades[i]!).times(G['constUpgradeCosts'][i]!)\n    }\n\n    return [Math.max(1, toBuy - player.constantUpgrades[i]!), cost]\n}\n\nexport const constantUpgradeDescriptions = (i: number) => {\n    const [level, cost] = getConstUpgradeMetadata(i)\n    DOMCacheGetOrSet('constUpgradeDescription').textContent = returnConstUpgDesc(i)\n    DOMCacheGetOrSet('constUpgradeLevel2').textContent = format(player.constantUpgrades[i])\n    DOMCacheGetOrSet('constUpgradeCost2').textContent = format(cost) + ' [+' + format(level) + ' LVL]'\n    DOMCacheGetOrSet('constUpgradeEffect2').textContent = returnConstUpgEffect(i)\n}\n\nexport const buyConstantUpgrades = (i: number, fast = false) => {\n    const [level, cost] = getConstUpgradeMetadata(i)\n    if (player.ascendShards.gte(cost)) {\n        player.constantUpgrades[i]! += level;\n        if (player.researches[175] === 0) {\n            player.ascendShards = player.ascendShards.sub(cost);\n        }\n        if (!fast) {\n            constantUpgradeDescriptions(i);\n        }\n    }\n    calculateAnts();\n    calculateRuneLevels();\n}\n", "import i18next from 'i18next'\nimport { format } from './Synergism'\nimport { Alert, Prompt } from './UpdateHTML'\n\nexport interface IUpgradeData {\n    name: string\n    description: string\n    level?: number\n    maxLevel: number\n    costPerLevel: number\n    toggleBuy?: number\n    effect? (n: number): {bonus: number | boolean, desc: string}\n    freeLevels?: number\n}\n\nexport abstract class DynamicUpgrade {\n    public name: string;\n    readonly description: string;\n    public level = 0;\n    public freeLevels = 0;\n    readonly maxLevel: number; //-1 = infinitely levelable\n    readonly costPerLevel: number;\n    public toggleBuy = 1; //-1 = buy MAX (or 1000 in case of infinity levels!)\n    readonly effect: (n: number) => {bonus: number | boolean, desc: string}\n\n    constructor(data: IUpgradeData) {\n        this.name = data.name\n        this.description = data.description\n        this.level = data.level ?? 0\n        this.freeLevels = data.freeLevels ?? 0\n        this.maxLevel = data.maxLevel\n        this.costPerLevel = data.costPerLevel\n        this.toggleBuy = data.toggleBuy ?? 1\n        this.effect = data.effect ?? function (n:number) {\n            return {bonus: n, desc: 'WIP not implemented'}\n        }\n    }\n\n    public async changeToggle(): Promise<void> {\n\n        // Is null unless given an explicit number\n        const newToggle = await Prompt(i18next.t('dynamicUpgrades.validation.setPurchaseAmount', { x: this.name }));\n        const newToggleAmount = Number(newToggle);\n\n        if (newToggle === null) {\n            return Alert(i18next.t('dynamicUpgrades.validation.toggleKept', { x: format(this.toggleBuy) }))\n        }\n\n        if (!Number.isInteger(newToggle)) {\n            return Alert(i18next.t('general.validation.fraction'));\n        }\n        if (newToggleAmount < -1) {\n            return Alert(i18next.t('dynamicUpgrades.validation.onlyNegativeOne'));\n        }\n        if (newToggleAmount === 0) {\n            return Alert(i18next.t('dynamicUpgrades.validation.notZero'));\n        }\n\n        this.toggleBuy = newToggleAmount;\n        const m = newToggleAmount === -1\n            ? i18next.t('dynamicUpgrades.toggleMax')\n            : i18next.t('dynamicUpgrades.toggle', { x: format(this.toggleBuy) })\n\n        return Alert(m);\n    }\n\n    public getEffect(): {bonus: number | boolean, desc: string} {\n        const effectiveLevel = this.level + Math.min(this.level, this.freeLevels) + Math.sqrt(Math.max(0, this.freeLevels - this.level))\n        return this.effect(effectiveLevel)\n    }\n\n    abstract toString(): string\n    abstract updateUpgradeHTML(): void\n    abstract getCostTNL(): number\n    public abstract buyLevel(event: MouseEvent): Promise<void> | void\n}\n", "import { DOMCacheGetOrSet } from './Cache/DOM'\nimport type { IUpgradeData } from './DynamicUpgrade';\nimport { DynamicUpgrade } from './DynamicUpgrade'\nimport { format, player } from './Synergism'\nimport type { Player } from './types/Synergism'\nimport { Alert, Prompt, revealStuff } from './UpdateHTML'\nimport { toOrdinal } from './Utility'\nimport i18next from 'i18next'\n\nexport const updateSingularityPenalties = (): void => {\n    const singularityCount = player.singularityCount;\n    const platonic = (singularityCount > 36) ? i18next.t('singularity.penalties.platonicCosts', {multiplier: format(calculateSingularityDebuff('Platonic Costs', singularityCount), 2, true)}) : '<span class=\"grayText\">???????? ??????? ????? ??? ?????????? ?? ???</span> <span class=\"redText\">(37)</span>';\n    const hepteract = (singularityCount > 50) ? i18next.t('singularity.penalties.hepteractCosts', {multiplier: format(calculateSingularityDebuff('Hepteract Costs', singularityCount), 2, true)}) : '<span class=\"grayText\">????????? ????? ????? ??? ?????????? ?? ???</span> <span class=\"redText\">(51)</span>';\n    const str = getSingularityOridnalText(singularityCount) +\n                `<br>${i18next.t('singularity.penalties.globalSpeed', {divisor: format(calculateSingularityDebuff('Global Speed', singularityCount), 2, true)})}\n                 ${i18next.t('singularity.penalties.ascensionSpeed', {divisor: format(calculateSingularityDebuff('Ascension Speed', singularityCount), 2, true)})}\n                 ${i18next.t('singularity.penalties.offeringGain', {divisor: format(calculateSingularityDebuff('Offering', singularityCount), 2, true)})}\n                 ${i18next.t('singularity.penalties.obtainiumGain', {divisor: format(calculateSingularityDebuff('Obtainium', singularityCount), 2, true)})}\n                 ${i18next.t('singularity.penalties.cubeGain', {divisor: format(calculateSingularityDebuff('Cubes', singularityCount), 2, true)})}\n                 ${i18next.t('singularity.penalties.researchCosts', {multiplier: format(calculateSingularityDebuff('Researches', singularityCount), 2, true)})}\n                 ${i18next.t('singularity.penalties.cubeUpgradeCosts', {multiplier: format(calculateSingularityDebuff('Cube Upgrades', singularityCount), 2, true)})}\n                 ${platonic}\n                 ${hepteract}\n                 ${(singularityCount >= 230) ? i18next.t('singularity.penalties.penaltySmooth') : i18next.t('singularity.penalties.penaltyRough', {num: format(calculateNextSpike(player.singularityCount), 0, true)})}\n                 ${(player.runelevels[6] > 0) ? i18next.t('singularity.penalties.antiquitiesBought') : i18next.t('singularity.penalties.antiquitiesNotBought')}`\n\n    DOMCacheGetOrSet('singularityPenaltiesMultiline').innerHTML = str;\n}\n\nfunction getSingularityOridnalText(singularityCount: number): string {\n    return `${i18next.t('general.youAreInThe')} <span style=\"color: gold\">${toOrdinal(singularityCount)} Singularity</span>`;\n}\n\n// Need a better way of handling the ones without a special formulae than 'Default' variant\ntype SingularitySpecialCostFormulae = 'Default' | 'Quadratic' | 'Cubic' | 'Exponential2'\n\nexport interface ISingularityData extends Omit<IUpgradeData, 'name' | 'description'> {\n    goldenQuarksInvested?: number\n    minimumSingularity?: number\n    canExceedCap?: boolean\n    specialCostForm?: SingularitySpecialCostFormulae\n    qualityOfLife?: boolean\n}\n\n/**\n * Singularity Upgrades are bought in the Shop of the singularity tab, and all have their own\n * name, description, level and maxlevel, plus a feature to toggle buy on each.\n */\nexport class SingularityUpgrade extends DynamicUpgrade {\n\n    // Field Initialization\n    public goldenQuarksInvested = 0;\n    public minimumSingularity: number;\n    public canExceedCap: boolean;\n    public specialCostForm: SingularitySpecialCostFormulae\n    public qualityOfLife: boolean\n\n    public constructor(data: ISingularityData, key: string) {\n        const name = i18next.t(`singularity.data.${key}.name`)\n        const description = i18next.t(`singularity.data.${key}.description`)\n\n        super({ ...data, name, description })\n        this.goldenQuarksInvested = data.goldenQuarksInvested ?? 0;\n        this.minimumSingularity = data.minimumSingularity ?? 0;\n        this.canExceedCap = data.canExceedCap ?? false;\n        this.specialCostForm = data.specialCostForm ?? 'Default';\n        this.qualityOfLife = data.qualityOfLife ?? false;\n    }\n\n    /**\n     * Given an upgrade, give a concise information regarding its data.\n     * @returns A string that details the name, description, level statistic, and next level cost.\n     */\n    toString(): string {\n        const costNextLevel = this.getCostTNL();\n        const maxLevel = this.maxLevel === -1\n            ? ''\n            : `/${format(this.computeMaxLevel(), 0 , true)}`;\n        const color = this.computeMaxLevel() === this.level ? 'plum' : 'white';\n        const minReqColor = player.highestSingularityCount < this.minimumSingularity ? 'var(--crimson-text-color)' : 'var(--green-text-color)';\n        const minimumSingularity = this.minimumSingularity > 0\n            ? `${i18next.t('general.minimum')} Singularity: ${this.minimumSingularity}`\n            : i18next.t('singularity.toString.noMinimum')\n\n        let freeLevelInfo = this.freeLevels > 0 ?\n            `<span style=\"color: orange\"> [+${format(this.freeLevels, 2, true)}]</span>` : ''\n\n        if (this.freeLevels > this.level) {\n            freeLevelInfo = freeLevelInfo + `<span style=\"color: var(--maroon-text-color)\"> ${i18next.t('general.softCapped')}</span>`\n        }\n\n        return `<span style=\"color: gold\">${this.name}</span>\n                <span style=\"color: lightblue\">${this.description}</span>\n                <span style=\"color: ${minReqColor}\">${minimumSingularity}</span>\n                <span style=\"color: ${color}\"> ${i18next.t('general.level')} ${format(this.level, 0 , true)}${maxLevel}${freeLevelInfo}</span>\n                <span style=\"color: gold\">${this.getEffect().desc}</span>\n                ${i18next.t('singularity.toString.costNextLevel')}: ${format(costNextLevel,0,true)} Golden Quarks.\n                ${i18next.t('general.spent')} Quarks: ${format(this.goldenQuarksInvested, 0, true)}`\n    }\n\n    public updateUpgradeHTML(): void {\n        DOMCacheGetOrSet('testingMultiline').innerHTML = this.toString()\n    }\n\n    /**\n     * Retrieves the cost for upgrading the singularity upgrade once. Return 0 if maxed.\n     * @returns A number representing how many Golden Quarks a player must have to upgrade once.\n     */\n    getCostTNL(): number {\n\n        let costMultiplier = 1\n        if (this.computeMaxLevel() > this.maxLevel && this.level >= this.maxLevel) {\n            costMultiplier *= Math.pow(4, this.level - this.maxLevel + 1)\n        }\n\n        if (this.specialCostForm === 'Exponential2') {\n            return this.costPerLevel * Math.sqrt(costMultiplier) * Math.pow(2, this.level)\n        }\n\n        if (this.specialCostForm === 'Cubic') {\n            return this.costPerLevel * costMultiplier * (Math.pow(this.level + 1, 3) - Math.pow(this.level, 3))\n        }\n\n        if (this.specialCostForm === 'Quadratic') {\n            return this.costPerLevel * costMultiplier * (Math.pow(this.level + 1, 2) - Math.pow(this.level, 2))\n        }\n\n        costMultiplier *= (this.maxLevel === -1 && this.level >= 100) ? this.level / 50 : 1;\n        costMultiplier *= (this.maxLevel === -1 && this.level >= 400) ? this.level / 100 : 1;\n\n        return (this.computeMaxLevel() === this.level) ? 0: Math.ceil(this.costPerLevel * (1 + this.level) * costMultiplier);\n    }\n\n    /**\n     * Buy levels up until togglebuy or maxed.\n     * @returns An alert indicating cannot afford, already maxed or purchased with how many\n     *          levels purchased\n     */\n    public async buyLevel(event: MouseEvent): Promise<void> {\n        let purchased = 0;\n        let maxPurchasable = 1\n        let GQBudget = player.goldenQuarks\n\n        if (event.shiftKey) {\n            maxPurchasable = 100000\n            const buy = Number(await Prompt(i18next.t('singularity.goldenQuarks.spendPrompt', {\n                gq: format(player.goldenQuarks, 0, true)\n            })))\n\n            if (isNaN(buy) || !isFinite(buy) || !Number.isInteger(buy)) { // nan + Infinity checks\n                return Alert(i18next.t('general.validation.finite'));\n            }\n\n            if (buy === -1) {\n                GQBudget = player.goldenQuarks\n            } else if (buy <= 0) {\n                return Alert(i18next.t('general.validation.zeroOrLess'))\n            } else {\n                GQBudget = buy\n            }\n            GQBudget = Math.min(player.goldenQuarks, GQBudget)\n        }\n\n        if (this.maxLevel > 0) {\n            maxPurchasable = Math.min(maxPurchasable, this.computeMaxLevel() - this.level)\n        }\n\n        if (maxPurchasable === 0) {\n            return Alert(i18next.t('singularity.goldenQuarks.hasUpgrade'))\n        }\n\n        if (player.highestSingularityCount < this.minimumSingularity) {\n            return Alert(i18next.t('singularity.goldenQuarks.notHighEnoughLevel'))\n        }\n        while (maxPurchasable > 0) {\n            const cost = this.getCostTNL();\n            if (player.goldenQuarks < cost || GQBudget < cost) {\n                break;\n            } else {\n                player.goldenQuarks -= cost;\n                GQBudget -= cost;\n                this.goldenQuarksInvested += cost;\n                this.level += 1;\n                purchased += 1;\n                maxPurchasable -= 1;\n            }\n            if (this.name === player.singularityUpgrades.oneMind.name) {\n                player.ascensionCounter = 0\n                player.ascensionCounterReal = 0\n                player.ascensionCounterRealReal = 0\n                void Alert(i18next.t('singularity.goldenQuarks.ascensionReset'))\n            }\n\n            if (this.name === player.singularityUpgrades.singCitadel2.name) {\n                player.singularityUpgrades.singCitadel.freeLevels = player.singularityUpgrades.singCitadel2.level\n            }\n        }\n\n        if (purchased === 0) {\n            return Alert(i18next.t('general.validation.moreThanPlayerHas'))\n        }\n        if (purchased > 1) {\n            void Alert(i18next.t('singularity.goldenQuarks.multiBuyPurchased', { levels: format(purchased) }))\n        }\n\n        this.updateUpgradeHTML();\n        updateSingularityPenalties();\n        updateSingularityPerks();\n        revealStuff();\n    }\n\n    public computeFreeLevelSoftcap(): number {\n        return Math.min(this.level, this.freeLevels) + Math.sqrt(Math.max(0, this.freeLevels - this.level))\n    }\n\n    public computeMaxLevel(): number {\n        if (!this.canExceedCap) {\n            return this.maxLevel\n        } else {\n            let cap = this.maxLevel\n            const overclockPerks = [50, 60, 75, 100, 125, 150, 175, 200, 225, 250]\n            for (let i = 0; i < overclockPerks.length; i++) {\n                if (player.highestSingularityCount >= overclockPerks[i]) {\n                    cap += 1\n                } else {\n                    break\n                }\n            }\n            cap += +player.octeractUpgrades.octeractSingUpgradeCap.getEffect().bonus\n            return cap\n        }\n    }\n\n    public actualTotalLevels(): number {\n        if (player.singularityChallenges.noSingularityUpgrades.enabled && !this.qualityOfLife) {\n            return 0\n        }\n\n        if (player.singularityChallenges.limitedAscensions.enabled && this.name === player.singularityUpgrades.platonicDelta.name) {\n            return 0\n        }\n\n        const actualFreeLevels = this.computeFreeLevelSoftcap();\n        const linearLevels = this.level + actualFreeLevels\n        let polynomialLevels = 0\n        if (player.octeractUpgrades.octeractImprovedFree.getEffect().bonus) {\n            let exponent = 0.6\n            exponent += +player.octeractUpgrades.octeractImprovedFree2.getEffect().bonus;\n            exponent += +player.octeractUpgrades.octeractImprovedFree3.getEffect().bonus;\n            exponent += +player.octeractUpgrades.octeractImprovedFree4.getEffect().bonus;\n            polynomialLevels = Math.pow(this.level * actualFreeLevels, exponent)\n        }\n\n        return Math.max(linearLevels, polynomialLevels)\n    }\n\n    public getEffect(): { bonus: number | boolean, desc: string } {\n        return this.effect(this.actualTotalLevels())\n    }\n\n    public refund(): void {\n        player.goldenQuarks += this.goldenQuarksInvested;\n        this.level = 0;\n        this.goldenQuarksInvested = 0;\n    }\n}\n\nexport const singularityData: Record<keyof Player['singularityUpgrades'], ISingularityData> = {\n    goldenQuarks1: {\n        maxLevel: 15,\n        costPerLevel: 12,\n        canExceedCap: true,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.10 * n,\n                get desc () {\n                    return i18next.t('singularity.data.goldenQuarks1.effect', { n: format(10 * n, 0, true) })\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    goldenQuarks2: {\n        maxLevel: 75,\n        costPerLevel: 60,\n        canExceedCap: true,\n        effect: (n: number) => {\n            return {\n                bonus: (n > 250) ? 1 / Math.log2(n / 62.5) : 1 - Math.min(0.5, n / 500),\n                get desc () {\n                    return i18next.t('singularity.data.goldenQuarks2.effect', {\n                        n: n > 250 ? format(100 - 100 / Math.log2(n / 62.5), 2, true) : format(Math.min(50, n / 5), 2, true)\n                    })\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    goldenQuarks3: {\n        maxLevel: 1000,\n        costPerLevel: 1000,\n        effect: (n: number) => {\n            return {\n                bonus: n * (n + 1) / 2,\n                get desc () {\n                    return i18next.t('singularity.data.goldenQuarks3.effect', { n: format(n * (n + 1) / 2) })\n                }\n            }\n        }\n    },\n    starterPack: {\n        maxLevel: 1,\n        costPerLevel: 10,\n        effect: (n: number) => {\n            return {\n                bonus: (n > 0),\n                get desc () {\n                    return i18next.t(`singularity.data.starterPack.effect${n > 0 ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        }\n    },\n    wowPass: {\n        maxLevel: 1,\n        costPerLevel: 350,\n        effect: (n: number) => {\n            return {\n                bonus: (n > 0),\n                get desc () {\n                    return i18next.t(`singularity.data.wowPass.effect${n > 0 ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    cookies: {\n        maxLevel: 1,\n        costPerLevel: 100,\n        effect: (n: number) => {\n            return {\n                bonus: (n > 0),\n                get desc () {\n                    return i18next.t(`singularity.data.cookies.effect${n > 0 ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    cookies2: {\n        maxLevel: 1,\n        costPerLevel: 500,\n        effect: (n: number) => {\n            return {\n                bonus: (n > 0),\n                get desc () {\n                    return i18next.t(`singularity.data.cookies2.effect${n > 0 ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    cookies3: {\n        maxLevel: 1,\n        costPerLevel: 24999,\n        effect: (n: number) => {\n            return {\n                bonus: (n > 0),\n                get desc () {\n                    return i18next.t(`singularity.data.cookies3.effect${n > 0 ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    cookies4: {\n        maxLevel: 1,\n        costPerLevel: 499999,\n        effect: (n: number) => {\n            return {\n                bonus: (n > 0),\n                get desc () {\n                    return i18next.t(`singularity.data.cookies4.effect${n > 0 ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    cookies5: {\n        maxLevel: 1,\n        costPerLevel: 1.66e15,\n        minimumSingularity: 215,\n        effect: (n: number) => {\n            return {\n                bonus: (n > 0),\n                get desc () {\n                    return i18next.t(`singularity.data.cookies5.effect${n > 0 ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    ascensions: {\n        maxLevel: -1,\n        costPerLevel: 5,\n        effect: (n: number) => {\n            return {\n                bonus: (1 + 2 * n / 100) * (1 + Math.floor(n / 10) / 100),\n                get desc () {\n                    return i18next.t('singularity.data.goldenQuarks1.effect', {\n                        n: format((100 + 2 * n) * (1 + Math.floor(n/10) / 100) - 100, 1, true)\n                    })\n                }\n            }\n        }\n    },\n    corruptionFourteen: {\n        maxLevel: 1,\n        costPerLevel: 1000,\n        effect: (n: number) => {\n            return {\n                bonus: (n > 0),\n                get desc () {\n                    return i18next.t(`singularity.data.corruptionFourteen.effect${n > 0 ? 'Have' : 'HaveNot'}`, {\n                        m: n > 0 ? ':)' : ':('\n                    })\n                }\n            }\n        }\n    },\n    corruptionFifteen: {\n        maxLevel: 1,\n        costPerLevel: 40000,\n        effect: (n: number) => {\n            return {\n                bonus: (n > 0),\n                get desc () {\n                    return i18next.t(`singularity.data.corruptionFifteen.effect${n > 0 ? 'Have' : 'HaveNot'}`, {\n                        m: n > 0 ? ':)' : ':('\n                    })\n                }\n            }\n        }\n    },\n    singOfferings1: {\n        maxLevel: -1,\n        costPerLevel: 1,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.02 * n,\n                get desc () {\n                    return i18next.t('singularity.data.singOfferings1.effect', { n: format(2 * n, 0, true) })\n                }\n            }\n        }\n\n    },\n    singOfferings2: {\n        maxLevel: 25,\n        costPerLevel: 25,\n        canExceedCap: true,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.08 * n,\n                get desc () {\n                    return i18next.t('singularity.data.singOfferings2.effect', { n: format(8 * n, 0, true) })\n                }\n            }\n        }\n    },\n    singOfferings3: {\n        maxLevel: 40,\n        costPerLevel: 500,\n        canExceedCap: true,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.04 * n,\n                get desc () {\n                    return i18next.t('singularity.data.singOfferings3.effect', { n: format(4 * n, 0, true) })\n                }\n            }\n        }\n    },\n    singObtainium1: {\n        maxLevel: -1,\n        costPerLevel: 1,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.02 * n,\n                get desc () {\n                    return i18next.t('singularity.data.singObtainium1.effect', { n: format(2 * n, 0, true) })\n                }\n            }\n        }\n    },\n    singObtainium2: {\n        maxLevel: 25,\n        costPerLevel: 25,\n        canExceedCap: true,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.08 * n,\n                get desc () {\n                    return i18next.t('singularity.data.singObtainium2.effect', { n: format(8 * n, 0, true) })\n                }\n            }\n        }\n    },\n    singObtainium3: {\n        maxLevel: 40,\n        costPerLevel: 500,\n        canExceedCap: true,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.04 * n,\n                get desc () {\n                    return i18next.t('singularity.data.singObtainium3.effect', { n: format(4 * n, 0, true) })\n                }\n            }\n        }\n    },\n    singCubes1: {\n        maxLevel: -1,\n        costPerLevel: 1,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.01 * n,\n                get desc () {\n                    return i18next.t('singularity.data.singCubes1.effect', { n: format(1 * n, 0, true) })\n                }\n            }\n        }\n    },\n    singCubes2: {\n        maxLevel: 25,\n        costPerLevel: 25,\n        canExceedCap: true,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.08 * n,\n                get desc () {\n                    return i18next.t('singularity.data.singCubes2.effect', { n: format(8 * n, 0, true) })\n                }\n            }\n        }\n    },\n    singCubes3: {\n        maxLevel: 40,\n        costPerLevel: 500,\n        canExceedCap: true,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.04 * n,\n                get desc () {\n                    return i18next.t('singularity.data.singCubes3.effect', { n: format(4 * n, 0, true) })\n                }\n            }\n        }\n    },\n    singCitadel: {\n        maxLevel: -1,\n        costPerLevel: 500000,\n        minimumSingularity: 100,\n        effect: (n: number) => {\n            return {\n                bonus: (1 + 0.02 * n) * (1 + Math.floor(n / 10) / 100),\n                get desc () {\n                    return i18next.t('singularity.data.singCubes2.effect', {\n                        n: format(100 * ((1 + 0.02 * n) * (1 + Math.floor(n/10)/100) - 1))\n                    })\n                }\n            }\n        }\n    },\n    singCitadel2: {\n        maxLevel: 100,\n        costPerLevel: 1e14,\n        minimumSingularity: 210,\n        specialCostForm: 'Quadratic',\n        effect: (n: number) => {\n            return {\n                bonus: (1 + 0.02 * n) * (1 + Math.floor(n / 10) / 100),\n                get desc () {\n                    return i18next.t('singularity.data.singCubes3.effect', { n:\n                    format(100 * ((1 + 0.02 * n) * (1 + Math.floor(n/10)/100) - 1))\n                    })\n                }\n            }\n        }\n    },\n    octeractUnlock: {\n        maxLevel: 1,\n        costPerLevel: 8888,\n        minimumSingularity: 8,\n        effect: (n: number) => {\n            return {\n                bonus: (n > 0),\n                get desc () {\n                    return i18next.t(`singularity.data.octeractUnlock.effect${n > 0 ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    singOcteractPatreonBonus: {\n        maxLevel: 1,\n        costPerLevel: 9999,\n        minimumSingularity: 12,\n        effect: (n: number) => {\n            return {\n                bonus: (n > 0),\n                get desc () {\n                    return i18next.t('singularity.data.singOcteractPatreonBonus.effect', { n })\n                }\n            }\n        }\n    },\n    offeringAutomatic: {\n        maxLevel: -1,\n        costPerLevel: 1e14,\n        minimumSingularity: 222,\n        effect: (n: number) => {\n            return {\n                bonus: n,\n                get desc () {\n                    return i18next.t('singularity.data.offeringAutomatic.effect', { n })\n                }\n            }\n        }\n    },\n    intermediatePack: {\n        maxLevel: 1,\n        costPerLevel: 1,\n        minimumSingularity: 4,\n        effect: (n: number) => {\n            return {\n                bonus: (n > 0),\n                get desc () {\n                    return i18next.t(`singularity.data.intermediatePack.effect${n > 0 ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        }\n    },\n    advancedPack: {\n        maxLevel: 1,\n        costPerLevel: 200,\n        minimumSingularity: 9,\n        effect: (n: number) => {\n            return {\n                bonus: (n > 0),\n                get desc () {\n                    return i18next.t(`singularity.data.advancedPack.effect${n > 0 ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        }\n    },\n    expertPack: {\n        maxLevel: 1,\n        costPerLevel: 800,\n        minimumSingularity: 16,\n        effect: (n: number) => {\n            return {\n                bonus: (n > 0),\n                get desc () {\n                    return i18next.t(`singularity.data.expertPack.effect${n > 0 ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        }\n    },\n    masterPack: {\n        maxLevel: 1,\n        costPerLevel: 3200,\n        minimumSingularity: 25,\n        effect: (n: number) => {\n            return {\n                bonus: (n > 0),\n                get desc () {\n                    return i18next.t(`singularity.data.masterPack.effect${n > 0 ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        }\n    },\n    divinePack: {\n        maxLevel: 1,\n        costPerLevel: 12800,\n        minimumSingularity: 36,\n        effect: (n: number) => {\n            return {\n                bonus: (n > 0),\n                get desc () {\n                    return i18next.t(`singularity.data.divinePack.effect${n > 0 ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        }\n    },\n    wowPass2: {\n        maxLevel: 1,\n        costPerLevel: 19999,\n        minimumSingularity: 11,\n        effect: (n: number) => {\n            return {\n                bonus: (n > 0),\n                get desc () {\n                    return i18next.t(`singularity.data.wowPass2.effect${n > 0 ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    wowPass3: {\n        maxLevel: 1,\n        costPerLevel: 3e7 - 1,\n        minimumSingularity: 83,\n        effect: (n: number) => {\n            return {\n                bonus: (n > 0),\n                get desc () {\n                    return i18next.t(`singularity.data.wowPass3.effect${n > 0 ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    potionBuff: {\n        maxLevel: 10,\n        costPerLevel: 999,\n        minimumSingularity: 4,\n        canExceedCap: true,\n        effect: (n: number) => {\n            return {\n                bonus: Math.max(1, 10 * Math.pow(n, 2)),\n                get desc () {\n                    return i18next.t('singularity.data.potionBuff.effect', {\n                        n: format(Math.max(1, 10 * Math.pow(n, 2)), 0, true)\n                    })\n                }\n            }\n        }\n    },\n    potionBuff2: {\n        maxLevel: 10,\n        costPerLevel: 1e8,\n        minimumSingularity: 121,\n        canExceedCap: true,\n        effect: (n: number) => {\n            return {\n                bonus: Math.max(1, 2 * n),\n                get desc () {\n                    return i18next.t('singularity.data.potionBuff2.effect', { n: format(Math.max(1, 2 * n), 0, true) })\n                }\n            }\n        }\n    },\n    potionBuff3: {\n        maxLevel: 10,\n        costPerLevel: 1e12,\n        minimumSingularity: 196,\n        canExceedCap: true,\n        effect: (n: number) => {\n            return {\n                bonus: Math.max(1, 1 + 0.5 * n),\n                get desc () {\n                    return i18next.t('singularity.data.potionBuff3.effect', { n: format(Math.max(1, 1 + 0.5 * n), 2, true) })\n                }\n            }\n        }\n    },\n    singChallengeExtension: {\n        maxLevel: 4,\n        costPerLevel: 999,\n        minimumSingularity: 11,\n        effect: (n: number) => {\n            return {\n                bonus: n,\n                get desc () {\n                    return i18next.t('singularity.data.singChallengeExtension.effect', { n: 2 * n, m: n })\n                }\n            }\n        }\n    },\n    singChallengeExtension2: {\n        maxLevel: 3,\n        costPerLevel: 29999,\n        minimumSingularity: 26,\n        effect: (n: number) => {\n            return {\n                bonus: n,\n                get desc () {\n                    return i18next.t('singularity.data.singChallengeExtension2.effect', { n: 2 * n, m: n })\n                }\n            }\n        }\n    },\n    singChallengeExtension3: {\n        maxLevel: 3,\n        costPerLevel: 749999,\n        minimumSingularity: 51,\n        effect: (n: number) => {\n            return {\n                bonus: n,\n                get desc () {\n                    return i18next.t('singularity.data.singChallengeExtension3.effect', { n: 2 * n, m: n })\n                }\n            }\n        }\n    },\n    singQuarkImprover1: {\n        maxLevel: 30,\n        costPerLevel: 1,\n        minimumSingularity: 177,\n        canExceedCap: true,\n        specialCostForm: 'Exponential2',\n        effect: (n: number) => {\n            return {\n                bonus: n/200,\n                get desc () {\n                    return i18next.t('singularity.data.singQuarkImprover1.effect', { n: format(n / 2, 2, true) })\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    singQuarkHepteract: {\n        maxLevel: 1,\n        costPerLevel: 14999,\n        minimumSingularity: 5,\n        effect: (n: number) => {\n            return {\n                bonus: n/100,\n                get desc () {\n                    return i18next.t('singularity.data.singQuarkHepteract.effect', { n: format(2 * n, 2, true) })\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    singQuarkHepteract2: {\n        maxLevel: 1,\n        costPerLevel: 449999,\n        minimumSingularity: 30,\n        effect: (n: number) => {\n            return {\n                bonus: n/100,\n                get desc () {\n                    return i18next.t('singularity.data.singQuarkHepteract2.effect', { n: format(2 * n, 2, true) })\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    singQuarkHepteract3: {\n        maxLevel: 1,\n        costPerLevel: 13370000,\n        minimumSingularity: 61,\n        effect: (n: number) => {\n            return {\n                bonus: n/100,\n                get desc () {\n                    return i18next.t('singularity.data.singQuarkHepteract3.effect', { n: format(2 * n, 2, true) })\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    singOcteractGain: {\n        maxLevel: -1,\n        costPerLevel: 20000,\n        minimumSingularity: 36,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.0125 * n,\n                get desc () {\n                    return i18next.t('singularity.data.singOcteractGain.effect', { n: format(1.25 * n, 2, true) })\n                }\n            }\n        }\n    },\n    singOcteractGain2: {\n        maxLevel: 25,\n        costPerLevel: 40000,\n        minimumSingularity: 36,\n        canExceedCap: true,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.05 * n,\n                get desc () {\n                    return i18next.t('singularity.data.singOcteractGain2.effect', { n: format(5 * n, 0, true) })\n                }\n            }\n        }\n    },\n    singOcteractGain3: {\n        maxLevel: 50,\n        costPerLevel: 250000,\n        minimumSingularity: 55,\n        canExceedCap: true,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.025 * n,\n                get desc () {\n                    return i18next.t('singularity.data.singOcteractGain3.effect', { n: format(2.5 * n, 0, true) })\n                }\n            }\n        }\n    },\n    singOcteractGain4: {\n        maxLevel: 100,\n        costPerLevel: 750000,\n        minimumSingularity: 77,\n        canExceedCap: true,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.02 * n,\n                get desc () {\n                    return i18next.t('singularity.data.singOcteractGain4.effect', { n: format(2*n, 0, true) })\n                }\n            }\n        }\n    },\n    singOcteractGain5: {\n        maxLevel: 200,\n        costPerLevel: 7777777,\n        minimumSingularity: 100,\n        canExceedCap: true,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.01 * n,\n                get desc () {\n                    return i18next.t('singularity.data.singOcteractGain5.effect', { n: format(n, 0, true) })\n                }\n            }\n        }\n    },\n    platonicTau: {\n        maxLevel: 1,\n        costPerLevel: 100000,\n        minimumSingularity: 29,\n        effect: (n: number) => {\n            return {\n                bonus: n > 0,\n                get desc () {\n                    return i18next.t(`singularity.data.platonicTau.effect${n ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    platonicAlpha: {\n        maxLevel: 1,\n        costPerLevel: 2e7,\n        minimumSingularity: 70,\n        effect: (n: number) => {\n            return {\n                bonus: n > 0,\n                get desc () {\n                    return i18next.t(`singularity.data.platonicAlpha.effect${n ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    platonicDelta: {\n        maxLevel: 1,\n        costPerLevel: 5e9,\n        minimumSingularity: 111,\n        effect: (n: number) => {\n            return {\n                bonus: n > 0,\n                get desc () {\n                    return i18next.t(`singularity.data.platonicDelta.effect${n ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        }\n    },\n    platonicPhi: {\n        maxLevel: 1,\n        costPerLevel: 2e11,\n        minimumSingularity: 152,\n        effect: (n: number) => {\n            return {\n                bonus: n > 0,\n                get desc () {\n                    return i18next.t(`singularity.data.platonicPhi.effect${n ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    singFastForward: {\n        maxLevel: 1,\n        costPerLevel: 7e6 - 1,\n        minimumSingularity: 50,\n        effect: (n: number) => {\n            return {\n                bonus: n > 0,\n                get desc () {\n                    return i18next.t(`singularity.data.singFastForward.effect${n ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    singFastForward2: {\n        maxLevel: 1,\n        costPerLevel: 1e11 - 1,\n        minimumSingularity: 150,\n        effect: (n: number) => {\n            return {\n                bonus: n > 0,\n                get desc () {\n                    return i18next.t(`singularity.data.singFastForward2.effect${n ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    singAscensionSpeed: {\n        maxLevel: 1,\n        costPerLevel: 1e10,\n        minimumSingularity: 130,\n        effect: (n: number) => {\n            return {\n                bonus: n,\n                get desc () {\n                    return i18next.t('singularity.data.singAscensionSpeed.effect', {\n                        n: format(1 + 0.03 * n, 2, true),\n                        m: format(1 - 0.03 * n, 2, true)\n                    })\n                }\n            }\n        }\n    },\n    singAscensionSpeed2: {\n        maxLevel: 1,\n        costPerLevel: 1e12,\n        minimumSingularity: 150,\n        effect: (n: number) => {\n            return {\n                bonus: n,\n                get desc () {\n                    return i18next.t('singularity.data.singAscensionSpeed2.effect')\n                }\n            }\n        }\n    },\n    WIP: {\n        maxLevel: 100,\n        costPerLevel: 1e300,\n        minimumSingularity: 251,\n        effect: (n: number) => {\n            return {\n                bonus: n,\n                get desc () {\n                    return i18next.t('singularity.data.WIP.effect')\n                }\n            }\n        }\n    },\n    ultimatePen: {\n        maxLevel: 1,\n        costPerLevel: 2.22e22,\n        minimumSingularity: 300,\n        effect: (n: number) => {\n            return {\n                bonus: n > 0,\n                get desc () {\n                    return i18next.t('singularity.data.ultimatePen.effect', {\n                        n: n ? '' : 'NOT',\n                        m: n > 0 ? ' However, the pen just ran out of ink. How will you get more?' : ''\n                    })\n                }\n            }\n        }\n    },\n    oneMind: {\n        maxLevel: 1,\n        costPerLevel: 1.66e13,\n        minimumSingularity: 166,\n        effect: (n : number) => {\n            return {\n                bonus: n > 0,\n                get desc () {\n                    return i18next.t(`singularity.data.oneMind.effect${n ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    wowPass4: {\n        maxLevel: 1,\n        costPerLevel: 66666666666,\n        minimumSingularity: 150,\n        effect: (n : number) => {\n            return {\n                bonus: n > 0,\n                get desc () {\n                    return i18next.t(`singularity.data.wowPass4.effect${n ? 'Have' : 'HaveNot'}`)\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    blueberries: {\n        maxLevel: -1,\n        costPerLevel: 1e16,\n        minimumSingularity: 222,\n        effect: (n: number) => {\n            return {\n                bonus: n,\n                get desc () {\n                    return i18next.t('singularity.data.blueberries.effect', { n })\n                }\n            }\n        },\n        specialCostForm: 'Exponential2'\n    }\n}\n\n/**\n * Singularity Perks are automatically obtained and upgraded, based on player.singularityCount\n * They can have one or several levels with a description for each level\n */\nexport class SingularityPerk {\n    public readonly name: () => string\n    public readonly levels: number[]\n    public readonly description: (n: number, levels: number[]) => string\n\n    public constructor(perk: SingularityPerk) {\n        this.name = perk.name;\n        this.levels = perk.levels;\n        this.description = perk.description;\n    }\n}\n\n// List of Singularity Perks based on player.highestSingularityCount\n// The list is ordered on first level acquisition, so be careful when inserting a new one ;)\nexport const singularityPerks: SingularityPerk[] = [\n    {\n        name: () => {\n            return  i18next.t('singularity.perkNames.xyz')\n        },\n        levels: [1, 20, 200],\n        description: (n: number, levels: number[]) => {\n            if (n >= levels[2]) {\n                return i18next.t('singularity.perks.xyz.hasLevel2')\n            } else if (n >= levels[1]) {\n                return i18next.t('singularity.perks.xyz.hasLevel1')\n            } else {\n                return i18next.t('singularity.perks.xyz.default')\n            }\n        }\n    },\n    {\n        name: () => {\n            return  i18next.t('singularity.perkNames.unlimitedGrowth')\n        },\n        levels: [1],\n        description: () => {\n            return i18next.t('singularity.perks.unlimitedGrowth', { amount: format(10 * player.singularityCount) })\n        }\n    },\n    {\n        name: () => {\n            return  i18next.t('singularity.perkNames.goldenCoins')\n        },\n        levels: [1],\n        description: () => {\n            return i18next.t('singularity.perks.goldenCoins')\n        }\n    },\n    {\n        name: () => {\n            return  i18next.t('singularity.perkNames.hepteractAutocraft')\n        },\n        levels: [1],\n        description: () => {\n            return i18next.t('singularity.perks.hepteractAutocraft')\n        }\n    },\n    {\n        name: () => {\n            return  i18next.t('singularity.perkNames.generousOrbs')\n        },\n        levels: [1, 2, 5, 10, 15, 20, 25, 30, 35],\n        description: (n: number, levels: number[]) => {\n            const overfluxBonus: Record<number, number> = {\n                8: 700, // How to read: levels[8] -> Sing 35 gives 700%\n                7: 500,\n                6: 415,\n                5: 360,\n                4: 315,\n                3: 280,\n                2: 255,\n                1: 230\n            };\n\n            for (let i = 8; i > 0; i--) {\n                if (n >= levels[i]) {\n                    return i18next.t('singularity.perks.generousOrbs', { amount: overfluxBonus[i] })\n                }\n            }\n            return i18next.t('singularity.perks.generousOrbs', { amount: '215' })\n        }\n    },\n    {\n        name: () => {\n            return  i18next.t('singularity.perkNames.researchDummies')\n        },\n        levels: [1, 11],\n        description: (n: number, levels: number[]) => {\n            if (n >= levels[1]) {\n                return i18next.t('singularity.perks.researchDummies.hasLevel1')\n            } else {\n                return i18next.t('singularity.perks.researchDummies.otherwise')\n            }\n        }\n    },\n    {\n        name: () => {\n            return  i18next.t('singularity.perkNames.superStart')\n        },\n        levels: [2, 3, 4, 7, 15],\n        description: (n: number, levels: number[]) => {\n            if (n >= levels[4]) {\n                return i18next.t('singularity.perks.superStart.hasLevel4')\n            } else if (n >= levels[3]) {\n                return i18next.t('singularity.perks.superStart.hasLevel3')\n            } else if (n >= levels[2]) {\n                return i18next.t('singularity.perks.superStart.hasLevel2')\n            } else if (n >= levels[1]) {\n                return i18next.t('singularity.perks.superStart.hasLevel1')\n            } else {\n                return i18next.t('singularity.perks.superStart.default')\n            }\n        }\n    },\n    {\n        name: () => {\n            return  i18next.t('singularity.perkNames.notSoChallenging')\n        },\n        levels: [4, 7, 10, 15, 20],\n        description: (n: number, levels: number[]) => {\n            if (n >= levels[4]) {\n                return i18next.t('singularity.perks.notSoChallenging.hasLevel4')\n            } else if (n >= levels[3]) {\n                return i18next.t('singularity.perks.notSoChallenging.hasLevel3')\n            } else if (n >= levels[2]) {\n                return i18next.t('singularity.perks.notSoChallenging.hasLevel2')\n            } else if (n >= levels[1]) {\n                return i18next.t('singularity.perks.notSoChallenging.hasLevel1')\n            } else {\n                return i18next.t('singularity.perks.notSoChallenging.default')\n            }\n        }\n    },\n    {\n        name: () => {\n            return  i18next.t('singularity.perkNames.automationUpgrades')\n        },\n        levels: [5, 10, 15, 25, 30, 100],\n        description: (n: number, levels: number[]) => {\n            if (n >= levels[5]) {\n                return i18next.t('singularity.perks.automationUpgrades.hasLevel5')\n            } else if (n >= levels[4]) {\n                return i18next.t('singularity.perks.automationUpgrades.hasLevel4')\n            } else if (n >= levels[3]) {\n                return i18next.t('singularity.perks.automationUpgrades.hasLevel3')\n            } else if (n >= levels[2]) {\n                return i18next.t('singularity.perks.automationUpgrades.hasLevel2')\n            } else if (n >= levels[1]) {\n                return i18next.t('singularity.perks.automationUpgrades.hasLevel1')\n            } else {\n                return i18next.t('singularity.perks.automationUpgrades.default')\n            }\n        }\n    },\n    {\n        name: () => {\n            return  i18next.t('singularity.perkNames.evenMoreQuarks')\n        },\n        levels: [5, 20, 35, 50, 65, 80, 90, 100, 121, 144, 150, 160, 166, 169, 170, 175, 180, 190, 196, 200, 200, 201, 202, 203, 204, 205, 210, 212, 214, 216, 218, 220, 225, 250],\n        description: (n: number, levels: number[]) => {\n            for (let i = levels.length - 1; i >= 0; i--) {\n                if (n >= levels[i]) {\n                    return i18next.t('singularity.perks.evenMoreQuarks.m', {\n                        stack: i + 1,\n                        inc: format(100 * (Math.pow(1.05, i+1) - 1), 2)\n                    })\n                }\n            }\n\n            return i18next.t('singularity.perks.evenMoreQuarks.bug')\n        }\n    },\n    {\n        name: () => {\n            return  i18next.t('singularity.perkNames.shopSpecialOffer')\n        },\n        levels: [5, 20, 51],\n        description: (n: number, levels: number[]) => {\n            if (n >= levels[2]) {\n                return i18next.t('singularity.perks.shopSpecialOffer.hasLevel2')\n            } else if (n >= levels[1]) {\n                return i18next.t('singularity.perks.shopSpecialOffer.hasLevel1')\n            } else {\n                return i18next.t('singularity.perks.shopSpecialOffer.default')\n            }\n        }\n    },\n    {\n        name: () => {\n            return  i18next.t('singularity.perkNames.potionAutogenerator')\n        },\n        levels: [6],\n        description: () => {\n            return i18next.t('singularity.perks.potionAutogenerator')\n        }\n    },\n    {\n        name: () => {\n            return  i18next.t('singularity.perkNames.respecBeGone')\n        },\n        levels: [7],\n        description: () => {\n            return i18next.t('singularity.perks.respecBeGone')\n        }\n    },\n    {\n        name: () => {\n            return  i18next.t('singularity.perkNames.forTheLoveOfTheAntGod')\n        },\n        levels: [10, 15, 25],\n        description: (n: number, levels: number[]) => {\n            if (n >= levels[2]) {\n                return i18next.t('singularity.perks.forTheLoveOfTheAntGod.hasLevel2')\n            } else if (n >= levels[1]) {\n                return i18next.t('singularity.perks.forTheLoveOfTheAntGod.hasLevel1')\n            } else {\n                return i18next.t('singularity.perks.forTheLoveOfTheAntGod.default')\n            }\n        }\n    },\n    {\n        name: () => {\n            return  i18next.t('singularity.perkNames.itAllAddsUp')\n        },\n        levels: [10, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 235, 240],\n        description: (n: number, levels: number[]) => {\n            for (let i = levels.length - 1; i >= 0; i--) {\n                if (n >= levels[i]) {\n                    return i18next.t('singularity.perks.itAllAddsUp', {\n                        div: format(1 + (i + 1) / 5, 2, true),\n                        div2: format(1 + (i + 1) / 5, 2, true),\n                        cap: format(1 + (i + 1) / 5, 2, true)\n                    })\n                }\n            }\n\n            return i18next.t('singularity.perks.evenMoreQuarks.bug')\n        }\n    },\n    {\n        name: () => {\n            return  i18next.t('singularity.perkNames.automagicalRunes')\n        },\n        levels: [15, 30, 40, 50],\n        description: (n: number, levels: number[]) => {\n            if (n >= levels[3]) {\n                return i18next.t('singularity.perks.automagicalRunes.hasLevel3')\n            } else if (n >= levels[2]) {\n                return i18next.t('singularity.perks.automagicalRunes.hasLevel2')\n            } else if (n >= levels[1]) {\n                return i18next.t('singularity.perks.automagicalRunes.hasLevel1')\n            } else {\n                return i18next.t('singularity.perks.automagicalRunes.default')\n            }\n        }\n    },\n    {\n        name: () => {\n            return  i18next.t('singularity.perkNames.derpSmithsCornucopia')\n        },\n        levels: [18, 38, 58, 78, 88, 98, 118, 148, 178, 188, 198, 208, 218, 228, 238, 248],\n        description: (n: number, levels: number[]) => {\n            for (let i = levels.length - 1; i >= 0; i--) {\n                if (n >= levels[i]) {\n                    return i18next.t('singularity.perks.derpSmithsCornucopia', {\n                        counter: i+1\n                    })\n                }\n            }\n\n            return i18next.t('singularity.perks.evenMoreQuarks.bug')\n        }\n    },\n    {\n        name: () => {\n            return  i18next.t('singularity.perkNames.exaltedAchievements')\n        },\n        levels: [25],\n        description: () => {\n            return i18next.t('singularity.perks.exaltedAchievements')\n        }\n    },\n    {\n        name: () => {\n            return  i18next.t('singularity.perkNames.coolQOLCubes')\n        },\n        levels: [25, 35],\n        description: (n: number, levels: number[]) => {\n            if (n >= levels[1]) {\n                return i18next.t('singularity.perks.coolQOLCubes.hasLevel1')\n            } else {\n                return i18next.t('singularity.perks.coolQOLCubes.default')\n            }\n        }\n    },\n    {\n        name: () => {\n            return  i18next.t('singularity.perkNames.eternalAscensions')\n        },\n        levels: [25, 101],\n        description: (n: number, levels: number[]) => {\n            if (n >= levels[1]) {\n                return i18next.t('singularity.perks.eternalAscensions.hasLevel1')\n            } else {\n                return i18next.t('singularity.perks.eternalAscensions.default')\n            }\n        }\n    },\n    {\n        name: () => {\n            return i18next.t('singularity.perkNames.antGodsCornucopia')\n        },\n        levels: [30, 70, 100],\n        description: (n: number, levels: number[]) => {\n            if (n >= levels[2]) {\n                return i18next.t('singularity.perks.antGodsCornucopia.hasLevel2')\n            } else if (n >= levels[1]) {\n                return i18next.t('singularity.perks.antGodsCornucopia.hasLevel1')\n            } else {\n                return i18next.t('singularity.perks.antGodsCornucopia.default')\n            }\n        }\n    },\n    {\n        name: () => {\n            return i18next.t('singularity.perkNames.overclocked')\n        },\n        levels: [50, 60, 75, 100, 125, 150, 175, 200, 225, 250],\n        description: (n: number, levels: number[]) => {\n            for (let i = levels.length - 1; i >= 0; i--) {\n                if (n >= levels[i]) {\n                    return i18next.t('singularity.perks.overclocked', { i: i + 1 })\n                }\n            }\n\n            return i18next.t('singularity.perks.evenMoreQuarks.bug')\n        }\n    },\n    {\n        name: () => {\n            return i18next.t('singularity.perkNames.wowCubeAutomatedShipping')\n        },\n        levels: [50, 150],\n        description: (n: number, levels: number[]) => {\n            if (n >= levels[1]) {\n                return i18next.t('singularity.perks.wowCubeAutomatedShipping.hasLevel1')\n            } else {\n                return i18next.t('singularity.perks.wowCubeAutomatedShipping.default')\n            }\n        }\n    },\n    {\n        name: () => {\n            return i18next.t('singularity.perkNames.goldenRevolution')\n        },\n        levels: [100],\n        description: () => {\n            return i18next.t('singularity.perks.goldenRevolution', {\n                current: format(Math.min(100, 0.4 * player.singularityCount), 1)\n            })\n        }\n    },\n    {\n        name: () => {\n            return i18next.t('singularity.perkNames.goldenRevolutionII')\n        },\n        levels: [100],\n        description: () => {\n            return i18next.t('singularity.perks.goldenRevolutionII', {\n                current: format(Math.min(50, 0.2 * player.singularityCount), 1)\n            })\n        }\n    },\n    {\n        name: () => {\n            return i18next.t('singularity.perkNames.goldenRevolutionIII')\n        },\n        levels: [100],\n        description: () => {\n            return i18next.t('singularity.perks.goldenRevolutionIII', {\n                current: format(Math.min(500, 2 * player.singularityCount))\n            })\n        }\n    },\n    {\n        name: () => {\n            return i18next.t('singularity.perkNames.platonicClones')\n        },\n        levels: [100, 200],\n        description: (n: number, levels: number[]) => {\n            if (n >= levels[1]) {\n                return i18next.t('singularity.perks.platonicClones.hasLevel1')\n            } else {\n                return i18next.t('singularity.perks.platonicClones.default')\n            }\n        }\n    },\n    {\n        name: () => {\n            return i18next.t('singularity.perkNames.platSigma')\n        },\n        levels: [125, 200],\n        description: (n: number, levels: number[]) => {\n            let counter = 0\n            for (const singCount of levels) {\n                if (n >= singCount) {\n                    counter += 0.125\n                }\n            }\n\n            return i18next.t('singularity.perks.platSigma', {\n                counter,\n                current: format(Math.min(50, counter*player.singularityCount), 1)\n            })\n        }\n    },\n    {\n        name: () => {\n            return i18next.t('singularity.perkNames.midasMilleniumAgedGold')\n        },\n        levels: [150],\n        description: () => {\n            return i18next.t('singularity.perks.midasMilleniumAgedGold')\n        }\n    },\n    {\n        name: () => {\n            return i18next.t('singularity.perkNames.goldenRevolution4')\n        },\n        levels: [160, 173, 185, 194, 204, 210, 219, 229, 240, 249],\n        description: (n: number, levels: number[]) => {\n            const perSecond = 1000000\n            let divisor = 0\n            for (const singCount of levels) {\n                if (n >= singCount) {\n                    divisor += 1\n                }\n            }\n\n            return i18next.t('singularity.perks.goldenRevolution4', { gq: format(perSecond / divisor, 0, true) })\n        }\n    },\n    {\n        name: () => {\n            return i18next.t('singularity.perkNames.octeractMetagenesis')\n        },\n        levels: [200, 205],\n        description: (n: number, levels: number[]) => {\n            if (n >= levels[1]) {\n                return i18next.t('singularity.perks.octeractMetagenesis.hasLevel1')\n            } else {\n                return i18next.t('singularity.perks.octeractMetagenesis.default')\n            }\n        }\n    },\n    {\n        name: () => {\n            return i18next.t('singularity.perkNames.immaculateAlchemy')\n        },\n        levels: [200, 208, 221],\n        description: (n: number, levels: number[]) => {\n            if (n >= levels[2]) {\n                return i18next.t('singularity.perks.immaculateAlchemy.hasLevel2')\n            } else if (n >= levels[1]) {\n                return i18next.t('singularity.perks.immaculateAlchemy.hasLevel1')\n            } else {\n                return i18next.t('singularity.perks.immaculateAlchemy.default')\n            }\n        }\n    },\n    {\n        name: () => {\n            return i18next.t('singularity.perkNames.skrauQ')\n        },\n        levels: [200],\n        description: () => {\n            const amt = Math.pow((player.singularityCount - 179) / 20, 2)\n            return i18next.t('singularity.perks.skrauQ', { amt })\n        }\n    }\n]\n\nexport const updateSingularityPerks = (): void => {\n    const singularityCount = player.highestSingularityCount;\n    const str = i18next.t('singularity.perks.update', {\n        ord: toOrdinal(singularityCount),\n        extra: getAvailablePerksDescription(singularityCount)\n    })\n\n    DOMCacheGetOrSet('singularityPerksMultiline').innerHTML = str;\n}\n\nexport interface ISingularityPerkDisplayInfo {\n    name: string\n    description: string\n    currentLevel: number\n    lastUpgraded: number\n    nextUpgrade: number | null\n    acquired: number\n}\n\n/*\n* Indicate current level of the Perk and when it was reached\n*/\nconst getLastUpgradeInfo = (perk: SingularityPerk, singularityCount: number): {level: number, singularity: number, next: number | null} => {\n    for (let i=perk.levels.length - 1; i >= 0; i--) {\n        if (singularityCount >= perk.levels[i]) {\n            return {\n                level: i + 1,\n                singularity: perk.levels[i],\n                next: i < perk.levels.length - 1 ? perk.levels[i + 1] : null\n            };\n        }\n    }\n\n    return { level: 0, singularity: perk.levels[0], next: perk.levels[0] };\n}\n\nconst getAvailablePerksDescription = (singularityCount: number): string => {\n    let perksText = '';\n    let availablePerks: ISingularityPerkDisplayInfo[] = [];\n    const nextUpgrades: number[] = [];\n    let singularityCountForNextPerk: number | null = null;\n    for (const perk of singularityPerks) {\n        const upgradeInfo = getLastUpgradeInfo(perk, singularityCount);\n        if (upgradeInfo.level > 0) {\n            availablePerks.push({\n                name: perk.name(),\n                description: perk.description(singularityCount, perk.levels),\n                currentLevel: upgradeInfo.level,\n                lastUpgraded: upgradeInfo.singularity,\n                nextUpgrade: upgradeInfo.next,\n                acquired: perk.levels[0]\n            });\n            if (upgradeInfo.next) {\n                nextUpgrades.push(upgradeInfo.next);\n            }\n        } else {\n            singularityCountForNextPerk = upgradeInfo.singularity;\n            break;\n        }\n    }\n\n    // We want to sort the perks so that the most recently upgraded or lastUpgraded are listed first\n    availablePerks = availablePerks.sort((p1, p2) => {\n        if (p1.acquired == p2.acquired && p1.lastUpgraded == p2.lastUpgraded) {\n            return 0;\n        }\n        if (p1.lastUpgraded > p2.lastUpgraded) {\n            return -1;\n        } else if (p1.lastUpgraded == p2.lastUpgraded && p1.acquired > p2.acquired) {\n            return -1;\n        }\n        return 1;\n    })\n\n    for (const availablePerk of availablePerks) {\n        perksText += '<br/>' + formatPerkDescription(availablePerk, singularityCount);\n    }\n    perksText += '<br/>';\n    if (singularityCountForNextPerk) {\n        perksText += `<br/>${i18next.t('singularity.perks.unlockedIn', { sing: singularityCountForNextPerk })}`;\n    }\n    const singularityCountForNextPerkUpgrade = nextUpgrades.reduce((a, b) => Math.min(a, +b), Infinity);\n    if (singularityCountForNextPerkUpgrade < Infinity) {\n        perksText += `<br/>${i18next.t('singularity.perks.improvedIn', { sing: singularityCountForNextPerkUpgrade })}`\n    }\n    return perksText;\n}\n\nfunction formatPerkDescription(perkData: ISingularityPerkDisplayInfo, singularityCount: number): string {\n    const singTolerance = getFastForwardTotalMultiplier();\n    const isNew = (singularityCount - perkData.lastUpgraded <= singTolerance);\n    const levelInfo = perkData.currentLevel > 1 ? ` - ${i18next.t('general.level')} ` + perkData.currentLevel : '';\n    //const acquiredUpgraded = ' / Acq ' + perkData.acquired + ' / Upg ' + perkData.lastUpgraded;\n    return `<span${isNew?' class=\"newPerk\"':''} title=\"${perkData.description}\">${perkData.name}${levelInfo}</span>`;\n}\n\n// Indicates the number of extra Singularity count gained on Singularity reset\nexport const getFastForwardTotalMultiplier = (): number => {\n    let fastForward = 0;\n    fastForward += +player.singularityUpgrades.singFastForward.getEffect().bonus\n    fastForward += +player.singularityUpgrades.singFastForward2.getEffect().bonus\n    fastForward += +player.octeractUpgrades.octeractFastForward.getEffect().bonus\n\n    // Stop at sing 200 even if you include fast forward\n    fastForward = Math.max(0, Math.min(fastForward, 200 - player.singularityCount - 1));\n\n    // Please for the love of god don't allow FF during a challenge\n    if (player.insideSingularityChallenge) {\n        return 0\n    }\n\n    // If the next singularityCount is greater than the highestSingularityCount, fast forward to be equal to the highestSingularityCount\n    if (player.highestSingularityCount !== player.singularityCount && player.singularityCount + fastForward + 1 >= player.highestSingularityCount) {\n        return Math.max(0, Math.min(fastForward, player.highestSingularityCount - player.singularityCount - 1))\n    }\n\n    return fastForward;\n}\n\nexport const getGoldenQuarkCost = (): {\n    cost: number\n    costReduction: number\n} => {\n    const baseCost = 10000\n\n    let costReduction = 10000 // We will construct our cost reduction by subtracting 10000 - this value.\n\n    costReduction *= (1 - 0.10 * Math.min(1, player.achievementPoints / 10000))\n    costReduction *= (1 - 0.3 * player.cubeUpgrades[60] / 10000)\n    costReduction *= +player.singularityUpgrades.goldenQuarks2.getEffect().bonus\n    costReduction *= +player.octeractUpgrades.octeractGQCostReduce.getEffect().bonus\n    costReduction *= (player.highestSingularityCount >= 100 ? 1 - 0.5 * player.highestSingularityCount / 250 : 1)\n\n    let perkDivisor = 1\n    if (player.highestSingularityCount >= 200) {\n        perkDivisor = 3\n    }\n    if (player.highestSingularityCount >= 208) {\n        perkDivisor = 5\n    }\n    if (player.highestSingularityCount >= 221) {\n        perkDivisor = 8\n    }\n    costReduction /= perkDivisor\n\n    costReduction = 10000 - costReduction\n\n    return {\n        cost: baseCost - costReduction,\n        costReduction: costReduction\n    }\n\n}\n\nexport async function buyGoldenQuarks(): Promise<void> {\n    const goldenQuarkCost = getGoldenQuarkCost()\n    const maxBuy = Math.floor(+player.worlds / goldenQuarkCost.cost)\n    let buyAmount = null\n\n    if (maxBuy === 0) {\n        return Alert(i18next.t('singularity.goldenQuarks.poor'))\n    }\n\n    const buyPrompt = await Prompt(i18next.t('singularity.goldenQuarks.buyPrompt', {\n        cost: format(goldenQuarkCost.cost, 0, true),\n        discount: format(goldenQuarkCost.costReduction, 0, true),\n        max: format(maxBuy, 0, true)\n    }))\n\n    if (buyPrompt === null) {\n        // Number(null) is 0. Yeah..\n        return Alert(i18next.t('general.cancelled'));\n    }\n\n    buyAmount = Number(buyPrompt)\n    //Check these lol\n    if (Number.isNaN(buyAmount) || !Number.isFinite(buyAmount)) {\n        // nan + Infinity checks\n        return Alert(i18next.t('general.validation.finite'));\n    } else if (buyAmount <= 0 && buyAmount != -1) {\n        // 0 or less selected\n        return Alert(i18next.t('general.validation.zeroOrLess'));\n    } else if (buyAmount > maxBuy) {\n        return Alert(i18next.t('general.validation.goldenQuarksTooMany'));\n    } else if (!Number.isInteger(buyAmount)) {\n        // non integer\n        return Alert(i18next.t('general.validation.fraction'))\n    }\n\n    let cost\n\n    if (buyAmount === -1) {\n        cost = maxBuy * goldenQuarkCost.cost\n        player.worlds.sub(cost)\n        player.goldenQuarks += maxBuy\n    } else {\n        cost = buyAmount * goldenQuarkCost.cost\n        player.worlds.sub(cost)\n        player.goldenQuarks += buyAmount\n    }\n\n    return Alert(i18next.t('singularity.goldenQuarks.transaction', {\n        spent: format(maxBuy, 0, true),\n        cost: format(cost, 0, true)\n    }))\n}\n\nexport type SingularityDebuffs = 'Offering' | 'Obtainium' | 'Global Speed' | 'Researches' | 'Ascension Speed' | 'Cubes' | 'Cube Upgrades' |\n                                 'Platonic Costs' | 'Hepteract Costs'\n\nexport const calculateEffectiveSingularities = (singularityCount: number = player.singularityCount): number => {\n    let effectiveSingularities = singularityCount;\n    effectiveSingularities *= Math.min(4.75, 0.75 * singularityCount / 10 + 1)\n\n    if (player.insideSingularityChallenge) {\n        if (player.singularityChallenges.noOcteracts.enabled) {\n            effectiveSingularities *= Math.pow(player.singularityChallenges.noOcteracts.completions + 1, 3)\n        }\n    }\n\n    if (singularityCount > 10) {\n        effectiveSingularities *= 1.5\n        effectiveSingularities *= Math.min(4, 1.25 * singularityCount / 10 - 0.25)\n    }\n    if (singularityCount > 25) {\n        effectiveSingularities *= 2.5\n        effectiveSingularities *= Math.min(6, 1.5 * singularityCount / 25 - 0.5)\n    }\n    if (singularityCount > 36) {\n        effectiveSingularities *= 4\n        effectiveSingularities *= Math.min(5, singularityCount / 18 - 1)\n        effectiveSingularities *= Math.pow(1.1, Math.min(singularityCount - 36, 64))\n    }\n    if (singularityCount > 50) {\n        effectiveSingularities *= 5\n        effectiveSingularities *= Math.min(8, 2 * singularityCount / 50 - 1)\n        effectiveSingularities *= Math.pow(1.1, Math.min(singularityCount - 50, 50))\n    }\n    if (singularityCount > 100) {\n        effectiveSingularities *= 2\n        effectiveSingularities *= singularityCount / 25\n        effectiveSingularities *= Math.pow(1.1, singularityCount - 100)\n    }\n    if (singularityCount > 150) {\n        effectiveSingularities *= 2\n        effectiveSingularities *= Math.pow(1.05, singularityCount - 150)\n    }\n    if (singularityCount > 200) {\n        effectiveSingularities *= 1.5\n        effectiveSingularities *= Math.pow(1.275, singularityCount - 200)\n    }\n    if (singularityCount > 215) {\n        effectiveSingularities *= 1.25\n        effectiveSingularities *= Math.pow(1.2, singularityCount - 215)\n    }\n    if (singularityCount > 230) {\n        effectiveSingularities *= 2\n    }\n\n    return effectiveSingularities\n}\n\nexport const calculateNextSpike = (singularityCount: number = player.singularityCount): number => {\n    const singularityPenaltyThreshold = [11, 26, 37, 51, 101, 151, 201, 216, 230];\n    let penaltyDebuff = 0\n    penaltyDebuff += player.shopUpgrades.shopSingularityPenaltyDebuff\n\n    for (const sing of singularityPenaltyThreshold) {\n        if (sing + penaltyDebuff > singularityCount) {\n            return (sing + penaltyDebuff);\n        }\n    }\n    return -1;\n}\nexport const calculateSingularityDebuff = (debuff: SingularityDebuffs, singularityCount: number=player.singularityCount) => {\n    if (singularityCount === 0) {\n        return 1\n    }\n    if (player.runelevels[6] > 0) {\n        return 1\n    }\n\n    let constitutiveSingularityCount = singularityCount\n    constitutiveSingularityCount -= player.shopUpgrades.shopSingularityPenaltyDebuff\n\n    const effectiveSingularities = calculateEffectiveSingularities(constitutiveSingularityCount);\n\n    if (debuff === 'Offering') {\n        return Math.sqrt(Math.min(effectiveSingularities, calculateEffectiveSingularities(150)) + 1)\n    } else if (debuff === 'Global Speed') {\n        return 1 + Math.sqrt(effectiveSingularities) / 4\n    } else if (debuff === 'Obtainium') {\n        return Math.sqrt(Math.min(effectiveSingularities, calculateEffectiveSingularities(150))  + 1)\n    } else if (debuff === 'Researches') {\n        return 1 + Math.sqrt(effectiveSingularities) / 2\n    } else if (debuff === 'Ascension Speed') {\n        return (singularityCount < 150) ?\n            1 + Math.sqrt(effectiveSingularities) / 5:\n            1 + Math.pow(effectiveSingularities, 0.75) / 10000\n    } else if (debuff === 'Cubes') {\n        return (player.singularityCount < 150) ?\n            1 + Math.sqrt(effectiveSingularities) / 4:\n            1 + Math.pow(effectiveSingularities, 0.75) / 1000\n    } else if (debuff === 'Platonic Costs') {\n        return (singularityCount > 36) ? 1 + Math.pow(effectiveSingularities, 3/10) / 12 : 1\n    } else if (debuff === 'Hepteract Costs') {\n        return (singularityCount > 50) ? 1 + Math.pow(effectiveSingularities, 11/50) / 25 : 1\n    } else {\n        // Cube upgrades\n        return Math.cbrt(effectiveSingularities + 1)\n    }\n}\n", "import { player, format } from './Synergism';\nimport { calculateSummationNonLinear, calculateRuneLevels, calculateAnts } from './Calculate';\nimport { revealStuff, updateChallengeDisplay } from './UpdateHTML';\nimport { Globals as G } from './Variables';\nimport { updateClassList } from './Utility';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport type { IMultiBuy } from './Cubes';\nimport { calculateSingularityDebuff } from './singularity';\nimport i18next from 'i18next';\n\nconst getResearchCost = (index: number, buyAmount = 1, linGrowth = 0): IMultiBuy => {\n    buyAmount = Math.min(G['researchMaxLevels'][index] - player.researches[index], buyAmount)\n    const metaData = calculateSummationNonLinear(player.researches[index], G['researchBaseCosts'][index] * calculateSingularityDebuff('Researches'), player.researchPoints, linGrowth, buyAmount)\n    return metaData\n}\n\nexport const updateAutoResearch = (index: number, auto: boolean) => {\n    /* If Cube Upgrade 9 (1x9) is purchased, then automation behaves differently.\n     If not purchased, then clicking on a research icon while auto toggled will update research for you.*/\n    if (autoResearchEnabled() && auto && player.autoResearchMode === 'cheapest') {\n\n        player.autoResearch = G['researchOrderByCost'][player.roombaResearchIndex];\n\n        // Checks if this is maxed. If so we proceed to the next research.\n        if (isResearchMaxed(player.autoResearch)) {\n            DOMCacheGetOrSet(`res${player.autoResearch || 1}`).classList.remove('researchRoomba');\n            player.roombaResearchIndex = Math.min(\n                G['researchOrderByCost'].length - 1,\n                player.roombaResearchIndex + 1\n            );\n        }\n\n        // Checks against researches invalid or not unlocked.\n        while (!isResearchUnlocked(player.autoResearch) && player.autoResearch < 200 && player.autoResearch >= 76) {\n            player.roombaResearchIndex += 1;\n            player.autoResearch = G['researchOrderByCost'][player.roombaResearchIndex];\n        }\n\n        // Researches that are unlocked work\n        if (isResearchUnlocked(player.autoResearch)) {\n            const idx = Math.max(G['researchOrderByCost'][player.roombaResearchIndex], 1);\n            const doc = DOMCacheGetOrSet('res' + idx);\n            if (player.researches[player.autoResearch] < G['researchMaxLevels'][player.autoResearch]) {\n                doc.classList.add('researchRoomba');\n            }\n        }\n\n        return\n    } else if (!auto && (!autoResearchEnabled() || player.autoResearchMode === 'manual')){\n        /* We remove the old research HTML from the 'roomba' class and make the new index our 'roomba'\n           class. We then update the index and consequently the coloring of the background based\n           on what level (if any) the research has. This functionality is useless after\n           Cube Upgrade 9 (1x9) has been purchased. */\n        DOMCacheGetOrSet(`res${player.autoResearch || 1}`).classList.remove('researchRoomba');\n        DOMCacheGetOrSet(`res${index}`).classList.add('researchRoomba');\n        player.autoResearch = index;\n\n        // Research is maxed\n        if (player.researches[index] >= G['researchMaxLevels'][index]) {\n            updateClassList(`res${player.autoResearch}`, ['researchMaxed'], ['researchPurchased', 'researchUnpurchased']);\n        } else if (player.researches[index] >= 1) {\n            // Research purchased above level 0 but not maxed\n            updateClassList(`res${player.autoResearch}`, ['researchPurchased'], ['researchUnpurchased', 'researchMaxed']);\n        } else {\n            // Research has not been purchased yet\n            updateClassList(`res${player.autoResearch}`, ['researchUnpurchased'], ['researchPurchased', 'researchMaxed']);\n        }\n\n        return\n    } else {\n        return\n    } //There might be code needed here. I don't quite know yet. -Platonic\n}\n\n/**\n * Should the user have access to autoResearch\n * @returns boolean\n */\nexport const autoResearchEnabled = (): boolean => {\n    return (player.cubeUpgrades[9] === 1 || player.highestSingularityCount > 10);\n}\n/**\n * Attempts to buy the research of the index selected. This is hopefully an improvement over buyResearch. Fuck\n * @param index\n * @param auto\n * @param linGrowth\n * @returns\n */\nexport const buyResearch = (index: number, auto = false, linGrowth = 0, hover = false): boolean => {\n\n    // Get our costs, and determine if anything is purchasable.\n    const buyAmount = (player.researchBuyMaxToggle || auto || hover) ? 1e5: 1;\n    const metaData = getResearchCost(index, buyAmount, linGrowth); /* Destructuring FTW! */\n    const canBuy = (player.researchPoints >= metaData.cost);\n\n    if (canBuy && isResearchUnlocked(index) && !isResearchMaxed(index)) {\n        player.researches[index] = metaData.levelCanBuy;\n        player.researchPoints -= metaData.cost;\n        // Quick check after upgrading for max. This is to update any automation regardless of auto state\n        if (isResearchMaxed(index)) {\n            DOMCacheGetOrSet(`res${player.autoResearch || 1}`).classList.remove('researchRoomba');\n        }\n\n        // Update the progress description\n        G['researchfiller2'] = 'Level: ' + player.researches[index] + '/' + (G['researchMaxLevels'][index]);\n        researchDescriptions(index, auto, linGrowth)\n\n        // Handle special cases: Researches 47-50 (2x21-2x25)\n        // I love the ||= operator -Platonic\n        player.unlocks.rrow1 ||= true;\n        player.unlocks.rrow2 ||= true;\n        player.unlocks.rrow3 ||= true;\n        player.unlocks.rrow4 ||= true;\n        if (index >= 47 && index <= 50) {\n            revealStuff();\n        }\n        if ((index >= 66 && index <= 70) || index === 105) {\n            updateChallengeDisplay();\n        }\n\n        // Update ants and runes.\n        calculateRuneLevels();\n        calculateAnts();\n    }\n\n    // Update HTML for auto stuff if auto research is ever toggled.\n    if (player.autoResearchToggle) {\n        updateAutoResearch(index, auto);\n    }\n\n    // Note to anyone reading this code: I forget why this needs to return a Boolean.\n    // -Platonic\n    return canBuy\n}\n\n/**\n * Calculates the max research index for the research roomba\n */\nexport const maxRoombaResearchIndex = (p = player) => {\n    const base = p.ascensionCount > 0 ? 140 : 125; // 125 researches pre-A + 15 from A\n    const c11 = p.challengecompletions[11] > 0 ? 15 : 0;\n    const c12 = p.challengecompletions[12] > 0 ? 15 : 0;\n    const c13 = p.challengecompletions[13] > 0 ? 15 : 0;\n    const c14 = p.challengecompletions[14] > 0 ? 15 : 0;\n    return base + c11 + c12 + c13 + c14;\n}\n\nexport const isResearchUnlocked = (index: number) => {\n    // https://stackoverflow.com/questions/20477177/creating-an-array-of-cumulative-sum-in-javascript\n    const cumuSum = (sum => (value: number) => sum += value)(0);\n    const indices = [3 * 25, 5, 20, 10, 15, 15, 15, 15, 15, 15].map(cumuSum);\n    const chievos = [50, 124, 127, 134, 141, 183, 197, 204, 211, 218];\n    for (let i = 0; i < indices.length; i++) {\n        if (i === 3 && (index === 121 || index === 124 || index === 150)) {\n            return player.achievements[chievos[i]] > 0;\n        }\n        if (index <= indices[i]) {\n            return player.achievements[chievos[i]] > 0;\n        }\n    }\n    return false;\n}\n\nconst isResearchMaxed = (index: number) => G['researchMaxLevels'][index] <= player.researches[index];\n\nexport const researchDescriptions = (i: number, auto = false, linGrowth = 0) => {\n    const buyAmount = (player.researchBuyMaxToggle || auto) ? 100000 : 1;\n    const y = i18next.t(`researches.descriptions.${i}`)\n    const p = 'res' + i\n\n    if (player.toggles[38] === true && player.singularityCount > 0) {\n        buyResearch(i, false, i === 200 ? 0.01 : 0, true);\n    }\n\n    const metaData = getResearchCost(i, buyAmount, linGrowth);\n    let z = i18next.t('researches.cost', {\n        x: format(metaData.cost, 0, false),\n        y: format(metaData.levelCanBuy - player.researches[i], 0, true)\n    })\n\n    if (player.researches[i] === (G['researchMaxLevels'][i])) {\n        DOMCacheGetOrSet('researchcost').style.color = 'Gold'\n        DOMCacheGetOrSet('researchinfo3').style.color = 'plum'\n        updateClassList(p, ['researchMaxed'], ['researchAvailable', 'researchPurchased', 'researchPurchasedAvailable'])\n        z += i18next.t('researches.maxed')\n    } else {\n        DOMCacheGetOrSet('researchcost').style.color = 'limegreen'\n        DOMCacheGetOrSet('researchinfo3').style.color = 'white'\n        if (player.researches[i] > 0) {\n            updateClassList(p, ['researchPurchased', 'researchPurchasedAvailable'], ['researchAvailable', 'researchMaxed', 'researchUnpurchased'])\n        } else {\n            updateClassList(p, ['researchAvailable'], ['researchPurchased', 'researchMaxed', 'researchUnpurchased'])\n        }\n    }\n\n    if (player.researchPoints < metaData.cost && player.researches[i] < (G['researchMaxLevels'][i])) {\n        DOMCacheGetOrSet('researchcost').style.color = 'var(--crimson-text-color)'\n        updateClassList(p, [], ['researchMaxed', 'researchAvailable', 'researchPurchasedAvailable'])\n    }\n\n    DOMCacheGetOrSet('researchinfo2').textContent = y\n    DOMCacheGetOrSet('researchcost').textContent = z\n    DOMCacheGetOrSet('researchinfo3').textContent =  i18next.t('researches.level', {\n        x: player.researches[i],\n        y: G['researchMaxLevels'][i]\n    })\n}\n\nexport const updateResearchBG = (j: number) => {\n\n    if (player.researches[j] > G['researchMaxLevels'][j]) {\n        player.researchPoints += (player.researches[j] - G['researchMaxLevels'][j]) * G['researchBaseCosts'][j]\n        player.researches[j] = G['researchMaxLevels'][j]\n    }\n\n    const k = `res${j}`\n    if (player.researches[j] > 0.5 && player.researches[j] < G['researchMaxLevels'][j]) {\n        updateClassList(k, ['researchPurchased'], ['researchUnpurchased', 'researchMaxed'])\n    } else if (player.researches[j] > 0.5 && player.researches[j] >= G['researchMaxLevels'][j]) {\n        updateClassList(k, ['researchMaxed'], ['researchUnpurchased', 'researchPurchased'])\n    } else {\n        updateClassList(k, ['researchUnpurchased'], ['researchPurchased', 'researchMaxed'])\n    }\n}\n", "import { player } from './Synergism';\nimport { Globals as G } from './Variables';\n\ntype Bless = keyof typeof player['hypercubeBlessings'];\n\nexport const calculateHypercubeBlessings = () => {\n    // The visual updates are handled in visualUpdateCubes()\n\n    // we use Object.keys here instead of a for-in loop because we need the index of the key.\n    const keys = Object.keys(player.hypercubeBlessings);\n\n    for (const key of keys) {\n        const obj = player.hypercubeBlessings[key as Bless];\n        const idx = keys.indexOf(key) + 1;\n\n        let power = 1;\n        let mult = 1;\n        if (obj >= 1000) {\n            power = G['benedictionDRPower'][idx]!;\n            mult *= Math.pow(1000, (1 - G['benedictionDRPower'][idx]!));\n        }\n\n        G['hypercubeBonusMultiplier'][idx] = 1 + mult * G['benedictionbase'][idx]! * Math.pow(obj, power) * G['platonicBonusMultiplier'][4];\n    }\n}", "import { player } from './Synergism';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport i18next from 'i18next';\n\nexport const toggleTheme = (initial = false, themeNumber = 1, change = false) => {\n    const themeButton = DOMCacheGetOrSet('theme');\n    const body = document.body;\n\n    if (change) {\n        localStorage.setItem('theme', `${themeNumber}`);\n        body.style.setProperty('--transition', '750ms');\n        body.style.setProperty('--transition-extra', '600ms');\n    } else {\n        themeNumber = Number(localStorage.getItem('theme') ?? 1);\n    }\n\n    /* Full reset for easy out of order change */\n    if (!initial) { //For quicker first load\n        body.style.removeProperty('--header-color');\n        body.style.removeProperty('--bg-color');\n        body.style.removeProperty('--alert-color');\n        body.style.removeProperty('--history-lines');\n        body.style.removeProperty('--text-color');\n        body.style.removeProperty('--green-text-color');\n        body.style.removeProperty('--lightseagreen-text-color');\n        body.style.removeProperty('--crimson-text-color');\n        body.style.removeProperty('--red-text-color');\n        body.style.removeProperty('--maroon-text-color');\n        body.style.removeProperty('--orchid-text-color');\n        body.style.removeProperty('--darkorchid-text-color');\n        body.style.removeProperty('--darkcyan-text-color');\n        body.style.removeProperty('--gray-text-color');\n        body.style.removeProperty('--orangered-text-color');\n        body.style.removeProperty('--box-color');\n        body.style.removeProperty('--boxmain-bordercolor');\n        body.style.removeProperty('--button-color');\n        body.style.removeProperty('--hover-color');\n        body.style.removeProperty('--blackbtn-color');\n        body.style.removeProperty('--purplebtn-color');\n        body.style.removeProperty('--purplehover-color');\n        body.style.removeProperty('--buttonbuy-color');\n        body.style.removeProperty('--buildings-canbuy-color');\n        body.style.removeProperty('--buildings-hover-color');\n        body.style.removeProperty('--blessings-canbuy-color');\n        body.style.removeProperty('--blessings-hover-color');\n        body.style.removeProperty('--tab-color');\n        body.style.removeProperty('--singtab-color');\n        body.style.removeProperty('--hoversing-color');\n        body.style.removeProperty('--shoptab-color');\n        body.style.removeProperty('--hovershop-color');\n        body.style.removeProperty('--hepteract-bar-empty');\n        body.style.removeProperty('--hepteract-bar-red');\n        body.style.removeProperty('--hepteract-bar-yellow');\n        body.style.removeProperty('--hepteract-bar-green');\n        body.classList.remove('textOutline');\n        //body.classList.add('bodycolor');\n        DOMCacheGetOrSet('actualPotionShop').style.backgroundColor = '';\n        DOMCacheGetOrSet('actualPotionShop').style.borderColor = '';\n        DOMCacheGetOrSet('themeBox').style.backgroundColor = '';\n        DOMCacheGetOrSet('themeBox').style.borderColor = '';\n        DOMCacheGetOrSet('c15Rewards').style.backgroundColor = '';\n        DOMCacheGetOrSet('c15Rewards').style.borderColor = '';\n        DOMCacheGetOrSet('platonicUpgradeDescriptions').style.backgroundColor = '';\n        DOMCacheGetOrSet('platonicUpgradeDescriptions').style.borderColor = '';\n        DOMCacheGetOrSet('platonicUpgradePics').style.backgroundColor = '';\n        DOMCacheGetOrSet('platonicUpgradePics').style.borderColor = '';\n        DOMCacheGetOrSet('actualShop').style.backgroundColor = '';\n        DOMCacheGetOrSet('actualShop').style.borderColor = '';\n        DOMCacheGetOrSet('corruptionStatsLoadouts').style.backgroundColor = '';\n        DOMCacheGetOrSet('corruptionStatsLoadouts').style.borderColor = '';\n        DOMCacheGetOrSet('heptGrid').style.backgroundColor = '';\n        DOMCacheGetOrSet('heptGrid').style.borderColor = '';\n        DOMCacheGetOrSet('exportgame').style.backgroundColor = '';\n        DOMCacheGetOrSet('importFileButton').style.backgroundColor = '';\n        DOMCacheGetOrSet('switchTheme2').style.borderColor = 'darkslategray';\n\n        DOMCacheGetOrSet('bonussummation').style.color = 'orangered'; //CSS colors, instead of having '', will write out full color, in case someone will move CSS color into HTML\n        DOMCacheGetOrSet('corruptionDescription').style.color = 'darkviolet';\n        DOMCacheGetOrSet('versionnumber').style.color = 'fuchsia';\n        DOMCacheGetOrSet('singularitytab').style.color = 'red';\n        DOMCacheGetOrSet('traitstab').style.color = 'red';\n        DOMCacheGetOrSet('cubetab').style.color = 'red';\n        DOMCacheGetOrSet('ascTimeAccel').style.color = 'royalblue';\n        DOMCacheGetOrSet('buildinghotkeys').style.color = 'lightgray';\n        DOMCacheGetOrSet('buildinghotkeys2').style.color = 'lightgray';\n        DOMCacheGetOrSet('antspecies').style.color = 'royalblue'; //HTML colors\n        DOMCacheGetOrSet('achievementcolorcode2').style.color = 'purple';\n        DOMCacheGetOrSet('corruptionTesseracts').style.color = 'darkviolet';\n        DOMCacheGetOrSet('antwelcome').style.color = 'lightslategrey';\n        DOMCacheGetOrSet('confirmationToggleTitle').style.color = 'pink';\n        DOMCacheGetOrSet('specialActionsTitle').style.color = 'pink';\n        DOMCacheGetOrSet('themesTitle').style.color = 'pink';\n        DOMCacheGetOrSet('notationTitle').style.color = 'pink';\n        DOMCacheGetOrSet('hepteractWelcome').style.color = 'pink';\n        DOMCacheGetOrSet('confirmationdisclaimer').style.color = 'plum';\n        DOMCacheGetOrSet('cube6Bonus').style.color = 'brown';\n        DOMCacheGetOrSet('tesseract6Bonus').style.color = 'brown';\n        DOMCacheGetOrSet('hypercube6Bonus').style.color = 'brown';\n        DOMCacheGetOrSet('runeshowpower5').style.color = 'tomato';\n        DOMCacheGetOrSet('hypercubeWelcome').style.color = '#ff004c'; //Hypercube colors\n        DOMCacheGetOrSet('hypercubeQuantity').style.color = '#ff004c';\n        DOMCacheGetOrSet('hypercubeBlessingsTotal').style.color = '#ff004c';\n    } else {\n        if (themeNumber === 4) {\n            DOMCacheGetOrSet('logo').setAttribute('src', 'Pictures/logoLight.png');\n        }\n    }\n\n    if (themeNumber === 1) {\n        localStorage.removeItem('theme');\n        themeButton.textContent = 'Dark Mode';\n    } else if (themeNumber === 2) { //'Darker Mode'\n        body.style.setProperty('--header-color', 'black');\n        body.style.setProperty('--bg-color', '#0c0c0f');\n        body.style.setProperty('--alert-color', '#040406');\n        body.style.setProperty('--history-lines', '#1b1b22');\n        body.style.setProperty('--box-color', '#060606');\n        body.style.setProperty('--boxmain-bordercolor', '#d487d4');\n        body.style.setProperty('--button-color', '#040406');\n        body.style.setProperty('--hover-color', '#1b1b22');\n        body.style.setProperty('--purplebtn-color', '#6f006f');\n        body.style.setProperty('--buttonbuy-color', '#040406');\n        body.style.setProperty('--buildings-canbuy-color', '#2c2c44');\n        body.style.setProperty('--buildings-hover-color', '#3a3a58');\n        body.style.setProperty('--blessings-canbuy-color', '#262639');\n        body.style.setProperty('--blessings-hover-color', '#33334e');\n        body.style.setProperty('--tab-color', 'black');\n        body.style.setProperty('--singtab-color', '#002');\n        body.style.setProperty('--hoversing-color', '#00007d');\n        body.style.setProperty('--shoptab-color', '#6f006f');\n        body.style.setProperty('--hepteract-bar-empty', '#3a3a58');\n        body.style.setProperty('--hepteract-bar-red', 'darkred');\n        body.style.setProperty('--hepteract-bar-yellow', '#997a00');\n        body.style.setProperty('--hepteract-bar-green', 'darkgreen');\n        DOMCacheGetOrSet('corruptionStatsLoadouts').style.borderColor = '#dd8f00';\n        DOMCacheGetOrSet('actualPotionShop').style.borderColor = '#dd0';\n        DOMCacheGetOrSet('exportgame').style.backgroundColor = 'black'; //Special cases\n        DOMCacheGetOrSet('importFileButton').style.backgroundColor = 'black';\n\n        themeButton.textContent = 'Darker Mode';\n    } else if (themeNumber === 3) { //'Lighter Dark Mode'\n        body.style.setProperty('--header-color', '#18171c');\n        body.style.setProperty('--bg-color', '#1c1b22');\n        body.style.setProperty('--alert-color', '#141319');\n        body.style.setProperty('--history-lines', '#083a3a');\n        body.style.setProperty('--box-color', '#141319');\n        body.style.setProperty('--boxmain-bordercolor', '#dda0dd');\n        body.style.setProperty('--button-color', '#101828');\n        body.style.setProperty('--hover-color', '#006');\n        body.style.setProperty('--blackbtn-color', '#101828');\n        body.style.setProperty('--buttonbuy-color', '#0b111c');\n        body.style.setProperty('--buildings-canbuy-color', '#2d4471');\n        body.style.setProperty('--buildings-hover-color', '#3c5a95');\n        body.style.setProperty('--blessings-canbuy-color', '#1e2e4d');\n        body.style.setProperty('--blessings-hover-color', '#2d4471');\n        body.style.setProperty('--tab-color', '#101828');\n        body.style.setProperty('--hoversing-color', '#005');\n        body.style.setProperty('--hepteract-bar-empty', '#535064');\n        DOMCacheGetOrSet('corruptionStatsLoadouts').style.borderColor = '#ffa500';\n        DOMCacheGetOrSet('actualPotionShop').style.borderColor = '#dd0';\n        DOMCacheGetOrSet('actualShop').style.backgroundColor = '#0c0c0f'; //Special cases\n        DOMCacheGetOrSet('actualShop').style.borderColor = '#d487d4';\n        DOMCacheGetOrSet('platonicUpgradePics').style.backgroundColor = '#0c0c0f';\n        body.style.setProperty('--maroon-text-color', '#a90000');\n\n        themeButton.textContent = 'Lighter Dark Mode';\n    } else if (themeNumber === 4) { //'Light Mode'\n        body.classList.add('textOutline');\n        body.style.setProperty('--header-color', '#736e8d');\n        body.style.setProperty('--bg-color', '#7c7891');\n        body.style.setProperty('--alert-color', '#646175');\n        body.style.setProperty('--history-lines', '#156e71');\n        body.style.setProperty('--box-color', '#646175');\n        body.style.setProperty('--boxmain-bordercolor', '#d894d8');\n        body.style.setProperty('--button-color', '#136062');\n        body.style.setProperty('--hover-color', '#187c7f');\n        body.style.setProperty('--blackbtn-color', '#105254');\n        body.style.setProperty('--buttonbuy-color', '#4c495a');\n        body.style.setProperty('--buildings-canbuy-color', '#9794a8');\n        body.style.setProperty('--buildings-hover-color', '#b2b0bf');\n        body.style.setProperty('--blessings-canbuy-color', '#6c687f');\n        body.style.setProperty('--blessings-hover-color', '#7c7990');\n        body.style.setProperty('--tab-color', '#105254');\n        body.style.setProperty('--singtab-color', '#00d');\n        body.style.setProperty('--hoversing-color', '#1052B6');\n        body.style.setProperty('--hepteract-bar-empty', '#858199');\n        body.style.setProperty('--hepteract-bar-red', '#ea1741');\n        body.style.setProperty('--hepteract-bar-yellow', '#cc0');\n        body.style.setProperty('--hepteract-bar-green', 'limegreen');\n        DOMCacheGetOrSet('corruptionStatsLoadouts').style.borderColor = '#dd8f00';\n        DOMCacheGetOrSet('actualPotionShop').style.borderColor = '#dd0';\n        DOMCacheGetOrSet('switchTheme2').style.borderColor = '#284242'; //Special Cases\n        body.style.setProperty('--green-text-color', 'limegreen');\n        body.style.setProperty('--red-text-color', '#f55');\n        body.style.setProperty('--maroon-text-color', '#ff5656');\n        body.style.setProperty('--crimson-text-color', '#f7617d');\n        body.style.setProperty('--orchid-text-color', '#dd7dda');\n        body.style.setProperty('--darkorchid-text-color', '#cf9ee8');\n        body.style.setProperty('--darkcyan-text-color', 'turquoise');\n        body.style.setProperty('--lightseagreen-text-color', 'limegreen');\n        body.style.setProperty('--orangered-text-color', '#f74');\n        body.style.setProperty('--gray-text-color', '#a5a5a5');\n        DOMCacheGetOrSet('achievementcolorcode2').style.color = '#dc7dff';\n        DOMCacheGetOrSet('corruptionDescription').style.color = '#d272ff';\n        DOMCacheGetOrSet('corruptionTesseracts').style.color = '#d272ff';\n        DOMCacheGetOrSet('antwelcome').style.color = '#b1b1b1';\n        DOMCacheGetOrSet('versionnumber').style.color = '#ff5aff';\n        DOMCacheGetOrSet('singularitytab').style.color = '#ff5252';\n        DOMCacheGetOrSet('traitstab').style.color = '#ff5252';\n        DOMCacheGetOrSet('cubetab').style.color = '#ff5252';\n        DOMCacheGetOrSet('antspecies').style.color = '#8da9ff';\n        DOMCacheGetOrSet('ascTimeAccel').style.color = '#97b0ff';\n        DOMCacheGetOrSet('cube6Bonus').style.color = '#a5a5a5';\n        DOMCacheGetOrSet('tesseract6Bonus').style.color = '#a5a5a5';\n        DOMCacheGetOrSet('hypercube6Bonus').style.color = '#a5a5a5';\n        DOMCacheGetOrSet('hypercubeWelcome').style.color = '#f58';\n        DOMCacheGetOrSet('hypercubeQuantity').style.color = '#f58';\n        DOMCacheGetOrSet('hypercubeBlessingsTotal').style.color = '#f58';\n        DOMCacheGetOrSet('runeshowpower5').style.color = '#ff7158';\n\n        themeButton.textContent = 'Light Mode';\n    } else if (themeNumber === 5) { //'Dracula Mode'\n        body.style.setProperty('--header-color', '#0a0a11');\n        body.style.setProperty('--bg-color', '#131319');\n        body.style.setProperty('--alert-color', '#2a1035');\n        body.style.setProperty('--history-lines', '#012d1c');\n        body.style.setProperty('--text-color', '#ac47ff');\n        body.style.setProperty('--maroon-text-color', '#c30000');\n        body.style.setProperty('--crimson-text-color', '#eb0000');\n        body.style.setProperty('--orchid-text-color', '#fd59f7');\n        body.style.setProperty('--darkorchid-text-color', '#c205ff');\n        body.style.setProperty('--gray-text-color', '#8f8f8f');\n        body.style.setProperty('--box-color', '#000000');\n        body.style.setProperty('--boxmain-bordercolor', '#b341e0');\n        body.style.setProperty('--button-color', '#21003f');\n        body.style.setProperty('--hover-color', '#00056a');\n        body.style.setProperty('--blackbtn-color', '#28002a');\n        body.style.setProperty('--purplebtn-color', '#5800a0');\n        body.style.setProperty('--purplehover-color', '#680927');\n        body.style.setProperty('--buttonbuy-color', '#005e00');\n        body.style.setProperty('--buildings-canbuy-color', '#a00');\n        body.style.setProperty('--buildings-hover-color', '#e00');\n        body.style.setProperty('--blessings-canbuy-color', '#004d00');\n        body.style.setProperty('--blessings-hover-color', '#800');\n        body.style.setProperty('--tab-color', '#1a0030');\n        body.style.setProperty('--singtab-color', '#000230');\n        body.style.setProperty('--hoversing-color', '#000463');\n        body.style.setProperty('--shoptab-color', '#5800a0');\n        body.style.setProperty('--hovershop-color', '#7400d3');\n        body.style.setProperty('--hepteract-bar-empty', '#4a4a60');\n        body.style.setProperty('--hepteract-bar-red', '#c90000');\n        body.style.setProperty('--hepteract-bar-yellow', '#919100');\n        body.style.setProperty('--hepteract-bar-green', '#007f3b');\n        DOMCacheGetOrSet('themeBox').style.backgroundColor = '#0a0a11'; //Special cases\n        DOMCacheGetOrSet('themeBox').style.borderColor = '#3c006d';\n        DOMCacheGetOrSet('c15Rewards').style.backgroundColor = '#2e001b';\n        DOMCacheGetOrSet('c15Rewards').style.borderColor = '#186e83';\n        DOMCacheGetOrSet('platonicUpgradeDescriptions').style.backgroundColor = '#2e001b';\n        DOMCacheGetOrSet('platonicUpgradeDescriptions').style.borderColor = '#186e83';\n        DOMCacheGetOrSet('platonicUpgradePics').style.backgroundColor = '#720505';\n        DOMCacheGetOrSet('platonicUpgradePics').style.borderColor = '#410303';\n        DOMCacheGetOrSet('actualPotionShop').style.backgroundColor = '#01192c';\n        DOMCacheGetOrSet('actualPotionShop').style.borderColor = '#04d481';\n        DOMCacheGetOrSet('actualShop').style.backgroundColor = '#11111b';\n        DOMCacheGetOrSet('actualShop').style.borderColor = '#038ba8';\n        DOMCacheGetOrSet('corruptionStatsLoadouts').style.backgroundColor = '#0a0a11';\n        DOMCacheGetOrSet('corruptionStatsLoadouts').style.borderColor = '#04d481';\n        DOMCacheGetOrSet('heptGrid').style.backgroundColor = '#11111b';\n        DOMCacheGetOrSet('heptGrid').style.borderColor = '#9b7306';\n        DOMCacheGetOrSet('achievementcolorcode2').style.color = '#ef00e4'; //Text colors\n        DOMCacheGetOrSet('corruptionDescription').style.color = '#c205ff';\n        DOMCacheGetOrSet('corruptionTesseracts').style.color = '#c205ff';\n        DOMCacheGetOrSet('antwelcome').style.color = 'darkgrey';\n        DOMCacheGetOrSet('confirmationToggleTitle').style.color = '#eb0000';\n        DOMCacheGetOrSet('specialActionsTitle').style.color = '#eb0000';\n        DOMCacheGetOrSet('themesTitle').style.color = '#eb0000';\n        DOMCacheGetOrSet('notationTitle').style.color = '#eb0000';\n        DOMCacheGetOrSet('hepteractWelcome').style.color = '#ac47ff';\n        DOMCacheGetOrSet('confirmationdisclaimer').style.color = '#bb68ff';\n        DOMCacheGetOrSet('antspecies').style.color = '#184ff3';\n        DOMCacheGetOrSet('bonussummation').style.color = '#eb0000';\n        DOMCacheGetOrSet('buildinghotkeys').style.color = '#838383';\n        DOMCacheGetOrSet('buildinghotkeys2').style.color = '#838383';\n\n        themeButton.textContent = 'Dracula Mode';\n    }\n    if (change) {\n        setTimeout(() => {\n            body.style.removeProperty('--transition');\n            body.style.removeProperty('--transition-extra');\n        }, 750);\n    }\n};\n\nexport const toggleAnnotation = (setting = true) => {\n    const notationButton = DOMCacheGetOrSet('notation');\n    const current = notationButton.textContent;\n\n    switch (current) {\n        case 'Pure Scientific':\n            notationButton.textContent = i18next.t('settings.notation.pureEngineering')\n            break;\n        case 'Pure Engineering':\n            notationButton.textContent = i18next.t('settings.notation.default')\n            break;\n        default:\n            notationButton.textContent = i18next.t('settings.notation.pureScientific')\n    }\n    if (setting === true) {\n        player.notation = current ?? 'Default';\n    }\n}\n\nexport const settingAnnotation = () => {\n    let userAnnotation = player.notation;\n    const maxAnnotations = 10;\n    const notationButton = DOMCacheGetOrSet('notation');\n    for (let i = 0; i < maxAnnotations; i++) {\n        const current = notationButton.textContent;\n        if (current !== null && userAnnotation.toUpperCase() !== current.toUpperCase()) {\n            toggleAnnotation(false);\n        } else {\n            return;\n        }\n    }\n    userAnnotation = 'DEFAULT';\n    for (let i = 0; i < maxAnnotations; i++) {\n        const current = notationButton.textContent;\n        if (current !== null && userAnnotation !== current.toUpperCase()) {\n            toggleAnnotation(false);\n        } else {\n            return;\n        }\n    }\n}\n\n// IconSets: ['FolderName', 'FallbackSetIndex']\n// Make sure new sets have a UNIQUE folder name (not used in icon file names), and it is added to IconSets[][] and IconSetsRegex\nexport const IconSets:[string,number][] = [\n    ['Legacy', -1],\n    ['Default', 0],\n    ['Simplified', 1],\n    ['Monotonous', 1]\n];\nexport const IconSetsRegex = new RegExp('Default|Simplified|Monotonous|Legacy');\n\nexport const toggleIconSet = (changeTo = player.iconSet) => {\n    if ((changeTo > (IconSets.length - 1)) || (changeTo < 0)) {\n        changeTo = 0;\n    }\n    player.iconSet = changeTo;\n    Array.from(document.getElementsByTagName('img')).forEach(\n        function(img) {\n            img.src = img.src.replace(IconSetsRegex, IconSets[player.iconSet][0]);\n        }\n    );\n    DOMCacheGetOrSet('iconSet').textContent = i18next.t(`settings.iconSets.${IconSets[player.iconSet][0].toLowerCase()}`)\n}\n\n// If no image is found falls back to designated fallback, then Legacy, then MISSINGIMAGE.png\n// MISSINGIMAGE.png(s) will not be replaced except on a full page reload\nexport function imgErrorHandler (evt: Event) {\n    if (!evt.target || !(evt.target instanceof HTMLImageElement)) {\n        return;\n    }\n    const whichImg = evt.target;\n    const iconSetName = IconSets[player.iconSet][0];\n    const fallbackSetNum = IconSets[player.iconSet][1];\n    let fallbackSetName = 'Legacy';\n    if ((fallbackSetNum >= 0) && (fallbackSetNum < IconSets.length - 1)) {\n        fallbackSetName = IconSets[fallbackSetNum][0];\n    }\n\n    if (whichImg.src.includes('Legacy') || !(IconSetsRegex.exec(whichImg.src))) {\n        // no image to fall back to\n        whichImg.src = './Pictures/MISSINGIMAGE.png';\n    } else if (whichImg.src.includes(iconSetName)) {\n        // first fall back attempt\n        whichImg.src = whichImg.src.replace(IconSetsRegex, fallbackSetName);\n    } else {\n        // fall back to Legacy\n        whichImg.src = whichImg.src.replace(IconSetsRegex, 'Legacy');\n    }\n}\n", "import { player, format } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { toggleCorruptionLevel } from './Toggles';\nimport { getElementById } from './Utility';\nimport { Alert, Prompt } from './UpdateHTML';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport { IconSets } from './Themes';\nimport i18next from 'i18next';\n\n//\n\nexport const maxCorruptionLevel = () => {\n    let max = 0\n\n    if (player.challengecompletions[11] > 0) {\n        max += 5\n    }\n    if (player.challengecompletions[12] > 0) {\n        max += 2\n    }\n    if (player.challengecompletions[13] > 0) {\n        max += 2\n    }\n    if (player.challengecompletions[14] > 0) {\n        max += 2\n    }\n    if (player.platonicUpgrades[5] > 0) {\n        max += 1\n    }\n    if (player.platonicUpgrades[10] > 0) {\n        max += 1\n    }\n\n    // Overrides everything above.\n    if (player.singularityUpgrades.platonicTau.getEffect().bonus) {\n        max = Math.max(13, max)\n    }\n\n    if (player.singularityUpgrades.corruptionFourteen.getEffect().bonus) {\n        max += 1\n    }\n    max += +player.octeractUpgrades.octeractCorruption.getEffect().bonus\n\n    return max\n}\n\nexport const corruptionDisplay = (index: number) => {\n    if (DOMCacheGetOrSet('corruptionDetails').style.visibility !== 'visible') {\n        DOMCacheGetOrSet('corruptionDetails').style.visibility = 'visible'\n    }\n    if (DOMCacheGetOrSet('corruptionSelectedPic').style.visibility !== 'visible') {\n        DOMCacheGetOrSet('corruptionSelectedPic').style.visibility = 'visible'\n    }\n    G['corruptionTrigger'] = index\n    const currentExponent = ((index === 2) && player.usedCorruptions[index] >= 10) ? 1 + 0.04 * player.platonicUpgrades[17] + 2 * Math.min(1, player.platonicUpgrades[17]) : 1;\n    const protoExponent = ((index === 2) && player.prototypeCorruptions[index] >= 10) ? 1 + 0.04 * player.platonicUpgrades[17] + 2 * Math.min(1, player.platonicUpgrades[17]) : 1;\n    let bonusLevel = (player.singularityUpgrades.corruptionFifteen.level > 0) ? 1 : 0;\n    bonusLevel += +player.singularityChallenges.oneChallengeCap.rewards.freeCorruptionLevel\n    const bonusText = (bonusLevel > 0) ? `[+${bonusLevel}]` : '';\n\n    const corruptEffectValues: number[][] = [\n        G['viscosityPower'],\n        G['lazinessMultiplier'],\n        G['hyperchallengedMultiplier'],\n        G['illiteracyPower'],\n        G['deflationMultiplier'],\n        G['extinctionMultiplier'],\n        G['droughtMultiplier'],\n        G['financialcollapsePower'],\n        [0]\n    ]\n\n    const iconExtensions: string[] = [\n        '/CorruptViscocity.png',\n        '/CorruptSpatialDilation.png',\n        '/CorruptHyperchallenged.png',\n        '/CorruptScientificIlliteracy.png',\n        '/CorruptDeflation.png',\n        '/CorruptExtinction.png',\n        '/CorruptDrought.png',\n        '/CorruptFinancialCollapse.png'\n    ]\n\n\n    let text: Record<'name' | 'description' | 'current' | 'planned' | 'multiplier' | 'spiritContribution' | 'image', string> = {\n        name: i18next.t('corruptions.exitCorruption.name'),\n        description: i18next.t('corruptions.exitCorruption.description'),\n        current: i18next.t('corruptions.exitCorruption.current'),\n        planned: i18next.t('corruptions.exitCorruption.planned'),\n        multiplier: i18next.t('corruptions.exitCorruption.multiplier'),\n        spiritContribution: '',\n        image: `Pictures/${IconSets[player.iconSet][0]}/CorruptExit.png`\n    }\n\n    if (index < 10) {\n        text = {\n            name: i18next.t(`corruptions.names.${index-1}`),\n            description: i18next.t(`corruptions.descriptions.${index-1}`),\n            current: i18next.t(`corruptions.currentLevel.${index-1}`, {level: format(player.usedCorruptions[index]) + bonusText, effect: format(corruptEffectValues[index-2][player.usedCorruptions[index]], 3)}),\n            planned: i18next.t(`corruptions.prototypeLevel.${index-1}`, {level: format(player.prototypeCorruptions[index]) + bonusText, effect: format(corruptEffectValues[index-2][player.prototypeCorruptions[index]], 3)}),\n            multiplier: i18next.t('corruptions.scoreMultiplier', {curr: format(Math.pow(G['corruptionPointMultipliers'][player.usedCorruptions[index] + bonusLevel], currentExponent), 1), next: format(Math.pow(G['corruptionPointMultipliers'][player.prototypeCorruptions[index] + bonusLevel], protoExponent), 1)}),\n            spiritContribution: i18next.t('corruptions.spiritEffect', {curr: format(4 * Math.pow(player.usedCorruptions[index] + bonusLevel,2),1), next: format(4 * Math.pow(player.prototypeCorruptions[index] + bonusLevel,2),1)}),\n            image: `Pictures/${IconSets[player.iconSet][0]}${iconExtensions[index-2]}`\n        }\n    }\n\n    DOMCacheGetOrSet('corruptionName').textContent = text.name\n    DOMCacheGetOrSet('corruptionDescription').textContent = text.description\n    DOMCacheGetOrSet('corruptionLevelCurrent').textContent = text.current\n    DOMCacheGetOrSet('corruptionLevelPlanned').textContent = text.planned\n    DOMCacheGetOrSet('corruptionMultiplierContribution').textContent = text.multiplier\n    DOMCacheGetOrSet('corruptionSpiritContribution').textContent = text.spiritContribution\n    DOMCacheGetOrSet('corruptionSelectedPic').setAttribute('src', text.image)\n\n    if (index < 10) {\n        DOMCacheGetOrSet(`corrCurrent${index}`).textContent = format(player.usedCorruptions[index])\n        DOMCacheGetOrSet(`corrNext${index}`).textContent = format(player.prototypeCorruptions[index])\n    }\n}\n\nexport const corruptionStatsUpdate = () => {\n    for (let i = 2; i <= 9; i++) {\n        // https://discord.com/channels/677271830838640680/706329553639047241/841749032841379901\n        const a = DOMCacheGetOrSet(`corrCurrent${i}`);\n        const b = DOMCacheGetOrSet(`corrNext${i}`)\n        a.textContent = format(player.usedCorruptions[i])\n        b.textContent = format(player.prototypeCorruptions[i])\n    }\n}\n\nexport const corruptionButtonsAdd = () => {\n    const rows = document.getElementsByClassName('corruptionStatRow');\n\n    for (let i = 0; i < rows.length; i++) {\n        const row = rows[i];\n\n        // Delete rows that already exist\n        for (let i = row.children.length - 1; i >= 1; i--) {\n            row.children[i].remove();\n        }\n\n        const p = document.createElement('p');\n        p.className = 'corrDesc'\n        let text = document.createTextNode(i18next.t('corruptions.current'))\n        p.appendChild(text)\n        let span = document.createElement('span');\n        span.id = `corrCurrent${i+2}`;\n        span.textContent = `${player.usedCorruptions[i+2]}`;\n        p.appendChild(span);\n\n        text = document.createTextNode(i18next.t('corruptions.next'));\n        p.appendChild(text);\n\n        span = document.createElement('span');\n        span.id = `corrNext${i+2}`;\n        span.textContent = `${player.prototypeCorruptions[i+2]}`;\n        p.appendChild(span);\n        row.appendChild(p);\n\n        let btn;\n        btn = document.createElement('button');\n        btn.className = 'corrBtn corruptionMax';\n        btn.textContent = `+${i18next.t('corruptions.max')}`;\n        btn.addEventListener('click', () => toggleCorruptionLevel(i + 2, 99));\n        row.appendChild(btn);\n\n        btn = document.createElement('button');\n        btn.className = 'corrBtn corruptionUp';\n        btn.textContent = '+1';\n        btn.addEventListener('click', () => toggleCorruptionLevel(i + 2, 1));\n        row.appendChild(btn);\n\n        btn = document.createElement('button');\n        btn.className = 'corrBtn corruptionDown';\n        btn.textContent = '-1';\n        btn.addEventListener('click', () => toggleCorruptionLevel(i + 2, -1));\n        row.appendChild(btn);\n\n        btn = document.createElement('button');\n        btn.className = 'corrBtn corruptionReset';\n        btn.textContent = `-${i18next.t('corruptions.max')}`;\n        btn.addEventListener('click', () => toggleCorruptionLevel(i + 2, -99));\n        row.appendChild(btn);\n        row.addEventListener('click', () => corruptionDisplay(i + 2));\n    }\n}\n\nexport const corruptionLoadoutTableCreate = () => {\n    const corrCount = 8\n    const table = getElementById<HTMLTableElement>('corruptionLoadoutTable')\n\n    // Delete rows that already exist\n    for (let i = table.rows.length - 1; i >= 1; i--) {\n        table.deleteRow(i);\n    }\n\n    for (let i = 0; i < Object.keys(player.corruptionLoadouts).length + 1; i++) {\n        const row = table.insertRow()\n        for (let j = 0; j <= corrCount; j++) {\n            const cell = row.insertCell();\n            cell.className = `test${j}`\n            if (j === 0) { // First column\n                if (i === 0) { // First row\n                    cell.textContent = i18next.t('corruptions.loadoutTable.next')\n                    cell.addEventListener('click', () => void corruptionLoadoutGetExport());\n                    cell.classList.add('corrLoadoutName');\n                    cell.title = i18next.t('corruptions.loadoutTable.firstRowTitle')\n                } else {\n                    // Custom loadout names are loaded later, via updateCorruptionLoadoutNames()\n                    cell.title = i18next.t('corruptions.loadoutTable.otherRowTitle', {value: i})\n                }\n\n            } else if (j <= corrCount) {\n                if (i === 0) { // Next Ascension Corruption values\n                    cell.textContent = player.prototypeCorruptions[j+1].toString()\n                } else { // Loadout Corruption values\n                    cell.textContent = player.corruptionLoadouts[i][j+1].toString()\n                }\n            }\n        }\n        if (i === 0) {\n            // First line is special : \"Import\" and \"Zero\" buttons\n            let cell = row.insertCell();\n            let btn: HTMLButtonElement= document.createElement('button');\n            btn.className = 'corrImport'\n            btn.textContent = i18next.t('corruptions.loadoutTable.import')\n            btn.addEventListener('click', () => void importCorruptionsPrompt());\n            cell.appendChild(btn);\n            cell.title = i18next.t('corruptions.importLoadoutInTextFormat')\n\n            cell = row.insertCell();\n            btn = document.createElement('button');\n            btn.className = 'corrLoad'\n            btn.textContent = i18next.t('corruptions.loadoutTable.zero')\n            btn.addEventListener('click', () => corruptionLoadoutSaveLoad(false, i));\n            cell.appendChild(btn);\n            cell.title = i18next.t('corruptions.loadoutTable.zeroTitle')\n        } else {\n            let cell = row.insertCell();\n            let btn = document.createElement('button');\n            btn.className = 'corrSave'\n            btn.textContent = i18next.t('corruptions.loadoutTable.save')\n            btn.addEventListener('click', () => corruptionLoadoutSaveLoad(true, i));\n            cell.appendChild(btn);\n            cell.title = i18next.t('corruptions.loadoutTable.saveTitle')\n\n            cell = row.insertCell();\n            btn = document.createElement('button');\n            btn.className = 'corrLoad'\n            btn.textContent = i18next.t('corruptions.loadoutTable.load')\n            btn.addEventListener('click', () => corruptionLoadoutSaveLoad(false, i));\n            cell.appendChild(btn);\n        }\n    }\n}\n\nexport const corruptionLoadoutTableUpdate = (updateRow = 0) => {\n    const row = getElementById<HTMLTableElement>('corruptionLoadoutTable').rows[updateRow + 1].cells;\n    for (let i = 1; i < row.length; i++) {\n        if (i > 8) {\n            break;\n        }\n        row[i].textContent = ((updateRow === 0) ? player.prototypeCorruptions[i+1] : player.corruptionLoadouts[updateRow][i+1]).toString();\n    }\n}\n\nexport const corruptionLoadoutSaveLoad = (save = true, loadout = 1) => {\n    if (save) {\n        player.corruptionLoadouts[loadout] = Array.from(player.prototypeCorruptions)\n        corruptionLoadoutTableUpdate(loadout)\n    } else {\n        if (loadout === 0) {\n            player.prototypeCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        } else {\n            player.prototypeCorruptions = Array.from(player.corruptionLoadouts[loadout])\n        }\n        corruptionLoadoutTableUpdate();\n        corruptionStatsUpdate();\n    }\n}\n\nexport const applyCorruptions = (corruptions: string) => {\n    if (corruptions && corruptions.indexOf('/') > -1 && corruptions.split('/').length === 13) {\n        // Converts the '/' separated string into a number[]\n        const newCorruptions = corruptions.split('/').map(corr => Number(corr));\n\n        for (const value of newCorruptions) {\n            if (\n                !Number.isInteger(value) ||\n                Number.isNaN(value) ||\n                value < 0 ||\n                value > maxCorruptionLevel()\n            ) {\n                return false;\n            }\n        }\n\n        player.prototypeCorruptions = newCorruptions;\n        corruptionLoadoutTableUpdate();\n        corruptionStatsUpdate();\n        return true;\n    }\n\n    return false;\n}\n\nasync function importCorruptionsPrompt() {\n    const input = await Prompt(i18next.t('corruptions.importCorruptionsPrompt.import'));\n\n    if (!applyCorruptions('0/0/' + input + '/0/0/0')) {\n        void Alert(i18next.t('corruptions.importCorruptionsPrompt.importError'));\n    }\n}\n\nasync function corruptionLoadoutGetNewName(loadout = 0) {\n    const maxChars = 9\n    // eslint-disable-next-line\n    const regex = /^[\\x00-\\xFF]*$/\n    const renamePrompt = await Prompt(i18next.t('corruptions.corruptionLoadoutName.loadoutPrompt', {loadNum: loadout + 1, maxChars: maxChars}));\n\n    if (!renamePrompt) {\n        return Alert(i18next.t('corruptions.corruptionLoadoutName.errors.noName'));\n    } else if (renamePrompt.length > maxChars) {\n        return Alert(i18next.t('corruptions.corruptionLoadoutName.errors.exceedsCharacterLimit'))\n    } else if (!regex.test(renamePrompt)) {\n        return Alert(i18next.t('corruptions.corruptionLoadoutName.errors.regexError'))\n    } else {\n        player.corruptionLoadoutNames[loadout] = renamePrompt\n        updateCorruptionLoadoutNames();\n        if (renamePrompt === 'crazy') {\n            return Alert(i18next.t('corruptions.loadoutPrompt.errors.crazyJoke'))\n        }\n    }\n}\n\nexport const updateCorruptionLoadoutNames = () => {\n    const rows = getElementById<HTMLTableElement>('corruptionLoadoutTable').rows\n    for (let i = 0; i < Object.keys(player.corruptionLoadouts).length; i++) {\n        const cells = rows[i + 2].cells  //start changes on 2nd row\n        if (cells[0].textContent!.length === 0) {  //first time setup\n\n            cells[0].addEventListener('click', () => void corruptionLoadoutGetNewName(i)); //get name function handles -1 for array\n            cells[0].classList.add('corrLoadoutName');\n        }\n        cells[0].textContent = `${player.corruptionLoadoutNames[i]}:`;\n    }\n}\n\nconst corruptionLoadoutGetExport = async () => {\n    const str = player.prototypeCorruptions.slice(2, 10).join('/');\n    if ('clipboard' in navigator) {\n        await navigator.clipboard.writeText(str)\n            .catch((e: Error) => Alert(i18next.t('corruptions.loadoutExport.saveErrorNavigator', {message: e.message})));\n    } else {\n        void Alert(i18next.t('corruptions.loadoutExport.saveErrorNavigator', {message: str}));\n    }\n}\n\nexport const corruptionCleanseConfirm = () => {\n    const corrupt = DOMCacheGetOrSet('corruptionCleanseConfirm');\n    corrupt.style.visibility = 'visible';\n    setTimeout(() => corrupt.style.visibility = 'hidden', 10000);\n}\n\nexport const revealCorruptions = () => {\n    const corruptions = document.getElementsByClassName('corruptionStatRow') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < corruptions.length; i ++) {\n        corruptions[i].style.display = 'none'\n    }\n\n    const c11Unlocks = document.getElementsByClassName('chal11Corruption') as HTMLCollectionOf<HTMLElement>;\n    const c12Unlocks = document.getElementsByClassName('chal12Corruption') as HTMLCollectionOf<HTMLElement>;\n    const c13Unlocks = document.getElementsByClassName('chal13Corruption') as HTMLCollectionOf<HTMLElement>;\n    const c14Unlocks = document.getElementsByClassName('chal14Corruption') as HTMLCollectionOf<HTMLElement>;\n\n    if (player.challengecompletions[11] > 0 || player.singularityUpgrades.platonicTau.getEffect().bonus) {\n        for (let i = 0; i < c11Unlocks.length; i++) {\n            c11Unlocks[i].style.display = 'flex'\n        }\n    }\n    if (player.challengecompletions[12] > 0 || player.singularityUpgrades.platonicTau.getEffect().bonus) {\n        for (let i = 0; i < c12Unlocks.length; i++) {\n            c12Unlocks[i].style.display = 'flex'\n        }\n    }\n    if (player.challengecompletions[13] > 0 || player.singularityUpgrades.platonicTau.getEffect().bonus) {\n        for (let i = 0; i < c13Unlocks.length; i++) {\n            c13Unlocks[i].style.display = 'flex'\n        }\n    }\n    if (player.challengecompletions[14] > 0 || player.singularityUpgrades.platonicTau.getEffect().bonus) {\n        for (let i = 0; i < c14Unlocks.length; i++) {\n            c14Unlocks[i].style.display = 'flex'\n        }\n    }\n}\n\nexport function corrChallengeMinimum(index: number): number {\n    switch (index) {\n        case 2:\n            return 11\n        case 3:\n            return 14\n        case 4:\n            return 14\n        case 5:\n            return 13\n        case 6:\n            return 12\n        case 7:\n            return 12\n        case 8:\n            return 11\n        case 9:\n            return 13\n        default:\n            return 0\n    }\n}\n", "import { player } from './Synergism';\nimport { Globals as G } from './Variables';\n\nexport const calculatePlatonicBlessings = () => {\n    // The visual updates are handled in visualUpdateCubes()\n    const platonicArray = Object.values(player.platonicBlessings);\n    const DRThreshold = [4e6, 4e6, 4e6, 8e4, 1e4, 1e4, 1e4, 1e4]\n    for (let i = 0; i < platonicArray.length; i++) {\n        let power = 1;\n        let mult = 1;\n        let effectiveAmount = platonicArray[i]\n        if (i === 5) {\n            effectiveAmount = Math.min(effectiveAmount, 1e20)\n        }\n        if (i === 6 && effectiveAmount >= 1e20) {\n            effectiveAmount = Math.pow(effectiveAmount, 0.5) * 1e10\n        }\n        if (platonicArray[i] >= DRThreshold[i]) {\n            power = G['platonicDRPower'][i];\n            mult *= Math.pow(DRThreshold[i], (1 - G['platonicDRPower'][i]));\n        }\n\n        G['platonicBonusMultiplier'][i] = 1 + mult * G['platonicCubeBase'][i] * Math.pow(effectiveAmount, power);\n    }\n}\n", "/* Functions which Handle Quark Gains,  */\n\nimport { calculateCubeQuarkMultiplier, calculateQuarkMultiplier } from './Calculate';\nimport { format, player } from './Synergism'\nimport { Alert } from './UpdateHTML';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\n\nconst getBonus = async (): Promise<null | number> => {\n    if (navigator.onLine === false) {\n        return null;\n    }\n    if (document.visibilityState === 'hidden') {\n        return null;\n    }\n\n    try {\n        const r = await fetch('https://synergism-quarks.khafra.workers.dev/');\n        const j = await r.json() as { bonus: number };\n\n        return j.bonus;\n    } catch (e) {\n        // eslint-disable-next-line no-console\n        console.log(`workers.dev: ${(e as Error).message}`);\n    }\n\n    try {\n        const r = await fetch('https://api.github.com/gists/44be6ad2dcf0d44d6a29dffe1d66a84a', {\n            headers: {\n                'Accept': 'application/vnd.github.v3+json'\n            }\n        });\n\n        const t = await r.json() as { files: Record<string, { content: string }> };\n        const b = Number(t.files['SynergismQuarkBoost.txt'].content);\n\n        return b;\n    } catch (e) {\n        // eslint-disable-next-line no-console\n        console.log(`GitHub Gist: ${(e as Error).message}`);\n    }\n\n    return null;\n}\n\nexport const quarkHandler = () => {\n    let maxTime = 90000 //In Seconds\n    if (player.researches[195] > 0) {\n        maxTime += 18000 * player.researches[195] // Research 8x20\n    }\n\n    //Part 2: Calculate quark gain per hour\n    let baseQuarkPerHour = 5;\n\n    const quarkResearches = [99, 100, 125, 180, 195]\n    for (const el of quarkResearches) {\n        baseQuarkPerHour += player.researches[el]\n    }\n\n    baseQuarkPerHour *= +player.octeractUpgrades.octeractExportQuarks.getEffect().bonus\n\n    const quarkPerHour = baseQuarkPerHour\n\n    //Part 3: Calculates capacity of quarks on export\n    const capacity = Math.floor(quarkPerHour * maxTime / 3600)\n\n    //Part 4: Calculate how many quarks are to be gained.\n    const quarkGain = Math.floor(player.quarkstimer * quarkPerHour / 3600);\n\n    //Part 5 [June 9, 2021]: Calculate bonus awarded to cube quarks.\n    const cubeMult = calculateCubeQuarkMultiplier();\n    //Return maxTime, quarkPerHour, capacity and quarkGain as object\n    return {\n        maxTime: maxTime,\n        perHour: quarkPerHour,\n        capacity: capacity,\n        gain: quarkGain,\n        cubeMult: cubeMult\n    };\n}\n\nexport class QuarkHandler {\n    /** Global quark bonus */\n    public BONUS = 0;\n    /** Quark amount */\n    private QUARKS = 0;\n\n    private static interval: ReturnType<typeof setInterval> | null = null;\n\n    constructor({ bonus, quarks }: { bonus?: number, quarks: number }) {\n        this.QUARKS = quarks;\n        if (bonus) {\n            this.BONUS = bonus;\n        } else {\n            void this.getBonus();\n        }\n\n        if (QuarkHandler.interval === null) {\n            // although the values are cached for 15 mins, refresh every 5\n            QuarkHandler.interval = setInterval(this.getBonus.bind(this), 60 * 1000 * 5);\n        }\n    }\n\n    /*** Calculates the number of quarks to give with the current bonus. */\n    applyBonus(amount: number) {\n        const nonPatreon = calculateQuarkMultiplier();\n        return amount * (1 + (this.BONUS / 100)) * nonPatreon;\n    }\n\n    /** Subtracts quarks, as the name suggests. */\n    add(amount: number, useBonus = true) {\n        this.QUARKS += useBonus ? this.applyBonus(amount) : amount;\n        player.quarksThisSingularity += useBonus ? this.applyBonus(amount) : amount;\n        return this;\n    }\n\n    /** Add quarks, as suggested by the function's name. */\n    sub(amount: number) {\n        this.QUARKS -= amount;\n        if (this.QUARKS < 0) {\n            this.QUARKS = 0;\n        }\n\n        return this;\n    }\n\n    async getBonus() {\n        const el = DOMCacheGetOrSet('currentBonus');\n        if (localStorage.getItem('quarkBonus') !== null) { // is in cache\n            const { bonus, fetched } = JSON.parse(localStorage.getItem('quarkBonus')!) as { bonus: number, fetched: number };\n            if (Date.now() - fetched < 60 * 1000 * 15) { // cache is younger than 15 minutes\n                el.textContent = `Generous patrons give you a bonus of ${bonus}% more Quarks!`\n                return this.BONUS = bonus;\n            }\n        } else if (!navigator.onLine) {\n            return el.textContent = 'Current Bonus: N/A% (offline)!';\n        } else if (document.hidden) {\n            return el.textContent = 'Current Bonus: N/A% (unfocused)!';\n        }\n\n        const b = await getBonus();\n\n        if (b === null) {\n            return;\n        } else if (Number.isNaN(b) || typeof b !== 'number') {\n            return Alert('No bonus could be applied, a network error occurred! [Invalid Bonus] :(');\n        } else if (!Number.isFinite(b)) {\n            return Alert('No bonus could be applied, an error occurred. [Infinity] :(');\n        } else if (b < 0) {\n            return Alert('No bonus could be applied, an error occurred. [Zero] :(');\n        }\n\n        el.textContent = `Generous patrons give you a bonus of ${b}% more Quarks!`;\n        localStorage.setItem('quarkBonus', JSON.stringify({ bonus: b, fetched: Date.now() }));\n        this.BONUS = b;\n    }\n\n    public toString(val: number): string {\n        return format(Math.floor(this.applyBonus(val)), 0, true)\n    }\n\n    [Symbol.toPrimitive] = (t: string) => t === 'number' ? this.QUARKS : null;\n}\n", "\n\n/* Note by Platonic, April 1 2021\nThis is an experimental file for making cubes their own class\nand make them easily re-used for later purposes.\nPlease do not change the *file name* or use anything developed in this\nfile without asking me first. You may edit this file as much as you\nwant, though!\nThank you! */\n\nimport Decimal from 'break_infinity.js';\nimport i18next from 'i18next';\nimport { achievementaward } from './Achievements';\nimport { calculateCubeBlessings } from './Calculate';\nimport { CalcECC } from './Challenges';\nimport { calculateHypercubeBlessings } from './Hypercubes';\nimport { calculatePlatonicBlessings } from './PlatonicCubes';\nimport { quarkHandler } from './Quark';\nimport { format, player } from './Synergism';\nimport { calculateTesseractBlessings } from './Tesseracts';\nimport type { Player } from './types/Synergism';\nimport { Prompt, Alert } from './UpdateHTML';\n\n/* Constants */\n\nconst blessings: Record<\n    keyof Player['cubeBlessings'],\n    { weight: number, pdf: (x: number) => boolean }\n> = {\n    accelerator: {weight: 4, pdf: (x: number) => 0 <= x && x <= 20},\n    multiplier: {weight: 4, pdf: (x: number) => 20 < x && x <= 40},\n    offering: {weight: 2, pdf: (x: number) => 40 < x && x <= 50},\n    runeExp: {weight: 2, pdf: (x: number) => 50 < x && x <= 60},\n    obtainium: {weight: 2, pdf: (x: number) => 60 < x && x <= 70},\n    antSpeed: {weight: 2, pdf: (x: number) => 70 < x && x <= 80},\n    antSacrifice: {weight: 1, pdf: (x: number) => 80 < x && x <= 85},\n    antELO: {weight: 1, pdf: (x: number) => 85 < x && x <= 90},\n    talismanBonus: {weight: 1, pdf: (x: number) => 90 < x && x <= 95},\n    globalSpeed: {weight: 1, pdf: (x: number) => 95 < x && x <= 100}\n}\n\nconst platonicBlessings: Record <\n    keyof Player['platonicBlessings'],\n    { weight: number, pdf: (x: number) => boolean }\n> = {\n    cubes: {weight: 13200, pdf: (x: number) => 0 <= x && x <= 33.000},\n    tesseracts: {weight: 13200, pdf: (x: number) => 33.000 < x && x <= 66.000},\n    hypercubes: {weight: 13200, pdf: (x: number) => 66.000 < x && x <= 99.000},\n    platonics: {weight: 396, pdf: (x: number) => 99.000 < x && x <= 99.990},\n    hypercubeBonus: {weight: 1, pdf: (x: number) => 99.990 < x && x <= 99.9925},\n    taxes: {weight: 1, pdf: (x: number) => 99.9925 < x && x <= 99.995},\n    scoreBonus: {weight: 1, pdf: (x: number) => 99.995 < x && x <= 99.9975},\n    globalSpeed: {weight: 1, pdf: (x: number) => 99.9975 < x && x <= 100}\n}\n\n/**\n * @description Generic class for handling cube subsets.\n * @example\n * class PlatCubes extends Currency {\n *   constructor() {\n *       super('wowPlatonicCubes', player.wowPlatonicCubes);\n *   }\n *\n *   async open(amount: number, value: boolean) {\n *       // implement open logic here\n *   }\n * }\n *\n * new PlatCubes().openCustom();\n */\nexport abstract class Cube {\n    /** key on the player object */\n    private key: keyof Player;\n    private value: number;\n\n    constructor (\n        type: keyof Player,\n        v = 0\n    ) {\n        this.key = type;\n        this.value = v;\n    }\n\n    /**\n     * @description Open a given amount of cubes\n     * @param amount Number of cubes to open\n     * @param max if true, overwrites amount and opens the max amount of cubes.\n     */\n    abstract open(amount: number, max: boolean): Promise<void> | void;\n\n    /** Open a custom amount of cubes */\n    async openCustom() {\n        // TODO: Replace this with `this`?\n        const thisInPlayer = player[this.key] as Cube;\n        const amount = await Prompt(i18next.t('cubes.howManyCubesOpen', { x: format(thisInPlayer, 0, true) }));\n\n        if (amount === null) {\n            return Alert(i18next.t('cubes.noCubesOpened'));\n        }\n\n        const isPercentage = amount.endsWith('%');\n        const cubesToOpen = amount.startsWith('-')\n            ? (isPercentage ? 100 + Number(amount.slice(0, -1)) : thisInPlayer.value + Number(amount))\n            : (isPercentage ? Number(amount.slice(0, -1)) : Number(amount));\n\n        if (Number.isNaN(cubesToOpen) || !Number.isFinite(cubesToOpen) || !Number.isInteger(cubesToOpen)) {\n            return Alert(i18next.t('general.validation.finiteInt'));\n        } else if (thisInPlayer.value < cubesToOpen) {\n            return Alert(i18next.t('cubes.validation.notEnough'));\n        } else if (cubesToOpen <= 0) {\n            return Alert(i18next.t('cubes.validation.negative'));\n        } else if (isPercentage && cubesToOpen > 100) {\n            return Alert(i18next.t('cubes.validation.invalidPercent', { x: cubesToOpen }));\n        }\n\n        if (isPercentage) {\n            return this.open(\n                Math.floor(thisInPlayer.value * (cubesToOpen / 100)),\n                cubesToOpen === 100\n            );\n        }\n\n        return this.open(cubesToOpen, cubesToOpen === thisInPlayer.value);\n    }\n\n    /** @description Check how many quarks you should have gained through opening cubes today */\n    checkQuarkGain(base: number, mult: number, cubes: number): number {\n        if (cubes < 1) {\n            return 0;\n        }\n        // General quark multiplier from other in-game features\n        // Multiplier from passed parameter\n        const multiplier = mult * quarkHandler().cubeMult;\n\n        return Math.floor(player.worlds.applyBonus(Math.log10(cubes) * base * multiplier));\n    }\n\n    /** @description Check how many cubes you need to gain an additional quark from opening */\n    checkCubesToNextQuark(base: number, mult: number, quarks: number, cubes: number): number {\n        // General quark multiplier from other in-game features\n        // Multiplier from passed parameter\n        const multiplier = mult * quarkHandler().cubeMult;\n\n        return Math.ceil(Math.pow(10, (quarks + 1) / player.worlds.applyBonus(multiplier * base)) - cubes)\n    }\n\n    add(amount: number): Cube {\n        this.value = Math.min(1e300, this.value + amount);\n        return this;\n    }\n\n    sub(amount: number): Cube {\n        this.value = Math.max(0, this.value - amount);\n        return this;\n    }\n\n    [Symbol.toPrimitive](h: string) {\n        switch (h) {\n            case 'string': return this.value.toString();\n            case 'number': return this.value;\n            default: return null;\n        }\n    }\n}\n\nexport class WowCubes extends Cube {\n    constructor(amount = Number(player.wowCubes)) {\n        super('wowCubes', amount);\n    }\n\n    open(value: number, max = false) {\n        let toSpend = max ? Number(this) : Math.min(Number(this), value);\n\n        if (value === 1 && player.cubeBlessings.accelerator >= 2e11 && player.achievements[246] < 1) {\n            achievementaward(246)\n        }\n\n        this.sub(toSpend);\n        player.cubeOpenedDaily += toSpend\n\n        const quarkMult = (player.shopUpgrades.cubeToQuark) ? 1.5 : 1;\n        const gainQuarks = Number(this.checkQuarkGain(5, quarkMult, player.cubeOpenedDaily));\n        const actualQuarksGain = Math.max(0, gainQuarks - player.cubeQuarkDaily)\n        player.cubeQuarkDaily += actualQuarksGain;\n        player.worlds.add(actualQuarksGain, false);\n\n        toSpend *= (1 + player.researches[138] / 1000)\n        toSpend *= (1 + 0.8 * player.researches[168] / 1000)\n        toSpend *= (1 + 0.6 * player.researches[198] / 1000)\n\n        toSpend = Math.floor(toSpend)\n        let toSpendModulo = toSpend % 20\n        let toSpendDiv20 = Math.floor(toSpend / 20)\n\n        if (toSpendDiv20 > 0 && player.cubeUpgrades[13] === 1) {\n            toSpendModulo += toSpendDiv20\n        }\n        if (toSpendDiv20 > 0 && player.cubeUpgrades[23] === 1) {\n            toSpendModulo += toSpendDiv20\n        }\n        if (toSpendDiv20 > 0 && player.cubeUpgrades[33] === 1) {\n            toSpendModulo += toSpendDiv20\n        }\n\n        toSpendDiv20 += 100 / 100 * Math.floor(toSpendModulo / 20);\n        toSpendModulo = toSpendModulo % 20;\n\n        const keys = Object.keys(player.cubeBlessings) as (keyof Player['cubeBlessings'])[];\n\n        // If you're opening more than 20 cubes, it will consume all cubes until remainder mod 20, giving expected values.\n        for (const key of keys) {\n            player.cubeBlessings[key] += blessings[key].weight * toSpendDiv20 * (1 + Math.floor(CalcECC('ascension', player.challengecompletions[12])));\n        }\n\n        // Then, the remaining cubes will be opened, simulating the probability [RNG Element]\n        for (let i = 0; i < toSpendModulo; i++) {\n            const num = 100 * Math.random();\n            for (const key of keys) {\n                if (blessings[key].pdf(num)) {\n                    player.cubeBlessings[key] += (1 + Math.floor(CalcECC('ascension', player.challengecompletions[12])));\n                }\n            }\n        }\n\n        calculateCubeBlessings();\n    }\n}\n\nexport class WowTesseracts extends Cube {\n    constructor(amount = Number(player.wowTesseracts)) {\n        super('wowTesseracts', amount);\n    }\n\n    open(value: number, max = false) {\n        const toSpend = max ? Number(this) : Math.min(Number(this), value);\n\n        player.wowTesseracts.sub(toSpend);\n        player.tesseractOpenedDaily += toSpend\n\n        const quarkMult = (player.shopUpgrades.tesseractToQuark) ? 1.5 : 1;\n        const gainQuarks = Number(this.checkQuarkGain(7, quarkMult, player.tesseractOpenedDaily));\n        const actualQuarksGain = Math.max(0, gainQuarks - player.tesseractQuarkDaily)\n        player.tesseractQuarkDaily += actualQuarksGain\n        player.worlds.add(actualQuarksGain, false);\n\n        const toSpendModulo = toSpend % 20\n        const toSpendDiv20 = Math.floor(toSpend / 20)\n\n        // If you're opening more than 20 Tesseracts, it will consume all Tesseracts until remainder mod 20, giving expected values.\n        for (const key in player.tesseractBlessings) {\n            player.tesseractBlessings[key as keyof Player['tesseractBlessings']] += blessings[key as keyof typeof blessings].weight * toSpendDiv20;\n        }\n        // Then, the remaining tesseract will be opened, simulating the probability [RNG Element]\n        for (let i = 0; i < toSpendModulo; i++) {\n            const num = 100 * Math.random();\n            for (const key in player.tesseractBlessings) {\n                if (blessings[key as keyof typeof blessings].pdf(num)) {\n                    player.tesseractBlessings[key as keyof Player['tesseractBlessings']] += 1;\n                }\n            }\n        }\n\n        calculateTesseractBlessings();\n        const extraCubeBlessings = Math.floor(12 * toSpend * player.researches[153])\n        player.wowCubes.add(extraCubeBlessings);\n        player.wowCubes.open(extraCubeBlessings, false)\n    }\n}\n\nexport class WowHypercubes extends Cube {\n    constructor(amount = Number(player.wowHypercubes)) {\n        super('wowHypercubes', amount);\n    }\n\n    open(value: number, max = false) {\n        const toSpend = max ? Number(this) : Math.min(Number(this), value);\n\n        player.wowHypercubes.sub(toSpend);\n        player.hypercubeOpenedDaily += toSpend\n\n        const quarkMult = (player.shopUpgrades.hypercubeToQuark) ? 1.5 : 1;\n        const gainQuarks = this.checkQuarkGain(10, quarkMult, player.hypercubeOpenedDaily);\n        const actualQuarksGain = Math.max(0, gainQuarks - player.hypercubeQuarkDaily)\n        player.hypercubeQuarkDaily += actualQuarksGain\n        player.worlds.add(actualQuarksGain, false);\n\n        const toSpendModulo = toSpend % 20;\n        const toSpendDiv20 = Math.floor(toSpend/20)\n\n        // If you're opening more than 20 Hypercubes, it will consume all Hypercubes until remainder mod 20, giving expected values.\n        for (const key in player.hypercubeBlessings) {\n            player.hypercubeBlessings[key as keyof Player['hypercubeBlessings']] += blessings[key as keyof typeof blessings].weight * toSpendDiv20;\n        }\n        // Then, the remaining hypercubes will be opened, simulating the probability [RNG Element]\n        for (let i = 0; i < toSpendModulo; i++) {\n            const num = 100 * Math.random();\n            for (const key in player.hypercubeBlessings) {\n                if (blessings[key as keyof typeof blessings].pdf(num)) {\n                    player.hypercubeBlessings[key as keyof Player['hypercubeBlessings']] += 1;\n                }\n            }\n        }\n\n        calculateHypercubeBlessings();\n        const extraTesseractBlessings = Math.floor(100 * toSpend * player.researches[153])\n        player.wowTesseracts.add(extraTesseractBlessings);\n        player.wowTesseracts.open(extraTesseractBlessings, false)\n    }\n}\n\nexport class WowPlatonicCubes extends Cube {\n    constructor(amount = Number(player.wowPlatonicCubes)) {\n        super('wowPlatonicCubes', amount);\n    }\n\n    open(value: number, max = false) {\n        const toSpend = max ? Number(this) : Math.min(Number(this), value);\n\n        player.wowPlatonicCubes.sub(toSpend);\n        player.platonicCubeOpenedDaily += toSpend;\n\n        const quarkMult = 1.5 // There's no platonic to quark upgrade, default as 1.5\n        const gainQuarks = this.checkQuarkGain(15, quarkMult, player.platonicCubeOpenedDaily);\n        const actualQuarksGain = Math.max(0, gainQuarks - player.platonicCubeQuarkDaily);\n        player.platonicCubeQuarkDaily += actualQuarksGain;\n        player.worlds.add(actualQuarksGain, false);\n\n        let toSpendModulo = toSpend % 40000;\n        const toSpendDiv40000 = Math.floor(toSpend / 40000);\n\n        //If you're opening more than 40,000 Platonics, it will consume all Platonics until remainder mod 40,000, giving expected values.\n        for (const key in player.platonicBlessings) {\n            player.platonicBlessings[key as keyof Player['platonicBlessings']] += platonicBlessings[key as keyof typeof platonicBlessings].weight * toSpendDiv40000;\n            if (platonicBlessings[key as keyof typeof platonicBlessings].weight === 1 && player.cubeUpgrades[64] > 0) {\n                player.platonicBlessings[key as keyof Player['platonicBlessings']] += toSpendDiv40000 // Doubled!\n            }\n        }\n        //Then, the remaining hypercube will be opened, simulating the probability [RNG Element]\n        const RNGesus = ['hypercubeBonus', 'taxes', 'scoreBonus', 'globalSpeed']\n        for (let i = 0; i < RNGesus.length; i++) {\n            const num = Math.random();\n            if (toSpendModulo / 40000 >= num && toSpendModulo !== 0) {\n                player.platonicBlessings[RNGesus[i] as keyof Player['platonicBlessings']] += 1;\n                toSpendModulo -= 1\n            }\n        }\n        const gainValues = [Math.floor(33 * toSpendModulo / 100), Math.floor(33 * toSpendModulo / 100), Math.floor(33 * toSpendModulo / 100), Math.floor(396 * toSpendModulo / 40000)]\n        const commonDrops = ['cubes', 'tesseracts', 'hypercubes', 'platonics'] as const;\n        for (let i = 0; i < commonDrops.length; i++) {\n            player.platonicBlessings[commonDrops[i]] += gainValues[i]\n            toSpendModulo -= gainValues[i]\n        }\n\n        for (let i = 0; i < toSpendModulo; i++) {\n            const num = 100 * Math.random();\n            for (const key in player.platonicBlessings) {\n                if (platonicBlessings[key as keyof typeof platonicBlessings].pdf(num)) {\n                    player.platonicBlessings[key as keyof Player['platonicBlessings']] += 1;\n                }\n            }\n        }\n        calculatePlatonicBlessings();\n        if (player.achievements[271] > 0) {\n            const extraHypercubes = Math.floor(toSpend * Math.max(0, Math.min(1, (Decimal.log(player.ascendShards.add(1), 10) - 1e5) / 9e5)))\n            player.wowHypercubes.add(extraHypercubes);\n            player.wowHypercubes.open(extraHypercubes, false)\n        }\n    }\n}\n", "export const version = '\"3.0.0\": April 1, 2023: Blueberries!';\n\n/**\n * PSEUDO DO NOT CHANGE THIS LINE\n * PSEUDO DO NOT CHANGE THIS LINE\n * PSEUDO DO NOT CHANGE THIS LINE\n * PSEUDO DO NOT CHANGE THIS LINE\n * PSEUDO DO NOT CHANGE THIS LINE\n * PSEUDO DO NOT CHANGE THIS LINE\n */\n// eslint-disable-next-line\nexport const testing: boolean = false;\nexport const lastUpdated = new Date(Date.UTC(2023, 3, 1, 20, 19, 15));\n/**\n * CHANGE THIS ONE INSTEAD\n */\n// eslint-disable-next-line\nexport const prod: boolean = true\n", "import { player, saveSynergy, blankSave, reloadShit, format, saveCheck } from './Synergism';\nimport { octeractGainPerSecond } from './Calculate';\nimport { testing, version } from './Config';\nimport { cleanString, getElementById, productContents, sumContents } from './Utility';\nimport LZString from 'lz-string';\nimport { achievementaward } from './Achievements';\nimport type { Player } from './types/Synergism';\nimport { Synergism } from './Events';\nimport { Alert, Confirm, Prompt } from './UpdateHTML';\nimport { quarkHandler } from './Quark';\nimport { shopData } from './Shop';\nimport { addTimers } from './Helper';\nimport { toggleSubTab, toggleTabs } from './Toggles';\nimport { btoa } from './Utility';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport localforage from 'localforage';\nimport { Globals as G } from './Variables';\nimport { singularityData } from './singularity';\nimport { getEvent } from './Event';\nimport { synergismStage } from './Statistics';\nimport ClipboardJS from 'clipboard';\nimport i18next from 'i18next';\n\nconst format24 = new Intl.DateTimeFormat('EN-GB', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    hour12: false,\n    minute: '2-digit',\n    second: '2-digit'\n})\nconst format12 = new Intl.DateTimeFormat('EN-GB', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    hour12: true,\n    minute: '2-digit',\n    second: '2-digit'\n})\n\nconst hour = 3600000;\n\nconst getRealTime = (type = 'default', use12 = false) => {\n    const format = use12 ? format12 : format24;\n    const datePartsArr = format\n        .formatToParts(new Date())\n        .filter((x) => x.type !== 'literal')\n        .map(p => ({ [p.type]: p.value }));\n\n    const dateParts = Object.assign({}, ...datePartsArr) as Record<string, string>;\n\n    const period = use12 ? ` ${dateParts.dayPeriod.toUpperCase()}` : '';\n    const weekday = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\n    switch (type) {\n        case 'default': return `${dateParts.year}-${dateParts.month}-${dateParts.day} ${dateParts.hour}_${dateParts.minute}_${dateParts.second}${period}`;\n        case 'short': return `${dateParts.year}${dateParts.month}${dateParts.day}${dateParts.hour}${dateParts.minute}${dateParts.second}`;\n        case 'year': return `${dateParts.year}`;\n        case 'month': return `${dateParts.month}`;\n        case 'day': return `${dateParts.day}`;\n        case 'hour': return `${dateParts.hour}`;\n        case 'minute': return `${dateParts.minute}`;\n        case 'second': return `${dateParts.second}`;\n        case 'period': return `${dateParts.dayPeriod.toUpperCase()}`;\n        case 'weekday': return `${weekday[new Date().getUTCDay()]}`;\n        default: return type;\n    }\n}\n\nexport const updateSaveString = (input: HTMLInputElement) => {\n    const value = input.value.slice(0, 100);\n    player.saveString = value === '' ? blankSave.saveString : cleanString(value);\n    (DOMCacheGetOrSet('saveStringInput') as HTMLInputElement).value = player.saveString;\n}\n\nexport const getVer = () => /[\\d?=.]+/.exec(version)?.[0] ?? version\n\nexport const saveFilename = () => {\n    const s = player.saveString\n    const t = s.replace(/\\$(.*?)\\$/g, (_, b) => {\n        switch (b) {\n            case 'VERSION': return `v${version}`;\n            case 'TIME': return getRealTime();\n            case 'TIME12': return getRealTime(undefined, true);\n            case 'SING': return ('Singularity ' + player.singularityCount);\n            case 'SINGS': return ('' + player.singularityCount);\n            case 'VER': return getVer();\n            case 'TIMES': return getRealTime('short');\n            case 'YEAR': return getRealTime('year');\n            case 'Y': return getRealTime('year');\n            case 'MONTH': return getRealTime('month');\n            case 'M': return getRealTime('month');\n            case 'DAY': return getRealTime('day');\n            case 'D': return getRealTime('day');\n            case 'HOUR': return getRealTime('hour');\n            case 'H': return getRealTime('hour');\n            case 'H12': return getRealTime('hour', true);\n            case 'MINUTE': return getRealTime('minute');\n            case 'MI': return getRealTime('minute');\n            case 'SECOND': return getRealTime('second');\n            case 'S': return getRealTime('second');\n            case 'PERIOD': return getRealTime('period', true);\n            case 'P': return getRealTime('period', true);\n            case 'WEEKDAY': return getRealTime('weekday');\n            case 'W': return getRealTime('weekday');\n            case 'DATE': return '' + Date.now();\n            case 'DATES': return '' + Math.floor(Date.now() / 1000);\n            case 'QUARK': return '' + Math.floor(Number(player.worlds));\n            case 'QUARKS': return format(Number(player.worlds));\n            case 'GQ': return '' + Math.floor(player.goldenQuarks);\n            case 'GQS': return format(player.goldenQuarks);\n            case 'STAGE': return synergismStage(0);\n            default: return `${b}`;\n        }\n    });\n\n    return cleanString(t)\n}\n\nexport const exportSynergism = async () => {\n    player.offlinetick = Date.now();\n    const quarkData = quarkHandler();\n\n    let bonusGQMultiplier = 1\n    bonusGQMultiplier *= 1 + player.worlds.BONUS / 100\n    bonusGQMultiplier *= (player.highestSingularityCount >= 100 ? 1 + player.highestSingularityCount / 50 : 1)\n    if (+player.singularityUpgrades.goldenQuarks3.getEffect().bonus > 0) {\n        player.goldenQuarks += Math.floor(player.goldenQuarksTimer / (3600 / +player.singularityUpgrades.goldenQuarks3.getEffect().bonus)) * bonusGQMultiplier;\n        player.goldenQuarksTimer = player.goldenQuarksTimer % (3600 / +player.singularityUpgrades.goldenQuarks3.getEffect().bonus)\n    }\n    if (quarkData.gain >= 1) {\n        player.worlds.add(quarkData.gain);\n        player.quarkstimer = (player.quarkstimer % (3600 / quarkData.perHour))\n    }\n\n    const saved = await saveSynergy();\n\n    if (!saved) {\n        return\n    }\n\n    const toClipboard = getElementById<HTMLInputElement>('saveType').checked;\n    const save =\n        await localforage.getItem<Blob>('Synergysave2') ??\n        localStorage.getItem('Synergysave2');\n    const saveString = typeof save === 'string' ? save : await save?.text();\n\n    if (saveString === undefined) {\n        return Alert('How?');\n    }\n\n    if (toClipboard) {\n        try {\n            // This can fail for two reasons:\n            // - TypeError (browser doesn't support this feature)\n            // - Failed to copy (browser limitation; Safari)\n            await navigator.clipboard.writeText(saveString)\n            DOMCacheGetOrSet('exportinfo').textContent = i18next.t('importexport.copiedSave');\n        } catch (err) {\n            // So we fallback to the deprecated way of doing it,\n            // which isn't limited by any browser.\n\n            // Old/bad browsers (legacy Edge, Safari because of limitations)\n            const textArea = document.createElement('textarea');\n\n            textArea.setAttribute('style', 'top: 0; left: 0; position: fixed;');\n            // For future Khafra: html5 attributes have no limit in length\n            textArea.setAttribute('data-clipboard-text', saveString)\n\n            document.body.appendChild(textArea);\n            textArea.focus()\n            textArea.select()\n\n            const clipboard = new ClipboardJS(textArea)\n\n            const cleanup = () => {\n                clipboard.destroy()\n                document.body.removeChild(textArea)\n            }\n\n            clipboard.on('success', () => {\n                DOMCacheGetOrSet('exportinfo').textContent = i18next.t('importexport.copiedSave');\n                cleanup()\n            })\n\n            clipboard.on('error', () => {\n                DOMCacheGetOrSet('exportinfo').textContent = i18next.t('importexport.exportFailed');\n                void Alert(i18next.t('importexport.unableCopySave')).finally(cleanup)\n            })\n        }\n    } else {\n        const a = document.createElement('a');\n        a.setAttribute('href', 'data:text/plain;charset=utf-8,' + saveString);\n        a.setAttribute('download', saveFilename());\n        a.setAttribute('id', 'downloadSave');\n        // \"Starting in Firefox 75, the click() function works even when the element is not attached to a DOM tree.\"\n        // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click\n        // so let's have it work on older versions of Firefox, doesn't change functionality.\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        DOMCacheGetOrSet('exportinfo').textContent = i18next.t('importexport.copiedFile')\n    }\n    setTimeout(() => DOMCacheGetOrSet('exportinfo').textContent = '', 15_000);\n}\n\nexport const reloadDeleteGame = async () => {\n    await Alert(i18next.t('importexport.reloadDeletePrompt'));\n    await resetGame();\n}\n\nexport const resetGame = async () => {\n    const a = window.crypto.getRandomValues(new Uint16Array(1))[0] % 16;\n    const b = window.crypto.getRandomValues(new Uint16Array(1))[0] % 16;\n\n    const result = await Prompt(i18next.t('importexport.resetPrompt', { a, b, sum: a + b }))\n    if (result === null || Number(result) !== a + b) {\n        return Alert(i18next.t('importexport.wrongAnswer'));\n    }\n\n    const hold = Object.assign({}, blankSave, {\n        codes: Array.from(blankSave.codes)\n    }) as Player;\n    //Reset Displays\n    toggleTabs('buildings');\n    toggleSubTab(1, 0);\n    toggleSubTab(4, 0); // Set 'runes' subtab back to 'runes' tab\n    toggleSubTab(8, 0); // Set 'cube tribues' subtab back to 'cubes' tab\n    toggleSubTab(9, 0); // set 'corruption main'\n    toggleSubTab(10, 0); // set 'singularity main'\n    toggleSubTab(-1, 0); // set 'statistics main'\n    //Import Game\n    await importSynergism(btoa(JSON.stringify(hold)), true);\n}\n\nexport const importSynergism = async (input: string | null, reset = false) => {\n    if (typeof input !== 'string') {\n        return Alert(i18next.t('importexport.unableImport'));\n    }\n\n    const d = LZString.decompressFromBase64(input);\n    const f = d ? JSON.parse(d) as Player : JSON.parse(atob(input)) as Player;\n\n    if (\n        (f.exporttest === 'YES!' || f.exporttest === true) ||\n        (f.exporttest === false && testing) ||\n        (f.exporttest === 'NO!' && testing)\n    ) {\n        const saveString = btoa(JSON.stringify(f));\n\n        if (saveString === null) {\n            return Alert(i18next.t('importexport.unableImport'));\n        }\n\n        saveCheck.canSave = false;\n        const item = new Blob([saveString], { type: 'text/plain' });\n        await localforage.setItem<Blob>('Synergysave2', item);\n\n        localStorage.setItem('saveScumIsCheating', Date.now().toString());\n\n        await reloadShit(reset);\n        saveCheck.canSave = true;\n        return;\n    } else {\n        return Alert(i18next.t('importexport.loadTestInLive'));\n    }\n}\n\nexport const promocodesInfo = async (input: string) => {\n    const textElement = DOMCacheGetOrSet('promocodeinfo');\n    let textMessage = `'${input}': `;\n    let availableUses = 0;\n    switch (input) {\n        case 'daily':\n            if (player.dailyCodeUsed) {\n                textMessage += i18next.t('importexport.daily0Uses')\n            } else {\n                textMessage += i18next.t('importexport.daily1Uses')\n            }\n            break;\n        case 'add':\n            availableUses = addCodeAvailableUses();\n            if (availableUses === 0) {\n                textMessage += i18next.t('importexport.add0Uses', {\n                    x: 0,\n                    y: format(addCodeTimeToNextUse(), 0)\n                })\n            } else if (availableUses !== 1) {\n                textMessage += i18next.t('importexport.addUses', { x: availableUses })\n            } else {\n                textMessage += i18next.t('importexport.add1Uses', { x: availableUses })\n            }\n\n            break;\n        case 'time':\n            availableUses = timeCodeAvailableUses();\n\n            if (availableUses === 0) {\n                textMessage += i18next.t('importexport.add0Uses', {\n                    x: 0,\n                    y: format(timeCodeTimeToNextUse(), 0)\n                })\n            } else {\n                textMessage += i18next.t('importexport.timeMultiplier', {\n                    x: availableUses,\n                    y: format(timeCodeRewardMultiplier(), 2, true)\n                })\n            }\n\n            break;\n        default:\n            textMessage = '';\n    }\n\n    textElement.textContent = textMessage;\n}\n\nexport const promocodesPrompt = async () => {\n    const input = await Prompt(i18next.t('importexport.promocodePrompt'));\n    void promocodes(input);\n}\n\nexport const promocodes = async (input: string | null, amount?: number) => {\n    const el = DOMCacheGetOrSet('promocodeinfo');\n\n    if (input === null) {\n        return Alert(i18next.t('importexport.comeBackSoon'))\n    }\n    if (input === 'derpderp' && !player.codes.get(45) && G['isEvent'] && getEvent().name === 'Derpmas 2022: Gift of Gamebreak!') {\n\n        if (!player.dailyCodeUsed) {\n            return Alert('This event code gives you another usage of code \\'daily\\'. Please use that code and try this event code again.')\n        }\n\n        player.codes.set(45, true);\n        player.quarkstimer = quarkHandler().maxTime;\n        player.goldenQuarksTimer = 3600 * 24;\n        addTimers('ascension', 4 * 3600);\n        player.dailyCodeUsed = false;\n\n        if (player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0) {\n            player.hepteractCrafts.quark.CAP *= 2;\n            player.hepteractCrafts.quark.BAL += Math.min(1e13, player.hepteractCrafts.quark.CAP/2)\n        }\n        if (player.highestSingularityCount > 0) {\n            player.singularityUpgrades.goldenQuarks1.freeLevels += 1 + Math.floor(player.highestSingularityCount / 25);\n            player.singularityUpgrades.goldenQuarks2.freeLevels += 1 + Math.floor(player.highestSingularityCount / 25);\n            player.singularityUpgrades.goldenQuarks3.freeLevels += 1 + Math.floor(player.highestSingularityCount / 25);\n            if (player.singularityUpgrades.octeractUnlock.getEffect().bonus) {\n                player.octeractUpgrades.octeractAscensionsOcteractGain.freeLevels += 0.2\n            }\n        }\n\n        return Alert(`Happy New Year 2023!!!! Your Quark timer(s) have been replenished and you have been given 4 real life hours of Ascension progress! Your daily code has also been reset for you.\n                      ${(player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0)? 'Derpsmith also hacked your save to expand Quark Hepteract for free, and (to a limit) automatically filled the extra amount! What a generous, handsome fella.' : ''}\n                      ${(player.highestSingularityCount > 0) ? 'You were also given free levels of GQ1-3!' : ''} \n                      ${(player.singularityUpgrades.octeractUnlock.getEffect().bonus) ? 'Finally, you were given free levels of Octeract Accumulator!': ''}`)\n    }\n    if (input === 'synergism2021' && !player.codes.get(1)) {\n        player.codes.set(1, true);\n        player.runeshards += 25;\n        player.worlds.add(50);\n        el.textContent = i18next.t('importexport.promocodes.synergism2021')\n    } else if (input === ':unsmith:' && player.achievements[243] < 1) {\n        achievementaward(243);\n        el.textContent = i18next.t('importexport.promocodes.unsmith')\n    } else if (input === ':antismith:' && player.achievements[244] < 1) {\n        achievementaward(244);\n        el.textContent = i18next.t('importexport.promocodes.antismith')\n    } else if (input === 'Khafra' && !player.codes.get(26)) {\n        player.codes.set(26, true);\n        const quarks = Math.floor(Math.random() * (400 - 100 + 1) + 100);\n        player.worlds.add(quarks);\n        el.textContent = i18next.t('importexport.promocodes.khafra', {\n            x: player.worlds.applyBonus(quarks)\n        })\n    } else if (input.toLowerCase() === 'daily' && !player.dailyCodeUsed) {\n        player.dailyCodeUsed = true;\n        let rewardMessage = i18next.t('importexport.promocodes.daily.message')\n\n        const rewards = dailyCodeReward();\n        const quarkMultiplier = 1 + Math.min(49, player.highestSingularityCount)\n\n        let actualQuarkAward = player.worlds.applyBonus(rewards.quarks * quarkMultiplier);\n        if (actualQuarkAward > 1e5) {\n            actualQuarkAward = Math.pow(1e5, 0.75) * Math.pow(actualQuarkAward, 0.25)\n        }\n        player.worlds.add(actualQuarkAward, false)\n        player.goldenQuarks += rewards.goldenQuarks\n\n        rewardMessage += `\\n${format(actualQuarkAward, 0, true)} Quarks`\n        if (rewards.goldenQuarks > 0) {\n            rewardMessage += `\\n${format(rewards.goldenQuarks, 0, true)} Golden Quarks`\n        }\n        await Alert(rewardMessage);\n\n        if (player.highestSingularityCount > 0) {\n            const upgradeDistribution: Record<\n            'goldenQuarks1' | 'goldenQuarks2' | 'goldenQuarks3' | 'singCubes1' | 'singCubes2' | 'singCubes3' |\n            'singOfferings1' | 'singOfferings2' | 'singOfferings3' |\n            'singObtainium1' | 'singObtainium2' | 'singObtainium3' | 'ascensions',\n            {value: number, pdf: (x: number) => boolean}> = {\n                goldenQuarks3: {value: 0.2, pdf: (x: number) => 0 <= x && x <= 1},\n                goldenQuarks2: {value: 0.2, pdf: (x: number) => 1 <= x && x <= 3},\n                goldenQuarks1: {value: 0.2, pdf: (x: number) => 3 <= x && x <= 10},\n                singCubes3: {value: 0.25, pdf: (x: number) => 10 < x && x <= 15},\n                singObtainium3: {value: 0.25, pdf: (x: number) => 15 < x && x <= 20},\n                singOfferings3: {value: 0.25, pdf: (x: number) => 20 < x && x <= 25},\n                singCubes2: {value: 0.5, pdf: (x: number) => 25 < x && x <= 80},\n                singObtainium2: {value: 0.5, pdf: (x: number) => 80 < x && x <= 140},\n                singOfferings2: {value: 0.5, pdf: (x: number) => 140 < x && x <= 200},\n                singCubes1: {value: 1, pdf: (x: number) => 200 < x && x <= 400},\n                singObtainium1: {value: 1, pdf: (x: number) => 400 < x && x <= 600},\n                singOfferings1: {value: 1, pdf: (x: number) => 600 < x && x <= 800},\n                ascensions: {value: 1, pdf: (x: number) => 800 < x && x <= 1000}\n            }\n            let rolls = 3 * Math.sqrt(player.highestSingularityCount)\n            rolls += +player.octeractUpgrades.octeractImprovedDaily.getEffect().bonus\n            rolls += player.shopUpgrades.shopImprovedDaily2\n            rolls += player.shopUpgrades.shopImprovedDaily3\n            rolls += player.shopUpgrades.shopImprovedDaily4\n            rolls += (+player.singularityUpgrades.platonicPhi.getEffect().bonus *\n                        Math.min(50, 5 * player.singularityCounter / (3600 * 24)))\n            rolls += +player.octeractUpgrades.octeractImprovedDaily3.getEffect().bonus\n            rolls *= +player.octeractUpgrades.octeractImprovedDaily2.getEffect().bonus\n            rolls *= 1 + +player.octeractUpgrades.octeractImprovedDaily3.getEffect().bonus / 200\n\n            if (player.highestSingularityCount >= 200) {\n                rolls *= 2\n            }\n\n            rolls = Math.floor(rolls)\n\n            const keys = Object\n                .keys(player.singularityUpgrades)\n                .filter(key => key in upgradeDistribution) as (keyof typeof upgradeDistribution)[];\n\n            rewardMessage = i18next.t('importexport.promocodes.daily.message2')\n            // The same upgrade can be drawn several times, so we save the sum of the levels gained, to display them only once at the end\n            const freeLevels: Record<string, number> = {}\n            for (let i = 0; i < rolls; i++) {\n                const num = 1000 * Math.random();\n                for (const key of keys) {\n                    if (upgradeDistribution[key].pdf(num)) {\n                        player.singularityUpgrades[key].freeLevels += upgradeDistribution[key].value\n                        freeLevels[key] ? freeLevels[key] += upgradeDistribution[key].value : freeLevels[key] = upgradeDistribution[key].value\n                    }\n                }\n            }\n\n            if (player.highestSingularityCount >= 20) {\n                player.singularityUpgrades.goldenQuarks1.freeLevels += 0.2\n                freeLevels['goldenQuarks1'] ? freeLevels['goldenQuarks1'] += 0.2 : freeLevels['goldenQuarks1'] = 0.2\n                player.singularityUpgrades.goldenQuarks2.freeLevels += 0.2\n                freeLevels['goldenQuarks2'] ? freeLevels['goldenQuarks2'] += 0.2 : freeLevels['goldenQuarks2'] = 0.2\n                player.singularityUpgrades.goldenQuarks3.freeLevels += 1\n                freeLevels['goldenQuarks3'] ? freeLevels['goldenQuarks3'] += 1 : freeLevels['goldenQuarks3'] = 1\n\n            }\n\n            if (player.highestSingularityCount >= 200) {\n                player.octeractUpgrades.octeractGain.freeLevels += (player.octeractUpgrades.octeractGain.level / 100)\n                freeLevels['octeractGain'] = player.octeractUpgrades.octeractGain.level / 100\n            }\n\n            if (player.highestSingularityCount >= 205) {\n                player.octeractUpgrades.octeractGain2.freeLevels += (player.octeractUpgrades.octeractGain2.level / 100)\n                freeLevels['octeractGain2'] = player.octeractUpgrades.octeractGain2.level / 100\n            }\n\n            for (const key of Object.keys(freeLevels)) {\n                rewardMessage += dailyCodeFormatFreeLevelMessage(key, freeLevels[key])\n            }\n            await Alert(rewardMessage);\n        }\n        return;\n    } else if (input.toLowerCase() === 'add') {\n        const availableUses = addCodeAvailableUses();\n        const maxUses = addCodeMaxUses().total;\n        const timeToNextUse = format(addCodeTimeToNextUse(), 0);\n        const timeInterval = addCodeInterval().time;\n\n        if (availableUses < 1) {\n            el.textContent = i18next.t('importexport.noAddCodes', { x: timeToNextUse });\n            return;\n        }\n\n        let attemptsUsed: string | null = null;\n        if (amount) {\n            attemptsUsed = amount.toString();\n        } else {\n            attemptsUsed = await Prompt(i18next.t('importexport.useXAdds', { x: availableUses }));\n        }\n\n        if (attemptsUsed === null) {\n            return Alert(i18next.t('importexport.cancelAdd'));\n        }\n        const toUse = Number(attemptsUsed);\n        if (\n            Number.isNaN(toUse) ||\n            !Number.isInteger(toUse) ||\n            toUse <= 0\n        ) {\n            return Alert(i18next.t('general.validation.invalidNumber'));\n        }\n\n        const addEffects = addCodeBonuses();\n\n        const realAttemptsUsed = Math.min(availableUses, toUse);\n        const actualQuarks = Math.floor(addEffects.quarks * realAttemptsUsed)\n        const [first, second] = window.crypto.getRandomValues(new Uint8Array(2));\n\n        //Allows storage of up to (24 + 2 * calc2 levels) Add Codes, lol!\n        const v = Math.max(Date.now() - (maxUses - realAttemptsUsed) * timeInterval, player.rngCode + timeInterval * realAttemptsUsed)\n        const remaining = Math.floor((Date.now() - v) / timeInterval)\n        const timeToNext = Math.floor((timeInterval - (Date.now() - v - timeInterval * remaining)) / 1000)\n\n        // Calculator 3: Adds ascension timer.\n        const ascensionTimer = realAttemptsUsed * addEffects.ascensionTimer;\n        const ascensionTimerText = (player.shopUpgrades.calculator3 > 0)\n            ? i18next.t('importexport.promocodes.add.calculator3', { x: format(ascensionTimer) })\n            : '';\n\n        // Calculator 5: Adds GQ export timer.\n        const gqTimer = realAttemptsUsed * addEffects.gqTimer;\n        const gqTimerText = (player.shopUpgrades.calculator5 > 0)\n            ? i18next.t('importexport.promocodes.add.calculator5', { x: format(gqTimer) })\n            : '';\n\n        // Calculator 6: Octeract Generation\n        const octeractTime = realAttemptsUsed * addEffects.octeractTime;\n        const octeractTimeText = (player.shopUpgrades.calculator6 > 0)\n            ? i18next.t('importexport.promocodes.add.calculator6', { x: format(octeractTime) })\n            : '';\n\n        // Midas' Millenium-Aged Gold perk\n        const freeLevelsText = (player.highestSingularityCount >= 150)\n            ? i18next.t('importexport.promocodes.add.freeLevel', {\n                x: format(0.01 * realAttemptsUsed, 2),\n                y: format(0.05 * realAttemptsUsed, 2)\n            })\n            : '';\n\n        // Calculator Maxed: you don't need to insert anything!\n        if (player.shopUpgrades.calculator === shopData['calculator'].maxLevel) {\n            player.worlds.add(actualQuarks);\n            addTimers('ascension', ascensionTimer)\n            player.goldenQuarksTimer += gqTimer\n            addTimers('octeracts', octeractTime)\n\n            if (player.highestSingularityCount >= 150) {\n                player.singularityUpgrades.goldenQuarks1.freeLevels += 0.01 * realAttemptsUsed\n                player.singularityUpgrades.goldenQuarks3.freeLevels += 0.05 * realAttemptsUsed\n            }\n\n            player.rngCode = v;\n            if (amount) {\n                // No message when using Add x1 Special action, we refresh the info message\n                void promocodesInfo('add')\n                return\n            } else {\n                return Alert(i18next.t('importexport.promocodes.add.calculatorMaxed', {\n                    a: first,\n                    b: second,\n                    c: first + second,\n                    d: player.worlds.toString(actualQuarks),\n                    e: ascensionTimerText,\n                    f: gqTimerText,\n                    g: octeractTimeText,\n                    h: freeLevelsText,\n                    i: remaining,\n                    j: timeToNext.toLocaleString()\n                }))\n            }\n        }\n\n        // If your calculator isn't maxed but has levels, it will provide the solution.\n        const options = {\n            w: player.worlds.toString(actualQuarks),\n            x: first,\n            y: second,\n            z: first + second\n        }\n\n        const promptText = (player.shopUpgrades.calculator > 0)\n            ? i18next.t('importexport.promocodes.add.calculatorSolution', options)\n            : i18next.t('importexport.promocodes.add.calculatorPrompt', options)\n\n        const addPrompt = await Prompt(promptText);\n\n        if (addPrompt === null) {\n            return Alert(i18next.t('importexport.promocodes.add.cancelled'));\n        }\n\n        player.rngCode = v;\n\n        if (first + second === +addPrompt) {\n            player.worlds.add(actualQuarks);\n            addTimers('ascension', ascensionTimer)\n            player.goldenQuarksTimer += gqTimer\n            addTimers('octeracts', octeractTime)\n\n            await Alert(i18next.t('importexport.promocodes.add.reward', {\n                a: player.worlds.toString(actualQuarks),\n                b: ascensionTimerText,\n                c: gqTimerText,\n                d: octeractTimeText,\n                e: remaining,\n                f: timeToNext.toLocaleString(navigator.language)\n            }))\n        } else {\n            await Alert(i18next.t('importexport.promocodes.add.wrong', {\n                w: addPrompt,\n                x: first + second,\n                y: remaining,\n                z: timeToNext.toLocaleString(navigator.language)\n            }))\n        }\n\n    } else if (input === 'sub') {\n        const amount = 1 + window.crypto.getRandomValues(new Uint16Array(1))[0] % 16; // [1, 16]\n        const quarks = Number(player.worlds);\n        await Alert(i18next.t('importexport.promocodes.sub.subbed', { x: amount }));\n\n        if (quarks < amount) {\n            await Alert(i18next.t('importexport.promocodes.sub.gave', {\n                x: amount - quarks,\n                y: amount\n            }))\n        }\n\n        player.worlds.sub(quarks < amount ? amount - quarks : amount);\n    } else if (input === 'gamble') {\n        if (\n            typeof player.skillCode === 'number' ||\n            typeof localStorage.getItem('saveScumIsCheating') === 'string'\n        ) {\n            if (\n                (Date.now() - player.skillCode!) / 1000 < 3600 ||\n                (Date.now() - Number(localStorage.getItem('saveScumIsCheating'))) / 1000 < 3600\n            ) {\n                return el.textContent = i18next.t('importexport.promocodes.gamble.wait')\n            }\n        }\n\n        const confirmed = await Confirm(i18next.t('importexport.promocodes.gamble.confirm'))\n        if (!confirmed) {\n            return el.textContent = i18next.t('importexport.promocodes.gamble.cancelled')\n        }\n\n        const bet = Number(await Prompt(i18next.t('importexport.promocodes.gamble.betPrompt')));\n        if (Number.isNaN(bet) || bet <= 0) {\n            return el.textContent = i18next.t('general.validation.zeroOrLess')\n        } else if (bet > 1e4) {\n            return el.textContent = i18next.t('importexport.promocodes.gamble.cheaters')\n        } else if (Number(player.worlds) < bet) {\n            return el.textContent = i18next.t('general.validation.moreThanPlayerHas')\n        }\n\n        localStorage.setItem('saveScumIsCheating', Date.now().toString());\n        const dice = window.crypto.getRandomValues(new Uint8Array(1))[0] % 6 + 1; // [1, 6]\n\n        if (dice === 1) {\n            const won = bet * .25; // lmao\n            player.worlds.add(won, false);\n\n            player.skillCode = Date.now();\n            return el.textContent = i18next.t('importexport.promocodes.gamble.won', { x: won })\n        }\n\n        player.worlds.sub(bet);\n        el.textContent = i18next.t('importexport.promocodes.gamble.lost', { x: bet })\n    } else if (input === 'time') {\n        const availableUses = timeCodeAvailableUses();\n        if (availableUses === 0) {\n            return Alert(i18next.t('importexport.promocodes.time.wait'))\n        }\n\n        const rewardMult = timeCodeRewardMultiplier();\n\n        const random = Math.random() * 15000; // random time within 15 seconds\n        const start = Date.now();\n        const playerConfirmed = await Confirm(i18next.t('importexport.promocodes.time.confirm', {\n            x: format(2500 + 125 * player.cubeUpgrades[61], 0, true),\n            y: format(rewardMult, 2, true)\n        }))\n\n        if (playerConfirmed) {\n            const diff = Math.abs(Date.now() - (start + random));\n            player.promoCodeTiming.time = Date.now();\n\n            if (diff <= (2500 + 125 * player.cubeUpgrades[61])) {\n                const reward = Math.floor(Math.min(1000, (125 + 25 * player.highestSingularityCount)) * (1 + player.cubeUpgrades[61] / 50));\n                let actualQuarkAward = player.worlds.applyBonus(reward)\n\n                if (actualQuarkAward > 66666) {\n                    actualQuarkAward = Math.pow(actualQuarkAward, 0.35) * Math.pow(66666, 0.65)\n                }\n\n                player.worlds.add(actualQuarkAward * rewardMult, false);\n                return Alert(i18next.t('importexport.promocodes.time.won', {\n                    x: format(actualQuarkAward * rewardMult, 0, true)\n                }))\n            } else {\n                return Alert(i18next.t('importexport.promocodes.time.lost'))\n            }\n        }\n    } else if (input === 'spoiler') {\n        const perSecond = octeractGainPerSecond()\n        if (perSecond > 1) {\n            return Alert(i18next.t('importexport.promocodes.spoiler.moreThan1', { x: format(perSecond, 2, true) }))\n        } else {\n            return Alert(i18next.t('importexport.promocodes.spoiler.one', { x: format(1 / perSecond, 2, true) }))\n        }\n\n    } else {\n        el.textContent = i18next.t('importexport.promocodes.invalid')\n    }\n\n    const saved = await saveSynergy(); // should fix refresh bug where you can continuously enter promocodes\n\n    if (!saved) {\n        return\n    }\n\n    Synergism.emit('promocode', input);\n\n    setTimeout(() => el.textContent = '', 15000);\n}\n\nconst addCodeSingularityPerkBonus = () : number => {\n    const levels = [10, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 235, 240]\n    let count = 0\n    for (let i = 0; i < levels.length; i++) {\n        if (player.highestSingularityCount >= levels[i]) {\n            count += 1\n            continue\n        } else {\n            break\n        }\n    }\n    return 1 + count / 5\n}\n\nexport const addCodeMaxUses = () => {\n    let calc5uses = Math.floor(player.shopUpgrades.calculator5 / 10);\n    if (player.shopUpgrades.calculator5 === shopData.calculator5.maxLevel) {\n        calc5uses += 6\n    }\n\n    const arr = [\n        24,                                                                                 // base\n        2 * player.shopUpgrades.calculator2,                                                // PL-AT X\n        player.shopUpgrades.calculator4 === shopData.calculator4.maxLevel ? 32 : 0,         // PL-AT \u03B4\n        calc5uses,                                                                          // PL-AT \u0393\n        player.shopUpgrades.calculator6 === shopData.calculator6.maxLevel ? 24 : 0          // PL_AT _\n    ];\n\n    let maxUses = sumContents(arr);\n\n    arr.push(addCodeSingularityPerkBonus());\n    maxUses *= addCodeSingularityPerkBonus();\n\n    return {\n        list: arr,\n        total: Math.ceil(maxUses)\n    }\n}\n\nexport const addCodeInterval = () => {\n    const arr = [\n        hour,  // base value\n        (1 - 0.04 * player.shopUpgrades.calculator4),\n        (1 - Math.min(.6, (player.highestSingularityCount >= 125 ? player.highestSingularityCount / 800 : 0)\n                            + (player.highestSingularityCount >= 200 ? player.highestSingularityCount / 800 : 0))),\n        player.runelevels[6] > 0 ? 0.8 : 1,\n        1 / addCodeSingularityPerkBonus()\n    ];\n\n    return {\n        list: arr,\n        time: productContents(arr)\n    }\n}\n\nexport const addCodeAvailableUses = (): number => {\n    const maxUses = addCodeMaxUses().total\n    const timeInterval = addCodeInterval().time\n\n    return Math.floor(Math.min(maxUses, (Date.now() - player.rngCode) / timeInterval));\n}\n\nexport const addCodeTimeToNextUse = (): number => {\n    const timeToFirst = Math.floor(addCodeInterval().time + player.rngCode - Date.now())/1000;\n\n    if (timeToFirst > 0) {\n        return timeToFirst;\n    } else if (addCodeAvailableUses() == addCodeMaxUses().total) {\n        return 0;\n    } else {\n        const addTimerElapsedTime = Date.now() - player.rngCode;\n        const remainder = addTimerElapsedTime - addCodeInterval().time * addCodeAvailableUses();\n\n        return Math.floor(addCodeInterval().time - remainder) / 1000;\n    }\n}\n\nexport const addCodeBonuses = () => {\n    const perkRewardDivisor = addCodeSingularityPerkBonus();\n\n    let commonQuarkMult = 1 + 0.14 * player.shopUpgrades.calculator // Calculator Shop Upgrade (+14% / level)\n    commonQuarkMult *= (player.shopUpgrades.calculator2 === shopData['calculator2'].maxLevel)? 1.25: 1; // Calculator 2 Max Level (+25%)\n    commonQuarkMult /= perkRewardDivisor\n\n    const sampledMult = Math.max(0.4 + 0.02 * player.shopUpgrades.calculator3, 2/5 + (window.crypto.getRandomValues(new Uint16Array(2))[0] % 128) / 640); // [0.4, 0.6], slightly biased in favor of 0.4. =)\n    const minMult = 0.4 + 0.02 * player.shopUpgrades.calculator3;\n    const maxMult = 0.6;\n\n    const quarkBase = commonQuarkMult * quarkHandler().perHour\n\n    // Calculator 3: Adds ascension timer.  Also includes Expert Pack multiplier.\n    const ascMult = (player.singularityUpgrades.expertPack.level > 0) ? 1.2 : 1;\n    const ascensionTimer = 60 * player.shopUpgrades.calculator3 * ascMult / perkRewardDivisor;\n\n    // Calculator 5: Adds GQ export timer.\n    const gqTimer = 6 * player.shopUpgrades.calculator5  / perkRewardDivisor;\n\n    // Calculator 6: Octeract Generation\n    const octeractTime = player.shopUpgrades.calculator6  / perkRewardDivisor;\n\n    return {\n        quarks: sampledMult * quarkBase, // The quarks to actually reward (if not for stats)\n        minQuarks: minMult * quarkBase,\n        maxQuarks: maxMult * quarkBase,\n        ascensionTimer: ascensionTimer,\n        gqTimer: gqTimer,\n        octeractTime: octeractTime\n    };\n}\n\nconst timeCodeAvailableUses = (): number => {\n    return ((Date.now() - player.promoCodeTiming.time) / 1000 < 900) ? 0 : 1;\n}\n\nconst timeCodeTimeToNextUse = (): number => {\n    return 900 - ((Date.now() - player.promoCodeTiming.time) / 1000);\n}\n\nconst timeCodeRewardMultiplier = (): number => {\n    return Math.min(24, (Date.now() - player.promoCodeTiming.time) / (1000 * 3600));\n}\n\nconst dailyCodeFormatFreeLevelMessage = (upgradeKey: string, freeLevelAmount: number): string => {\n    const upgradeNiceName = (upgradeKey in singularityData)\n        ? i18next.t(`singularity.data.${upgradeKey}.name`)\n        : i18next.t(`octeract.data.${upgradeKey}.name`);\n    return `\\n+${freeLevelAmount} extra levels of '${upgradeNiceName}'`;\n}\n\nconst dailyCodeReward = () => {\n    let quarks = 0\n    let goldenQuarks = 0\n\n    const ascended = player.ascensionCount > 0;\n    const singularity = player.highestSingularityCount > 0;\n    if (player.reincarnationCount > 0 || ascended || singularity) {\n        quarks += 20\n    }\n    if (player.challengecompletions[6] > 0 || ascended || singularity) {\n        quarks += 20\n    }  // 40\n    if (player.challengecompletions[7] > 0 || ascended || singularity) {\n        quarks += 30\n    } // 70\n    if (player.challengecompletions[8] > 0 || ascended || singularity) {\n        quarks += 30\n    } // 100\n    if (player.challengecompletions[9] > 0 || ascended || singularity) {\n        quarks += 40\n    } // 140\n    if (player.challengecompletions[10] > 0 || ascended || singularity) {\n        quarks += 60\n    } // 200\n    if (ascended || singularity) {\n        quarks += 50\n    } // 250\n    if (player.challengecompletions[11] > 0 || singularity) {\n        quarks += 50\n    } // 300\n    if (player.challengecompletions[12] > 0 || singularity) {\n        quarks += 50\n    } // 350\n    if (player.challengecompletions[13] > 0 || singularity) {\n        quarks += 50\n    } // 400\n    if (player.challengecompletions[14] > 0 || singularity) {\n        quarks += 100\n    } // 500\n    if (player.researches[200] === G['researchMaxLevels'][200]) {\n        quarks += 250\n    } // 750\n    if (player.cubeUpgrades[50] === 100000) {\n        quarks += 250\n    } // 1000\n    if (player.platonicUpgrades[5] > 0) {\n        quarks += 250\n    } // 1250\n    if (player.platonicUpgrades[10] > 0) {\n        quarks += 500\n    } // 1750\n    if (player.platonicUpgrades[15] > 0) {\n        quarks += 750\n    } // 2500\n    if (player.challenge15Exponent > 1e18) {\n        quarks += Math.floor(1000 * (Math.log10(player.challenge15Exponent) - 18))\n    } // at least 2500\n    if (player.platonicUpgrades[20] > 0) {\n        quarks += 2500\n    } // at least 5k\n\n    quarks *= 1 + 0.05 * player.shopUpgrades.shopImprovedDaily\n    quarks = Math.floor(quarks)\n\n    if (singularity) {\n        goldenQuarks += 2 + 3 * player.highestSingularityCount\n        goldenQuarks *= 1 + 0.2 * player.shopUpgrades.shopImprovedDaily2\n        goldenQuarks *= 1 + 0.15 * player.shopUpgrades.shopImprovedDaily3\n        goldenQuarks *= 1 + player.shopUpgrades.shopImprovedDaily4\n    }\n\n    return {\n        quarks: quarks,\n        goldenQuarks: goldenQuarks\n    }\n}\n\nexport const handleLastModified = (lastModified: number) => {\n    const localStorageFirstPlayed = localStorage.getItem('firstPlayed')\n    const lastModifiedDate = new Date(lastModified)\n\n    if (localStorageFirstPlayed === null) {\n        localStorage.setItem('firstPlayed', lastModifiedDate.toISOString())\n        return\n    }\n\n    const localFirstPlayedDate = new Date(localStorageFirstPlayed)\n\n    // The larger the ms value, the newer the file.\n    // So if the current oldest date is newer than the last modified date\n    // for the new file, set the oldest date to the last modified.\n    if (localFirstPlayedDate.getTime() > lastModifiedDate.getTime()) {\n        player.firstPlayed = lastModifiedDate.toISOString()\n        localStorage.setItem('firstPlayed', player.firstPlayed)\n    }\n}\n", "import { player, format } from './Synergism';\nimport { Alert, Confirm, Prompt, revealStuff } from './UpdateHTML';\nimport { calculatePowderConversion, calculateSummationNonLinear, calculateTimeAcceleration } from './Calculate';\nimport type { Player } from './types/Synergism';\nimport type { IMultiBuy } from './Cubes';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport i18next from 'i18next';\n\n/**\n * Standardization of metadata contained for each shop upgrade.\n */\nexport enum shopUpgradeTypes {\n    CONSUMABLE = 'consume',\n    UPGRADE = 'upgrade'\n}\n\ntype shopResetTier = 'Reincarnation' | 'Ascension' | 'Singularity' | 'SingularityVol2' | 'SingularityVol3' | 'SingularityVol4' | 'Exalt'\n\nexport interface IShopData {\n    price: number\n    priceIncrease: number\n    maxLevel: number\n    type: shopUpgradeTypes\n    refundable: boolean\n    refundMinimumLevel: number\n    tier: shopResetTier\n}\n\nexport const shopData: Record<keyof Player['shopUpgrades'], IShopData> = {\n    offeringPotion: {\n        price: 100,\n        priceIncrease: 0,\n        maxLevel: 999999999,\n        type: shopUpgradeTypes.CONSUMABLE,\n        refundable: false,\n        refundMinimumLevel: 0,\n        tier: 'Reincarnation'\n    },\n    obtainiumPotion: {\n        tier: 'Reincarnation',\n        price: 100,\n        priceIncrease: 0,\n        maxLevel: 999999999,\n        type: shopUpgradeTypes.CONSUMABLE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    offeringEX: {\n        tier: 'Reincarnation',\n        price: 150,\n        priceIncrease: 10,\n        maxLevel: 100,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: true,\n        refundMinimumLevel: 0\n    },\n    offeringAuto: {\n        tier: 'Reincarnation',\n        price: 150,\n        priceIncrease: 10,\n        maxLevel: 100,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: true,\n        refundMinimumLevel: 1\n    },\n    obtainiumEX: {\n        tier: 'Reincarnation',\n        price: 150,\n        priceIncrease: 10,\n        maxLevel: 100,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: true,\n        refundMinimumLevel: 0\n    },\n    obtainiumAuto: {\n        tier: 'Reincarnation',\n        price: 150,\n        priceIncrease: 10,\n        maxLevel: 100,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: true,\n        refundMinimumLevel: 1\n    },\n    instantChallenge: {\n        tier: 'Reincarnation',\n        price: 300,\n        priceIncrease: 99999,\n        maxLevel: 1,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    antSpeed: {\n        tier: 'Reincarnation',\n        price: 200,\n        priceIncrease: 25,\n        maxLevel: 100,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: true,\n        refundMinimumLevel: 0\n    },\n    cashGrab: {\n        tier: 'Reincarnation',\n        price: 100,\n        priceIncrease: 40,\n        maxLevel: 100,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: true,\n        refundMinimumLevel: 0\n    },\n    shopTalisman: {\n        tier: 'Reincarnation',\n        price: 1500,\n        priceIncrease: 99999,\n        maxLevel: 1,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    seasonPass: {\n        tier: 'Ascension',\n        price: 500,\n        priceIncrease: 75,\n        maxLevel: 100,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: true,\n        refundMinimumLevel: 0\n    },\n    challengeExtension: {\n        tier: 'Ascension',\n        price: 500,\n        priceIncrease: 250,\n        maxLevel: 5,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    challengeTome: {\n        tier: 'Ascension',\n        price: 500,\n        priceIncrease: 250,\n        maxLevel: 15,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    cubeToQuark: {\n        tier: 'Ascension',\n        price: 2000,\n        priceIncrease: 99999,\n        maxLevel: 1,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    tesseractToQuark: {\n        tier: 'Ascension',\n        price: 3500,\n        priceIncrease: 99999,\n        maxLevel: 1,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    hypercubeToQuark: {\n        tier: 'Ascension',\n        price: 5000,\n        priceIncrease: 99999,\n        maxLevel: 1,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    seasonPass2: {\n        tier: 'Ascension',\n        price: 2500,\n        priceIncrease: 250,\n        maxLevel: 100,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: true,\n        refundMinimumLevel: 0\n    },\n    seasonPass3: {\n        tier: 'Ascension',\n        price: 5000,\n        priceIncrease: 500,\n        maxLevel: 100,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: true,\n        refundMinimumLevel: 0\n    },\n    chronometer: {\n        tier: 'Ascension',\n        price: 2000,\n        priceIncrease: 500,\n        maxLevel: 100,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: true,\n        refundMinimumLevel: 0\n    },\n    infiniteAscent: {\n        tier: 'Ascension',\n        price: 50000,\n        priceIncrease: 9999999,\n        maxLevel: 1,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    calculator: {\n        tier: 'Reincarnation',\n        price: 1000,\n        priceIncrease: 500,\n        maxLevel: 5,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 1\n    },\n    calculator2: {\n        tier: 'Ascension',\n        price: 3000,\n        priceIncrease: 1000,\n        maxLevel: 12,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    calculator3: {\n        tier: 'Ascension',\n        price: 10000,\n        priceIncrease: 2000,\n        maxLevel: 10,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    calculator4: {\n        tier: 'Singularity',\n        price: 1e7,\n        priceIncrease: 1e6,\n        maxLevel: 10,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    calculator5: {\n        tier: 'SingularityVol2',\n        price: 1e8,\n        priceIncrease: 1e8,\n        maxLevel: 100,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    calculator6: {\n        tier: 'SingularityVol3',\n        price: 1e11,\n        priceIncrease: 2e10,\n        maxLevel: 100,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    constantEX: {\n        tier: 'Ascension',\n        price: 100000,\n        priceIncrease: 899999,\n        maxLevel: 2,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    powderEX: {\n        tier: 'Ascension',\n        price: 1000,\n        priceIncrease: 750,\n        maxLevel: 50,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    chronometer2: {\n        tier: 'Ascension',\n        price: 5000,\n        priceIncrease: 1500,\n        maxLevel: 100,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: true,\n        refundMinimumLevel: 0\n    },\n    chronometer3: {\n        tier: 'Singularity',\n        price: 250,\n        priceIncrease: 250,\n        maxLevel: 1000,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    seasonPassY: {\n        tier: 'Ascension',\n        price: 10000,\n        priceIncrease: 1500,\n        maxLevel: 100,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: true,\n        refundMinimumLevel: 0\n    },\n    seasonPassZ: {\n        tier: 'Singularity',\n        price: 250,\n        priceIncrease: 250,\n        maxLevel: 1000,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    challengeTome2: {\n        tier: 'Singularity',\n        price: 1000000,\n        priceIncrease: 1000000,\n        maxLevel: 5,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    instantChallenge2: {\n        tier: 'Singularity',\n        price: 20000000,\n        priceIncrease: 0,\n        maxLevel: 1,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    cubeToQuarkAll: {\n        tier: 'SingularityVol2',\n        price: 2222222,\n        priceIncrease: 0,\n        maxLevel: 100,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    cashGrab2: {\n        tier: 'SingularityVol2',\n        price: 5000,\n        priceIncrease: 5000,\n        maxLevel: 1000,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    chronometerZ: {\n        tier: 'SingularityVol2',\n        price: 12500,\n        priceIncrease: 12500,\n        maxLevel: 1000,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    offeringEX2: {\n        tier: 'SingularityVol2',\n        price: 10000,\n        priceIncrease: 10000,\n        maxLevel: 1000,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    obtainiumEX2: {\n        tier: 'SingularityVol2',\n        price: 10000,\n        priceIncrease: 10000,\n        maxLevel: 1000,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    powderAuto: {\n        tier: 'SingularityVol2',\n        price: 5e6,\n        priceIncrease: 0,\n        maxLevel: 100,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    seasonPassLost: {\n        tier: 'SingularityVol2',\n        price: 1000000,\n        priceIncrease: 25000,\n        maxLevel: 1000,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    challenge15Auto: {\n        tier: 'SingularityVol3',\n        price: 5e11,\n        priceIncrease: 0,\n        maxLevel: 1,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    extraWarp: {\n        tier: 'SingularityVol3',\n        price: 1.25e11,\n        priceIncrease: 0,\n        maxLevel: 1,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    autoWarp: {\n        tier: 'SingularityVol3',\n        price: 5e11,\n        priceIncrease: 0,\n        maxLevel: 1,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    improveQuarkHept: {\n        tier: 'Ascension',\n        price: 2e5 - 1,\n        priceIncrease: 0,\n        maxLevel: 1,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    improveQuarkHept2: {\n        tier: 'Singularity',\n        price: 2e7 - 1,\n        priceIncrease: 0,\n        maxLevel: 1,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    improveQuarkHept3: {\n        tier: 'SingularityVol2',\n        price: 2e9 - 1,\n        priceIncrease: 0,\n        maxLevel: 1,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    improveQuarkHept4: {\n        tier: 'SingularityVol3',\n        price: 2e11 - 1,\n        priceIncrease: 0,\n        maxLevel: 1,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    shopImprovedDaily: {\n        tier: 'Ascension',\n        price: 5000,\n        priceIncrease: 2500,\n        maxLevel: 20,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    shopImprovedDaily2: {\n        tier: 'Singularity',\n        price: 500000,\n        priceIncrease: 500000,\n        maxLevel: 10,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    shopImprovedDaily3: {\n        tier: 'SingularityVol2',\n        price: 5000000,\n        priceIncrease: 12500000,\n        maxLevel: 15,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    shopImprovedDaily4: {\n        tier: 'SingularityVol3',\n        price: 5e9,\n        priceIncrease: 5e9,\n        maxLevel: 25,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    offeringEX3: {\n        tier: 'SingularityVol3',\n        price: 1,\n        priceIncrease: 1.25e12,\n        maxLevel: 1000,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    obtainiumEX3: {\n        tier: 'SingularityVol3',\n        price: 1,\n        priceIncrease: 1.25e12,\n        maxLevel: 1000,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    improveQuarkHept5: {\n        tier: 'SingularityVol4',\n        price: 1,\n        priceIncrease: 2.5e13,\n        maxLevel: 100,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    chronometerInfinity: {\n        tier: 'SingularityVol4',\n        price: 1,\n        priceIncrease: 1.25e12,\n        maxLevel: 1000,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    seasonPassInfinity: {\n        tier: 'SingularityVol4',\n        price: 1,\n        priceIncrease: 1.25e12,\n        maxLevel: 1000,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    },\n    shopSingularityPenaltyDebuff: {\n        tier: 'Exalt',\n        price: 1e17,\n        priceIncrease: 9.99e19,\n        maxLevel: 4,\n        type: shopUpgradeTypes.UPGRADE,\n        refundable: false,\n        refundMinimumLevel: 0\n    }\n}\n\n//Names of shop upgrades || Top row indicates potions, and all other upgrades are labeled in order.\n//If you are adding more upgrades please make sure the order of labelled upgrades is correct!\ntype ShopUpgradeNames = 'offeringPotion' | 'obtainiumPotion' |\n                        'offeringEX' | 'offeringAuto' | 'offeringEX2' | 'obtainiumEX' | 'obtainiumAuto' | 'obtainiumEX2' | 'instantChallenge' | 'instantChallenge2' |\n                        'antSpeed' | 'cashGrab' | 'cashGrab2' | 'shopTalisman' | 'seasonPass' | 'challengeExtension' | 'challengeTome' | 'challengeTome2' |\n                        'cubeToQuark' | 'tesseractToQuark' | 'cubeToQuarkAll' | 'hypercubeToQuark' | 'seasonPass2' | 'seasonPass3' | 'seasonPassY' | 'seasonPassZ' |\n                        'seasonPassLost' | 'chronometer' | 'chronometer2'| 'chronometer3'| 'chronometerZ' | 'infiniteAscent' | 'calculator' | 'calculator2' |\n                        'calculator3' | 'constantEX' | 'powderEX' | 'powderAuto' | 'challenge15Auto' | 'extraWarp' | 'autoWarp' | //And Golden Quarks\n                        'improveQuarkHept' | 'improveQuarkHept2' | 'improveQuarkHept3' | 'improveQuarkHept4' | 'shopImprovedDaily' |\n                        'shopImprovedDaily2' | 'shopImprovedDaily3' | 'shopImprovedDaily4' | 'calculator4' | 'calculator5' | 'calculator6' |\n                        'offeringEX3' | 'obtainiumEX3' | 'improveQuarkHept5' | 'seasonPassInfinity' | 'chronometerInfinity' | 'shopSingularityPenaltyDebuff'\n\nexport const getShopCosts = (input: ShopUpgradeNames) => {\n\n    if (shopData[input].type === shopUpgradeTypes.CONSUMABLE || shopData[input].maxLevel === 1){\n        return shopData[input].price\n    } else {\n        const priceIncreaseMult = player.shopUpgrades[input]\n        return shopData[input].price + shopData[input].priceIncrease * priceIncreaseMult\n    }\n}\n\nexport const shopDescriptions = (input: ShopUpgradeNames) => {\n    const rofl = DOMCacheGetOrSet('quarkdescription')!;\n    const lol = DOMCacheGetOrSet('quarkeffect')!;\n    const refundable = DOMCacheGetOrSet('quarkRefundable')!;\n\n    rofl.textContent = i18next.t(`shop.upgradeDescriptions.${input}`)\n\n    shopData[input].refundable ?\n        refundable.textContent = 'This item is refundable! Will be set to level ' + shopData[input].refundMinimumLevel + ' when refunded.':\n        refundable.textContent = i18next.t('shop.cannotRefund')\n\n    switch (input) {\n        case 'offeringPotion':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.offeringPotion', {amount: format((7200 * player.offeringpersecond * calculateTimeAcceleration().mult * +player.singularityUpgrades.potionBuff.getEffect().bonus), 0, true)})\n            break;\n        case 'obtainiumPotion':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.obtainiumPotion', {amount: format((7200 * player.maxobtainiumpersecond * calculateTimeAcceleration().mult * +player.singularityUpgrades.potionBuff.getEffect().bonus), 0, true)})\n            break;\n        case 'offeringEX':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.offeringEX', {amount: format(4 * player.shopUpgrades.offeringEX,2,true)})\n            break;\n        case 'offeringAuto':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.offeringAuto', {amount1: format(Math.pow(2, player.shopUpgrades.offeringAuto)), amount2: format(2 * player.shopUpgrades.offeringAuto, 2)})\n            break;\n        case 'obtainiumEX':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.obtainiumEX', {amount: format(4 * player.shopUpgrades.obtainiumEX,2,true)})\n            break;\n        case 'obtainiumAuto':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.obtainiumAuto', {amount: format(player.shopUpgrades.obtainiumAuto * 2, 2)})\n            break;\n        case 'instantChallenge':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.instantChallenge')\n            break;\n        case 'antSpeed':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.antSpeed', {amount: format(Math.pow(1.2, player.shopUpgrades.antSpeed), 2)})\n            break;\n        case 'cashGrab':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.cashGrab', {amount: format(player.shopUpgrades.cashGrab, 2)})\n            break;\n        case 'shopTalisman':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.shopTalisman')\n            break;\n        case 'seasonPass':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPass', {amount: format(2.25 * player.shopUpgrades.seasonPass)})\n            break;\n        case 'challengeExtension':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.challengeExtension', {amount: format(2*player.shopUpgrades.challengeExtension)})\n            break;\n        case 'challengeTome':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.challengeTome', {amount1: format(20*player.shopUpgrades.challengeTome), amount2: format(1 - (player.shopUpgrades.challengeTome + player.shopUpgrades.challengeTome2) / 100, 2, true)})\n            break;\n        case 'cubeToQuark':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.cubeToQuark')\n            break;\n        case 'tesseractToQuark':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.tesseractToQuark')\n            break;\n        case 'hypercubeToQuark':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.hypercubeToQuark')\n            break;\n        case 'seasonPass2':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPass2', {amount: format(1.5 * player.shopUpgrades.seasonPass2)})\n            break;\n        case 'seasonPass3':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPass3', {amount: format(1.5 * player.shopUpgrades.seasonPass3)})\n            break;\n        case 'chronometer':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.chronometer', {amount: format(1.2 * player.shopUpgrades.chronometer)})\n            break;\n        case 'infiniteAscent':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.infiniteAscent')\n            break;\n        case 'calculator':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.calculator', {amount1: format(14 * player.shopUpgrades.calculator), bool1: player.shopUpgrades.calculator > 0, bool2: player.shopUpgrades.calculator === shopData.calculator.maxLevel})\n            break;\n        case 'calculator2':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.calculator2', {amount1: format(2 * player.shopUpgrades.calculator2), amount2: format((player.shopUpgrades.calculator2 === shopData['calculator2'].maxLevel) ? 25: 0)})\n            break;\n        case 'calculator3':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.calculator3', {amount1: format(10 * player.shopUpgrades.calculator3), amount2: format(60 * player.shopUpgrades.calculator3)})\n            break;\n        case 'calculator4':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.calculator4', {amount1: format(2 * player.shopUpgrades.calculator4), amount2: player.shopUpgrades.calculator4 == 10 ? 32 : 0})\n            break;\n        case 'calculator5':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.calculator5', {amount1: format(6 * player.shopUpgrades.calculator5), amount2: Math.floor(player.shopUpgrades.calculator5 / 10) + (player.shopUpgrades.calculator4 === shopData.calculator5.maxLevel ? 6 : 0)})\n            break;\n        case 'calculator6':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.calculator6', {amount1: format(player.shopUpgrades.calculator6), amount2: player.shopUpgrades.calculator6 === shopData.calculator6.maxLevel ? 24 : 0})\n            break;\n        case 'constantEX':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.constantEX', {amount: format(player.shopUpgrades.constantEX, 0, true)})\n            break;\n        case 'powderEX':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.powderEX', {amount: format(2 * player.shopUpgrades.powderEX)})\n            break;\n        case 'chronometer2':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.chronometer2', {amount: format(0.6 * player.shopUpgrades.chronometer2, 1)})\n            break;\n        case 'chronometer3':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.chronometer3', {amount: format(1.5 * player.shopUpgrades.chronometer3, 1)})\n            break;\n        case 'seasonPassY':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPassY', {amount: format(0.75 * player.shopUpgrades.seasonPassY, 2)})\n            break;\n        case 'seasonPassZ':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPassZ', {amount: format(1 * player.shopUpgrades.seasonPassZ * player.singularityCount, 0, true)})\n            break;\n        case 'challengeTome2':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.challengeTome2', {amount1: 20 * player.shopUpgrades.challengeTome2, amount2: format(1 - (player.shopUpgrades.challengeTome + player.shopUpgrades.challengeTome2) / 100, 2, true)})\n            break;\n        case 'instantChallenge2':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.instantChallenge2', {amount: format(player.shopUpgrades.instantChallenge2 * player.singularityCount, 0)})\n            break;\n        case 'cashGrab2':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.cashGrab2', {amount: format(0.5 * player.shopUpgrades.cashGrab2, 1)})\n            break;\n        case 'cubeToQuarkAll':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.cubeToQuarkAll', {amount: format(0.2 * player.shopUpgrades.cubeToQuarkAll, 2)})\n            break;\n        case 'chronometerZ':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.chronometerZ', {amount: format(0.1 * player.singularityCount * player.shopUpgrades.chronometerZ, 2)})\n            break;\n        case 'offeringEX2':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.offeringEX2', {amount: format(1 * player.singularityCount * player.shopUpgrades.offeringEX2, 2)})\n            break;\n        case 'obtainiumEX2':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.obtainiumEX2', {amount: format(1 * player.singularityCount * player.shopUpgrades.obtainiumEX2, 2)});\n            break;\n        case 'powderAuto':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.powderAuto', {amount: format(100 / (Math.max(1, player.shopUpgrades.powderAuto) * calculatePowderConversion().mult), 2, true)})\n            break;\n        case 'seasonPassLost':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPassLost', {amount: format(0.1 * player.shopUpgrades.seasonPassLost, 2)})\n            break;\n        case 'challenge15Auto':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.challenge15Auto')\n            break;\n        case 'extraWarp':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.extraWarp', {amount: player.shopUpgrades.extraWarp})\n            break;\n        case 'autoWarp':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.autoWarp')\n            break;\n        case 'improveQuarkHept':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.improveQuarkHept', {amount: 2 * player.shopUpgrades.improveQuarkHept})\n            break;\n        case 'improveQuarkHept2':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.improveQuarkHept2', {amount: 2 * player.shopUpgrades.improveQuarkHept2})\n            break;\n        case 'improveQuarkHept3':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.improveQuarkHept3', {amount: 2 * player.shopUpgrades.improveQuarkHept3})\n            break;\n        case 'improveQuarkHept4':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.improveQuarkHept4', {amount: 2 * player.shopUpgrades.improveQuarkHept4})\n            break;\n        case 'shopImprovedDaily':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.shopImprovedDaily', {amount: format(5 * player.shopUpgrades.shopImprovedDaily)})\n            break;\n        case 'shopImprovedDaily2':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.shopImprovedDaily2', {amount1: player.shopUpgrades.shopImprovedDaily2, amount2: player.shopUpgrades.shopImprovedDaily2 * 20})\n            break;\n        case 'shopImprovedDaily3':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.shopImprovedDaily3', {amount1: player.shopUpgrades.shopImprovedDaily3, amount2: player.shopUpgrades.shopImprovedDaily3 * 15})\n            break;\n        case 'shopImprovedDaily4':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.shopImprovedDaily4', {amount1: player.shopUpgrades.shopImprovedDaily4, amount2: player.shopUpgrades.shopImprovedDaily4 * 100})\n            break;\n        case 'offeringEX3':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.offeringEX3', {amount: format(100 * (Math.pow(1.02, player.shopUpgrades.offeringEX3) - 1), 2, true)})\n            break;\n        case 'obtainiumEX3':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.obtainiumEX3', {amount: format(100 * (Math.pow(1.02, player.shopUpgrades.obtainiumEX3) - 1), 2, true)})\n            break;\n        case 'improveQuarkHept5':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.improveQuarkHept5', {amount: format(player.shopUpgrades.improveQuarkHept5 / 25, 2, true)})\n            break;\n        case 'seasonPassInfinity':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.seasonPassInfinity', {amount: format(100 * (Math.pow(1.02, player.shopUpgrades.seasonPassInfinity) - 1), 2, true)})\n            break;\n        case 'chronometerInfinity':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.chronometerInfinity', {amount: format(100 * (Math.pow(1.01, player.shopUpgrades.chronometerInfinity) - 1), 2, true)})\n            break;\n        case 'shopSingularityPenaltyDebuff':\n            lol.innerHTML = i18next.t('shop.upgradeEffects.shopSingularityPenaltyDebuff', {amount1: format(player.singularityCount), amount2: format(player.singularityCount - player.shopUpgrades.shopSingularityPenaltyDebuff)})\n    }\n\n}\n\n//strentax 07/21 Add function to convert code-name display to end-user friendly display of shop upgrades\nexport const friendlyShopName = (input: ShopUpgradeNames) => {\n    // TODO(i18n): add these under shop.names\n    const names: Record<ShopUpgradeNames, string> = {\n        offeringPotion: 'Offering Potion',\n        obtainiumPotion: 'Obtainium Potion',\n        offeringEX: 'Offering EX',\n        offeringAuto: 'Offering Auto',\n        obtainiumEX: 'Obtainium EX',\n        obtainiumAuto: 'Obtainium Auto',\n        instantChallenge: 'Instant Challenge Completions',\n        antSpeed: 'Ant Speed',\n        cashGrab: 'Cash Grab',\n        shopTalisman: 'the Plastic talisman',\n        seasonPass: 'Season Pass',\n        challengeExtension: 'Reincarnation Challenge EX',\n        challengeTome: 'Challenge 10 Requirement Reduce',\n        cubeToQuark: 'Cube Quarks +50%',\n        tesseractToQuark: 'Tesseract Quarks +50%',\n        hypercubeToQuark: 'Hypercube Quarks +50%',\n        seasonPass2: 'Season Pass 2',\n        seasonPass3: 'Season Pass 3',\n        chronometer: 'Chronometer 1',\n        infiniteAscent: 'Infinite Ascent',\n        calculator: 'PL-AT calculator',\n        calculator2: 'PL-AT X calculator',\n        calculator3: 'PL-AT \u03A9 calculator',\n        calculator4: 'PL-AT \u03B4 calculator',\n        calculator5: 'PL-AT \u0393 calculator',\n        calculator6: 'QUAAA-T calculator',\n        constantEX: 'Constant EX',\n        powderEX: 'Powder EX',\n        chronometer2: 'Chronometer 2',\n        chronometer3: 'Chronometer 3',\n        seasonPassY: 'Season Pass Y',\n        seasonPassZ: 'Season Pass Z',\n        challengeTome2: 'Challenge 10 Requirement Reduction 2',\n        instantChallenge2: 'Instant Challenge Completions 2',\n        cubeToQuarkAll: 'Quark Gain Cube Improvement 2',\n        cashGrab2: 'Cash Grab 2',\n        chronometerZ: 'Chronometer Z',\n        obtainiumEX2: 'Obtainium EX 2',\n        offeringEX2: 'Offering EX 2',\n        powderAuto: 'Automated Powder',\n        seasonPassLost: 'Season Pass LOST',\n        challenge15Auto: 'Challenge 15 Automation',\n        extraWarp: 'Extra Warp',\n        autoWarp: 'a quack powered Warps?',\n        improveQuarkHept: 'Quark Hepteract 1',\n        improveQuarkHept2: 'Quark Hepteract 2',\n        improveQuarkHept3: 'Quark Hepteract 3',\n        improveQuarkHept4: 'Quack Hepteract 4',\n        shopImprovedDaily: 'Improved Daily Code 1',\n        shopImprovedDaily2: 'Improved Daily Code 2',\n        shopImprovedDaily3: 'Improved Daily Code 3',\n        shopImprovedDaily4: 'Improved Daily Code 4',\n        offeringEX3: 'The final Offering Upgrade',\n        obtainiumEX3: 'The final Obtainium Upgrade',\n        improveQuarkHept5: 'The final Quark Hepteract Improver',\n        chronometerInfinity: 'The final Chronometer',\n        seasonPassInfinity: 'The final Season pass',\n        shopSingularityPenaltyDebuff: 'A Singularity Tenderizer'\n    }\n\n    return names[input];\n\n}\n\nexport const buyShopUpgrades = async (input: ShopUpgradeNames) => {\n    const shopItem = shopData[input];\n\n    if (player.shopUpgrades[input] >= shopItem.maxLevel) {\n        return player.shopConfirmationToggle\n            ? Alert(`You can't purchase ${friendlyShopName(input)} because you are already at the maximum ${shopItem.type === shopUpgradeTypes.UPGRADE ? 'level' : 'capacity'}!`)\n            : null;\n    } else if (Number(player.worlds) < getShopCosts(input)) {\n        return player.shopConfirmationToggle\n            ? Alert(`You can't purchase ${friendlyShopName(input)} because you don't have enough Quarks!`)\n            : null;\n    }\n\n    // Actually lock for HTML exploit\n    if (!isShopUpgradeUnlocked(input)) {\n        return Alert(`You do not have the right to purchase ${friendlyShopName(input)}!`);\n    }\n\n    let buyData:IMultiBuy;\n    const maxBuyAmount = shopItem.maxLevel - player.shopUpgrades[input];\n    let buyAmount;\n    let buyCost;\n    switch (player.shopBuyMaxToggle) {\n        case false:\n            buyAmount = 1;\n            buyCost = getShopCosts(input);\n            break;\n        case 'TEN':\n            buyData = calculateSummationNonLinear(player.shopUpgrades[input], shopItem.price, +player.worlds, shopItem.priceIncrease / shopItem.price, Math.min(10,maxBuyAmount))\n            buyAmount = buyData.levelCanBuy - player.shopUpgrades[input];\n            buyCost = buyData.cost;\n            break;\n        default:\n            buyData = calculateSummationNonLinear(player.shopUpgrades[input], shopItem.price, +player.worlds, shopItem.priceIncrease / shopItem.price, maxBuyAmount)\n            buyAmount = buyData.levelCanBuy - player.shopUpgrades[input];\n            buyCost = buyData.cost;\n    }\n\n    const singular = shopItem.maxLevel === 1;\n    const merch = buyAmount.toLocaleString() + (shopItem.type === shopUpgradeTypes.UPGRADE ? ' level' : ' vial') + (buyAmount === 1 ? '' : 's');\n    const noRefunds = shopItem.refundable ? '' : '\\n\\n\\u26A0\\uFE0F !! No Refunds !! \\u26A0\\uFE0F';\n    const maxPots = shopItem.type === shopUpgradeTypes.CONSUMABLE ? '\\n\\nType -1 in Buy: ANY to buy equal amounts of both Potions.' : '';\n\n    if (player.shopBuyMaxToggle === 'ANY' && !singular) {\n        const buyInput = await Prompt(`You can afford to purchase up to ${merch} of ${friendlyShopName(input)} for ${buyCost.toLocaleString()} Quarks. How many would you like to buy?${maxPots + noRefunds}`);\n        let buyAny;\n        if (Number(buyInput) === -1 && shopItem.type === shopUpgradeTypes.CONSUMABLE) {\n            const other = input === 'offeringPotion' ? 'obtainiumPotion' : 'offeringPotion';\n            const toSpend = Math.max(+player.worlds / 2, +player.worlds - buyCost);\n            const otherPot:IMultiBuy = calculateSummationNonLinear(player.shopUpgrades[other], shopData[other].price, toSpend, shopData[other].priceIncrease / shopData[other].price, shopData[other].maxLevel-player.shopUpgrades[other]);\n            player.worlds.sub(otherPot.cost);\n            player.shopUpgrades[other] = otherPot.levelCanBuy;\n            buyAny = buyAmount;\n        } else {\n            buyAny = Math.floor(Number(buyInput));\n            if (buyAny === 0) {\n                return;\n            } else if (Number.isNaN(buyAny) || !Number.isFinite(buyAny) || buyAny < 0) {\n                return Alert('Amount must be a finite, positive integer.');\n            }\n        }\n        const anyData:IMultiBuy = calculateSummationNonLinear(player.shopUpgrades[input], shopItem.price, +player.worlds, shopItem.priceIncrease / shopItem.price, Math.min(buyAny, buyAmount))\n        player.worlds.sub(anyData.cost);\n        player.shopUpgrades[input] = anyData.levelCanBuy;\n        revealStuff();\n        return;\n    }\n\n    let p = true;\n    if (player.shopConfirmationToggle || (!shopItem.refundable && player.shopBuyMaxToggle !== false)) {\n        p = await Confirm(`You are about to ${singular ? 'unlock' : `purchase ${merch} of`} ${friendlyShopName(input)} for ${buyCost.toLocaleString()} Quarks. Press 'OK' to finalize purchase.${maxPots + noRefunds}`);\n    }\n    if (p) {\n        player.worlds.sub(buyCost);\n        player.shopUpgrades[input] += buyAmount;\n        revealStuff();\n    }\n}\n\nexport const autoBuyConsumable = (input: ShopUpgradeNames) => {\n    const maxBuyablePotions = Math.floor(Math.min(Number(player.worlds) / 100, Math.min(shopData[input].maxLevel - player.shopUpgrades[input], Math.pow(player.highestSingularityCount, 2) * 100)));\n\n    if (shopData[input].maxLevel <= player.shopUpgrades[input]) {\n        return;\n    }\n    if (maxBuyablePotions <= 0) {\n        return;\n    }\n\n    player.worlds.sub(100 * maxBuyablePotions);\n    player.shopUpgrades[input] += maxBuyablePotions;\n}\n\nexport const useConsumable = async (input: ShopUpgradeNames, automatic = false, used = 1, spend = true) => {\n\n    const p = (player.shopConfirmationToggle && !automatic)\n        ? await Confirm('Would you like to use some of this potion?')\n        : true;\n\n    if (p) {\n        const multiplier = +player.singularityUpgrades.potionBuff.getEffect().bonus *\n                           +player.singularityUpgrades.potionBuff2.getEffect().bonus *\n                           +player.singularityUpgrades.potionBuff3.getEffect().bonus *\n                           +player.octeractUpgrades.octeractAutoPotionEfficiency.getEffect().bonus *\n                           used;\n\n        if (input === 'offeringPotion') {\n            if (player.shopUpgrades.offeringPotion >= used || !spend) {\n                player.shopUpgrades.offeringPotion -= (spend ? used: 0);\n                player.runeshards += Math.floor(7200 * player.offeringpersecond * calculateTimeAcceleration().mult * multiplier)\n                player.runeshards = Math.min(1e300, player.runeshards)\n            }\n        } else if (input === 'obtainiumPotion') {\n            if (player.shopUpgrades.obtainiumPotion >= used || !spend) {\n                player.shopUpgrades.obtainiumPotion -= (spend? used: 0);\n                player.researchPoints += Math.floor(7200 * player.maxobtainiumpersecond * calculateTimeAcceleration().mult * multiplier)\n                player.researchPoints = Math.min(1e300, player.researchPoints)\n            }\n        }\n    }\n}\n\nexport const resetShopUpgrades = async (ignoreBoolean = false) => {\n    let p = false\n    if (!ignoreBoolean) {\n        p = player.shopConfirmationToggle\n            ? await Confirm('This will fully refund most of your permanent upgrades for an upfront cost of 15 Quarks. Would you like to do this?')\n            : true;\n    }\n\n    if (p || ignoreBoolean) {\n        const singularityQuarks = player.quarksThisSingularity;\n        let refunds = false;\n        for (const shopItem in shopData){\n            const key = shopItem as keyof typeof shopData;\n            const item = shopData[key];\n            if (item.refundable && player.shopUpgrades[key] > item.refundMinimumLevel){\n                refunds = true;\n                // Determines how many quarks one would not be refunded, based on minimum refund level\n                const doNotRefund = item.price * item.refundMinimumLevel +\n                                item.priceIncrease * (item.refundMinimumLevel) * (item.refundMinimumLevel - 1) / 2;\n\n                //Refunds Quarks based on the shop level and price vals\n                player.worlds.add(\n                    item.price * player.shopUpgrades[key] +\n                    item.priceIncrease * (player.shopUpgrades[key]) * (player.shopUpgrades[key] - 1) / 2\n                    - doNotRefund,\n                    false\n                );\n\n                player.shopUpgrades[key] = item.refundMinimumLevel;\n            }\n        }\n        if (refunds) {\n            player.worlds.sub(15);\n        } else if (!ignoreBoolean && player.shopConfirmationToggle) {\n            void Alert('Nothing to Refund!');\n        }\n        player.quarksThisSingularity = singularityQuarks;\n    }\n}\n\nexport const getQuarkInvestment = (upgrade: ShopUpgradeNames) => {\n    if (!(upgrade in shopData) || !(upgrade in player.shopUpgrades)) {\n        return 0;\n    }\n\n    const val = shopData[upgrade].price * player.shopUpgrades[upgrade] +\n                shopData[upgrade].priceIncrease * (player.shopUpgrades[upgrade] - 1) * (player.shopUpgrades[upgrade]) / 2\n\n    return val;\n}\n\nexport const isShopUpgradeUnlocked = (upgrade: ShopUpgradeNames):boolean => {\n    switch (upgrade) {\n        case 'offeringPotion':\n            return true\n        case 'obtainiumPotion':\n            return true\n        case 'offeringEX':\n            return player.reincarnationCount > 0 || player.highestSingularityCount > 0\n        case 'offeringAuto':\n            return player.reincarnationCount > 0 || player.highestSingularityCount > 0\n        case 'obtainiumEX':\n            return player.reincarnationCount > 0 || player.highestSingularityCount > 0\n        case 'obtainiumAuto':\n            return player.reincarnationCount > 0 || player.highestSingularityCount > 0\n        case 'instantChallenge':\n            return player.reincarnationCount > 0 || player.highestSingularityCount > 0\n        case 'antSpeed':\n            return player.highestchallengecompletions[8] > 0 || player.ascensionCount > 0 || player.highestSingularityCount > 0\n        case 'cashGrab':\n            return player.highestchallengecompletions[8] > 0 || player.ascensionCount > 0 || player.highestSingularityCount > 0\n        case 'shopTalisman':\n            return player.highestchallengecompletions[9] > 0 || player.ascensionCount > 0 || player.highestSingularityCount > 0\n        case 'seasonPass':\n            return player.ascensionCount > 0 || player.highestSingularityCount > 0\n        case 'challengeExtension':\n            return player.ascensionCount > 0 || player.highestSingularityCount > 0\n        case 'challengeTome':\n            return player.ascensionCount > 0 || player.highestSingularityCount > 0\n        case 'cubeToQuark':\n            return player.ascensionCount > 0 || player.highestSingularityCount > 0\n        case 'tesseractToQuark':\n            return player.highestchallengecompletions[11] > 0 || player.highestSingularityCount > 0\n        case 'hypercubeToQuark':\n            return player.highestchallengecompletions[13] > 0 || player.highestSingularityCount > 0\n        case 'seasonPass2':\n            return player.highestchallengecompletions[14] > 0 || player.highestSingularityCount > 0\n        case 'seasonPass3':\n            return player.highestchallengecompletions[14] > 0 || player.highestSingularityCount > 0\n        case 'chronometer':\n            return player.highestchallengecompletions[12] > 0 || player.highestSingularityCount > 0\n        case 'infiniteAscent':\n            return player.highestchallengecompletions[14] > 0 || player.highestSingularityCount > 0\n        case 'calculator':\n            return player.ascensionCount > 0 || player.highestSingularityCount > 0\n        case 'calculator2':\n            return player.highestchallengecompletions[11] > 0 || player.highestSingularityCount > 0\n        case 'calculator3':\n            return player.highestchallengecompletions[13] > 0 || player.highestSingularityCount > 0\n        case 'calculator4':\n            return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\n        case 'calculator5':\n            return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\n        case 'calculator6':\n            return Boolean(player.singularityUpgrades.wowPass3.getEffect().bonus)\n        case 'constantEX':\n            return player.highestchallengecompletions[14] > 0 || player.highestSingularityCount > 0\n        case 'powderEX':\n            return player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0\n        case 'chronometer2':\n            return player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0\n        case 'chronometer3':\n            return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\n        case 'seasonPassY':\n            return player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0\n        case 'seasonPassZ':\n            return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\n        case 'challengeTome2':\n            return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\n        case 'instantChallenge2':\n            return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\n        case 'cashGrab2':\n            return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\n        case 'cubeToQuarkAll':\n            return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\n        case 'chronometerZ':\n            return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\n        case 'offeringEX2':\n            return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\n        case 'obtainiumEX2':\n            return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\n        case 'powderAuto':\n            return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\n        case 'seasonPassLost':\n            return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\n        case 'challenge15Auto':\n            return Boolean(player.singularityUpgrades.wowPass3.getEffect().bonus)\n        case 'extraWarp':\n            return Boolean(player.singularityUpgrades.wowPass3.getEffect().bonus)\n        case 'autoWarp':\n            return Boolean(player.singularityUpgrades.wowPass3.getEffect().bonus)\n        case 'improveQuarkHept':\n            return player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0\n        case 'improveQuarkHept2':\n            return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\n        case 'improveQuarkHept3':\n            return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\n        case 'improveQuarkHept4':\n            return Boolean(player.singularityUpgrades.wowPass3.getEffect().bonus)\n        case 'shopImprovedDaily':\n            return player.highestchallengecompletions[14] > 0 || player.highestSingularityCount > 0\n        case 'shopImprovedDaily2':\n            return Boolean(player.singularityUpgrades.wowPass.getEffect().bonus)\n        case 'shopImprovedDaily3':\n            return Boolean(player.singularityUpgrades.wowPass2.getEffect().bonus)\n        case 'shopImprovedDaily4':\n            return Boolean(player.singularityUpgrades.wowPass3.getEffect().bonus)\n        case 'offeringEX3':\n            return Boolean(player.singularityUpgrades.wowPass4.getEffect().bonus)\n        case 'obtainiumEX3':\n            return Boolean(player.singularityUpgrades.wowPass4.getEffect().bonus)\n        case 'improveQuarkHept5':\n            return Boolean(player.singularityUpgrades.wowPass4.getEffect().bonus)\n        case 'chronometerInfinity':\n            return Boolean(player.singularityUpgrades.wowPass4.getEffect().bonus)\n        case 'seasonPassInfinity':\n            return Boolean(player.singularityUpgrades.wowPass4.getEffect().bonus)\n        case 'shopSingularityPenaltyDebuff':\n            return Boolean(player.singularityChallenges.noSingularityUpgrades.rewards.shopUpgrade)\n    }\n}\n", null, null, null, null, null, null, "import * as workerTimers from 'worker-timers'\n\ninterface ActiveTimer {\n\tid: number\n\ttype: 'interval' | 'timeout'\n}\n\nconst activeTimers: ActiveTimer[] = []\n\nexport const setInterval: typeof workerTimers['setInterval'] = (fn, delay) => {\n    const timer = workerTimers.setInterval(fn, delay)\n    activeTimers.push({ id: timer, type: 'interval' })\n    return timer\n}\n\nexport const clearInterval: typeof workerTimers['clearInterval'] = (timerId) => {\n    for (const timer of activeTimers) {\n        if (timer.type === 'interval' && timer.id === timerId) {\n            workerTimers.clearInterval(timerId)\n            activeTimers.splice(activeTimers.indexOf(timer), 1)\n            return\n        }\n    }\n}\n\nexport const setTimeout: typeof workerTimers['setTimeout'] = (fn, delay) => {\n    const timer = workerTimers.setTimeout(fn, delay)\n    activeTimers.push({ id: timer, type: 'timeout' })\n    return timer\n}\n\nexport const clearTimeout: typeof workerTimers['clearTimeout'] = (timerId) => {\n    for (const timer of activeTimers) {\n        if (timer.type === 'timeout' && timer.id === timerId) {\n            workerTimers.clearTimeout(timerId)\n            activeTimers.splice(activeTimers.indexOf(timer), 1)\n            return\n        }\n    }\n}\n\nexport const clearTimers = (): void => {\n    for (const { id, type } of activeTimers) {\n        if (type === 'interval') {\n            clearInterval(id)\n        } else {\n            clearTimeout(id)\n        }\n    }\n}", "import { player, format } from './Synergism';\nimport { calculateSigmoidExponential, calculateSigmoid, calculateAnts, calculateRuneLevels, calculateAntSacrificeELO, calculateAntSacrificeRewards } from './Calculate';\nimport { Globals as G } from './Variables';\n\nimport type { DecimalSource } from 'break_infinity.js';\nimport Decimal from 'break_infinity.js';\nimport { achievementaward } from './Achievements';\nimport { Confirm, revealStuff } from './UpdateHTML';\nimport { updateTalismanInventory } from './Talismans';\nimport { buyResearch } from './Research';\nimport { resetAnts } from './Reset';\nimport type { ResetHistoryEntryAntSacrifice } from './History';\nimport { Synergism } from './Events';\nimport type { FirstToEighth, ZeroToSeven } from './types/Synergism';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport { smallestInc } from './Utility';\nimport { setInterval, clearInterval } from './Timers'\nimport i18next from 'i18next';\n\nconst antspecies: Record<string, string> = {\n    antspecies1: 'Inceptus Formicidae',\n    antspecies2: 'Fortunae Formicidae',\n    antspecies3: 'Tributum Formicidae',\n    antspecies4: 'Celeritas Formicidae',\n    antspecies5: 'Multa Formicidae',\n    antspecies6: 'Sacrificium Formicidae',\n    antspecies7: 'Hic Formicidae',\n    antspecies8: 'Experientia Formicidae',\n    antspecies9: 'Praemoenio Formicidae',\n    antspecies10: 'Scientia Formicidae',\n    antspecies11: 'Phylacterium Formicidae',\n    antspecies12: 'Mortuus Est Formicidae'\n}\n\nexport const calculateCrumbToCoinExp = () => {\n    const exponent = player.currentChallenge.ascension !== 15\n        ? 100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[2-1]! + G['bonusant2']) / 5000 * 500 / 499)\n        : 1/10000 * (100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[2-1]! + G['bonusant2']) / 5000 * 500 / 499));\n\n    return exponent\n}\n\nconst antUpgradeTexts = [\n    () => format(Decimal.pow(1.12 + 1 / 1000 * player.researches[101], player.antUpgrades[1-1]! + G['bonusant1']), 2),\n    () => format(calculateCrumbToCoinExp()),\n    () => format(0.005 + 0.995 * Math.pow(0.99, player.antUpgrades[3-1]! + G['bonusant3']), 4),\n    () => format(100 * (calculateSigmoidExponential(20, (player.antUpgrades[4-1]! + G['bonusant4']) / 1000 * 20 / 19) - 1), 3),\n    () => format(100 * (calculateSigmoidExponential(40, (player.antUpgrades[5-1]! + G['bonusant5']) / 1000 * 40 / 39) - 1), 3),\n    () => format(1 + Math.pow((player.antUpgrades[6-1]! + G['bonusant6']), 0.66), 4),\n    () => format(Math.min(9999999,3 * player.antUpgrades[7-1]! + 3 * G['bonusant7']),0,true),\n    () => format(calculateSigmoidExponential(999, 1 / 10000 * Math.pow(player.antUpgrades[8-1]! + G['bonusant8'], 1.1)), 3),\n    () => format(1 * Math.min(1e7, (player.antUpgrades[9-1]! + G['bonusant9'])),0,true),\n    () => format(1 + 2 * Math.pow((player.antUpgrades[10-1]! + G['bonusant10']) / 50, 0.75), 4),\n    () => format(1 + 2 * (1 - Math.pow(2, -(player.antUpgrades[11-1]! + G['bonusant11']) / 125)), 4),\n    () => format(calculateSigmoid(2, player.antUpgrades[12-1]! + G['bonusant12'], 69), 4)\n]\n\nlet repeatAnt: ReturnType<typeof setTimeout>;\n\nexport const antRepeat = (i: number) => {\n    clearInterval(repeatAnt);\n    repeatAnt = setInterval(() => updateAntDescription(i), 50);\n}\n\nexport const updateAntDescription = (i: number) => {\n    if (G['currentTab'] !== 'ants') {\n        return\n    }\n    const el = DOMCacheGetOrSet('anttierdescription')\n    const la = DOMCacheGetOrSet('antprice')\n    const ti = DOMCacheGetOrSet('antquantity')\n    const me = DOMCacheGetOrSet('generateant')\n\n    let priceType = 'ants.costGalacticCrumbs'\n    let tier: FirstToEighth = 'first'\n    let x!: string\n    el.textContent = i18next.t(`ants.descriptions.${i}`)\n\n    switch (i) {\n        case 1:\n            priceType = 'ants.costParticles'\n            tier = 'first';\n            x = format(G['antOneProduce'], 5)\n            break;\n        case 2:\n            tier = 'second';\n            x = format(G['antTwoProduce'], 5)\n            break;\n        case 3:\n            tier = 'third';\n            x = format(G['antThreeProduce'], 5)\n            break;\n        case 4:\n            tier = 'fourth';\n            x = format(G['antFourProduce'], 5)\n            break;\n        case 5:\n            tier = 'fifth';\n            x = format(G['antFiveProduce'], 5)\n            break;\n        case 6:\n            tier = 'sixth';\n            x = format(G['antSixProduce'], 5)\n            break;\n        case 7:\n            tier = 'seventh';\n            x = format(G['antSevenProduce'], 5)\n            break;\n        case 8:\n            tier = 'eighth';\n            x = format(G['antEightProduce'], 5)\n            break;\n    }\n\n    me.textContent = i18next.t(`ants.generates.${i}`, { x })\n    la.textContent = i18next.t(priceType, { x: format(player[`${tier}CostAnts` as const]) })\n    ti.textContent = i18next.t('ants.owned', {\n        x: format(player[`${tier}OwnedAnts` as const]),\n        y: format(player[`${tier}GeneratedAnts` as const], 2)\n    })\n}\n\nconst getAntCost = (originalCost: Decimal, buyTo: number, index: number) => {\n    --buyTo\n\n    //Determine how much the cost is for buyTo\n    const cost = originalCost\n        .times(Decimal.pow(G['antCostGrowth'][index-1], buyTo))\n        .add(1 * buyTo);\n\n    return cost;\n}\n\nconst getAntUpgradeCost = (originalCost: Decimal, buyTo: number, index: number) => {\n    --buyTo\n\n    const cost = originalCost.times(Decimal.pow(G['antUpgradeCostIncreases'][index-1], buyTo));\n    return cost;\n}\n\n//Note to self: REWRITE THIS SHIT Kevin :3\nexport const buyAntProducers = (pos: FirstToEighth, originalCost: DecimalSource, index: number) => {\n    const sacrificeMult = antSacrificePointsToMultiplier(player.antSacrificePoints);\n    //This is a fucking cool function. This will buymax ants cus why not\n\n    //Things we need: the position of producers, the costvalues, and input var i\n    originalCost = new Decimal(originalCost)\n    //Initiate type of resource used\n    const tag = index === 1 ? 'reincarnationPoints' : 'antPoints';\n    const key = `${pos}OwnedAnts` as const;\n\n    const buydefault = player[key] + smallestInc(player[key]);\n    let buyTo = buydefault;\n    let cashToBuy = getAntCost(originalCost, buyTo, index);\n    while (player[tag].gte(cashToBuy)) {\n        // Multiply by 4 until the desired amount. Iterate from there\n        buyTo = buyTo * 4;\n        cashToBuy = getAntCost(originalCost, buyTo, index);\n    }\n    let stepdown = Math.floor(buyTo / 8);\n    while (stepdown >= smallestInc(buyTo)) {\n        if (getAntCost(originalCost, buyTo - stepdown, index).lte(player[tag])) {\n            stepdown = Math.floor(stepdown / 2);\n        } else {\n            buyTo = buyTo - Math.max(smallestInc(buyTo), stepdown);\n        }\n    }\n\n    if (!player.antMax) {\n        if (buydefault < buyTo) {\n            buyTo = buydefault;\n        }\n    }\n    // go down by 7 steps below the last one able to be bought and spend the cost of 25 up to the one that you started with and stop if coin goes below requirement\n    let buyFrom = Math.max(buyTo - 6 - smallestInc(buyTo), buydefault);\n    let thisCost = getAntCost(originalCost, buyFrom, index);\n    while (buyFrom <= buyTo && player[tag].gte(thisCost)) {\n        player[tag] = player[tag].sub(thisCost);\n        player[key] = buyFrom;\n        buyFrom = buyFrom + smallestInc(buyFrom);\n        thisCost = getAntCost(originalCost, buyFrom, index);\n        player[`${pos}CostAnts` as const] = thisCost;\n    }\n    if (player.reincarnationPoints.lt(0)) {\n        player.reincarnationPoints = new Decimal('0')\n    }\n    if (player.antPoints.lt(0)) {\n        player.antPoints = new Decimal('0')\n    }\n    calculateAntSacrificeELO();\n\n    // Check if we award Achievement 176-182: Ant autobuy\n    const achRequirements = [2, 6, 20, 100, 500, 6666, 77777];\n    for (let j = 0; j < achRequirements.length; j++) {\n        if (player.achievements[176 + j] === 0 && sacrificeMult > achRequirements[j] && player[`${G['ordinals'][j + 1 as ZeroToSeven]}OwnedAnts` as const] > 0) {\n            achievementaward(176 + j)\n        }\n    }\n\n    if (player.firstOwnedAnts > 6.9e7){\n        player.firstOwnedAnts = 6.9e7\n    }\n}\n\nexport const buyAntUpgrade = (originalCost: DecimalSource, auto: boolean, index: number) => {\n    if (player.currentChallenge.ascension !== 11) {\n        originalCost = new Decimal(originalCost);\n        const buydefault = player.antUpgrades[index-1]! + smallestInc(player.antUpgrades[index-1]!);\n        let buyTo = buydefault;\n        let cashToBuy = getAntUpgradeCost(originalCost, buyTo, index);\n        while (player.antPoints.gte(cashToBuy)) {\n            // Multiply by 4 until the desired amount. Iterate from there\n            buyTo = buyTo * 4;\n            cashToBuy = getAntUpgradeCost(originalCost, buyTo, index);\n        }\n        let stepdown = Math.floor(buyTo / 8);\n        while (stepdown >= smallestInc(buyTo)) {\n            if (getAntUpgradeCost(originalCost, buyTo - stepdown, index).lte(player.antPoints)) {\n                stepdown = Math.floor(stepdown / 2);\n            } else {\n                buyTo = buyTo - Math.max(smallestInc(buyTo), stepdown);\n            }\n        }\n        if (!player.antMax) {\n            if (buydefault < buyTo) {\n                buyTo = buydefault;\n            }\n        }\n        // go down by 7 steps below the last one able to be bought and spend the cost of 25 up to the one that you started with and stop if coin goes below requirement\n        let buyFrom = Math.max(buyTo - 6 - smallestInc(buyTo), buydefault);\n        let thisCost = getAntUpgradeCost(originalCost, buyFrom, index);\n        while (buyFrom <= buyTo && player.antPoints.gte(thisCost)) {\n            player.antPoints = player.antPoints.sub(thisCost);\n            player.antUpgrades[index-1] = buyFrom;\n            buyFrom = buyFrom + smallestInc(buyFrom);\n            thisCost = getAntUpgradeCost(originalCost, buyFrom, index);\n        }\n        calculateAnts();\n        calculateRuneLevels();\n        calculateAntSacrificeELO();\n        if (!auto) {\n            antUpgradeDescription(index)\n        }\n        if (player.antUpgrades[12-1] === 1 && index === 12) {\n            revealStuff()\n        }\n    }\n}\n\nexport const antUpgradeDescription = (i: number) => {\n    const el = DOMCacheGetOrSet('antspecies')\n    const al = DOMCacheGetOrSet('antlevelbonus');\n    const la = DOMCacheGetOrSet('antupgradedescription')\n    const ti = DOMCacheGetOrSet('antupgradecost')\n    const me = DOMCacheGetOrSet('antupgradeeffect')\n\n    const content1 = antspecies['antspecies' + i];\n    const content2 = i18next.t(`ants.upgrades.${i}`)\n    const bonuslevel = G[`bonusant${i}` as keyof typeof G] as typeof G['bonusant1'];\n\n    const c11 = player.currentChallenge.ascension === 11 ? 999 : 0;\n\n    el.childNodes[0].textContent = content1 + ' Level ' + format(player.antUpgrades[i-1])\n    al.textContent = ' [+' + format(Math.min(player.antUpgrades[i-1]! + c11, bonuslevel)) + ']'\n    la.textContent = content2\n    ti.textContent = i18next.t('ants.costGalacticCrumbs', {\n        x: format(Decimal.pow(G['antUpgradeCostIncreases'][i-1], player.antUpgrades[i-1]! * G['extinctionMultiplier'][player.usedCorruptions[10]]).times(G['antUpgradeBaseCost'][i-1]))\n    })\n    me.textContent = i18next.t(`ants.rewards.${i}`, {\n        x: antUpgradeTexts[i - 1]()\n    })\n}\n\nexport const antSacrificePointsToMultiplier = (points: number) => {\n    let multiplier = Math.pow(1 + points / 5000, 2)\n    multiplier *= (1 + 0.2 * Math.log(1 + points) / Math.log(10))\n    if (player.achievements[174] > 0) {\n        multiplier *= (1 + 0.4 * Math.log(1 + points) / Math.log(10))\n    }\n    return Math.min(1e300, multiplier);\n}\n\nexport const showSacrifice = () => {\n    const sacRewards = calculateAntSacrificeRewards();\n    DOMCacheGetOrSet('antSacrificeSummary').style.display = 'block'\n\n    DOMCacheGetOrSet('ELO').innerHTML = i18next.t('ants.yourAntELO', {\n        x: format(G['antELO'], 2),\n        y: format(G['effectiveELO'], 2, false)\n    })\n\n    DOMCacheGetOrSet('SacrificeMultiplier').innerHTML = i18next.t('ants.antSacMultiplier', {\n        y: format(antSacrificePointsToMultiplier(player.antSacrificePoints), 3, false),\n        x: format(antSacrificePointsToMultiplier(player.antSacrificePoints + sacRewards.antSacrificePoints), 3, false)\n    })\n\n    DOMCacheGetOrSet('SacrificeUpgradeMultiplier').innerHTML = i18next.t('ants.upgradeMultiplier', {\n        x: format(G['upgradeMultiplier'], 3, true)\n    })\n\n    DOMCacheGetOrSet('SacrificeTimeMultiplier').innerHTML = i18next.t('ants.timeMultiplier', {\n        x: format(G['timeMultiplier'], 3, true)\n    })\n\n    DOMCacheGetOrSet('antSacrificeOffering').textContent = '+' + format(sacRewards.offerings)\n    DOMCacheGetOrSet('antSacrificeObtainium').textContent = '+' + format(sacRewards.obtainium)\n    if (player.challengecompletions[9] > 0) {\n        DOMCacheGetOrSet('antSacrificeTalismanShard').textContent = i18next.t('ants.elo', { x: format(sacRewards.talismanShards), y: 500 })\n        DOMCacheGetOrSet('antSacrificeCommonFragment').textContent = i18next.t('ants.elo', { x: format(sacRewards.commonFragments), y: 750 })\n        DOMCacheGetOrSet('antSacrificeUncommonFragment').textContent = i18next.t('ants.elo', { x: format(sacRewards.uncommonFragments), y: 1000 })\n        DOMCacheGetOrSet('antSacrificeRareFragment').textContent = i18next.t('ants.elo', { x: format(sacRewards.rareFragments), y: 1500 })\n        DOMCacheGetOrSet('antSacrificeEpicFragment').textContent = i18next.t('ants.elo', { x: format(sacRewards.epicFragments), y: 2000 })\n        DOMCacheGetOrSet('antSacrificeLegendaryFragment').textContent = i18next.t('ants.elo', { x: format(sacRewards.legendaryFragments), y: 3000 })\n        DOMCacheGetOrSet('antSacrificeMythicalFragment').textContent = i18next.t('ants.elo', { x: format(sacRewards.mythicalFragments), y: 5000 })\n    }\n}\n\nexport const sacrificeAnts = async (auto = false) => {\n    let p = true\n\n    if (player.antPoints.gte('1e40')) {\n        if (!auto && player.toggles[32]) {\n            p = await Confirm(i18next.t('ants.autoReset'))\n        }\n        if (p) {\n            const antSacrificePointsBefore = player.antSacrificePoints;\n\n            const sacRewards = calculateAntSacrificeRewards();\n            player.antSacrificePoints += sacRewards.antSacrificePoints;\n            player.runeshards += sacRewards.offerings;\n\n            if (player.currentChallenge.ascension !== 14) {\n                player.researchPoints += sacRewards.obtainium;\n            }\n\n            const historyEntry: ResetHistoryEntryAntSacrifice = {\n                date: Date.now(),\n                seconds: player.antSacrificeTimer,\n                kind: 'antsacrifice',\n                offerings: sacRewards.offerings,\n                obtainium: sacRewards.obtainium,\n                antSacrificePointsBefore: antSacrificePointsBefore,\n                antSacrificePointsAfter: player.antSacrificePoints,\n                baseELO: G['antELO'],\n                effectiveELO: G['effectiveELO'],\n                crumbs: player.antPoints.toString(),\n                crumbsPerSecond: G['antOneProduce'].toString()\n            };\n\n            if (player.challengecompletions[9] > 0) {\n                player.talismanShards = Math.min(1e300, player.talismanShards + sacRewards.talismanShards);\n                player.commonFragments = Math.min(1e300, player.commonFragments + sacRewards.commonFragments);\n                player.uncommonFragments = Math.min(1e300, player.uncommonFragments + sacRewards.uncommonFragments);\n                player.rareFragments = Math.min(1e300, player.rareFragments + sacRewards.rareFragments);\n                player.epicFragments = Math.min(1e300, player.epicFragments + sacRewards.epicFragments);\n                player.legendaryFragments = Math.min(1e300, player.legendaryFragments + sacRewards.legendaryFragments);\n                player.mythicalFragments = Math.min(1e300, player.mythicalFragments + sacRewards.mythicalFragments);\n            }\n\n            // Now we're safe to reset the ants.\n            resetAnts();\n            player.antSacrificeTimer = 0;\n            player.antSacrificeTimerReal = 0;\n            updateTalismanInventory();\n            if (player.autoResearch > 0 && player.autoResearchToggle) {\n                const linGrowth = (player.autoResearch === 200) ? 0.01 : 0;\n                buyResearch(player.autoResearch, true, linGrowth)\n            }\n            calculateAntSacrificeELO();\n\n            Synergism.emit('historyAdd', 'ants', historyEntry);\n        }\n    }\n\n    if (player.mythicalFragments >= 1e11 && player.currentChallenge.ascension === 14 && player.achievements[248] < 1) {\n        achievementaward(248)\n    }\n}\n\nexport const autoBuyAnts = () => {\n    const canAffordUpgrade = (x: number, m: DecimalSource) => player.antPoints.gte(getAntUpgradeCost(new Decimal(G['antUpgradeBaseCost'][x-1]), player.antUpgrades[x-1]! + 1, x).times(m))\n    const ach = [176, 176, 177, 178, 178, 179, 180, 180, 181, 182, 182, 145];\n    const cost = ['100', '100', '1000', '1000', '1e5', '1e6', '1e8', '1e11', '1e15', '1e20', '1e40', '1e100'];\n    if (player.currentChallenge.ascension !== 11) {\n        for (let i = 1; i <= ach.length; i++) {\n            const check = i === 12 ? player.researches[ach[i - 1]] : player.achievements[ach[i - 1]];\n            if (check && canAffordUpgrade(i, 2)) {\n                buyAntUpgrade(cost[i - 1], true, i);\n            }\n        }\n    }\n\n    const _ach = [173, 176, 177, 178, 179, 180, 181, 182];\n    const _cost = ['1e700', '3', '100', '10000', '1e12', '1e36', '1e100', '1e300'];\n    for (let i = 1; i <= _ach.length; i++) {\n        const res = i === 1 ? player.reincarnationPoints : player.antPoints;\n        const m = i === 1 ? 1 : 2; // no multiplier on the first ant cost because it costs particles\n        if (player.achievements[_ach[i - 1]] && res.gte(player[`${G['ordinals'][i - 1 as ZeroToSeven]}CostAnts` as const].times(m))) {\n            buyAntProducers(\n                G['ordinals'][i - 1] as Parameters<typeof buyAntProducers>[0],\n                _cost[i - 1], i\n            );\n        }\n    }\n}\n", "import Decimal from 'break_infinity.js';\nimport { calculateCubeMultFromPowder, calculateCubeQuarkMultiplier, calculatePowderConversion, calculateQuarkMultFromPowder, forcedDailyReset } from './Calculate';\nimport { Cube } from './CubeExperimental';\nimport { format, player } from './Synergism';\nimport type { Player } from './types/Synergism';\nimport { Alert, Confirm, Prompt } from './UpdateHTML';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport { calculateSingularityDebuff } from './singularity';\nimport type { StringMap } from 'i18next';\nimport i18next from 'i18next';\n\nexport interface IHepteractCraft {\n    BASE_CAP: number\n    HEPTERACT_CONVERSION: number\n    OTHER_CONVERSIONS: {[key:string]:number}\n    HTML_STRING: string\n    AUTO?: boolean\n    UNLOCKED?: boolean\n    BAL?: number\n    CAP?: number\n    DISCOUNT?: number\n}\n\nexport const hepteractTypeList = ['chronos', 'hyperrealism', 'quark', 'challenge',\n    'abyss', 'accelerator', 'acceleratorBoost', 'multiplier'] as const;\n\nexport type hepteractTypes = typeof hepteractTypeList[number];\n\nexport class HepteractCraft {\n    /**\n     * Craft is unlocked or not (Default is locked)\n     */\n    UNLOCKED = false;\n\n    /**\n     * Current Inventory (amount) of craft you possess\n     */\n    BAL = 0;\n\n    /**\n     * Maximum Inventory (amount) of craft you can hold\n     * base_cap is the smallest capacity for such item.\n     */\n    CAP = 0;\n    BASE_CAP = 0;\n\n    /**\n     * Conversion rate of hepteract to synthesized items\n     */\n    HEPTERACT_CONVERSION = 0;\n\n    /**\n     * Automatic crafting toggle. If on, allows crafting to be done automatically upon ascension.\n     */\n    AUTO = false;\n\n    /**\n     * Conversion rate of additional items\n     * This is in the form of keys being player variables,\n     * values being the amount player has.\n     */\n    OTHER_CONVERSIONS: {\n        [key in keyof Player]?: number\n    }\n\n    /**\n     * Discount Factor (number from [0, 1))\n     */\n    DISCOUNT = 0;\n\n    /**\n     * String Prefix used for HTML DOM manipulation\n     */\n    HTML_STRING: string\n\n    constructor(data: IHepteractCraft) {\n        this.BASE_CAP = data.BASE_CAP;\n        this.HEPTERACT_CONVERSION = data.HEPTERACT_CONVERSION;\n        this.OTHER_CONVERSIONS = data.OTHER_CONVERSIONS\n        this.HTML_STRING = data.HTML_STRING\n        this.UNLOCKED = data.UNLOCKED ?? false; //This would basically always be true if this parameter is provided\n        this.BAL = data.BAL ?? 0;\n        this.CAP = data.CAP ?? this.BASE_CAP // This sets cap either as previous value or keeps it to default.\n        this.DISCOUNT = data.DISCOUNT ?? 0;\n        this.AUTO = data.AUTO ?? false;\n\n        void this.toggleAutomatic(this.AUTO)\n    }\n\n    // Unlock a synthesizer craft\n    unlock = (hepteractName: string): HepteractCraft | Promise<void> => {\n        if (this.UNLOCKED === true) {\n            return this;\n        }\n        this.UNLOCKED = true;\n        if (player.highestSingularityCount < 5) {\n            return Alert(i18next.t('hepteracts.unlockedCraft', { x: hepteractName }));\n        } else {\n            return this\n        }\n    }\n\n    computeActualCap = (): number => {\n        let multiplier = 1\n        multiplier *= (player.singularityChallenges.limitedAscensions.rewards.hepteractCap) ? 2: 1\n\n        return this.CAP * multiplier\n    }\n\n    // Add to balance through crafting.\n    craft = async (max = false): Promise<HepteractCraft | void> => {\n        let craftAmount = null;\n        const heptCap = this.computeActualCap()\n        const craftCostMulti = calculateSingularityDebuff('Hepteract Costs')\n        // If craft is unlocked, we return object\n        if (!this.UNLOCKED) {\n            return Alert(i18next.t('hepteracts.notUnlocked'));\n        }\n\n        if (heptCap - this.BAL <= 0) {\n            if (player.toggles[35]) {\n                return Alert(i18next.t('hepteracts.reachedCapacity', { x: format(heptCap, 0, true) }))\n            }\n        }\n\n        if (isNaN(player.wowAbyssals) || !isFinite(player.wowAbyssals) || player.wowAbyssals < 0) {\n            player.wowAbyssals = 0;\n        }\n\n        // Calculate the largest craft amount possible, with an upper limit being craftAmount\n        const hepteractLimit = Math.floor((player.wowAbyssals / (this.HEPTERACT_CONVERSION * craftCostMulti)) * 1 / (1 - this.DISCOUNT));\n\n        // Create an array of how many we can craft using our conversion limits for additional items\n        const itemLimits: number[] = [];\n        for (const item in this.OTHER_CONVERSIONS) {\n            // The type of player[item] is number | Decimal | Cube.\n            if (item === 'worlds') {\n                itemLimits.push(Math.floor((player[item as keyof Player] as number) / (this.OTHER_CONVERSIONS[item as keyof Player]!)) * 1 / (1 - this.DISCOUNT));\n            } else {\n                itemLimits.push(Math.floor((player[item as keyof Player] as number) / (craftCostMulti * this.OTHER_CONVERSIONS[item as keyof Player]!)) * 1 / (1 - this.DISCOUNT));\n            }\n        }\n\n        // Get the smallest of the array we created\n        const smallestItemLimit = Math.min(...itemLimits);\n\n        let amountToCraft = Math.min(smallestItemLimit, hepteractLimit, heptCap, heptCap - this.BAL);\n\n        // Return if the material is not a calculable number\n        if (isNaN(amountToCraft) || !isFinite(amountToCraft)) {\n            return Alert(i18next.t('hepteracts.executionFailed'));\n        }\n\n        //Prompt used here. Thank you Khafra for the already made code! -Platonic\n        if (!max) {\n            const craftingPrompt = await Prompt(i18next.t('hepteracts.craft', {\n                x: format(amountToCraft, 0, true),\n                y: Math.floor(amountToCraft / heptCap * 10000) / 100\n            }))\n\n            if (craftingPrompt === null) { // Number(null) is 0. Yeah..\n                if (player.toggles[35]) {\n                    return Alert(i18next.t('hepteracts.cancelled'));\n                } else {\n                    return //If no return, then it will just give another message\n                }\n            }\n            craftAmount = Number(craftingPrompt);\n        } else {\n            craftAmount = heptCap;\n        }\n\n        //Check these lol\n        if (isNaN(craftAmount) || !isFinite(craftAmount) || !Number.isInteger(craftAmount)) { // nan + Infinity checks\n            return Alert(i18next.t('general.validation.finite'));\n        } else if (craftAmount <= 0) { // 0 or less selected\n            return Alert(i18next.t('general.validation.zeroOrLess'));\n        }\n\n        // Get the smallest of hepteract limit, limit found above and specified input\n        amountToCraft = Math.min(smallestItemLimit, hepteractLimit, craftAmount, heptCap - this.BAL);\n\n        if (max && player.toggles[35]) {\n            const craftYesPlz = await Confirm(i18next.t('hepteracts.craftMax', {\n                x: format(amountToCraft, 0, true),\n                y: Math.floor(amountToCraft / heptCap * 10000) / 100\n            }))\n\n            if (!craftYesPlz) {\n                return Alert(i18next.t('hepteracts.cancelled'));\n            }\n        }\n\n        this.BAL = Math.min(heptCap, this.BAL + amountToCraft);\n\n        // Subtract spent items from player\n        player.wowAbyssals -= amountToCraft * this.HEPTERACT_CONVERSION * craftCostMulti;\n\n        if (player.wowAbyssals < 0) {\n            player.wowAbyssals = 0;\n        }\n\n        for (const item in this.OTHER_CONVERSIONS) {\n            if (typeof player[item as keyof Player] === 'number') {\n                (player[item as keyof Player] as number) -= amountToCraft * craftCostMulti * this.OTHER_CONVERSIONS[item as keyof Player]!;\n            }\n\n            if ((player[item as keyof Player] as number) < 0) {\n                (player[item as keyof Player] as number) = 0;\n            } else if (player[item as keyof Player] instanceof Cube) {\n                (player[item as keyof Player] as Cube).sub(amountToCraft * craftCostMulti * this.OTHER_CONVERSIONS[item as keyof Player]!);\n            } else if (item == 'worlds') {\n                player.worlds.sub(amountToCraft * this.OTHER_CONVERSIONS[item]!);\n            }\n        }\n\n        if (player.toggles[35]) {\n            if (!max) {\n                return Alert(i18next.t('hepteracts.craftedHepteracts', { x: format(amountToCraft, 0, true) }))\n            }\n\n            return Alert(i18next.t('hepteracts.craftedHepteractsMax', { x: format(amountToCraft, 0, true) }))\n        }\n    }\n\n    // Reduce balance through spending\n    spend(amount: number): HepteractCraft {\n        if (!this.UNLOCKED) {\n            return this;\n        }\n\n        this.BAL -= amount;\n        return this;\n    }\n\n    // Expand your capacity\n    /**\n     * Expansion can only happen if your current balance is full.\n     */\n    expand = async(): Promise<HepteractCraft | void> => {\n        const expandMultiplier = 2;\n        const currentBalance = this.BAL;\n        const heptCap = this.computeActualCap();\n        const currHeptCapNoMulti = this.CAP\n\n        if (!this.UNLOCKED) {\n            return Alert(i18next.t('hepteracts.notUnlocked'));\n        }\n\n        // Below capacity\n        if (this.BAL < this.CAP) {\n            if (player.toggles[35]) {\n                return Alert(i18next.t('hepteracts.notEnough'));\n            } else {\n                return\n            }\n        }\n\n        const expandPrompt = await Confirm(i18next.t('hepteracts.expandPrompt', {\n            x: format(this.CAP),\n            y: format(heptCap),\n            z: format(heptCap * expandMultiplier),\n            a: format(expandMultiplier, 2, true)\n        }))\n\n        if (!expandPrompt) {\n            return this;\n        }\n\n        // Avoid a double-expand exploit due to player waiting to confirm until after autocraft fires and expands\n        if (this.BAL !== currentBalance || this.CAP !== currHeptCapNoMulti) {\n            if (player.toggles[35]) {\n                return Alert(i18next.t('hepteracts.doubleSpent'));\n            } else {\n                return;\n            }\n        }\n\n        // Empties inventory in exchange for doubling maximum capacity.\n        this.BAL -= this.CAP;\n        this.BAL = Math.max(0, this.BAL)\n\n        this.CAP = Math.min(1e300, this.CAP * expandMultiplier);\n\n        if (player.toggles[35]) {\n            return Alert(i18next.t('hepteracts.expandedInventory', {\n                x: format(heptCap * expandMultiplier, 0, true)\n            }))\n        }\n    }\n\n    // Add some percentage points to your discount\n    /**\n     * Discount has boundaries [0, 1), and upper limit\n     *  is defined by (1 - EPSILON). Craft amount is multiplied by 1 / (1 - Discount)\n     */\n    addDiscount(amount: number): HepteractCraft {\n        // If amount would put Discount to 1 or higher set to upper limit\n        if (this.DISCOUNT + amount > (1 - Number.EPSILON)) {\n            this.DISCOUNT = 1 - Number.EPSILON;\n            return this;\n        }\n\n        this.DISCOUNT += amount;\n        return this;\n    }\n\n    toggleAutomatic(newValue?: boolean): Promise<void> | HepteractCraft {\n        const HTML = DOMCacheGetOrSet(`${this.HTML_STRING}HepteractAuto`);\n\n        // When newValue is empty, current value is toggled\n        this.AUTO = newValue ?? !this.AUTO;\n\n        HTML.textContent = this.AUTO ? i18next.t('general.autoOnColon') : i18next.t('general.autoOffColon')\n        HTML.style.border = `2px solid ${this.AUTO ? 'green' : 'red'}`;\n\n        return this;\n    }\n\n    autoCraft(heptAmount: number): HepteractCraft {\n        const expandMultiplier = 2;\n        const craftCostMulti = calculateSingularityDebuff('Hepteract Costs')\n        let heptCap = this.computeActualCap()\n\n        // Calculate the largest craft amount possible, with an upper limit being craftAmount\n        const hepteractLimitCraft = Math.floor((heptAmount / (craftCostMulti * this.HEPTERACT_CONVERSION)) * 1 / (1 - this.DISCOUNT));\n\n        // Create an array of how many we can craft using our conversion limits for additional items\n        const itemLimits: number[] = [];\n        for (const item in this.OTHER_CONVERSIONS) {\n            // When Auto is turned on, only Quarks and hepteracts are consumed.\n            if (item == 'worlds') {\n                itemLimits.push(Math.floor((player[item as keyof Player] as number) / this.OTHER_CONVERSIONS[item as keyof Player]!) * 1 / (1 - this.DISCOUNT))\n            }\n        }\n\n        // Get the smallest of the array we created [If Empty, this will be infinite]\n        const smallestItemLimit = Math.min(...itemLimits);\n\n        let amountToCraft = Math.min(smallestItemLimit, hepteractLimitCraft);\n        let amountCrafted = 0\n\n        let craft = Math.min(heptCap - this.BAL, amountToCraft) // Always nonzero\n        this.BAL += craft\n        amountCrafted += craft\n        amountToCraft -= craft\n\n        while (this.BAL >= heptCap && amountToCraft >= this.CAP) {\n            this.BAL -= this.CAP\n            this.CAP *= expandMultiplier\n            heptCap *= expandMultiplier\n            craft = Math.min(heptCap - this.BAL, amountToCraft)\n\n            this.BAL += craft\n            amountCrafted += craft\n            amountToCraft -= craft\n        }\n\n        for (const item in this.OTHER_CONVERSIONS) {\n            if (item == 'worlds') {\n                player.worlds.sub(amountCrafted * this.OTHER_CONVERSIONS[item]!);\n            }\n        }\n\n        player.wowAbyssals -= amountCrafted * craftCostMulti * this.HEPTERACT_CONVERSION;\n        if (player.wowAbyssals < 0) {\n            player.wowAbyssals = 0;\n        }\n\n        return this\n    }\n\n    // Get balance of item\n    get amount() {\n        return this.BAL;\n    }\n    get capacity() {\n        return this.CAP\n    }\n    get discount() {\n        return this.DISCOUNT\n    }\n\n}\n\nconst hepteractEffectiveValues = {\n    'chronos': {\n        LIMIT: 1000,\n        DR: 1/6\n    },\n    'hyperrealism': {\n        LIMIT: 1000,\n        DR: 0.33\n    },\n    'quark': {\n        LIMIT: 1000,\n        DR: 0.5\n    },\n    'challenge': {\n        LIMIT: 1000,\n        DR: 1/6\n    },\n    'abyss': {\n        LIMIT: 1,\n        DR: 0\n    },\n    'accelerator': {\n        LIMIT: 1000,\n        DR: 0.2\n    },\n    'acceleratorBoost': {\n        LIMIT: 1000,\n        DR: 0.2\n    },\n    'multiplier': {\n        LIMIT: 1000,\n        DR: 0.2\n    }\n}\n\nexport const createHepteract = (data: IHepteractCraft) => {\n    return new HepteractCraft(data)\n}\n\nexport const hepteractEffective = (data: hepteractTypes) => {\n    let effectiveValue = Math.min(player.hepteractCrafts[data].BAL, hepteractEffectiveValues[data].LIMIT)\n    let exponentBoost = 0;\n    if (data === 'chronos') {\n        exponentBoost += 1/750 * player.platonicUpgrades[19]\n    }\n    if (data === 'quark') {\n        exponentBoost += +player.singularityUpgrades.singQuarkHepteract.getEffect().bonus\n        exponentBoost += +player.singularityUpgrades.singQuarkHepteract2.getEffect().bonus\n        exponentBoost += +player.singularityUpgrades.singQuarkHepteract3.getEffect().bonus\n        exponentBoost += +player.octeractUpgrades.octeractImprovedQuarkHept.getEffect().bonus\n        exponentBoost += player.shopUpgrades.improveQuarkHept / 100\n        exponentBoost += player.shopUpgrades.improveQuarkHept2 / 100\n        exponentBoost += player.shopUpgrades.improveQuarkHept3 / 100\n        exponentBoost += player.shopUpgrades.improveQuarkHept4 / 100\n        exponentBoost += player.shopUpgrades.improveQuarkHept5 / 5000\n\n        const amount = player.hepteractCrafts[data].BAL\n        if (1000 < amount && amount <= 1000 * Math.pow(2, 10)) {\n            return effectiveValue * Math.pow(amount / 1000, 1/2 + exponentBoost)\n        } else if (1000 * Math.pow(2, 10) < amount && amount <= 1000 * Math.pow(2, 18)) {\n            return effectiveValue * Math.pow(Math.pow(2, 10), 1/2 + exponentBoost) *\n                    Math.pow(amount / (1000 * Math.pow(2, 10)), 1/4 + exponentBoost / 2)\n        } else if (1000 * Math.pow(2, 18) < amount && amount <= 1000 * Math.pow(2, 44)) {\n            return effectiveValue * Math.pow(Math.pow(2, 10), 1/2 + exponentBoost) *\n                    Math.pow(Math.pow(2, 8), 1/4 + exponentBoost / 2) *\n                    Math.pow(amount / (1000 * Math.pow(2, 18)), 1/6 + exponentBoost / 3)\n        } else if (1000 * Math.pow(2, 44) < amount) {\n            return effectiveValue * Math.pow(Math.pow(2, 10), 1/2 + exponentBoost) *\n                    Math.pow(Math.pow(2, 8), 1/4 + exponentBoost / 2) *\n                    Math.pow(Math.pow(2, 26), 1/6 + exponentBoost / 3) *\n                    Math.pow(amount / (1000 * Math.pow(2, 44)), 1/12 + exponentBoost / 6)\n        }\n    }\n    if (player.hepteractCrafts[data].BAL > hepteractEffectiveValues[data].LIMIT) {\n        effectiveValue *= Math.pow(player.hepteractCrafts[data].BAL / hepteractEffectiveValues[data].LIMIT, hepteractEffectiveValues[data].DR + exponentBoost)\n    }\n\n    return effectiveValue\n}\n\nexport const hepteractDescriptions = (type: hepteractTypes) => {\n    DOMCacheGetOrSet('hepteractUnlockedText').style.display = 'block'\n    DOMCacheGetOrSet('hepteractCurrentEffectText').style.display = 'block'\n    DOMCacheGetOrSet('hepteractBalanceText').style.display = 'block'\n    DOMCacheGetOrSet('powderDayWarpText').style.display = 'none'\n    DOMCacheGetOrSet('hepteractCostText').style.display = 'block'\n\n    const unlockedText = DOMCacheGetOrSet('hepteractUnlockedText')\n    const effectText = DOMCacheGetOrSet('hepteractEffectText')\n    const currentEffectText = DOMCacheGetOrSet('hepteractCurrentEffectText')\n    const balanceText = DOMCacheGetOrSet('hepteractBalanceText')\n    const costText = DOMCacheGetOrSet('hepteractCostText')\n    const bonusCapacityText = DOMCacheGetOrSet('hepteractBonusCapacity')\n    const craftCostMulti = calculateSingularityDebuff('Hepteract Costs')\n\n    const multiplier = player.hepteractCrafts[type].computeActualCap() / player.hepteractCrafts[type].CAP\n    bonusCapacityText.textContent = (player.hepteractCrafts[type].computeActualCap() / player.hepteractCrafts[type].CAP > 1) ? `Hepteract capacities are currently multiplied by ${multiplier}. Expansions cost what they would if this multiplier were 1.` : ''\n    let currentEffectRecord!: StringMap\n    let oneCost!: string | Record<string, string>\n\n    switch (type){\n        case 'chronos':\n            currentEffectRecord = { x: format(hepteractEffective('chronos') * 6 / 100, 2, true) }\n            oneCost = format(1e115 * craftCostMulti, 0, false)\n\n            break;\n        case 'hyperrealism':\n            currentEffectRecord = { x: format(hepteractEffective('hyperrealism') * 6 / 100, 2, true) }\n            oneCost = format(1e80 * craftCostMulti, 0, true)\n            break;\n        case 'quark':\n            currentEffectRecord = { x: format(hepteractEffective('quark') * 5 / 100, 2, true) }\n            oneCost = '100'\n            break;\n        case 'challenge':\n            currentEffectRecord = { x: format(hepteractEffective('challenge') * 5 / 100, 2, true) }\n            oneCost = {\n                y: format(1e11 * craftCostMulti),\n                z: format(1e22 * craftCostMulti)\n            }\n            break;\n        case 'abyss':\n            oneCost = format(69 * craftCostMulti)\n            break;\n        case 'accelerator':\n            currentEffectRecord = {\n                x: format(2000 * hepteractEffective('accelerator'), 2, true),\n                y: format(hepteractEffective('accelerator') * 3 / 100, 2, true)\n            }\n            oneCost = format(1e14 * craftCostMulti)\n            break;\n        case 'acceleratorBoost':\n            currentEffectRecord = { x: format(hepteractEffective('acceleratorBoost') / 10, 2, true) }\n            oneCost = format(1e10 * craftCostMulti)\n            break;\n        case 'multiplier':\n            currentEffectRecord = {\n                x: format(1000 * hepteractEffective('multiplier'), 2, true),\n                y: format(hepteractEffective('multiplier') * 3 / 100, 2, true)\n            }\n            oneCost = format(1e130 * craftCostMulti)\n            break;\n    }\n\n    effectText.textContent = i18next.t(`wowCubes.hepteractForge.descriptions.${type}.effect`)\n    currentEffectText.textContent = i18next.t(`wowCubes.hepteractForge.descriptions.${type}.currentEffect`, currentEffectRecord)\n    balanceText.textContent = i18next.t('wowCubes.hepteractForge.inventory', {\n        x: format(player.hepteractCrafts[type].BAL, 0, true),\n        y: format(player.hepteractCrafts[type].computeActualCap(), 0, true)\n    })\n    const record = typeof oneCost === 'string' ? { y: oneCost } : oneCost\n    costText.textContent = i18next.t(`wowCubes.hepteractForge.descriptions.${type}.oneCost`, {\n        x: format(player.hepteractCrafts[type].HEPTERACT_CONVERSION * craftCostMulti, 0, true),\n        ...record\n    })\n\n    unlockedText.textContent = player.hepteractCrafts[type].UNLOCKED\n        ? i18next.t('wowCubes.hepteractForge.unlocked')\n        : i18next.t('wowCubes.hepteractForge.locked')\n}\n\n/**\n * Generates the description at the bottom of the page for Overflux Orb crafting\n */\nexport const hepteractToOverfluxOrbDescription = () => {\n    DOMCacheGetOrSet('hepteractUnlockedText').style.display = 'none'\n    DOMCacheGetOrSet('powderDayWarpText').style.display = 'none'\n    DOMCacheGetOrSet('hepteractCostText').style.display = 'block'\n\n    DOMCacheGetOrSet('hepteractCurrentEffectText').textContent = i18next.t('hepteracts.orbEffect', {\n        x: format(100 * (-1 + calculateCubeQuarkMultiplier()), 2, true)\n    })\n    DOMCacheGetOrSet('hepteractBalanceText').textContent = i18next.t('hepteracts.orbsPurchasedToday', {\n        x: format(player.overfluxOrbs, 0, true)\n    })\n    DOMCacheGetOrSet('hepteractEffectText').textContent = i18next.t('hepteracts.amalgamate')\n    DOMCacheGetOrSet('hepteractCostText').textContent = i18next.t('hepteracts.cost250k')\n}\n\n/**\n * Trades Hepteracts for Overflux Orbs at 250,000 : 1 ratio. If null or invalid will gracefully terminate.\n * @returns Alert of either purchase failure or success\n */\nexport const tradeHepteractToOverfluxOrb = async (buyMax?:boolean) => {\n    const maxBuy = Math.floor(player.wowAbyssals / 250000);\n    let toUse: number;\n\n    if (buyMax) {\n        if (player.toggles[35]) {\n            const craftYesPlz = await Confirm(i18next.t('hepteracts.craftMaxOrbs', { x: format(maxBuy, 0, true) }));\n            if (!craftYesPlz) {\n                return Alert(i18next.t('hepteracts.cancelled'));\n            }\n        }\n        toUse = maxBuy;\n    } else {\n        const hepteractInput = await Prompt(i18next.t('hepteracts.hepteractInput', { x: format(maxBuy, 0, true) }));\n        if (hepteractInput === null) {\n            if (player.toggles[35]) {\n                return Alert(i18next.t('hepteracts.cancelled'));\n            } else {\n                return\n            }\n        }\n\n        toUse = Number(hepteractInput);\n        if (isNaN(toUse) ||\n            !isFinite(toUse) ||\n            !Number.isInteger(toUse) ||\n            toUse <= 0) {\n            return Alert(i18next.t('general.validation.invalidNumber'));\n        }\n    }\n\n    const buyAmount = Math.min(maxBuy, Math.floor(toUse));\n    const beforeEffect = calculateCubeQuarkMultiplier();\n    player.overfluxOrbs += buyAmount;\n    player.wowAbyssals -= 250000 * buyAmount;\n    const afterEffect = calculateCubeQuarkMultiplier();\n\n    if (player.wowAbyssals < 0) {\n        player.wowAbyssals = 0;\n    }\n\n    const powderGain = player.shopUpgrades.powderAuto * calculatePowderConversion().mult * buyAmount / 100;\n    player.overfluxPowder += powderGain;\n\n    const powderText = (powderGain > 0) ? i18next.t('hepteracts.gainedPowder', { x: format(powderGain, 2, true) }) : '';\n    if (player.toggles[35]) {\n        return Alert(i18next.t('hepteracts.purchasedOrbs', {\n            x: format(buyAmount, 0, true),\n            y: format(100 * (afterEffect - beforeEffect), 2, true),\n            z: powderText\n        }))\n    }\n}\n\nexport const toggleAutoBuyOrbs = (newValue?: boolean, firstLoad = false) => {\n    const HTML = DOMCacheGetOrSet('hepteractToQuarkTradeAuto');\n\n    if (!firstLoad) {\n        // When newValue is empty, current value is toggled\n        player.overfluxOrbsAutoBuy = newValue ?? !player.overfluxOrbsAutoBuy;\n    }\n\n    HTML.textContent = player.overfluxOrbsAutoBuy ? i18next.t('general.autoOnColon') : i18next.t('general.autoOffColon')\n    HTML.style.border = `2px solid ${player.overfluxOrbsAutoBuy ? 'green' : 'red'}`;\n}\n\n/**\n * Generates the description at the bottom of the page for Overflux Powder Properties\n */\nexport const overfluxPowderDescription = () => {\n    let powderEffectText: string\n    if (player.platonicUpgrades[16] > 0) {\n        powderEffectText = i18next.t('hepteracts.allCubeGainExtended', {\n            x: format(100 * (calculateCubeMultFromPowder() - 1), 2, true),\n            y: format(100 * (calculateQuarkMultFromPowder() - 1), 3, true),\n            z: format(2 * player.platonicUpgrades[16] * Math.min(1, player.overfluxPowder / 1e5), 2, true),\n            a: format(Decimal.pow(player.overfluxPowder + 1, 10 * player.platonicUpgrades[16]))\n        })\n    } else {\n        powderEffectText = i18next.t('hepteracts.allCubeGain', {\n            x: format(100 * (calculateCubeMultFromPowder() - 1), 2, true),\n            y: format(100 * (calculateQuarkMultFromPowder() - 1), 3, true)\n        })\n    }\n    DOMCacheGetOrSet('hepteractUnlockedText').style.display = 'none'\n    DOMCacheGetOrSet('hepteractCurrentEffectText').textContent = i18next.t('hepteracts.powderEffect', { x: powderEffectText })\n    DOMCacheGetOrSet('hepteractBalanceText').textContent = i18next.t('hepteracts.powderLumps', { x: format(player.overfluxPowder, 2, true) })\n    DOMCacheGetOrSet('hepteractEffectText').textContent = i18next.t('hepteracts.expiredOrbs', {\n        x: format(1 / calculatePowderConversion().mult, 1, true)\n    })\n    DOMCacheGetOrSet('hepteractCostText').style.display = 'none'\n\n    DOMCacheGetOrSet('powderDayWarpText').style.display = 'block'\n    DOMCacheGetOrSet('powderDayWarpText').textContent = i18next.t('hepteracts.dayWarpsRemaining', { x: player.dailyPowderResetUses })\n}\n\n/**\n * Attempts to operate a 'Day Reset' which, if successful, resets Daily Cube counters for the player.\n * Note by Platonic: kinda rushed job but idk if it can be improved.\n * @returns Alert, either for success or failure of warping\n */\nexport const overfluxPowderWarp = async (auto: boolean) => {\n    if (!auto) {\n        if (player.autoWarpCheck) {\n            return Alert(i18next.t('hepteracts.warpImpossible'))\n        }\n        if (player.dailyPowderResetUses <= 0) {\n            return Alert(i18next.t('hepteracts.machineCooldown'))\n        }\n        if (player.overfluxPowder < 25) {\n            return Alert(i18next.t('hepteracts.atleastPowder'))\n        }\n        const c = await Confirm(i18next.t('hepteracts.stumbleMachine'))\n        if (!c) {\n            if (player.toggles[35]) {\n                return Alert(i18next.t('hepteracts.walkAwayMachine'))\n            }\n        } else {\n            player.overfluxPowder -= 25\n            player.dailyPowderResetUses -= 1;\n            forcedDailyReset();\n            if (player.toggles[35]) {\n                return Alert(i18next.t('hepteracts.useMachine'))\n            }\n        }\n    } else {\n        if (player.autoWarpCheck) {\n            const a = await Confirm(i18next.t('hepteracts.useAllWarpsPrompt'))\n            if (a) {\n                DOMCacheGetOrSet('warpAuto').textContent = i18next.t('general.autoOffColon')\n                DOMCacheGetOrSet('warpAuto').style.border = '2px solid red'\n                player.autoWarpCheck = false\n                player.dailyPowderResetUses = 0;\n                return Alert(i18next.t('hepteracts.machineCooldown'))\n            } else {\n                if (player.toggles[35]) {\n                    return Alert(i18next.t('hepteracts.machineDidNotConsume'))\n                }\n            }\n        } else {\n            const a = await Confirm(i18next.t('hepteracts.boostQuarksPrompt'))\n            if (a) {\n                DOMCacheGetOrSet('warpAuto').textContent = i18next.t('general.autoOnColon')\n                DOMCacheGetOrSet('warpAuto').style.border = '2px solid green'\n                player.autoWarpCheck = true\n                if (player.dailyPowderResetUses === 0) {\n                    return Alert(i18next.t('hepteracts.machineOverdrive'))\n                }\n                return Alert(i18next.t('hepteracts.machineInOverdrive'))\n            } else {\n                if (player.toggles[35]) {\n                    return Alert(i18next.t('hepteracts.machineUsualContinue'))\n                }\n            }\n        }\n    }\n}\n\n/**\n * Get the HepteractCrafts which are unlocked and auto = ON\n * @returns Array of HepteractCraft\n */\nexport const getAutoHepteractCrafts = () => {\n    const autoHepteracts: HepteractCraft[] = [];\n    for (const craftName of Object.keys(player.hepteractCrafts)) {\n        const craftKey = craftName as keyof Player['hepteractCrafts'];\n        if (player.hepteractCrafts[craftKey].AUTO && player.hepteractCrafts[craftKey].UNLOCKED) {\n            autoHepteracts.push(player.hepteractCrafts[craftKey]);\n        }\n    }\n    return autoHepteracts;\n}\n\n// Hepteract of Chronos [UNLOCKED]\nexport const ChronosHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 1e4,\n    OTHER_CONVERSIONS: {'researchPoints': 1e115},\n    HTML_STRING: 'chronos',\n    UNLOCKED: true\n});\n\n// Hepteract of Hyperrealism [UNLOCKED]\nexport const HyperrealismHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 1e4,\n    OTHER_CONVERSIONS: {'runeshards': 1e80},\n    HTML_STRING: 'hyperrealism',\n    UNLOCKED: true\n});\n\n// Hepteract of Too Many Quarks [UNLOCKED]\nexport const QuarkHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 1e4,\n    OTHER_CONVERSIONS: {'worlds': 100},\n    HTML_STRING: 'quark',\n    UNLOCKED: true\n});\n\n// Hepteract of Challenge [LOCKED]\nexport const ChallengeHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 5e4,\n    OTHER_CONVERSIONS: {'wowPlatonicCubes': 1e11, 'wowCubes': 1e22},\n    HTML_STRING: 'challenge'\n});\n\n// Hepteract of The Abyssal [LOCKED]\nexport const AbyssHepteract = new HepteractCraft({\n    BASE_CAP: 1,\n    HEPTERACT_CONVERSION: 1e8,\n    OTHER_CONVERSIONS: {'wowCubes': 69},\n    HTML_STRING: 'abyss'\n})\n\n// Hepteract of Too Many Accelerator [LOCKED]\nexport const AcceleratorHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 1e5,\n    OTHER_CONVERSIONS: {'wowTesseracts': 1e14},\n    HTML_STRING: 'accelerator'\n})\n\n// Hepteract of Too Many Accelerator Boost [LOCKED]\nexport const AcceleratorBoostHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 2e5,\n    OTHER_CONVERSIONS: {'wowHypercubes': 1e10},\n    HTML_STRING: 'acceleratorBoost'\n})\n\n// Hepteract of Too Many Multiplier [LOCKED]\nexport const MultiplierHepteract = new HepteractCraft({\n    BASE_CAP: 1000,\n    HEPTERACT_CONVERSION: 3e5,\n    OTHER_CONVERSIONS: {'researchPoints': 1e130},\n    HTML_STRING: 'multiplier'\n})\n", "import { player, format, formatTimeShort } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { hepteractEffective } from './Hepteracts'\nimport {calculateSigmoidExponential, calculateCubeMultiplier, calculateOfferings, calculateTimeAcceleration, calculateTesseractMultiplier, calculateHypercubeMultiplier, calculatePlatonicMultiplier, calculateHepteractMultiplier, calculateAllCubeMultiplier, calculateSigmoid, calculatePowderConversion, calculateEffectiveIALevel, calculateQuarkMultFromPowder, calculateOcteractMultiplier, calculateQuarkMultiplier, calculateEventBuff, calculateSingularityQuarkMilestoneMultiplier, calculateTotalOcteractQuarkBonus, calculateAscensionSpeedMultiplier, calculateGoldenQuarkMultiplier } from './Calculate';\nimport { challenge15ScoreMultiplier } from './Challenges';\nimport type { GlobalVariables } from './types/Synergism';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport Decimal from 'break_infinity.js';\nimport { addCodeMaxUses, addCodeInterval, addCodeAvailableUses, addCodeTimeToNextUse, addCodeBonuses } from './ImportExport';\n\nconst associated = new Map<string, string>([\n    ['kMisc', 'miscStats'],\n    ['kFreeAccel', 'acceleratorStats'],\n    ['kFreeMult', 'multiplierStats'],\n    ['kOfferingMult', 'offeringMultiplierStats'],\n    ['kGlobalCubeMult', 'globalCubeMultiplierStats'],\n    ['kQuarkMult', 'globalQuarkMultiplierStats'],\n    ['kGSpeedMult', 'globalSpeedMultiplierStats'],\n    ['kCubeMult', 'cubeMultiplierStats'],\n    ['kTessMult', 'tesseractMultiplierStats'],\n    ['kHypercubeMult', 'hypercubeMultiplierStats'],\n    ['kPlatMult', 'platonicMultiplierStats'],\n    ['kHeptMult', 'hepteractMultiplierStats'],\n    ['kOrbPowderMult', 'powderMultiplierStats'],\n    ['kOctMult', 'octeractMultiplierStats'],\n    ['kASCMult', 'ascensionSpeedMultiplierStats'],\n    ['kGQMult', 'goldenQuarkMultiplierStats'],\n    ['kAddStats', 'addCodeStats']\n]);\n\nexport const displayStats = (btn: HTMLElement) => {\n    for (const e of Array.from(btn.parentElement!.children) as HTMLElement[]) {\n        const statsEl = DOMCacheGetOrSet(associated.get(e.id)!);\n        if (e.id !== btn.id) {\n            e.style.backgroundColor = '';\n            statsEl.style.display = 'none';\n            statsEl.classList.remove('activeStats');\n        } else {\n            e.style.backgroundColor = 'crimson';\n            statsEl.style.display = 'block';\n            statsEl.classList.add('activeStats');\n        }\n    }\n}\n\nexport const loadStatisticsUpdate = () => {\n    const activeStats = document.getElementsByClassName('activeStats') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < activeStats.length; i++) {\n        switch (activeStats[i].id) {\n            case 'miscStats':\n                loadStatisticsMiscellaneous();\n                break;\n            case 'acceleratorStats':\n                loadStatisticsAccelerator();\n                break;\n            case 'multiplierStats':\n                loadStatisticsMultiplier();\n                break;\n            case 'offeringMultiplierStats':\n                loadStatisticsOfferingMultipliers();\n                break;\n            case 'globalQuarkMultiplierStats':\n                loadQuarkMultiplier();\n                break;\n            case 'globalSpeedMultiplierStats':\n                loadGlobalSpeedMultiplier();\n                break;\n            case 'powderMultiplierStats':\n                loadPowderMultiplier();\n                break;\n            case 'ascensionSpeedMultiplierStats':\n                loadStatisticsAscensionSpeedMultipliers();\n                break;\n            case 'goldenQuarkMultiplierStats':\n                loadStatisticsGoldenQuarkMultipliers();\n                break;\n            case 'addCodeStats':\n                loadAddCodeModifiersAndEffects();\n                break;\n            default:\n                loadStatisticsCubeMultipliers();\n                break;\n        }\n    }\n}\n\nexport const loadStatisticsMiscellaneous = () => {\n    DOMCacheGetOrSet('sMisc1').textContent = format(player.prestigeCount, 0, true)\n    DOMCacheGetOrSet('sMisc2').textContent = format(1000 * player.fastestprestige) + 'ms'\n    DOMCacheGetOrSet('sMisc3').textContent = format(player.maxofferings)\n    DOMCacheGetOrSet('sMisc4').textContent = format(G['runeSum'])\n    DOMCacheGetOrSet('sMisc5').textContent = format(player.transcendCount, 0, true)\n    DOMCacheGetOrSet('sMisc6').textContent = format(1000 * player.fastesttranscend) + 'ms'\n    DOMCacheGetOrSet('sMisc7').textContent = format(player.reincarnationCount, 0, true)\n    DOMCacheGetOrSet('sMisc8').textContent = format(1000 * player.fastestreincarnate) + 'ms'\n    DOMCacheGetOrSet('sMisc9').textContent = format(player.maxobtainium)\n    DOMCacheGetOrSet('sMisc10').textContent = format(player.maxobtainiumpersecond, 2, true)\n    DOMCacheGetOrSet('sMisc11').textContent = format(player.obtainiumpersecond, 2, true)\n    DOMCacheGetOrSet('sMisc12').textContent = format(player.ascensionCount, 0, true)\n    DOMCacheGetOrSet('sMisc13').textContent = format(player.quarksThisSingularity, 0, true)\n    DOMCacheGetOrSet('sMisc14').textContent = format(player.totalQuarksEver + player.quarksThisSingularity, 0, true)\n    DOMCacheGetOrSet('sMisc15').textContent = formatTimeShort(player.quarkstimer) + ' / ' + formatTimeShort(90000 + 18000 * player.researches[195])\n    DOMCacheGetOrSet('sMisc16').textContent = synergismStage(0);\n}\n\nexport const loadStatisticsAccelerator = () => {\n    DOMCacheGetOrSet('sA1').textContent = '+' + format(G['freeUpgradeAccelerator'], 0, false)\n    DOMCacheGetOrSet('sA2').textContent = '+' + format(G['totalAcceleratorBoost'] * (4 + 2 * player.researches[18] + 2 * player.researches[19] + 3 * player.researches[20] + G['cubeBonusMultiplier'][1]), 0, false)\n    DOMCacheGetOrSet('sA3').textContent = '+' + format(Math.floor(Math.pow(G['rune1level'] * G['effectiveLevelMult'] / 10, 1.1)), 0, true)\n    DOMCacheGetOrSet('sA4').textContent = 'x' + format(1 + G['rune1level'] * 1 / 200 * G['effectiveLevelMult'], 3, true)\n    DOMCacheGetOrSet('sA5').textContent = 'x' + format(Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25]), 3, true)\n    DOMCacheGetOrSet('sA6').textContent = 'x' + format(Math.pow(1.01, player.achievements[60] + player.achievements[61] + player.achievements[62]), 3, true)\n    DOMCacheGetOrSet('sA7').textContent = 'x' + format(1 + 1 / 5 * player.researches[1], 3, true)\n    DOMCacheGetOrSet('sA8').textContent = 'x' + format(1 + 1 / 20 * player.researches[6] + 1 / 25 * player.researches[7] + 1 / 40 * player.researches[8] + 3 / 200 * player.researches[9] + 1 / 200 * player.researches[10], 3, true)\n    DOMCacheGetOrSet('sA9').textContent = 'x' + format(1 + 1 / 20 * player.researches[86], 3, true)\n    DOMCacheGetOrSet('sA10').textContent = 'x' + format(((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5 ? 1.25 : 1), 3, true)\n    DOMCacheGetOrSet('sA11').textContent = '^' + format(Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G['viscosityPower'][player.usedCorruptions[2]]), 3, true)\n    DOMCacheGetOrSet('sA12').textContent = format(G['freeAccelerator'], 0, true)\n}\n\nexport const loadStatisticsMultiplier = () => {\n    DOMCacheGetOrSet('sM1').textContent = '+' + format(G['freeUpgradeMultiplier'], 0, true)\n    DOMCacheGetOrSet('sM2').textContent = '+' + format(Math.floor(Math.floor(G['rune2level'] / 10 * G['effectiveLevelMult']) * Math.floor(10 + G['rune2level'] / 10 * G['effectiveLevelMult']) / 2) * 100 / 100, 0, true)\n    DOMCacheGetOrSet('sM3').textContent = 'x' + format(1 + G['rune2level'] / 200 * G['effectiveLevelMult'], 3, true)\n    DOMCacheGetOrSet('sM4').textContent = 'x' + format(Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25]) * (1 + player.upgrades[34] * 3 / 100) * (1 + player.upgrades[34] * (2 / 103)), 3, true)\n    DOMCacheGetOrSet('sM5').textContent = 'x' + format(Math.pow(1.01, player.achievements[57] + player.achievements[58] + player.achievements[59]), 3, true)\n    DOMCacheGetOrSet('sM6').textContent = 'x' + format(1 + 1 / 5 * player.researches[2], 3, true)\n    DOMCacheGetOrSet('sM7').textContent = 'x' + format(1 + 1 / 20 * player.researches[11] + 1 / 25 * player.researches[12] + 1 / 40 * player.researches[13] + 3 / 200 * player.researches[14] + 1 / 200 * player.researches[15], 3, true)\n    DOMCacheGetOrSet('sM8').textContent = 'x' + format(1 + 1 / 20 * player.researches[87], 3, true)\n    DOMCacheGetOrSet('sM9').textContent = 'x' + format(calculateSigmoidExponential(40, (player.antUpgrades[4]! + G['bonusant5']) / 1000 * 40 / 39),2,true)\n    DOMCacheGetOrSet('sM10').textContent = 'x' + format(G['cubeBonusMultiplier'][2], 3, true)\n    DOMCacheGetOrSet('sM11').textContent = 'x' + format(((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5 ? 1.25 : 1), 3, true)\n    DOMCacheGetOrSet('sM12').textContent = '^' + format(Math.min(1, (1 + player.platonicUpgrades[6] / 30) * G['viscosityPower'][player.usedCorruptions[2]]), 3, true)\n    DOMCacheGetOrSet('sM13').textContent = format(G['freeMultiplier'], 3, true)\n}\nexport const loadQuarkMultiplier = () => {\n    DOMCacheGetOrSet('sGQM1').textContent = 'x' + format(1, 3, true) //Base\n    DOMCacheGetOrSet('sGQM2').textContent = '+' + format(player.achievementPoints / 25000, 3, true) //AP\n    DOMCacheGetOrSet('sGQM3').textContent = '+' + format(player.achievements[250] > 0 ? 0.10 : 0, 3, true) //Max r8x25\n    DOMCacheGetOrSet('sGQM4').textContent = '+' + format(player.achievements[251] > 0 ? 0.10 : 0, 3, true) //Max w5x10\n    DOMCacheGetOrSet('sGQM5').textContent = '+' + format(player.platonicUpgrades[5] > 0 ? 0.20 : 0, 3, true) //ALPHA\n    DOMCacheGetOrSet('sGQM6').textContent = '+' + format(player.platonicUpgrades[10] > 0 ? 0.25 : 0, 3, true) //BETA\n    DOMCacheGetOrSet('sGQM7').textContent = '+' + format(player.platonicUpgrades[15] > 0 ? 0.30 : 0, 3, true) //OMEGA\n    DOMCacheGetOrSet('sGQM8').textContent = '+' + format(G.challenge15Rewards['quarks']-1, 3, true) //Challenge 15 Reward\n    DOMCacheGetOrSet('sGQM9').textContent = 'x' + format(player.worlds.applyBonus(1 / calculateQuarkMultiplier()), 3, true) //Patreon Bonus\n    DOMCacheGetOrSet('sGQM10').textContent = 'x' + format((G['isEvent'] ? 1 + calculateEventBuff('Quarks') + calculateEventBuff('One Mind') : 1), 3, true) //Event\n    DOMCacheGetOrSet('sGQM11').textContent = 'x' + format(1.1 + 0.15 / 75 * calculateEffectiveIALevel(), 3, true) //IA Rune\n    DOMCacheGetOrSet('sGQM12').textContent = 'x' + format(player.challenge15Exponent >= 1e15 ? 1 + 5/10000 * hepteractEffective('quark') : 1, 3, true) //Quark Hepteract\n    DOMCacheGetOrSet('sGQM13').textContent = 'x' + format(calculateQuarkMultFromPowder(), 3, true) //Powder\n    DOMCacheGetOrSet('sGQM14').textContent = 'x' + format(1 + player.achievements[266] * Math.min(0.1, (player.ascensionCount) / 1e16), 3, true) // Achievement 266 [Max: 10% at 1Qa Ascensions]\n    DOMCacheGetOrSet('sGQM15').textContent = 'x' + format(1 + player.singularityCount / 10, 3, true) //Singularity\n    DOMCacheGetOrSet('sGQM16').textContent = 'x' + format(calculateSingularityQuarkMilestoneMultiplier(), 3, true) // Singularity Milestones\n    DOMCacheGetOrSet('sGQM17').textContent = 'x' + format(1 + 0.10 * player.cubeUpgrades[53] / 100, 3, true) // Cube Upgrade 6x3 (Cx3)\n    DOMCacheGetOrSet('sGQM18').textContent = 'x' + format(1 + 1/10000 * player.cubeUpgrades[68] + 0.05 * (Math.floor(player.cubeUpgrades[68] / 1000)), 3, true)\n    DOMCacheGetOrSet('sGQM19').textContent = 'x' + format(1 + 0.02 * player.singularityUpgrades.intermediatePack.level +           // 1.02\n                                                            0.04 * player.singularityUpgrades.advancedPack.level +               // 1.06\n                                                            0.06 * player.singularityUpgrades.expertPack.level +                 // 1.12\n                                                            0.08 * player.singularityUpgrades.masterPack.level +                 // 1.20\n                                                            0.10 * player.singularityUpgrades.divinePack.level, 3, true)\n    DOMCacheGetOrSet('sGQM20').textContent = 'x' + format(1 + 0.25 * +player.octeractUpgrades.octeractStarter.getEffect().bonus, 3, true)\n    DOMCacheGetOrSet('sGQM21').textContent = 'x' + format(+player.octeractUpgrades.octeractQuarkGain.getEffect().bonus, 3, true)\n    DOMCacheGetOrSet('sGQM22').textContent = 'x' + format(calculateTotalOcteractQuarkBonus(), 3, true)\n    DOMCacheGetOrSet('sGQM23').textContent = 'x' + format(1 + +player.singularityUpgrades.singQuarkImprover1.getEffect().bonus, 3, true)\n    DOMCacheGetOrSet('sGQM24').textContent = 'x' + format(1 + 1/10000 * Math.floor(player.octeractUpgrades.octeractQuarkGain.level / 199) *\n                                                            player.octeractUpgrades.octeractQuarkGain2.level *\n                                                            Math.floor(1 + Math.log10(Math.max(1, player.hepteractCrafts.quark.BAL))),\n    3,\n    true)\n    DOMCacheGetOrSet('sGQMT').textContent = 'x' + format(player.worlds.applyBonus(1), 3, true)\n}\n\nexport const loadGlobalSpeedMultiplier = () => {\n    const globalSpeedStats = calculateTimeAcceleration();\n\n    const preDRlist = globalSpeedStats.preList;\n    for (let i = 0; i < preDRlist.length; i++) {\n        DOMCacheGetOrSet(`sGSMa${i + 1}`).textContent = `x${format(preDRlist[i], 3, true)}`;\n    }\n\n    const drList = globalSpeedStats.drList;\n    for (let i = 0; i < drList.length; i++) {\n        DOMCacheGetOrSet(`sGSMb${i + 1}`).textContent = `x${format(drList[i], 3, true)}`;\n    }\n\n    const postDRlist = globalSpeedStats.postList;\n    for (let i = 0; i < postDRlist.length; i++) {\n        DOMCacheGetOrSet(`sGSMc${i + 1}`).textContent = `x${format(postDRlist[i], 3, true)}`;\n    }\n\n    DOMCacheGetOrSet('sGSMT').textContent = format(globalSpeedStats.mult, 3);\n}\n\nexport const loadStatisticsCubeMultipliers = () => {\n\n    const arr0 = calculateAllCubeMultiplier().list;\n    const map0: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 2, desc: 'Ascension Time Multiplier:'},\n        2: {acc: 2, desc: 'Sun and Moon Achievements:'},\n        3: {acc: 2, desc: 'Speed Achievement:'},\n        4: {acc: 2, desc: 'Challenge 15 All Cube Bonus:'},\n        5: {acc: 2, desc: 'Rune 6 - Infinite Ascent:'},\n        6: {acc: 2, desc: 'Platonic Beta:'},\n        7: {acc: 2, desc: 'Platonic Omega:'},\n        8: {acc: 2, desc: 'Overflux Powder:'},\n        9: {acc: 2, desc: 'Event:'},\n        10: {acc: 2, desc: 'Singularity Factor:'},\n        11: {acc: 2, desc: 'Wow Pass Y'},\n        12: {acc: 2, desc: 'Starter Pack:'},\n        13: {acc: 2, desc: 'Cube Flame [GQ]:'},\n        14: {acc: 2, desc: 'Cube Blaze [GQ]:'},\n        15: {acc: 2, desc: 'Cube Inferno [GQ]:'},\n        16: {acc: 2, desc: 'Wow Pass Z:'},\n        17: {acc: 2, desc: 'Cookie Upgrade 16:'},\n        18: {acc: 2, desc: 'Cookie Upgrade 8:'},\n        19: {acc: 2, desc: 'Total Octeract Bonus:'},\n        20: {acc: 2, desc: 'No Singularity Upgrades Challenge:'},\n        21: {acc: 2, desc: 'Citadel [GQ]'},\n        22: {acc: 2, desc: 'Citadel 2 [GQ]'},\n        23: {acc: 4, desc: 'Platonic DELTA'},\n        24: {acc: 2, desc: 'Wow Pass \u221E'}\n    }\n    for (let i = 0; i < arr0.length; i++) {\n        const statGCMi = DOMCacheGetOrSet(`statGCM${i + 1}`);\n        statGCMi.childNodes[0].textContent = map0[i + 1].desc;\n        DOMCacheGetOrSet(`sGCM${i + 1}`).textContent = `x${format(arr0[i], map0[i + 1].acc, true)}`;\n    }\n\n    DOMCacheGetOrSet('sGCMT').textContent = `x${format(calculateAllCubeMultiplier().mult, 3)}`;\n\n    const arr = calculateCubeMultiplier().list;\n    const map: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 2, desc: 'Ascension Score Multiplier:'},\n        2: {acc: 2, desc: 'Global Cube Multiplier:'},\n        3: {acc: 2, desc: 'Season Pass 1:'},\n        4: {acc: 2, desc: 'Researches (Except 8x25):'},\n        5: {acc: 2, desc: 'Research 8x25:'},\n        6: {acc: 2, desc: 'Cube Upgrades:'},\n        7: {acc: 2, desc: 'Constant Upgrade 10:'},\n        8: {acc: 2, desc: 'Achievement 189 Bonus:'},\n        9: {acc: 2, desc: 'Achievement 193 Bonus:'},\n        10: {acc: 2, desc: 'Achievement 195 Bonus:'},\n        11: {acc: 2, desc: 'Achievement 198-201 Bonus:'},\n        12: {acc: 2, desc: 'Achievement 254 Bonus:'},\n        13: {acc: 2, desc: 'Spirit Power:'},\n        14: {acc: 2, desc: 'Platonic Cubes:'},\n        15: {acc: 2, desc: 'Platonic 1x1:'},\n        16: {acc: 2, desc: 'Cookie Upgrade 13:'}\n    }\n    for (let i = 0; i < arr.length; i++) {\n        const statCMi = DOMCacheGetOrSet(`statCM${i + 1}`);\n        statCMi.childNodes[0].textContent = map[i + 1].desc;\n        DOMCacheGetOrSet(`sCM${i + 1}`).textContent = `x${format(arr[i], map[i + 1].acc, true)}`;\n    }\n    // PLAT\n    DOMCacheGetOrSet('sCMT').textContent = `x${format(calculateCubeMultiplier().mult, 3)}`;\n\n    const arr2 = calculateTesseractMultiplier().list;\n    const map2: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 2, desc: 'Ascension Score Multiplier:'},\n        2: {acc: 2, desc: 'Global Cube Multiplier:'},\n        3: {acc: 2, desc: 'Season Pass 1:'},\n        4: {acc: 2, desc: 'Constant Upgrade 10:'},\n        5: {acc: 2, desc: 'Cube Upgrade 3x10:'},\n        6: {acc: 2, desc: 'Cube Upgrade 4x8:'},\n        7: {acc: 2, desc: 'Achievement 195 Bonus:'},\n        8: {acc: 2, desc: 'Achievement 202 Bonus:'},\n        9: {acc: 2, desc: 'Achievement 205-208 Bonus:'},\n        10: {acc: 2, desc: 'Achievement 255 Bonus:'},\n        11: {acc: 2, desc: 'Platonic Cubes:'},\n        12: {acc: 2, desc: 'Platonic 1x2:'}\n    }\n    for (let i = 0; i < arr2.length; i++) {\n        const statTeMi = DOMCacheGetOrSet(`statTeM${i + 1}`);\n        statTeMi.childNodes[0].textContent = map2[i + 1].desc;\n        DOMCacheGetOrSet(`sTeM${i + 1}`).textContent = `x${format(arr2[i], map2[i + 1].acc, true)}`;\n    }\n\n    DOMCacheGetOrSet('sTeMT').textContent = `x${format(calculateTesseractMultiplier().mult, 3)}`;\n\n    const arr3 = calculateHypercubeMultiplier().list;\n    const map3: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 2, desc: 'Ascension Score Multiplier:'},\n        2: {acc: 2, desc: 'Global Cube Multiplier:'},\n        3: {acc: 2, desc: 'Season Pass 2:'},\n        4: {acc: 2, desc: 'Achievement 212-215 Bonus:'},\n        5: {acc: 2, desc: 'Achievement 216 Bonus:'},\n        6: {acc: 2, desc: 'Achievement 253 Bonus:'},\n        7: {acc: 2, desc: 'Achievement 256 Bonus:'},\n        8: {acc: 2, desc: 'Achievement 265 Bonus:'},\n        9: {acc: 2, desc: 'Platonic Cubes:'},\n        10: {acc: 2, desc: 'Platonic 1x3:'},\n        11: {acc: 2, desc: 'Hyperreal Hepteract Bonus:'}\n    }\n    for (let i = 0; i < arr3.length; i++) {\n        const statHyMi = DOMCacheGetOrSet(`statHyM${i + 1}`);\n        statHyMi.childNodes[0].textContent = map3[i + 1].desc;\n        DOMCacheGetOrSet(`sHyM${i + 1}`).textContent = `x${format(arr3[i], map3[i + 1].acc, true)}`;\n    }\n\n    DOMCacheGetOrSet('sHyMT').textContent = `x${format(calculateHypercubeMultiplier().mult, 3)}`;\n\n    const arr4 = calculatePlatonicMultiplier().list;\n    const map4: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 2, desc: 'Ascension Score Multiplier:'},\n        2: {acc: 2, desc: 'Global Cube Multiplier:'},\n        3: {acc: 2, desc: 'Season Pass 2:'},\n        4: {acc: 2, desc: 'Achievement 196 Bonus:'},\n        5: {acc: 2, desc: 'Achievement 219-222 Bonus:'},\n        6: {acc: 2, desc: 'Achievement 223 Bonus:'},\n        7: {acc: 2, desc: 'Achievement 257 Bonus:'},\n        8: {acc: 2, desc: 'Platonic Cubes:'},\n        9: {acc: 2, desc: 'Platonic 1x4:'}\n    }\n    for (let i = 0; i < arr4.length; i++) {\n        const statPlMi = DOMCacheGetOrSet(`statPlM${i + 1}`);\n        statPlMi.childNodes[0].textContent = map4[i + 1].desc;\n        DOMCacheGetOrSet(`sPlM${i + 1}`).textContent = `x${format(arr4[i], map4[i + 1].acc, true)}`;\n    }\n\n    DOMCacheGetOrSet('sPlMT').textContent = `x${format(calculatePlatonicMultiplier().mult, 3)}`;\n\n    const arr5 = calculateHepteractMultiplier().list;\n    const map5: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 2, desc: 'Ascension Score Multiplier:'},\n        2: {acc: 2, desc: 'Global Cube Multiplier:'},\n        3: {acc: 2, desc: 'Season Pass 3:'},\n        4: {acc: 2, desc: 'Achievement 258 Bonus:'},\n        5: {acc: 2, desc: 'Achievement 264 Bonus:'},\n        6: {acc: 2, desc: 'Achievement 265 Bonus:'},\n        7: {acc: 2, desc: 'Achievement 270 Bonus:'}\n    }\n    for (let i = 0; i < arr5.length; i++) {\n        const statHeMi = DOMCacheGetOrSet(`statHeM${i + 1}`);\n        statHeMi.childNodes[0].textContent = map5[i + 1].desc;\n        DOMCacheGetOrSet(`sHeM${i + 1}`).textContent = `x${format(arr5[i], map5[i + 1].acc, true)}`;\n    }\n\n    DOMCacheGetOrSet('sHeMT').textContent = `x${format(calculateHepteractMultiplier().mult, 3)}`;\n\n    const octMults = calculateOcteractMultiplier();\n    const ascensionSpeedDesc = (player.singularityUpgrades.oneMind.getEffect().bonus) ? 'One Mind Multiplier' : 'Ascension Speed Multiplier'\n    const map6: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 2, desc: 'Ascension Score Multiplier:'},\n        2: {acc: 2, desc: 'Season Pass 3:'},\n        3: {acc: 2, desc: 'Season Pass Y:'},\n        4: {acc: 2, desc: 'Season Pass Z:'},\n        5: {acc: 2, desc: 'Season Pass Lost:'},\n        6: {acc: 2, desc: 'Cookie Upgrade 20:'},\n        7: {acc: 2, desc: 'Divine Pack:'},\n        8: {acc: 2, desc: 'Cube Flame:'},\n        9: {acc: 2, desc: 'Cube Blaze:'},\n        10: {acc: 2, desc: 'Cube Inferno:'},\n        11: {acc: 2, desc: 'Octeract Absinthe'},\n        12: {acc: 2, desc: 'Pieces of Eight'},\n        13: {acc: 2, desc: 'Obelisk Shaped Like an Octagon'},\n        14: {acc: 2, desc: 'Octahedral Synthesis'},\n        15: {acc: 2, desc: 'Eighth Wonder of the World'},\n        16: {acc: 2, desc: 'Platonic is a fat sellout'},\n        17: {acc: 2, desc: 'Octeracts for Dummies'},\n        18: {acc: 2, desc: 'Octeract Cogenesis'},\n        19: {acc: 2, desc: 'Octeract Trigenesis'},\n        20: {acc: 2, desc: 'Singularity Factor'},\n        21: {acc: 2, desc: 'Digital Octeract Accumulator'},\n        22: {acc: 2, desc: 'Event Buff'},\n        23: {acc: 2, desc: 'Platonic DELTA'},\n        24: {acc: 2, desc: 'No Singularity Upgrades Challenge'},\n        25: {acc: 2, desc: 'Wow Pass \u221E'},\n        26: {acc: 2, desc: ascensionSpeedDesc}\n    }\n    for (let i = 0; i < octMults.list.length; i++) {\n        const statOcMi = DOMCacheGetOrSet(`statOcM${i + 1}`);\n        statOcMi.childNodes[0].textContent = map6[i + 1].desc;\n        DOMCacheGetOrSet(`sOcM${i + 1}`).textContent = `x${format(octMults.list[i], map6[i + 1].acc, true)}`;\n    }\n\n    DOMCacheGetOrSet('sOcMT').textContent = `x${format(octMults.mult, 3)}`;\n}\n\nexport const loadStatisticsOfferingMultipliers = () => {\n    const arr = calculateOfferings('prestige', false);\n    const map: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 3, desc: 'Alchemy Achievement 5:'},\n        2: {acc: 3, desc: 'Alchemy Achievement 6:'},\n        3: {acc: 3, desc: 'Alchemy Achievement 7:'},\n        4: {acc: 3, desc: 'Diamond Upgrade 4x3:'},\n        5: {acc: 3, desc: 'Particle Upgrade 3x5:'},\n        6: {acc: 3, desc: 'Auto Offering Shop Upgrade:'},\n        7: {acc: 3, desc: 'Offering EX Shop Upgrade:'},\n        8: {acc: 3, desc: 'Cash Grab Shop Upgrade:'},\n        9: {acc: 3, desc: 'Research 4x10:'},\n        10: {acc: 3, desc: 'Sacrificium Formicidae:'},\n        11: {acc: 3, desc: 'Plutus Cube Tribute:'},\n        12: {acc: 3, desc: 'Constant Upgrade 3:'},\n        13: {acc: 3, desc: 'Research 6x24,8x4:'},\n        14: {acc: 3, desc: 'Challenge 12:'},\n        15: {acc: 3, desc: 'Research 8x25:'},\n        16: {acc: 3, desc: 'Ascension Count Achievement:'},\n        17: {acc: 3, desc: 'Sun and Moon Achievements:'},\n        18: {acc: 3, desc: 'Cube Upgrade 5x6:'},\n        19: {acc: 3, desc: 'Cube Upgrade 5x10:'},\n        20: {acc: 3, desc: 'Platonic ALPHA:'},\n        21: {acc: 3, desc: 'Platonic BETA:'},\n        22: {acc: 3, desc: 'Platonic OMEGA:'},\n        23: {acc: 3, desc: 'Challenge 15:'},\n        24: {acc: 3, desc: 'Starter Pack:'},\n        25: {acc: 3, desc: 'Offering Charge [GQ]:'},\n        26: {acc: 3, desc: 'Offering Storm [GQ]:'},\n        27: {acc: 3, desc: 'Offering Tempest [GQ]:'},\n        28: {acc: 3, desc: 'Citadel [GQ]'},\n        29: {acc: 3, desc: 'Citadel 2 [GQ]'},\n        30: {acc: 3, desc: 'Cube Upgrade Cx4:'},\n        31: {acc: 3, desc: 'Offering Electrolosis [OC]:'},\n        32: {acc: 3, desc: 'Event:'}\n    }\n    for (let i = 0; i < arr.length; i++) {\n        const statOffi = DOMCacheGetOrSet(`statOff${i + 1}`);\n        statOffi.childNodes[0].textContent = map[i + 1].desc;\n        DOMCacheGetOrSet(`sOff${i + 1}`).textContent = `x${format(arr[i], map[i + 1].acc, true)}`;\n    }\n    DOMCacheGetOrSet('sOffT').textContent = `x${format(calculateOfferings('prestige', true, true), 3)}`;\n}\n\nexport const loadPowderMultiplier = () => {\n    const arr0 = calculatePowderConversion().list;\n    const map0: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 2, desc: 'Base:'},\n        2: {acc: 2, desc: 'Challenge 15 Bonus:'},\n        3: {acc: 2, desc: 'Powder EX:'},\n        4: {acc: 2, desc: 'Achievement 256:'},\n        5: {acc: 2, desc: 'Achievement 257:'},\n        6: {acc: 2, desc: 'Platonic Upgrade 16 [4x1]:'},\n        7: {acc: 2, desc: 'Event:'}\n    }\n    for (let i = 0; i < arr0.length; i++) {\n        const statGCMi = DOMCacheGetOrSet(`statPoM${i + 1}`);\n        statGCMi.childNodes[0].textContent = map0[i + 1].desc;\n        DOMCacheGetOrSet(`sPoM${i + 1}`).textContent = `x${format(arr0[i], map0[i + 1].acc, true)}`;\n    }\n\n    DOMCacheGetOrSet('sPoMT').textContent = `x${format(calculatePowderConversion().mult, 3)}`;\n}\n\nexport const loadStatisticsAscensionSpeedMultipliers = () => {\n    const arr = calculateAscensionSpeedMultiplier();\n    const map7: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 2, desc: 'Chronometer:'},\n        2: {acc: 2, desc: 'Chronometer 2:'},\n        3: {acc: 2, desc: 'Chronometer 3:'},\n        4: {acc: 2, desc: 'Chronos Hepteract:'},\n        5: {acc: 2, desc: 'Achievement 262 Bonus:'},\n        6: {acc: 2, desc: 'Achievement 263 Bonus:'},\n        7: {acc: 2, desc: 'Platonic Omega:'},\n        8: {acc: 2, desc: 'Challenge 15 Reward:'},\n        9: {acc: 2, desc: 'Cookie Upgrade 9:'},\n        10: {acc: 2, desc: 'Intermediate Pack:'},\n        11: {acc: 2, desc: 'Chronometer Z:'},\n        12: {acc: 2, desc: 'Abstract Photokinetics:'},\n        13: {acc: 2, desc: 'Abstract Exokinetics:'},\n        14: {acc: 2, desc: 'Event:'},\n        15: {acc: 2, desc: 'Ascension Speedup 2 [GQ]:'},\n        16: {acc: 2, desc: 'Chronometer INF:'},\n        17: {acc: 2, desc: 'Limited Ascensions Penalty:'},\n        18: {acc: 2, desc: 'Limited Ascensions Reward:'},\n        19: {acc: 2, desc: 'Ascension Speedup [GQ]:'},\n        20: {acc: 2, desc: 'Singularity Penalty:'}\n    }\n    for (let i = 0; i < arr.list.length; i++) {\n        const statASMi = DOMCacheGetOrSet(`statASM${i + 1}`);\n        statASMi.childNodes[0].textContent = map7[i + 1].desc;\n        DOMCacheGetOrSet(`sASM${i + 1}`).textContent = `x${format(arr.list[i], map7[i + 1].acc, true)}`;\n    }\n\n    DOMCacheGetOrSet('sASMT').textContent = `x${format(arr.mult, 3)}`;\n}\n\nexport const loadStatisticsGoldenQuarkMultipliers = () => {\n    const arr = calculateGoldenQuarkMultiplier();\n    const map: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 2, desc: 'Challenge 15 Exponent:'},\n        2: {acc: 2, desc: 'Patreon Bonus:'},\n        3: {acc: 2, desc: 'Golden Quarks I:'},\n        4: {acc: 2, desc: 'Cookie Upgrade 19:'},\n        5: {acc: 2, desc: 'No Singularity Upgrades:'},\n        6: {acc: 2, desc: 'Event:'},\n        7: {acc: 2, desc: 'Singularity Fast Forwards:'},\n        8: {acc: 2, desc: 'Golden Revolution II:'},\n        9: {acc: 2, desc: 'Immaculate Alchemy:'},\n        10: {acc: 2, desc: 'Total Quarks Coefficient:'}\n    }\n    for (let i = 0; i < arr.list.length; i++) {\n        const statGQMi = DOMCacheGetOrSet(`statGQMS${i + 1}`);\n        statGQMi.childNodes[0].textContent = map[i + 1].desc;\n        DOMCacheGetOrSet(`sGQMS${i + 1}`).textContent = `x${format(arr.list[i], map[i + 1].acc, true)}`;\n    }\n\n    DOMCacheGetOrSet('sGQMST').textContent = `x${format(arr.mult, 3)}`;\n}\n\nexport const loadAddCodeModifiersAndEffects = () => {\n    const intervalStats = addCodeInterval();\n    const capacityStats = addCodeMaxUses();\n    const availableCount = addCodeAvailableUses();\n    const timeToNext = addCodeTimeToNextUse();\n\n    // Add interval stats\n    const intervalMap: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 0, desc: 'Base:'},\n        2: {acc: 2, desc: 'PL-AT \u03B4 calculator:'},\n        3: {acc: 2, desc: 'PL-AT \u03A3 sing perk:'},\n        4: {acc: 2, desc: 'Ascension of Ant God:'},\n        5: {acc: 2, desc: 'Singularity factor:'}\n    }\n    intervalStats.list[0] /= 1000; // is originally in milliseconds, but players will expect it in seconds.\n\n    for (let i = 0; i < intervalStats.list.length; i++) {\n        const statAddIntervalI = DOMCacheGetOrSet(`stat+time${i + 1}`);\n        statAddIntervalI.childNodes[0].textContent = intervalMap[i + 1].desc;\n        if (i == 0) {\n            DOMCacheGetOrSet(`s+time${i + 1}`).textContent = `${format(intervalStats.list[i], intervalMap[i + 1].acc, true)} sec`;\n        } else {\n            DOMCacheGetOrSet(`s+time${i + 1}`).textContent = `x${format(intervalStats.list[i], intervalMap[i + 1].acc, true)}`;\n        }\n    }\n\n    DOMCacheGetOrSet('s+timeT').textContent = `${format(intervalStats.time / 1000, 1)} sec`;\n    if (availableCount != capacityStats.total) {\n        DOMCacheGetOrSet('s+next').textContent = `+1 in ${format(timeToNext, 1)} sec`;  // is already in sec.\n    } else {\n        DOMCacheGetOrSet('s+next').textContent = '';\n    }\n\n    // Add capacity stats\n    const capacityMap: Record<number, { acc: number, desc: string }> = {\n        1: {acc: 0, desc: 'Base:'},\n        2: {acc: 0, desc: 'PL-AT X:'},\n        3: {acc: 0, desc: 'PL-AT \u03B4:'},\n        4: {acc: 0, desc: 'PL-AT \u0393:'},\n        5: {acc: 0, desc: 'PL-AT _:'},\n        6: {acc: 3, desc: 'Singularity factor:'}\n    }\n\n    for (let i = 0; i < capacityStats.list.length; i++) {\n        const statAddIntervalI = DOMCacheGetOrSet(`stat+cap${i + 1}`);\n        statAddIntervalI.childNodes[0].textContent = capacityMap[i + 1].desc;\n        const prefix = i==0 ? '' : (i == 5 ? 'x' : '+');\n        DOMCacheGetOrSet(`s+cap${i + 1}`).textContent = `${prefix}${format(capacityStats.list[i], capacityMap[i + 1].acc, true)}`;\n    }\n\n    DOMCacheGetOrSet('s+capT').textContent = `${format(availableCount, 0)} / ${format(capacityStats.total, 0)}`;\n\n    // TODO:  we also want to report on the effects of each add.\n    const addEffectStats = addCodeBonuses();\n\n    // Quark Bonus Rate; the bonus is typically applied when actually given to the player, rather than calculated before.\n    const qbr = player.worlds.applyBonus(1);\n\n    DOMCacheGetOrSet('stat+eff1').childNodes[0].textContent = 'Quarks: ';\n    if (Math.abs(addEffectStats.maxQuarks - addEffectStats.minQuarks) >= 0.5) { // b/c floating-point errors\n        DOMCacheGetOrSet('s+eff1').textContent = `+${format(qbr * addEffectStats.minQuarks, 3)} ~ ${format(qbr * addEffectStats.maxQuarks, 3)}`;\n    } else {\n        DOMCacheGetOrSet('s+eff1').textContent = `+${format(qbr * addEffectStats.quarks, 3)}`;\n    }\n\n    DOMCacheGetOrSet('stat+eff2').childNodes[0].textContent = 'PL-AT X - bonus ascension time: ';\n    DOMCacheGetOrSet('s+eff2').textContent = `+${format(addEffectStats.ascensionTimer, 2)} sec`;\n\n    DOMCacheGetOrSet('stat+eff3').childNodes[0].textContent = 'PL-AT \u0393 - bonus GQ export time: ';\n    DOMCacheGetOrSet('s+eff3').textContent = `+${format(addEffectStats.gqTimer, 2)} sec`; // does it need a / 1000?\n\n    DOMCacheGetOrSet('stat+eff4').childNodes[0].textContent = 'PL-AT _ - bonus octeract time: ';\n    DOMCacheGetOrSet('s+eff4').textContent = `+${format(addEffectStats.octeractTime, 2)} sec`; // does it need a / 1000?\n    // Might be worth converting to raw octeracts awarded.  I don't have the calculator needed to test it, though.\n}\n\nexport const c15RewardUpdate = () => {\n    const exponentRequirements = [750, 1.5e3, 3e3, 5e3, 7.5e3, 7.5e3, 1e4, 1e4, 2e4, 4e4, 6e4, 1e5, 1e5, 2e5, 5e5, 1e6, 3e6, 1e7, 3e7, 1e8, 5e8, 2e9, 1e10, 1e11, 1e15, 2e15, 4e15, 7e15, 1e16, 2e16, 3.33e16, 3.33e16, 3.33e16, 2e17, 1.5e18]\n    type Key = keyof GlobalVariables['challenge15Rewards'];\n    const keys = Object.keys(G['challenge15Rewards']) as Key[];\n    const e = player.challenge15Exponent\n\n    for (const obj in G['challenge15Rewards']){\n        G['challenge15Rewards'][obj as Key] = 1;\n    }\n    G['challenge15Rewards'].freeOrbs = 0;\n\n    if (e >= exponentRequirements[0]){\n        //All Cube Types 1 [750]\n        G['challenge15Rewards'][keys[0]] = 1 + 1 / 50 * Math.log(e / 175) / Math.log(2)\n    }\n    if (e >= exponentRequirements[1]){\n        //Ascension Count [1500]\n        G['challenge15Rewards'][keys[1]] = 1 + 1 / 20 * Math.log(e / 375) / Math.log(2)\n    }\n    if (e >= exponentRequirements[2]){\n        //Coin Exponent [3000]\n        G['challenge15Rewards'][keys[2]] = 1 + 1 / 150 * Math.log(e / 750) / Math.log(2)\n    }\n    if (e >= exponentRequirements[3]){\n        //Taxes [5000]\n        G['challenge15Rewards'][keys[3]] = Math.pow(0.98, Math.log(e / 1.25e3) / Math.log(2))\n    }\n    if (e >= exponentRequirements[4]){\n        //Obtainium [7500]\n        G['challenge15Rewards'][keys[4]] = 1 + 1 / 5 * Math.pow(e / 7.5e3, 0.75)\n    }\n    if (e >= exponentRequirements[5]){\n        //Offerings [7500]\n        G['challenge15Rewards'][keys[5]] = 1 + 1 / 5 * Math.pow(e / 7.5e3, 0.75)\n    }\n    if (e >= exponentRequirements[6]){\n        //Accelerator Boost (Uncorruptable) [10000]\n        G['challenge15Rewards'][keys[6]] = 1 + 1 / 20 * Math.log(e / 2.5e3) / Math.log(2)\n    }\n    if (e >= exponentRequirements[7]){\n        //Multiplier Boost (Uncorruptable) [10000]\n        G['challenge15Rewards'][keys[7]] = 1 + 1 / 20 * Math.log(e / 2.5e3) / Math.log(2)\n    }\n    if (e >= exponentRequirements[8]){\n        //Rune EXP [20000]\n        G['challenge15Rewards'][keys[8]] = 1 + Math.pow(e / 2e4, 1.5)\n    }\n    if (e >= exponentRequirements[9]){\n        //Rune Effectiveness [40000]\n        G['challenge15Rewards'][keys[9]] = 1 + 1 / 33 * Math.log(e / 1e4) / Math.log(2)\n    }\n    if (e >= exponentRequirements[10]){\n        //All Cube Types II [60000]\n        G['challenge15Rewards'][keys[10]] = 1 + 1 / 100 * Math.log(e / 1.5e4) / Math.log(2)\n    }\n    if (e >= exponentRequirements[11]){\n        //Chal 1-5 Scaling [100000]\n        G['challenge15Rewards'][keys[11]] = Math.pow(0.98, Math.log(e / 2.5e4) / Math.log(2))\n    }\n    if (e >= exponentRequirements[12]){\n        //Chal 6-10 Scaling [100000]\n        G['challenge15Rewards'][keys[12]] = Math.pow(0.98, Math.log(e / 2.5e4) / Math.log(2))\n    }\n    if (e >= exponentRequirements[13]){\n        //Ant Speed [200k]\n        G['challenge15Rewards'][keys[13]] = Math.pow(1 + Math.log(e / 2e5) / Math.log(2), 4)\n    }\n    if (e >= exponentRequirements[14]){\n        //Ant Bonus Levels [500k]\n        G['challenge15Rewards'][keys[14]] = 1 + 1 / 20 * Math.log(e / 1.5e5) /Math.log(2)\n    }\n    if (e >= exponentRequirements[15]){\n        //All Cube Types III [1m]\n        G['challenge15Rewards'][keys[15]] = 1 + 1 / 150 * Math.log(e / 2.5e5) / Math.log(2)\n    }\n    if (e >= exponentRequirements[16]){\n        //Talisman Effectiveness [3m]\n        G['challenge15Rewards'][keys[16]] = 1 + 1 / 20 * Math.log(e / 7.5e5) / Math.log(2)\n    }\n    if (e >= exponentRequirements[17]){\n        //Global Speed [10m]\n        G['challenge15Rewards'][keys[17]] = 1 + 1 / 20 * Math.log(e / 2.5e6) / Math.log(2)\n    }\n    if (e >= exponentRequirements[18]){\n        //Blessing Effectiveness [30m]\n        G['challenge15Rewards'][keys[18]] = 1 + 1 / 5 * Math.pow(e / 3e7, 1 / 4)\n    }\n    if (e >= exponentRequirements[19]){\n        //Tesseract Building Speed [100m]\n        G['challenge15Rewards'][keys[19]] = 1 + 1 / 5 * Math.pow(e / 1e8, 2 / 3)\n    }\n    if (e >= exponentRequirements[20]){\n        //All Cube Types IV [500m]\n        G['challenge15Rewards'][keys[20]] = 1 + 1 / 200 * Math.log(e / 1.25e8) / Math.log(2)\n    }\n    if (e >= exponentRequirements[21]){\n        //Spirit Effectiveness [2b]\n        G['challenge15Rewards'][keys[21]] = 1 + 1 / 5 * Math.pow(e / 2e9, 1 / 4)\n    }\n    if (e >= exponentRequirements[22]){\n        //Ascension Score [10b]\n        G['challenge15Rewards'][keys[22]] = 1 + 1 / 4 * Math.pow(e / 1e10 , 1 / 4)\n        if (e >= 1e20) {\n            G['challenge15Rewards'][keys[22]] = 1 + 1 / 4 * Math.pow(e / 1e10, 1 / 8) * Math.pow(1e10, 1 / 8)\n        }\n    }\n    if (e >= exponentRequirements[23]){\n        //Quark Gain [100b]\n        G['challenge15Rewards'][keys[23]] = 1 + 1 / 100 * Math.log(e * 32 / 1e11) / Math.log(2)\n    }\n    if (e >= exponentRequirements[24]){\n        //Unlock Hepteract gain [1Qa]\n        G['challenge15Rewards'][keys[24]] = 2\n    }\n    if (e >= exponentRequirements[25]) {\n        //Unlock Challenge hepteract [2Qa]\n        void player.hepteractCrafts.challenge.unlock('the Hepteract of Challenge')\n    }\n    if (e >= exponentRequirements[26]) {\n        //All Cube Types V [4Qa]\n        G['challenge15Rewards'][keys[25]] = 1 + 1 / 300 * Math.log2(e / (4e15 / 1024))\n    }\n    if (e >= exponentRequirements[27]) {\n        //Powder Gain [7Qa]\n        G['challenge15Rewards'][keys[26]] = 1 + 1 / 50 * Math.log2(e / (7e15 / 32))\n    }\n    if (e >= exponentRequirements[28]) {\n        //Unlock Abyss Hepteract [10Qa]\n        void player.hepteractCrafts.abyss.unlock('the Hepteract of the Abyss')\n    }\n    if (e >= exponentRequirements[29]) {\n        //Constant Upgrade 2 [20Qa]\n        G['challenge15Rewards'][keys[27]] = calculateSigmoid(1.05, e, 1e18);\n    }\n    if (e >= exponentRequirements[30]) {\n        //Unlock ACCELERATOR HEPT [33.33Qa]\n        void player.hepteractCrafts.accelerator.unlock('the Hepteract of Way Too Many Accelerators')\n    }\n    if (e >= exponentRequirements[31]) {\n        //Unlock ACCELERATOR BOOST HEPT [33.33Qa]\n        void player.hepteractCrafts.acceleratorBoost.unlock('the Hepteract of Way Too Many Accelerator Boosts')\n    }\n    if (e >= exponentRequirements[32]) {\n        //Unlock MULTIPLIER Hept [33.33Qa]\n        void player.hepteractCrafts.multiplier.unlock('the Hepteract of Way Too Many Multipliers')\n    }\n    if (e >= exponentRequirements[33]) {\n        // FREE Daily Orbs\n        G['challenge15Rewards'].freeOrbs = Math.floor(200 * Math.pow(e / 2e17, 0.5))\n    }\n    if (e >= exponentRequirements[34]) {\n        // Ascension Speed\n        G['challenge15Rewards'].ascensionSpeed = 1 + 5/100 + 2 * Math.log2(e / 1.5e18) / 100\n    }\n\n\n    updateDisplayC15Rewards();\n}\n\nconst updateDisplayC15Rewards = () => {\n    DOMCacheGetOrSet('c15Reward0Num').textContent = format(player.challenge15Exponent,3,true)\n    DOMCacheGetOrSet('c15RequiredExponentNum').textContent = format(Decimal.pow(10, player.challenge15Exponent / challenge15ScoreMultiplier()),0,true)\n    const exponentRequirements = [750, 1.5e3, 3e3, 5e3, 7.5e3, 7.5e3, 1e4, 1e4, 2e4, 4e4, 6e4, 1e5, 1e5, 2e5, 5e5, 1e6, 3e6, 1e7, 3e7, 1e8, 5e8, 2e9, 1e10, 1e11, 1e15, 2e15, 4e15, 7e15, 1e16, 2e16, 3.33e16, 3.33e16, 3.33e16, 2e17, 1.5e18]\n    const isNum: Record<number, boolean> = { // Shit solution to a shit problem -Platonic\n        0: true,\n        1: true,\n        2: true,\n        3: true,\n        4: true,\n        5: true,\n        6: true,\n        7: true,\n        8: true,\n        9: true,\n        10: true,\n        11: true,\n        12: true,\n        13: true,\n        14: true,\n        15: true,\n        16: true,\n        17: true,\n        18: true,\n        19: true,\n        20: true,\n        21: true,\n        22: true,\n        23: true,\n        24: false,\n        25: false,\n        26: true,\n        27: true,\n        28: false,\n        29: true,\n        30: false,\n        31: false,\n        32: false,\n        33: true,\n        34: true\n    }\n    const values = Object.values(G['challenge15Rewards'])\n    let keepExponent: string | number = 'None'\n    let skip = 0\n    for (let i = 0; i < exponentRequirements.length; i++){\n        if (keepExponent === 'None' && player.challenge15Exponent < exponentRequirements[i]){\n            keepExponent = exponentRequirements[i]\n        }\n        if (player.challenge15Exponent >= exponentRequirements[i]) {\n            DOMCacheGetOrSet('c15Reward'+(i+1)+'Num').textContent = (isNum[i]) ?\n                format(100 * values[i - skip] - 100,2,true):\n                'Unlocked!';\n\n            if (!isNum[i] && i !== 24) { // TODO: This sucks -Platonic\n                skip += 1;\n            }\n\n            if (i === 33) {\n                DOMCacheGetOrSet('c15Reward34Num').textContent = format(values[i - skip], 0, true)\n            }\n        }\n\n        DOMCacheGetOrSet('c15Reward'+(i+1)).style.display = (player.challenge15Exponent >= exponentRequirements[i])? 'block': 'none';\n        DOMCacheGetOrSet('c15RewardList').textContent = typeof keepExponent  === 'string'\n            ? 'You have unlocked all reward types from Challenge 15!'\n            : 'Next reward type requires ' + format(keepExponent,0,true) + ' exponent.'\n    }\n}\n\ninterface Stage { stage: number, tier: number, name: string, unlocked: boolean, reset: boolean }\n\nexport const gameStages = (): Stage[] => {\n    const stages: Stage[] = [\n        {stage: 0, tier: 1, name: 'start', unlocked: true, reset: true},\n        {stage: 1, tier: 1, name: 'start-prestige', unlocked: player.unlocks.prestige === true, reset: player.unlocks.prestige},\n        {stage: 2, tier: 2, name: 'prestige-transcend', unlocked: player.unlocks.transcend === true, reset: player.unlocks.transcend},\n        {stage: 3, tier: 3, name: 'transcend-reincarnate', unlocked: player.unlocks.reincarnate === true, reset: player.unlocks.reincarnate},\n        {stage: 4, tier: 4, name: 'reincarnate-ant', unlocked: player.firstOwnedAnts !== 0, reset: player.unlocks.reincarnate},\n        {stage: 5, tier: 4, name: 'ant-sacrifice', unlocked: player.achievements[173] === 1, reset: player.unlocks.reincarnate},\n        {stage: 6, tier: 4, name: 'sacrifice-ascension', unlocked: player.achievements[183] === 1, reset: player.unlocks.reincarnate},\n        {stage: 7, tier: 5, name: 'ascension-challenge10', unlocked: player.ascensionCount > 1, reset: player.achievements[183] === 1},\n        {stage: 8, tier: 5, name: 'challenge10-challenge11', unlocked: player.achievements[197] === 1, reset: player.achievements[183] === 1},\n        {stage: 9, tier: 5, name: 'challenge11-challenge12', unlocked: player.achievements[204] === 1, reset: player.achievements[183] === 1},\n        {stage: 10, tier: 5, name: 'challenge12-challenge13', unlocked: player.achievements[211] === 1, reset: player.achievements[183] === 1},\n        {stage: 11, tier: 5, name: 'challenge13-challenge14', unlocked: player.achievements[218] === 1, reset: player.achievements[183] === 1},\n        {stage: 12, tier: 5, name: 'challenge14-w5x10max', unlocked: player.cubeUpgrades[50] >= 100000, reset: player.achievements[183] === 1},\n        {stage: 13, tier: 5, name: 'w5x10max-alpha', unlocked: player.platonicUpgrades[5] > 0, reset: player.achievements[183] === 1},\n        {stage: 14, tier: 5, name: 'alpha-p2x1x10', unlocked: player.platonicUpgrades[6] >= 10, reset: player.achievements[183] === 1},\n        {stage: 15, tier: 5, name: 'p2x1x10-p3x1', unlocked: player.platonicUpgrades[11] > 0, reset: player.achievements[183] === 1},\n        {stage: 16, tier: 5, name: 'p3x1-beta', unlocked: player.platonicUpgrades[10] > 0, reset: player.achievements[183] === 1},\n        {stage: 17, tier: 5, name: 'beta-1e15-expo', unlocked: player.challenge15Exponent >= 1e15, reset: player.achievements[183] === 1},\n        {stage: 18, tier: 5, name: '1e15-expo-omega', unlocked: player.platonicUpgrades[15] > 0, reset: player.achievements[183] === 1},\n        {stage: 19, tier: 5, name: 'omega-singularity', unlocked: player.singularityCount > 0 && player.runelevels[6] > 0, reset: player.achievements[183] === 1},\n        {stage: 20, tier: 6, name: 'singularity-liquidation', unlocked: player.singularityUpgrades.wowPass2.level > 0, reset: player.highestSingularityCount > 0},\n        {stage: 21, tier: 6, name: 'liquidation-onemind', unlocked: player.singularityUpgrades.oneMind.level > 0, reset: player.highestSingularityCount > 0},\n        {stage: 22, tier: 6, name: 'onemind-bbshards', unlocked: player.singularityUpgrades.offeringAutomatic.level > 0, reset: player.highestSingularityCount > 0},\n        {stage: 23, tier: 6, name: 'bbshards-pen', unlocked: player.singularityUpgrades.ultimatePen.level > 0, reset: player.highestSingularityCount > 0},\n        {stage: 24, tier: 6, name: 'pen', unlocked: false, reset: player.highestSingularityCount > 0}\n    ];\n    return stages;\n}\n\n// Calculate which progress in the game you are playing\n// The progress displayed is based on Progression Chat and Questions\n// This will be used to determine the behavior of the profile of the autopilot function in the future\nexport const synergismStage = (skipTier = player.singularityCount > 0 ? 5 : 0): string => {\n    const stages = gameStages();\n    for (let i = 0; i < stages.length; i++){\n        const stage = stages[i];\n        if (skipTier < stage.tier && (stage.reset === false || stage.unlocked === false)) {\n            return stage.name;\n        }\n    }\n    const stagesZero = stages[0];\n    return stagesZero.name;\n}\n", "import Decimal from 'break_infinity.js';\nimport { Globals as G } from './Variables';\nimport { player, format, formatTimeShort } from './Synergism';\nimport { version } from './Config';\nimport { CalcECC } from './Challenges';\nimport { calculateSigmoidExponential, calculateMaxRunes, calculateRuneExpToLevel, calculateSummationLinear, calculateRecycleMultiplier, calculateCorruptionPoints, CalcCorruptionStuff, calculateAutomaticObtainium, calculateTimeAcceleration, calcAscensionCount, calculateCubeQuarkMultiplier, calculateSummationNonLinear, calculateTotalOcteractCubeBonus, calculateTotalOcteractQuarkBonus, octeractGainPerSecond, calculateTotalOcteractObtainiumBonus, calculateTotalOcteractOfferingBonus } from './Calculate';\nimport { displayRuneInformation } from './Runes';\nimport { showSacrifice } from './Ants';\nimport { sumContents } from './Utility';\nimport { getShopCosts, isShopUpgradeUnlocked, shopData, shopUpgradeTypes } from './Shop';\nimport { quarkHandler } from './Quark';\nimport type { Player, ZeroToFour } from './types/Synergism';\nimport type { hepteractTypes } from './Hepteracts';\nimport { hepteractTypeList } from './Hepteracts';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport type { IMultiBuy } from './Cubes';\nimport { calculateMaxTalismanLevel } from './Talismans';\nimport { getGoldenQuarkCost } from './singularity';\nimport { loadStatisticsUpdate } from './Statistics';\nimport i18next from 'i18next';\n\nexport const visualUpdateBuildings = () => {\n    if (G['currentTab'] !== 'buildings') {\n        return;\n    }\n\n    //When you're in Building --> Coin, update these.\n    if (G['buildingSubTab'] === 'coin') {\n        // For the display of Coin Buildings\n        const upper = ['produceFirst', 'produceSecond', 'produceThird', 'produceFourth', 'produceFifth'] as const;\n        const names = [null, 'workers', 'investments', 'printers', 'coinMints', 'alchemies']\n\n        let totalProductionDivisor = new Decimal(G['produceTotal']);\n        if (totalProductionDivisor.equals(0)) {\n            totalProductionDivisor = new Decimal(1);\n        }\n\n        for (let i = 1; i <= 5; i++) {\n            const place = G[upper[i - 1]];\n            const ith = G['ordinals'][i - 1 as ZeroToFour];\n\n            DOMCacheGetOrSet(`buildtext${2 * i - 1}`).textContent = i18next.t(`buildings.names.${names[i]}`, {\n                amount: format(player[`${ith}OwnedCoin` as const], 0, true),\n                gain: format(player[`${ith}GeneratedCoin` as const])\n            })\n\n            DOMCacheGetOrSet('buycoin' + i).textContent = i18next.t('buildings.costCoins', {\n                coins: format(player[`${ith}CostCoin` as const])\n            })\n\n            const percentage = Decimal\n                .fromMantissaExponent(place.mantissa / totalProductionDivisor.mantissa, place.exponent - totalProductionDivisor.exponent)\n                .times(100)\n\n            DOMCacheGetOrSet('buildtext' + (2 * i)).textContent = i18next.t('buildings.coinsPerSecond', {\n                coins: format((place.dividedBy(G['taxdivisor'])).times(40), 2),\n                percent: format(percentage, 3)\n            })\n        }\n\n        DOMCacheGetOrSet('buildtext11').textContent = i18next.t('buildings.names.accelerators', {\n            amount: format(player.acceleratorBought, 0, true),\n            gain: format(G['freeAccelerator'], 0, true)\n        })\n\n        DOMCacheGetOrSet('buildtext12').textContent = i18next.t('buildings.acceleratorPower', {\n            power: format((G['acceleratorPower'] - 1) * 100, 2),\n            mult: format(G['acceleratorEffect'], 2)\n        })\n\n        DOMCacheGetOrSet('buildtext13').textContent = i18next.t('buildings.names.multipliers', {\n            amount: format(player.multiplierBought, 0, true),\n            gain: format(G['freeMultiplier'], 0, true)\n        })\n\n        DOMCacheGetOrSet('buildtext14').textContent = i18next.t('buildings.multiplierPower', {\n            power: format(G['multiplierPower'], 2),\n            mult: format(G['multiplierEffect'], 2)\n        })\n\n        DOMCacheGetOrSet('buildtext15').textContent = i18next.t('buildings.names.acceleratorBoost', {\n            amount: format(player.acceleratorBoostBought, 0, true),\n            gain: format(G['freeAcceleratorBoost'], 0, false)\n        })\n\n        DOMCacheGetOrSet('buildtext16').textContent = i18next.t('buildings.acceleratorBoost', {\n            amount: format(G['tuSevenMulti'] * (1 + player.researches[16] / 50) * (1 + CalcECC('transcend', player.challengecompletions[2]) / 100), 2)\n        })\n\n        DOMCacheGetOrSet('buyaccelerator').textContent = i18next.t('buildings.costCoins', { coins: format(player.acceleratorCost) })\n        DOMCacheGetOrSet('buymultiplier').textContent = i18next.t('buildings.costCoins', { coins: format(player.multiplierCost) })\n        DOMCacheGetOrSet('buyacceleratorboost').textContent = i18next.t('buildings.costDiamonds', {\n            diamonds: format(player.acceleratorBoostCost)\n        })\n\n        // update the tax text\n        let warning = '';\n        if (player.reincarnationCount > 0.5) {\n            warning = i18next.t('buildings.taxWarning', {\n                gain: format(Decimal.pow(10, G['maxexponent'] - Decimal.log(G['taxdivisorcheck'], 10)))\n            })\n        }\n        DOMCacheGetOrSet('taxinfo').textContent = i18next.t('buildings.excessiveWealth', {\n            div: format(G['taxdivisor'], 2),\n            warning\n        })\n    } else if (G['buildingSubTab'] === 'diamond') {\n        // For the display of Diamond Buildings\n        const upper = ['produceFirstDiamonds', 'produceSecondDiamonds', 'produceThirdDiamonds', 'produceFourthDiamonds', 'produceFifthDiamonds'] as const;\n        const names = ['refineries', 'coalPlants', 'coalRigs', 'pickaxes', 'pandorasBoxes']\n        const perSecNames = ['crystal', 'ref', 'plants', 'rigs', 'pickaxes']\n\n        DOMCacheGetOrSet('prestigeshardinfo').textContent = i18next.t('buildings.crystalMult', {\n            crystals: format(player.prestigeShards, 2),\n            gain: format(G['prestigeMultiplier'], 2)\n        })\n\n        for (let i = 1; i <= 5; i++) {\n            const place = G[upper[i-1]];\n            const ith = G['ordinals'][i - 1 as ZeroToFour];\n\n            DOMCacheGetOrSet('prestigetext' + (2 * i - 1)).textContent = i18next.t(`buildings.names.${names[i - 1]}`, {\n                amount: format(player[`${ith}OwnedDiamonds` as const], 0, true),\n                gain: format(player[`${ith}GeneratedDiamonds` as const], 2)\n            })\n\n            DOMCacheGetOrSet('prestigetext' + (2 * i)).textContent = i18next.t(`buildings.per.${perSecNames[i - 1]}`, {\n                amount: format((place).times(40), 2)\n            })\n\n            DOMCacheGetOrSet('buydiamond' + i).textContent = i18next.t('buildings.costDiamonds', {\n                diamonds: format(player[`${ith}CostDiamonds` as const], 2)\n            })\n        }\n\n        if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\n            const p = Decimal.pow(10, Decimal.log(G['prestigePointGain'].add(1), 10) - Decimal.log(player.prestigePoints.sub(1), 10))\n            DOMCacheGetOrSet('autoprestige').textContent = i18next.t('buildings.autoPrestige', {\n                name: 'Diamonds',\n                action: 'Prestige',\n                factor: format(Decimal.pow(10, player.prestigeamount)),\n                mult: format(p)\n            })\n        } else if (player.resettoggle1 === 2) {\n            DOMCacheGetOrSet('autoprestige').textContent = i18next.t('buildings.autoReincarnate', {\n                name: 'Prestige',\n                amount: player.prestigeamount,\n                timer: format(G['autoResetTimers'].prestige, 1)\n            })\n        }\n    } else if (G['buildingSubTab'] === 'mythos') {\n        // For the display of Mythos Buildings\n        const upper = ['produceFirstMythos', 'produceSecondMythos', 'produceThirdMythos', 'produceFourthMythos', 'produceFifthMythos'] as const;\n        const names = ['augments', 'enchantments', 'wizards', 'oracles', 'grandmasters']\n        const perSecNames = ['shards', 'augments', 'enchantments', 'wizards', 'oracles']\n\n        DOMCacheGetOrSet('transcendshardinfo').textContent = i18next.t('buildings.mythosYouHave', {\n            shards: format(player.transcendShards, 2),\n            mult: format(G['totalMultiplierBoost'], 0, true)\n        })\n\n        for (let i = 1; i <= 5; i++) {\n            const place = G[upper[i-1]];\n            const ith = G['ordinals'][i - 1 as ZeroToFour];\n\n            DOMCacheGetOrSet('transcendtext' + (2 * i - 1)).textContent = i18next.t(`buildings.names.${names[i - 1]}`, {\n                amount: format(player[`${ith}OwnedMythos` as const], 0, true),\n                gain: format(player[`${ith}GeneratedMythos` as const], 2)\n            })\n\n            DOMCacheGetOrSet('transcendtext' + (2 * i)).textContent = i18next.t(`buildings.per.${perSecNames[i - 1]}`, {\n                amount: format((place).times(40), 2)\n            })\n\n            DOMCacheGetOrSet(`buymythos${i}`).textContent = i18next.t('buildings.costMythos', {\n                mythos: format(player[`${ith}CostMythos` as const], 2)\n            })\n        }\n\n        if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\n            DOMCacheGetOrSet('autotranscend').textContent = i18next.t('buildings.autoPrestige', {\n                name: 'Mythos',\n                action: 'Prestige',\n                factor: format(Decimal.pow(10, player.transcendamount)),\n                mult: format(Decimal.pow(10, Decimal.log(G['transcendPointGain'].add(1), 10) - Decimal.log(player.transcendPoints.add(1), 10)), 2)\n            })\n        }\n        if (player.resettoggle2 === 2) {\n            DOMCacheGetOrSet('autotranscend').textContent = 'Transcend when the autotimer is at least ' + (player.transcendamount) + ' real-life seconds. [Toggle number above]. Current timer: ' + format(G['autoResetTimers'].transcension, 1) + 's.'\n        }\n    } else if (G['buildingSubTab'] === 'particle') {\n\n        // For the display of Particle Buildings\n        const upper = ['FirstParticles', 'SecondParticles', 'ThirdParticles', 'FourthParticles', 'FifthParticles'] as const;\n        const names = ['protons', 'elements', 'pulsars', 'quasars', 'galacticNuclei'];\n        const perSecNames = ['atoms', 'protons', 'elements', 'pulsars', 'quasars']\n\n        for (let i = 1; i <= 5; i++) {\n            const ith = G['ordinals'][i - 1 as ZeroToFour];\n            const place = G[`produce${upper[i - 1]}` as const];\n\n            DOMCacheGetOrSet(`reincarnationtext${i}`).textContent = i18next.t(`buildings.names.${names[i - 1]}`, {\n                amount: format(player[`${ith}OwnedParticles` as const], 0, true),\n                gain: format(player[`${ith}GeneratedParticles` as const], 2)\n            })\n            DOMCacheGetOrSet(`reincarnationtext${i+5}`).textContent = i18next.t(`buildings.per.${perSecNames[i - 1]}`, {\n                amount: format((place).times(40), 2)\n            })\n            DOMCacheGetOrSet(`buyparticles${i}`).textContent = i18next.t('buildings.costParticles', {\n                particles: format(player[`${ith}CostParticles` as const], 2)\n            })\n        }\n\n        DOMCacheGetOrSet('reincarnationshardinfo').textContent = i18next.t('buildings.atomsYouHave', {\n            atoms: format(player.reincarnationShards, 2),\n            power: format(G['buildingPower'], 4),\n            mult: format(G['reincarnationMultiplier'])\n        })\n\n        DOMCacheGetOrSet('reincarnationCrystalInfo').textContent = i18next.t('buildings.thanksR2x14', {\n            mult: format(Decimal.pow(G['reincarnationMultiplier'], 1 / 50), 3, false)\n        })\n\n        DOMCacheGetOrSet('reincarnationMythosInfo').textContent = i18next.t('buildings.thanksR2x15', {\n            mult: format(Decimal.pow(G['reincarnationMultiplier'], 1 / 250), 3, false)\n        })\n\n        if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\n            DOMCacheGetOrSet('autoreincarnate').textContent = i18next.t('buildings.autoPrestige', {\n                name: 'Particles',\n                action: 'Reincarnate',\n                factor: format(Decimal.pow(10, player.reincarnationamount)),\n                mult: format(Decimal.pow(10, Decimal.log(G['reincarnationPointGain'].add(1), 10) - Decimal.log(player.reincarnationPoints.add(1), 10)), 2)\n            })\n        } else if (player.resettoggle3 === 2) {\n            DOMCacheGetOrSet('autoreincarnate').textContent = i18next.t('buildings.autoReincarnate', {\n                name: 'Reincarnate',\n                amount: player.reincarnationamount,\n                timer: format(G['autoResetTimers'].reincarnation, 1)\n            })\n        }\n    } else if (G['buildingSubTab'] === 'tesseract') { // eslint-disable-line @typescript-eslint/no-unnecessary-condition\n        const names = ['dot', 'vector', 'threeSpace', 'bentTime', 'hilbertSpace']\n        const perSecNames = ['constant', 'dot', 'vector', 'threeSpace', 'bentTime']\n\n        for (let i = 1; i <= 5; i++) {\n            const ascendBuildingI = `ascendBuilding${i as 1|2|3|4|5}` as const;\n\n            DOMCacheGetOrSet('ascendText' + i).textContent = i18next.t(`buildings.names.${names[i - 1]}`, {\n                amount: format(player[ascendBuildingI]['owned'], 0, true),\n                gain: format(player[ascendBuildingI]['generated'], 2)\n            })\n\n            DOMCacheGetOrSet('ascendText' + (5 + i)).textContent = i18next.t(`buildings.per.${perSecNames[i - 1]}`, {\n                amount: format(((G['ascendBuildingProduction'] as { [key: string]: Decimal })[G['ordinals'][i - 1]]), 2)\n            })\n\n            DOMCacheGetOrSet('buyTesseracts' + i).textContent = i18next.t('buildings.costTesseracts', {\n                tesseracts: format(player[ascendBuildingI]['cost'], 0)\n            })\n        }\n\n        DOMCacheGetOrSet('tesseractInfo').textContent = i18next.t('buildings.tesseractsYouHave', {\n            tesseracts: format(player.wowTesseracts)\n        })\n\n        DOMCacheGetOrSet('ascendShardInfo').textContent = i18next.t('buildings.constantYouHave', {\n            const: format(player.ascendShards, 2),\n            amount: format(Math.pow(Decimal.log(player.ascendShards.add(1), 10) + 1, 1 + .2 / 60 * player.challengecompletions[10] * player.upgrades[125] + 0.1 * player.platonicUpgrades[5] + 0.2 * player.platonicUpgrades[10] + (G['platonicBonusMultiplier'][5] - 1)), 4, true)\n        })\n\n        if (player.resettoggle4 === 1 || player.resettoggle4 === 0) {\n            DOMCacheGetOrSet('autotessbuyeramount').textContent = i18next.t('buildings.autoTesseract', {\n                tesseracts: format(player.tesseractAutoBuyerAmount)\n            })\n        } else if (player.resettoggle4 === 2) {\n            DOMCacheGetOrSet('autotessbuyeramount').textContent = i18next.t('buildings.autoAscensionTesseract', {\n                percent: format(Math.min(100, player.tesseractAutoBuyerAmount))\n            })\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const visualUpdateUpgrades = () => {}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const visualUpdateAchievements = () => {}\n\nexport const visualUpdateRunes = () => {\n    if (G['currentTab'] !== 'runes') {\n        return\n    }\n    if (G['runescreen'] === 'runes') { //Placeholder and place work similarly to buildings, except for the specific Talismans.\n\n        const talismans = [\n            'rune1Talisman',\n            'rune2Talisman',\n            'rune3Talisman',\n            'rune4Talisman',\n            'rune5Talisman'\n        ] as const;\n\n        DOMCacheGetOrSet('offeringCount').textContent = i18next.t('runes.offeringsYouHave', {\n            offerings: format(player.runeshards, 0, true)\n        })\n\n        for (let i = 1; i <= 7; i++) { //First one updates level, second one updates TNL, third updates orange bonus levels\n            let place = G[talismans[i-1]];\n            if (i > 5) {\n                place = 0;\n            }\n            const runeLevel = player.runelevels[i - 1]\n            const maxLevel = calculateMaxRunes(i)\n            DOMCacheGetOrSet(`rune${i}level`).childNodes[0].textContent = i18next.t('cubes.cubeMetadata.level', {\n                value1: format(runeLevel),\n                value2: format(maxLevel)\n            })\n\n            if (runeLevel < maxLevel) {\n                DOMCacheGetOrSet(`rune${i}exp`).textContent = i18next.t('runes.TNL', {EXP: format(calculateRuneExpToLevel(i - 1) - player.runeexp[i - 1], 2)})\n            } else {\n                DOMCacheGetOrSet(`rune${i}exp`).textContent = i18next.t('runes.maxLevel')\n            }\n            if (i <= 5) {\n                DOMCacheGetOrSet(`bonusrune${i}`).textContent = i18next.t('runes.bonusAmount', {\n                    x: format(7 * player.constantUpgrades[7] + Math.min(1e7, player.antUpgrades[8]! + G['bonusant9']) + place)\n                })\n            } else {\n                DOMCacheGetOrSet(`bonusrune${i}`).textContent = i18next.t('runes.bonusNope')\n            }\n            displayRuneInformation(i, false)\n        }\n\n        const calculateRecycle = calculateRecycleMultiplier();\n        const allRuneExpAdditiveMultiplier = sumContents([\n            // Base amount multiplied per offering\n            1 * calculateRecycle,\n            // +1 if C1 completion\n            Math.min(1, player.highestchallengecompletions[1]),\n            // +0.10 per C1 completion\n            0.4 / 10 * player.highestchallengecompletions[1],\n            // Research 5x2\n            0.6 * player.researches[22],\n            // Research 5x3\n            0.3 * player.researches[23],\n            // Particle Upgrade 1x1\n            2 * player.upgrades[61]\n        ]);\n\n        DOMCacheGetOrSet('offeringExperienceValue').textContent = i18next.t('runes.gainExp', {\n            amount: format(allRuneExpAdditiveMultiplier, 2, true)\n        })\n\n        DOMCacheGetOrSet('offeringRecycleInfo').textContent = i18next.t('runes.recycleChance', {\n            percent: format((1 - 1 / calculateRecycle) * 100, 2, true),\n            mult: format(calculateRecycle, 2, true)\n        })\n    }\n\n    if (G['runescreen'] === 'talismans') {\n        for (let i = 0; i < 7; i++) {\n            const maxTalismanLevel = calculateMaxTalismanLevel(i);\n            DOMCacheGetOrSet(`talisman${i + 1}level`).textContent = (player.ascensionCount > 0 ? '' : 'Level ') + format(player.talismanLevels[i]) + '/' + format(maxTalismanLevel)\n        }\n    }\n\n    if (G['runescreen'] === 'blessings') {\n        const blessingMultiplierArray = [0, 8, 10, 6.66, 2, 1]\n        let t = 0;\n        for (let i = 1; i <= 5; i++) {\n            DOMCacheGetOrSet(`runeBlessingLevel${i}Value`).innerHTML = i18next.t('runes.blessings.blessingLevel', {\n                amount: format(player.runeBlessingLevels[i])\n            })\n\n            DOMCacheGetOrSet(`runeBlessingPower${i}Value1`).innerHTML = i18next.t('runes.blessings.blessingPower', {\n                reward: i18next.t(`runes.blessings.rewards.${i - 1}`),\n                value: format(G['runeBlessings'][i]),\n                speed: format(1 - t + blessingMultiplierArray[i] * G['effectiveRuneBlessingPower'][i], 4, true)\n            })\n\n            const levelsPurchasable = calculateSummationLinear(player.runeBlessingLevels[i], G['blessingBaseCost'], player.runeshards, player.runeBlessingBuyAmount)[0] - player.runeBlessingLevels[i]\n            levelsPurchasable > 0\n                ? DOMCacheGetOrSet(`runeBlessingPurchase${i}`).classList.add('runeButtonsAvailable')\n                : DOMCacheGetOrSet(`runeBlessingPurchase${i}`).classList.remove('runeButtonsAvailable')\n\n            DOMCacheGetOrSet(`runeBlessingPurchase${i}`).innerHTML = i18next.t('runes.blessings.increaseLevel', {\n                amount: format(Math.max(1, levelsPurchasable)),\n                offerings: format(Math.max(G['blessingBaseCost'] * (1 + player.runeBlessingLevels[i]), calculateSummationLinear(player.runeBlessingLevels[i], G['blessingBaseCost'], player.runeshards, player.runeBlessingBuyAmount)[1]))\n            })\n\n            if (i === 5) {\n                t = 1\n            }\n        }\n    }\n\n    if (G['runescreen'] === 'spirits') {\n        const spiritMultiplierArray = [0, 1, 1, 20, 1, 100]\n        const subtract = [0, 0, 0, 1, 0, 0]\n        for (let i = 1; i <= 5; i++) {\n            spiritMultiplierArray[i] *= (calculateCorruptionPoints() / 400)\n\n            DOMCacheGetOrSet(`runeSpiritLevel${i}Value`).innerHTML = i18next.t('runes.spirits.spiritLevel', {\n                amount: format(player.runeSpiritLevels[i])\n            })\n\n            DOMCacheGetOrSet(`runeSpiritPower${i}Value1`).innerHTML = i18next.t('runes.spirits.spiritPower', {\n                reward: i18next.t(`runes.spirits.rewards.${i - 1}`),\n                value: format(G['runeSpirits'][i]),\n                speed: format(1 - subtract[i] + spiritMultiplierArray[i] * G['effectiveRuneSpiritPower'][i], 4, true)\n            })\n\n            const levelsPurchasable = calculateSummationLinear(player.runeSpiritLevels[i], G['spiritBaseCost'], player.runeshards, player.runeSpiritBuyAmount)[0] - player.runeSpiritLevels[i]\n            levelsPurchasable > 0\n                ? DOMCacheGetOrSet(`runeSpiritPurchase${i}`).classList.add('runeButtonsAvailable')\n                : DOMCacheGetOrSet(`runeSpiritPurchase${i}`).classList.remove('runeButtonsAvailable')\n\n            DOMCacheGetOrSet(`runeSpiritPurchase${i}`).innerHTML = i18next.t('runes.blessings.increaseLevel', {\n                amount: format(Math.max(1, levelsPurchasable)),\n                offerings: format(Math.max(G['spiritBaseCost'] * (1 + player.runeSpiritLevels[i]), calculateSummationLinear(player.runeSpiritLevels[i], G['spiritBaseCost'], player.runeshards, player.runeSpiritBuyAmount)[1]))\n            })\n        }\n    }\n}\n\nexport const visualUpdateChallenges = () => {\n    if (G['currentTab'] !== 'challenges') {\n        return\n    }\n    if (player.researches[150] > 0) {\n        DOMCacheGetOrSet('autoIncrementerAmount').innerHTML = i18next.t('challenges.autoTimer', {\n            time: format(G['autoChallengeTimerIncrement'], 2)\n        })\n    }\n}\n\nexport const visualUpdateResearch = () => {\n    if (G['currentTab'] !== 'researches') {\n        return\n    }\n\n    if (player.researches[61] > 0) {\n        DOMCacheGetOrSet('automaticobtainium').textContent = i18next.t('researches.thanksToResearches', {\n            x: format(calculateAutomaticObtainium() * calculateTimeAcceleration().mult, 3, true)\n        })\n    }\n}\n\nexport const visualUpdateAnts = () => {\n    if (G['currentTab'] !== 'ants') {\n        return\n    }\n    DOMCacheGetOrSet('crumbcount').textContent = i18next.t('ants.youHaveGalacticCrumbs', {\n        x: format(player.antPoints, 2),\n        y: format(G['antOneProduce'], 2),\n        z: format(Decimal.pow(Decimal.max(1, player.antPoints), 100000 + calculateSigmoidExponential(49900000, (player.antUpgrades[1]! + G['bonusant2']) / 5000 * 500 / 499)))\n    })\n\n    const mode = player.autoAntSacrificeMode === 2 ? i18next.t('ants.modeRealTime') : i18next.t('ants.modeInGameTime')\n    const timer = player.autoAntSacrificeMode === 2 ? player.antSacrificeTimerReal : player.antSacrificeTimer;\n\n    DOMCacheGetOrSet('autoAntSacrifice').textContent = i18next.t('ants.sacrificeWhenTimer', {\n        x: player.autoAntSacTimer,\n        y: mode,\n        z: format(timer, 2)\n    })\n\n    if (player.achievements[173] === 1) {\n        DOMCacheGetOrSet('antSacrificeTimer').textContent = formatTimeShort(player.antSacrificeTimer);\n        showSacrifice();\n    }\n}\n\ninterface cubeNames {\n    cube: number\n    tesseract: number\n    hypercube: number\n    platonicCube: number\n}\n\nexport const visualUpdateCubes = () => {\n    if (G['currentTab'] !== 'cubes') {\n        return\n    }\n\n    const cubeMult = (player.shopUpgrades.cubeToQuark) ? 1.5 : 1;\n    const tesseractMult = (player.shopUpgrades.tesseractToQuark) ? 1.5 : 1;\n    const hypercubeMult = (player.shopUpgrades.hypercubeToQuark) ? 1.5 : 1;\n    const platonicMult = 1.5;\n\n    const toNextQuark: cubeNames = {\n        cube: Number(player.wowCubes.checkCubesToNextQuark(5, cubeMult, player.cubeQuarkDaily, player.cubeOpenedDaily)),\n        tesseract: Number(player.wowTesseracts.checkCubesToNextQuark(7, tesseractMult, player.tesseractQuarkDaily, player.tesseractOpenedDaily)),\n        hypercube: Number(player.wowHypercubes.checkCubesToNextQuark(10, hypercubeMult, player.hypercubeQuarkDaily, player.hypercubeOpenedDaily)),\n        platonicCube: Number(player.wowPlatonicCubes.checkCubesToNextQuark(15, platonicMult, player.platonicCubeQuarkDaily, player.platonicCubeOpenedDaily))\n    }\n\n    const names = Object.keys(toNextQuark) as (keyof cubeNames)[]\n    for (const name of names) {\n        DOMCacheGetOrSet(`${name}QuarksToday`).innerHTML = i18next.t(`wowCubes.quarks.${name}QuarksToday`, {amount: format(player[`${name}QuarkDaily` as const])})\n        DOMCacheGetOrSet(`${name}QuarksOpenToday`).innerHTML = i18next.t(`wowCubes.quarks.${name}QuarksOpenToday`, {amount: format(player[`${name}OpenedDaily` as const])})\n        DOMCacheGetOrSet(`${name}QuarksOpenRequirement`).innerHTML = i18next.t(`wowCubes.quarks.${name}QuarksOpenRequirement`, {amount: format(Math.max(1, toNextQuark[name]))})\n\n        // Change color of requirement text if 1 or less required :D\n        DOMCacheGetOrSet(`${name}QuarksOpenRequirement`).style.color = (Math.max(1, toNextQuark[name]) === 1)? 'gold': 'white'\n    }\n\n    let accuracy;\n    switch (player.subtabNumber) {\n        case 0: {\n            if (player.autoOpenCubes) {\n                DOMCacheGetOrSet('openCubes').textContent = i18next.t('wowCubes.autoOn', {percent: format(player.openCubes, 0)});\n            }\n            DOMCacheGetOrSet('cubeQuantity').innerHTML = i18next.t('wowCubes.cubes.inventory', {amount: format(player.wowCubes, 0, true)})\n            const cubeArray = [null, player.cubeBlessings.accelerator, player.cubeBlessings.multiplier, player.cubeBlessings.offering, player.cubeBlessings.runeExp, player.cubeBlessings.obtainium, player.cubeBlessings.antSpeed, player.cubeBlessings.antSacrifice, player.cubeBlessings.antELO, player.cubeBlessings.talismanBonus, player.cubeBlessings.globalSpeed]\n\n            accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 1, 4, 3]\n            for (let i = 1; i <= 10; i++) {\n                let augmentAccuracy = 0;\n                if (cubeArray[i]! >= 1000 && i !== 6) {\n                    augmentAccuracy += 2;\n                }\n                const aestheticMultiplier = (i === 1 || i === 8 || i === 9) ? 1: 100\n                DOMCacheGetOrSet(`cube${i}Bonus`).innerHTML = i18next.t(`wowCubes.cubes.items.${i}`, {amount: format(cubeArray[i], 0, true), bonus: format(aestheticMultiplier * (G['cubeBonusMultiplier'][i]! - 1), accuracy[i]! + augmentAccuracy, true)})\n            }\n            DOMCacheGetOrSet('cubeBlessingsTotal').innerHTML = i18next.t('wowCubes.cubes.total', {amount: format(sumContents(cubeArray.slice(1) as number[]), 0, true)});\n            break;\n        }\n        case 1: {\n            if (player.autoOpenTesseracts) {\n                DOMCacheGetOrSet('openTesseracts').textContent = i18next.t('wowCubes.autoOn', {percent: format(player.openTesseracts, 0)});\n            }\n            DOMCacheGetOrSet('tesseractQuantity').innerHTML = i18next.t('wowCubes.tesseracts.inventory', {amount: format(player.wowTesseracts, 0, true)})\n            const tesseractArray = [null, player.tesseractBlessings.accelerator, player.tesseractBlessings.multiplier, player.tesseractBlessings.offering, player.tesseractBlessings.runeExp, player.tesseractBlessings.obtainium, player.tesseractBlessings.antSpeed, player.tesseractBlessings.antSacrifice, player.tesseractBlessings.antELO, player.tesseractBlessings.talismanBonus, player.tesseractBlessings.globalSpeed]\n            accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]\n            for (let i = 1; i <= 10; i++) {\n                let augmentAccuracy = 0;\n                if (tesseractArray[i]! >= 1000 && i !== 6) {\n                    augmentAccuracy += 2;\n                }\n                DOMCacheGetOrSet(`tesseract${i}Bonus`).innerHTML = i18next.t(`wowCubes.tesseracts.items.${i}`, {amount: format(tesseractArray[i], 0, true), bonus: format(100 * (G['tesseractBonusMultiplier'][i]! - 1), accuracy[i]! + augmentAccuracy, true)})\n            }\n            DOMCacheGetOrSet('tesseractBlessingsTotal').innerHTML = i18next.t('wowCubes.tesseracts.total', {amount: format(sumContents(tesseractArray.slice(1) as number[]), 0, true)})\n            break;\n        }\n        case 2: {\n            if (player.autoOpenHypercubes) {\n                DOMCacheGetOrSet('openHypercubes').textContent = i18next.t('wowCubes.autoOn', {percent: format(player.openHypercubes, 0)})\n            }\n            DOMCacheGetOrSet('hypercubeQuantity').innerHTML = i18next.t('wowCubes.hypercubes.inventory', {amount: format(player.wowHypercubes, 0, true)})\n            const hypercubeArray = [null, player.hypercubeBlessings.accelerator, player.hypercubeBlessings.multiplier, player.hypercubeBlessings.offering, player.hypercubeBlessings.runeExp, player.hypercubeBlessings.obtainium, player.hypercubeBlessings.antSpeed, player.hypercubeBlessings.antSacrifice, player.hypercubeBlessings.antELO, player.hypercubeBlessings.talismanBonus, player.hypercubeBlessings.globalSpeed]\n            accuracy = [null, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]\n            for (let i = 1; i <= 10; i++) {\n                let augmentAccuracy = 0;\n                if (hypercubeArray[i]! >= 1000) {\n                    augmentAccuracy += 2;\n                }\n                DOMCacheGetOrSet(`hypercube${i}Bonus`).innerHTML = i18next.t(`wowCubes.hypercubes.items.${i}`, {amount: format(hypercubeArray[i], 0, true), bonus: format(100 * (G['hypercubeBonusMultiplier'][i]! - 1), accuracy[i]! + augmentAccuracy, true)})\n            }\n            DOMCacheGetOrSet('hypercubeBlessingsTotal').innerHTML = i18next.t('wowCubes.hypercubes.total', {amount: format(sumContents(hypercubeArray.slice(1) as number[]), 0, true)})\n            break;\n        }\n        case 3: {\n            if (player.autoOpenPlatonicsCubes) {\n                DOMCacheGetOrSet('openPlatonicCube').textContent = i18next.t('wowCubes.autoOn', {percent: format(player.openPlatonicsCubes, 0)})\n            }\n            DOMCacheGetOrSet('platonicQuantity').innerHTML = i18next.t('wowCubes.platonics.inventory', {amount: format(player.wowPlatonicCubes, 0, true)})\n            const platonicArray = [player.platonicBlessings.cubes, player.platonicBlessings.tesseracts, player.platonicBlessings.hypercubes, player.platonicBlessings.platonics, player.platonicBlessings.hypercubeBonus, player.platonicBlessings.taxes, player.platonicBlessings.scoreBonus, player.platonicBlessings.globalSpeed]\n            const DRThreshold = [4e6, 4e6, 4e6, 8e4, 1e4, 1e4, 1e4, 1e4]\n            accuracy = [5, 5, 5, 5, 2, 3, 3, 2]\n            for (let i = 0; i < platonicArray.length; i++) {\n                let augmentAccuracy = 0;\n                if (platonicArray[i] >= DRThreshold[i]) {\n                    augmentAccuracy += 1;\n                }\n                DOMCacheGetOrSet(`platonicCube${i+1}Bonus`).innerHTML = i18next.t(`wowCubes.platonics.items.${i+1}`, {amount: format(platonicArray[i], 0, true), bonus: format(100 * (G['platonicBonusMultiplier'][i] - 1), accuracy[i] + augmentAccuracy, true)})\n            }\n            DOMCacheGetOrSet('platonicBlessingsTotal').innerHTML = i18next.t('wowCubes.platonics.total', {amount: format(sumContents(platonicArray), 0, true)});\n            break;\n        }\n        case 4:\n            DOMCacheGetOrSet('cubeAmount2').textContent = `You have ${format(player.wowCubes, 0, true)} Wow! Cubes =)`\n            break;\n        case 5:\n            break;\n        case 6:\n            DOMCacheGetOrSet('hepteractQuantity').innerHTML = i18next.t('wowCubes.hepteractForge.youPossessHepteracts', {\n                x: format(player.wowAbyssals, 0, true)\n            })\n\n            //Update the grid\n            hepteractTypeList.forEach((type) => {\n                UpdateHeptGridValues(type);\n            });\n\n            //orbs\n            DOMCacheGetOrSet('heptGridOrbBalance').textContent = format(player.overfluxOrbs)\n            DOMCacheGetOrSet('heptGridOrbEffect').textContent = format(100 * (-1 + calculateCubeQuarkMultiplier()), 2, true) + '%'\n\n            //powder\n            DOMCacheGetOrSet('heptGridPowderBalance').textContent = format(player.overfluxPowder)\n            DOMCacheGetOrSet('heptGridPowderWarps').textContent = format(player.dailyPowderResetUses)\n            break;\n        default:\n            // console.log(`player.subtabNumber (${player.subtabNumber}) was outside of the allowed range (${subTabsInMainTab(8).subTabList.length}) for the cube tab`);\n            break;\n    }\n}\n\nconst UpdateHeptGridValues = (type: hepteractTypes) => {\n    const text = type + 'ProgressBarText';\n    const bar = type + 'ProgressBar';\n    const textEl = DOMCacheGetOrSet(text);\n    const barEl = DOMCacheGetOrSet(bar);\n    const unlocked = player.hepteractCrafts[type].UNLOCKED;\n\n    if (!unlocked) {\n        textEl.textContent = 'LOCKED';\n        barEl.style.width = '100%';\n        barEl.style.backgroundColor = 'var(--hepteract-bar-red)';\n    } else {\n        const balance = player.hepteractCrafts[type].BAL;\n        const cap = player.hepteractCrafts[type].computeActualCap();\n        const barWidth = Math.round((balance / cap) * 100);\n\n        let barColor = '';\n        if (barWidth < 34) {\n            barColor = 'var(--hepteract-bar-red)';\n        } else if (barWidth >= 34 && barWidth < 68) {\n            barColor = 'var(--hepteract-bar-yellow)';\n        } else {\n            barColor = 'var(--hepteract-bar-green)';\n        }\n\n        textEl.textContent = format(balance) + ' / ' + format(cap);\n        barEl.style.width = barWidth + '%';\n        barEl.style.backgroundColor = barColor;\n    }\n}\n\nexport const visualUpdateCorruptions = () => {\n    if (G['currentTab'] !== 'traits') {\n        return\n    }\n\n    const metaData = CalcCorruptionStuff();\n    const ascCount = calcAscensionCount();\n    DOMCacheGetOrSet('autoAscend').innerHTML = player.autoAscendMode === 'c10Completions' ?\n        i18next.t('corruptions.autoAscend.c10Completions', {input: format(player.autoAscendThreshold), completions: format(player.challengecompletions[10])}):\n        i18next.t('corruptions.autoAscend.realTime', {input: format(player.autoAscendThreshold), time: format(player.ascensionCounterRealReal)})\n    /*DOMCacheGetOrSet('autoAscendText').textContent = player.autoAscendMode === 'c10Completions' ? ' you\\'ve completed Sadistic Challenge I a total of ' : ' the timer is at least ';\n    DOMCacheGetOrSet('autoAscendMetric').textContent = format(player.autoAscendThreshold);\n    DOMCacheGetOrSet('autoAscendText2').textContent = player.autoAscendMode === 'c10Completions' ? ' times, Currently ' : ' seconds (Real-time), Currently ';\n    DOMCacheGetOrSet('autoAscendMetric2').textContent = player.autoAscendMode === 'c10Completions' ? String(player.challengecompletions[10]) : format(player.ascensionCounterRealReal);*/\n    DOMCacheGetOrSet('corruptionBank').innerHTML = i18next.t('corruptions.corruptionBank', {number: format(metaData[0], 0, true)})\n    DOMCacheGetOrSet('corruptionScore').innerHTML = i18next.t('corruptions.corruptionScore', {ascScore: format(metaData[1], 1, true), corrMult: format(metaData[2], 1, true), bonusMult: format(metaData[9], 2, true), totalScore: format(metaData[3], 1, true)})\n    DOMCacheGetOrSet('corruptionCubes').innerHTML = i18next.t('corruptions.corruptionCubes', {cubeAmount: format(metaData[4], 0, true)})\n    DOMCacheGetOrSet('corruptionTesseracts').innerHTML = i18next.t('corruptions.corruptionTesseracts', {tesseractAmount: format(metaData[5], 0, true)})\n    DOMCacheGetOrSet('corruptionHypercubes').innerHTML = i18next.t('corruptions.corruptionHypercubes', {hypercubeAmount: format(metaData[6], 0, true)})\n    DOMCacheGetOrSet('corruptionPlatonicCubes').innerHTML = i18next.t('corruptions.corruptionPlatonics', {platonicAmount: format(metaData[7], 0, true)})\n    DOMCacheGetOrSet('corruptionHepteracts').innerHTML = i18next.t('corruptions.corruptionHepteracts', {hepteractAmount: format(metaData[8], 0, true)})\n    DOMCacheGetOrSet('corruptionAntExponent').innerHTML = i18next.t('corruptions.antExponent', {exponent: format((1 - 0.9 / 90 * sumContents(player.usedCorruptions)) * G['extinctionMultiplier'][player.usedCorruptions[7]], 3)})\n    DOMCacheGetOrSet('corruptionSpiritBonus').innerHTML = i18next.t('corruptions.spiritBonus', {multiplier: format(calculateCorruptionPoints()/400,2,true)})\n    DOMCacheGetOrSet('corruptionAscensionCount').style.display = ascCount > 1 ? 'block' : 'none';\n\n    if (ascCount > 1) {\n        DOMCacheGetOrSet('corruptionAscensionCount').innerHTML = i18next.t('corruptions.ascensionCount', {ascCount: format(calcAscensionCount())}) ;\n    }\n}\n\nexport const visualUpdateSettings = () => {\n    if (G['currentTab'] !== 'settings') {\n        return\n    }\n\n    if (player.subtabNumber === 0) {\n        DOMCacheGetOrSet('saveString').textContent = i18next.t('settings.currently', {\n            x: player.saveString.replace('$VERSION$', 'v' + version)\n        })\n\n        const quarkData = quarkHandler();\n        const onExportQuarks = quarkData.gain\n        const maxExportQuarks = quarkData.capacity\n\n        let goldenQuarkMultiplier = 1\n        goldenQuarkMultiplier *= 1 + player.worlds.BONUS / 100\n        goldenQuarkMultiplier *= (player.highestSingularityCount >= 100 ? 1 + player.highestSingularityCount / 50 : 1)\n\n        DOMCacheGetOrSet('quarktimerdisplay').textContent = i18next.t('settings.exportQuark', {\n            x: format((3600 / (quarkData.perHour) - (player.quarkstimer % (3600.00001 / (quarkData.perHour)))), 2),\n            y: player.worlds.toString(1)\n        })\n        DOMCacheGetOrSet('quarktimeramount').textContent = i18next.t('settings.quarksOnExport', {\n            x: player.worlds.toString(onExportQuarks),\n            y: player.worlds.toString(maxExportQuarks)\n        })\n\n        DOMCacheGetOrSet('goldenQuarkTimerDisplay').textContent = i18next.t('settings.exportGoldenQuark', {\n            x: format(3600 / Math.max(1, +player.singularityUpgrades.goldenQuarks3.getEffect().bonus) - (player.goldenQuarksTimer % (3600.00001 / Math.max(1,+player.singularityUpgrades.goldenQuarks3.getEffect().bonus)))),\n            y: format(goldenQuarkMultiplier, 2, true)\n        })\n\n        DOMCacheGetOrSet('goldenQuarkTimerAmount').textContent = i18next.t('settings.goldenQuarksOnExport', {\n            x: format(Math.floor(player.goldenQuarksTimer * +player.singularityUpgrades.goldenQuarks3.getEffect().bonus/ 3600) * goldenQuarkMultiplier, 2),\n            y: format(Math.floor(168 * +player.singularityUpgrades.goldenQuarks3.getEffect().bonus * goldenQuarkMultiplier))\n        })\n    }\n    if (player.subtabNumber === 3) {\n        loadStatisticsUpdate();\n    }\n}\n\nexport const visualUpdateSingularity = () => {\n    if (G['currentTab'] !== 'singularity') {\n        return\n    }\n    if (player.subtabNumber === 0) {\n        DOMCacheGetOrSet('goldenQuarkamount').textContent = i18next.t('singularity.goldenQuarkAmount', {goldenQuarks: format(player.goldenQuarks, 0, true)})\n\n        const keys = Object.keys(player.singularityUpgrades) as (keyof Player['singularityUpgrades'])[];\n        const val = G['shopEnhanceVision'];\n\n        for (const key of keys) {\n            if (key === 'offeringAutomatic') {\n                continue\n            }\n            const singItem = player.singularityUpgrades[key];\n            const el = DOMCacheGetOrSet(`${String(key)}`);\n            if (singItem.maxLevel !== -1 && singItem.level >= singItem.computeMaxLevel()) {\n                el.style.filter = val ? 'brightness(.9)' : 'none';\n            } else if  (singItem.getCostTNL() > player.goldenQuarks || player.singularityCount < singItem.minimumSingularity) {\n                el.style.filter = val ? 'grayscale(.9) brightness(.8)' : 'none';\n            } else if (singItem.maxLevel === -1 || singItem.level < singItem.computeMaxLevel()) {\n                if (singItem.freeLevels > singItem.level) {\n                    el.style.filter = val ? 'blur(1px) invert(.9) saturate(200)' : 'none';\n                } else {\n                    el.style.filter = val ? 'invert(.9) brightness(1.1)' : 'none';\n                }\n            }\n        }\n    }\n    if (player.subtabNumber === 3) {\n        const keys = Object.keys(player.octeractUpgrades) as (keyof Player['octeractUpgrades'])[];\n        const val = G['shopEnhanceVision'];\n\n        for (const key of keys) {\n            const octItem = player.octeractUpgrades[key];\n            const el = DOMCacheGetOrSet(`${String(key)}`);\n            if (octItem.maxLevel !== -1 && octItem.level >= octItem.maxLevel) {\n                el.style.filter = val ? 'brightness(.9)' : 'none';\n            } else if  (octItem.getCostTNL() > player.wowOcteracts) {\n                el.style.filter = val ? 'grayscale(.9) brightness(.8)' : 'none';\n            } else if (octItem.maxLevel === -1 || octItem.level < octItem.maxLevel) {\n                if (octItem.freeLevels > octItem.level) {\n                    el.style.filter = val ? 'blur(2px) invert(.9) saturate(200)' : 'none';\n                } else {\n                    el.style.filter = val ? 'invert(.9) brightness(1.1)' : 'none';\n                }\n            }\n        }\n    }\n}\n\nexport const shopMouseover = (value: boolean) => {\n    G['shopEnhanceVision'] = value;\n}\n\nexport const visualUpdateOcteracts = () => {\n    if (G['currentTab'] !== 'singularity') {\n        return\n    }\n    DOMCacheGetOrSet('octeractAmount').innerHTML = i18next.t('octeract.amount', {octeracts: format(player.wowOcteracts, 2, true, true, true)})\n\n    const perSecond = octeractGainPerSecond();\n\n    DOMCacheGetOrSet('secondsPerOcteract').style.display = perSecond < 1 ? 'block' : 'none';\n    DOMCacheGetOrSet('secondsPerOcteract').innerHTML = i18next.t('octeract.secondsPerOcteract', {seconds: format(1 / perSecond, 2, true)})\n    DOMCacheGetOrSet('octeractPerSeconds').style.display = perSecond >= 1 ? 'block' : 'none';\n    DOMCacheGetOrSet('octeractPerSeconds').innerHTML = i18next.t('octeract.octeractsPerSecond', {octeracts: format(perSecond, 2, true)})\n\n    const cTOCB = (calculateTotalOcteractCubeBonus() - 1) * 100;\n    const cTOQB = (calculateTotalOcteractQuarkBonus() - 1) * 100;\n    const cTOOB = (calculateTotalOcteractOfferingBonus() - 1) * 100;\n    const cTOOOB = (calculateTotalOcteractObtainiumBonus() - 1) * 100;\n    DOMCacheGetOrSet('totalOcteractAmount').innerHTML = i18next.t('octeract.totalGenerated', {octeracts: format(player.totalWowOcteracts, 2, true, true, true)})\n    DOMCacheGetOrSet('totalOcteractCubeBonus').style.display = cTOCB >= 0.001 ? 'block' : 'none';\n    DOMCacheGetOrSet('totalOcteractQuarkBonus').style.display = cTOQB >= 0.001 ? 'block' : 'none';\n    DOMCacheGetOrSet('totalOcteractOfferingBonus').style.display = cTOOB >= 0.001 ? 'block' : 'none';\n    DOMCacheGetOrSet('totalOcteractObtainiumBonus').style.display = cTOOOB >= 0.001 ? 'block' : 'none';\n    DOMCacheGetOrSet('totalOcteractCubeBonus').innerHTML = i18next.t('octeract.generatedCubeBonus', {cubeBonus: format(cTOCB, 3, true)})\n    DOMCacheGetOrSet('totalOcteractQuarkBonus').innerHTML = i18next.t('octeract.generatedQuarkBonus', {quarkBonus: format(cTOQB, 3, true)})\n    DOMCacheGetOrSet('totalOcteractOfferingBonus').innerHTML = i18next.t('octeract.generatedOfferingBonus', {offeringBonus: format(cTOOB, 3, true)})\n    DOMCacheGetOrSet('totalOcteractObtainiumBonus').innerHTML = i18next.t('octeract.generatedObtainiumBonus', {obtainiumBonus: format(cTOOOB, 3, true)})\n}\n\nexport const visualUpdateShop = () => {\n    if (G['currentTab'] !== 'shop') {\n        return\n    }\n    DOMCacheGetOrSet('quarkamount').textContent = i18next.t('shop.youHaveQuarks', { x: format(player.worlds, 0, true) })\n    DOMCacheGetOrSet('offeringpotionowned').textContent = format(player.shopUpgrades.offeringPotion, 0, true)\n    DOMCacheGetOrSet('obtainiumpotionowned').textContent = format(player.shopUpgrades.obtainiumPotion, 0, true)\n\n    // Create Keys with the correct type\n    const keys = Object.keys(player.shopUpgrades) as (keyof Player['shopUpgrades'])[];\n    for (const key of keys) {\n        // Create a copy of shopItem instead of accessing many times\n        const shopItem = shopData[key]\n\n        if (shopItem.type === shopUpgradeTypes.CONSUMABLE) {\n            const maxBuyablePotions = Math.min(Math.floor(Number(player.worlds)/getShopCosts(key)),shopItem.maxLevel-player.shopUpgrades[key]);\n            const el = DOMCacheGetOrSet(`buy${key.toLowerCase()}`);\n            switch (player.shopBuyMaxToggle) {\n                case false:\n                    el.textContent = 'BUY: 100 Quarks Each';\n                    break;\n                case 'TEN':\n                    el.textContent = `+${Math.min(10,maxBuyablePotions)} for ${format(getShopCosts(key)*Math.min(10,maxBuyablePotions),0,true)} Quarks`;\n                    break;\n                default:\n                    el.textContent = `+${maxBuyablePotions} for ${format(getShopCosts(key)*maxBuyablePotions)} Quarks`;\n            }\n        }\n\n        if (shopItem.type === shopUpgradeTypes.UPGRADE) {\n            if (player.shopHideToggle && player.shopUpgrades[key] >= shopItem.maxLevel && !shopItem.refundable) {\n                DOMCacheGetOrSet(`${key}Hide`).style.display = 'none';\n                continue;\n            } else {\n                DOMCacheGetOrSet(`${key}Hide`).style.display = isShopUpgradeUnlocked(key) ? 'block' : 'none';\n            }\n            // Case: If max level is 1, then it can be considered a boolean \"bought\" or \"not bought\" item\n            if (shopItem.maxLevel === 1) {\n                DOMCacheGetOrSet(`${key}Level`).textContent = player.shopUpgrades[key] >= shopItem.maxLevel ? 'Bought!' : 'Not Bought!';\n            } else {\n                // Case: max level greater than 1, treat it as a fraction out of max level\n                DOMCacheGetOrSet(`${key}Level`).textContent = (player.highestSingularityCount > 0 || player.ascensionCount > 0 ? '' : 'Level ') + format(player.shopUpgrades[key]) + '/' + format(shopItem.maxLevel);\n            }\n            // Handles Button - max level needs no price indicator, otherwise it's necessary\n\n            const buyMaxAmount = shopItem.maxLevel - player.shopUpgrades[key];\n            let buyData:IMultiBuy;\n\n            switch (player.shopBuyMaxToggle) {\n                case false:\n                    DOMCacheGetOrSet(`${key}Button`).textContent = player.shopUpgrades[key] >= shopItem.maxLevel\n                        ? i18next.t('shop.maxed')\n                        : i18next.t('shop.upgradeFor', { x: format(getShopCosts(key)) })\n                    break;\n                case 'TEN':\n                    buyData = calculateSummationNonLinear(player.shopUpgrades[key], shopItem.price, +player.worlds, shopItem.priceIncrease / shopItem.price, Math.min(10,buyMaxAmount));\n                    DOMCacheGetOrSet(`${key}Button`).textContent = player.shopUpgrades[key] >= shopItem.maxLevel\n                        ? i18next.t('shop.maxed')\n                        : i18next.t('shop.plusForQuarks', {\n                            x: format(buyData.levelCanBuy - player.shopUpgrades[key], 0, true),\n                            y: format(buyData.cost)\n                        })\n                    break;\n                default:\n                    buyData = calculateSummationNonLinear(player.shopUpgrades[key], shopItem.price, +player.worlds, shopItem.priceIncrease / shopItem.price, buyMaxAmount);\n                    DOMCacheGetOrSet(`${key}Button`).textContent = player.shopUpgrades[key] >= shopItem.maxLevel\n                        ? i18next.t('shop.maxed')\n                        : i18next.t('shop.plusForQuarks', {\n                            x: format(buyData.levelCanBuy - player.shopUpgrades[key], 0, true),\n                            y: format(buyData.cost)\n                        })\n            }\n        }\n    }\n\n    DOMCacheGetOrSet('buySingularityQuarksAmount').textContent = `${player.goldenQuarks < 1000 ? 'Owned: ' : ''}${format(player.goldenQuarks)}`\n    DOMCacheGetOrSet('buySingularityQuarksButton').textContent = `Buy! ${format(getGoldenQuarkCost().cost)} Quarks Each`\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const visualUpdateEvent = () => {}", "import { sacrificeAnts } from './Ants';\nimport { calculateAscensionAcceleration, calculateAutomaticObtainium, calculateGoldenQuarkGain, calculateMaxRunes, calculateObtainium, calculateTimeAcceleration, octeractGainPerSecond } from './Calculate'\nimport { quarkHandler } from './Quark';\nimport { redeemShards, unlockedRune, checkMaxRunes } from './Runes';\nimport { player } from './Synergism';\nimport { visualUpdateOcteracts, visualUpdateResearch } from './UpdateVisuals';\nimport { Globals as G } from './Variables';\nimport { buyAllBlessings } from './Buy';\nimport { buyAllTalismanResources } from './Talismans'\nimport { useConsumable } from './Shop';\n\ntype TimerInput = 'prestige' | 'transcension' | 'reincarnation' | 'ascension' |\n                  'quarks' | 'goldenQuarks' | 'singularity' | 'octeracts' |\n                  'autoPotion'\n\n/**\n * addTimers will add (in milliseconds) time to the reset counters, and quark export timer\n * @param input\n * @param time\n */\nexport const addTimers = (input: TimerInput, time = 0) => {\n    const timeMultiplier = (input === 'ascension' || input === 'quarks' || input === 'goldenQuarks' ||\n                            input === 'singularity' || input === 'octeracts' || input === 'autoPotion') ? 1 : calculateTimeAcceleration().mult;\n\n    switch (input){\n        case 'prestige': {\n            player.prestigecounter += time * timeMultiplier;\n            break;\n        }\n        case 'transcension': {\n            player.transcendcounter += time * timeMultiplier;\n            break;\n        }\n        case 'reincarnation': {\n            player.reincarnationcounter += time * timeMultiplier;\n            break;\n        }\n        case 'ascension': { //Anything in here is affected by add code\n\n            const ascensionSpeedMulti = (player.singularityUpgrades.oneMind.getEffect().bonus) ? 10 : calculateAscensionAcceleration();\n            player.ascensionCounter += time * timeMultiplier * ascensionSpeedMulti\n            player.ascensionCounterReal += time * timeMultiplier;\n            break;\n        }\n        case 'singularity': {\n            player.ascensionCounterRealReal += time;\n            player.singularityCounter += time * timeMultiplier;\n            break;\n        }\n        case 'quarks': {\n            // First get maximum Quark Clock (25h, up to +25 from Research 8x20)\n            const maxQuarkTimer = quarkHandler().maxTime\n            player.quarkstimer += time * timeMultiplier;\n            // Checks if this new time is greater than maximum, in which it will default to that time.\n            // Otherwise returns itself.\n            player.quarkstimer = (player.quarkstimer > maxQuarkTimer) ? maxQuarkTimer : player.quarkstimer;\n            break;\n        }\n        case 'goldenQuarks': {\n            if (+player.singularityUpgrades.goldenQuarks3.getEffect().bonus === 0) {\n                return\n            } else {\n                player.goldenQuarksTimer += time * timeMultiplier;\n                player.goldenQuarksTimer = (player.goldenQuarksTimer > 3600 * 168) ? 3600 * 168 : player.goldenQuarksTimer;\n            }\n            break;\n        }\n        case 'octeracts': {\n            if (!player.singularityUpgrades.octeractUnlock.getEffect().bonus) {\n                return\n            } else {\n                player.octeractTimer += time * timeMultiplier\n            }\n            if (player.octeractTimer >= 1) {\n                const amountOfGiveaways = player.octeractTimer - (player.octeractTimer % 1)\n                player.octeractTimer %= 1\n\n                const perSecond = octeractGainPerSecond()\n                player.wowOcteracts += amountOfGiveaways * perSecond\n                player.totalWowOcteracts += amountOfGiveaways * perSecond\n\n                if (player.highestSingularityCount >= 160) {\n                    const levels = [160, 173, 185, 194, 204, 210, 219, 229, 240, 249]\n                    const frac = 1e-6\n                    let actualLevel = 0\n                    for (const sing of levels) {\n                        if (player.highestSingularityCount >= sing) {\n                            actualLevel += 1\n                        }\n                    }\n\n                    for (let i = 0; i < amountOfGiveaways; i++) {\n                        const quarkFraction = player.quarksThisSingularity * frac * actualLevel\n                        player.goldenQuarks += quarkFraction * calculateGoldenQuarkGain(true)\n                        player.quarksThisSingularity -= quarkFraction\n                    }\n                }\n                visualUpdateOcteracts()\n            }\n            break;\n        }\n        case 'autoPotion': {\n            if (player.highestSingularityCount < 6) {\n                return\n            } else {\n                // player.toggles[42] enables FAST Offering Potion Expenditure, but actually spends the potion.\n                // Hence, you need at least one potion to be able to use fast spend.\n                const toggleOfferingOn = (player.toggles[42] && player.shopUpgrades.offeringPotion > 0)\n                // player.toggles[43] enables FAST Obtainium Potion Expenditure, but actually spends the potion.\n                const toggleObtainiumOn = (player.toggles[43] && player.shopUpgrades.obtainiumPotion > 0)\n\n                player.autoPotionTimer += time * timeMultiplier\n                player.autoPotionTimerObtainium += time * timeMultiplier\n\n                const timerThreshold = 180 * Math.pow(1.03, -player.highestSingularityCount) / +player.octeractUpgrades.octeractAutoPotionSpeed.getEffect().bonus\n\n                const effectiveOfferingThreshold = (toggleOfferingOn ? Math.min(1, timerThreshold) / 20: timerThreshold)\n                const effectiveObtainiumThreshold = (toggleObtainiumOn ? Math.min(1, timerThreshold) / 20: timerThreshold)\n\n                if (player.autoPotionTimer >= effectiveOfferingThreshold) {\n                    const amountOfPotions = ((player.autoPotionTimer) - (player.autoPotionTimer % effectiveOfferingThreshold)) / effectiveOfferingThreshold\n                    player.autoPotionTimer %= effectiveOfferingThreshold\n                    void useConsumable('offeringPotion', true, amountOfPotions, toggleOfferingOn)\n                }\n\n                if (player.autoPotionTimerObtainium >= effectiveObtainiumThreshold) {\n                    const amountOfPotions = ((player.autoPotionTimerObtainium) - (player.autoPotionTimerObtainium % effectiveObtainiumThreshold)) / effectiveObtainiumThreshold\n                    player.autoPotionTimerObtainium %= effectiveObtainiumThreshold\n                    void useConsumable('obtainiumPotion', true, amountOfPotions, toggleObtainiumOn)\n                }\n            }\n            break;\n        }\n    }\n}\n\ntype AutoToolInput = 'addObtainium' | 'addOfferings' | 'runeSacrifice' | 'antSacrifice';\n\n/**\n * Assortment of tools which are used when actions are automated.\n * @param input\n * @param time\n */\nexport const automaticTools = (input: AutoToolInput, time: number) => {\n    const timeMultiplier = (input === 'runeSacrifice' || input === 'addOfferings') ? 1 : calculateTimeAcceleration().mult\n\n    switch (input){\n        case 'addObtainium': {\n            // If in challenge 14, abort and do not award obtainium\n            if (player.currentChallenge.ascension === 14) {\n                break;\n            }\n            //Update Obtainium Multipliers + Amount to gain\n            calculateObtainium();\n            const obtainiumGain = calculateAutomaticObtainium();\n            //Add Obtainium\n            player.researchPoints = Math.min(1e300, player.researchPoints + obtainiumGain * time * timeMultiplier);\n            //Update visual displays if appropriate\n            if (G['currentTab'] === 'researches') {\n                visualUpdateResearch();\n            }\n            break;\n        }\n        case 'addOfferings':\n            //This counter can be increased through challenge 3 reward\n            //As well as cube upgrade 1x2 (2).\n            G['autoOfferingCounter'] += time;\n            //Any time this exceeds 1 it adds an offering\n            player.runeshards = Math.min(1e300, player.runeshards + Math.floor(G['autoOfferingCounter']));\n            G['autoOfferingCounter'] %= 1;\n            break;\n        case 'runeSacrifice':\n            //Every real life second this will trigger\n            player.sacrificeTimer += time;\n            if (player.sacrificeTimer >= 1 && isFinite(player.runeshards) && player.runeshards > 0){\n                // Automatic purchase of Blessings\n                if (player.highestSingularityCount >= 15) {\n                    let ratio = 4;\n                    if (player.toggles[36] === true) {\n                        buyAllBlessings('Blessings', 100 / ratio, true);\n                        ratio--;\n                    }\n                    if (player.toggles[37] === true) {\n                        buyAllBlessings('Spirits', 100 / ratio, true);\n                        ratio--;\n                    }\n                }\n                if (player.autoBuyFragment && player.highestSingularityCount >= 40 && player.cubeUpgrades[51] > 0) {\n                    buyAllTalismanResources();\n                }\n\n                // If you bought cube upgrade 2x10 then it sacrifices to all runes equally\n                if (player.cubeUpgrades[20] === 1){\n                    const maxi = player.highestSingularityCount >= 50 ? 7 : (player.highestSingularityCount >= 30 ? 6 : 5);\n                    const notMaxed = (maxi - checkMaxRunes(maxi));\n                    if (notMaxed > 0){\n                        const baseAmount = Math.floor(player.runeshards / notMaxed / 2);\n                        for (let i = 0; i < maxi; i++) {\n                            if (!(!unlockedRune(i + 1) || player.runelevels[i] >= calculateMaxRunes(i + 1))) {\n                                redeemShards(i + 1, true, baseAmount);\n                            }\n                        }\n                    }\n                } else {\n                    // If you did not buy cube upgrade 2x10 it sacrifices to selected rune.\n                    const rune = player.autoSacrifice;\n                    redeemShards(rune, true, 0);\n                }\n                //Modulo used in event of a large delta time (this could happen for a number of reasons)\n                player.sacrificeTimer %= 1\n            }\n            break;\n        case 'antSacrifice': {\n            // Increments real and 'fake' timers. the Real timer is on real life seconds.\n            player.antSacrificeTimer += time * timeMultiplier;\n            player.antSacrificeTimerReal += time\n\n            //Equal to real time iff \"Real Time\" option selected in ants tab.\n            const antSacrificeTimer = (player.autoAntSacrificeMode === 2) ?\n                player.antSacrificeTimerReal : player.antSacrificeTimer;\n\n            if (antSacrificeTimer >= player.autoAntSacTimer && player.antSacrificeTimerReal > 0.1 && player.researches[124] === 1\n                && player.autoAntSacrifice && player.antPoints.gte('1e40')) {\n                void sacrificeAnts(true)\n            }\n            break;\n        }\n    }\n}\n", "import { player, getTimePinnedToLoadDate } from './Synergism'\nimport { Globals as G } from './Variables';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport i18next from 'i18next';\nimport { Alert, revealStuff } from './UpdateHTML';\n\ninterface HolidayData {\n    name: string\n    color: string\n    url: string\n    everyYear: boolean\n    start: string\n    end: string\n    notice: number\n    event: boolean\n    buffs: {\n        quark?: number\n        goldenQuark?: number\n        cubes?: number\n        powderConversion?: number\n        ascensionSpeed?: number\n        globalSpeed?: number\n        ascensionScore?: number\n        antSacrifice?: number\n        offering?: number\n        obtainium?: number\n        octeract?: number\n        oneMind?: number\n    }\n}\n\n// Editing the event is here\n// can change the basic game balance by setting default to event: true, but cannot stack events\nconst events: Record<string, HolidayData> = {\n    default: {\n        name: 'Game Modified',\n        color: 'white',\n        url: '',\n        everyYear: true,\n        start: '1/1/2001 00:00:00',\n        end: '12/31/2099 23:59:59',\n        notice: 0,\n        event: false,\n        buffs: {\n            quark: -0.2,\n            goldenQuark: 0,\n            cubes: 0,\n            powderConversion: 0,\n            ascensionSpeed: 0,\n            globalSpeed: 0,\n            ascensionScore: 0,\n            antSacrifice: 0,\n            offering: 0,\n            obtainium: 0\n        }\n    },\n    // Last active event\n    last: {\n        name: 'April Showers',\n        color: 'turquoise',\n        url: 'https://youtu.be/eKpPxWAauOI',\n        everyYear: false,\n        start: '03/29/2022 00:00:00',\n        end: '04/03/2023 23:59:59',\n        notice: 20,\n        event: true,\n        buffs: {\n            quark: 0.25,\n            globalSpeed: 0.2,\n            ascensionSpeed: 0,\n            antSacrifice: 0.2,\n            offering: 0.25,\n            obtainium: 0.25,\n            octeract: 0.25,\n            powderConversion: 0,\n            goldenQuark: 0.1,\n            oneMind: 0.025\n        }\n    },\n    khafra: {\n        name: 'Thanks for Boosting the Discord',\n        color: 'var(--green-text-color)', //Plat please use var color instead for any of these (darkorchid, orchid, darkcyan, red, maroon, orangered, crimson, gray, green, lightseagreen)\n        url: 'https://www.youtube.com/watch?v=iYYRH4apXDo',\n        everyYear: false,\n        start: '12/07/2022 00:00:00',\n        end: '12/08/2022 23:59:59',\n        notice: 20,\n        event: true,\n        buffs: {\n            quark: .2,\n            globalSpeed: 0,\n            ascensionSpeed: 0,\n            antSacrifice: 0,\n            offering: 0,\n            obtainium: 0,\n            octeract: 0,\n            powderConversion: 0,\n            goldenQuark: 0,\n            oneMind: 0\n        }\n    }\n    /*next: {\n        name: 'Derpmas 2022: Daily Extravaganza!',\n        color: 'white',\n        url: 'https://www.youtube.com/watch?v=A6-vc-R9np8',\n        everyYear: false,\n        start: '12/25/2022 00:00:00',\n        end: '01/01/2023 23:59:59',\n        notice: 30,\n        event: true,\n        buffs: {\n            quark: 0,\n            globalSpeed: 0,\n            ascensionSpeed: 0,\n            antSacrifice: 0,\n            offering: 0,\n            obtainium: 0,\n            octeract: 0,\n            powderConversion: 0,\n            goldenQuark: 0,\n            oneMind: 0.05\n        }\n    }*/\n    // Event example\n    /*\n    newyear: {\n        name: '&#127881; New Year Event! &#127881;',\n        color: 'yellow',\n        url: '',\n        everyYear: true,\n        start: '12/31/2001 00:00:00',\n        end: '01/02/2001 23:59:59',\n        notice: 3,\n        event: true,\n        buffs: {\n            quark: 1,\n            ascensionSpeed: 2,\n            globalSpeed: 2\n        }\n    },\n    spring: {\n        name: '&#127800; Spring Event! &#127800;',\n        color: 'pink',\n        url: '',\n        everyYear: true,\n        start: '04/01/2001 00:00:00',\n        end: '04/02/2001 23:59:59',\n        notice: 3,\n        event: true,\n        buffs: {\n            quark: 1,\n            ascensionScore: 0.5,\n            antSacrifice: 1\n        }\n    },\n    summer: {\n        name: '&#9728 Summer Event! &#9728',\n        color: 'lightgoldenrodyellow',\n        url: '',\n        everyYear: true,\n        start: '07/01/2001 00:00:00',\n        end: '07/02/2001 23:59:59',\n        notice: 3,\n        event: true,\n        buffs: {\n            quark: 1,\n            ascensionSpeed: 1,\n            obtainium: 2\n        }\n    },\n    autumn: {\n        name: '&#127810; Autumn Event! &#127810;',\n        color: 'tomato',\n        url: '',\n        everyYear: true,\n        start: '10/01/2001 00:00:00',\n        end: '10/02/2001 23:59:59',\n        notice: 3,\n        event: true,\n        buffs: {\n            quark: 1,\n            cubes: 1,\n            offering: 2\n        }\n    },\n    winter: {\n        name: '&#10052 Winter Event! &#10052',\n        color: 'lightblue',\n        url: '',\n        everyYear: true,\n        start: '02/01/2001 00:00:00',\n        end: '02/02/2001 23:59:59',\n        notice: 3,\n        event: true,\n        buffs: {\n            quark: 1,\n            powderConversion: 2,\n            globalSpeed: 2\n        }\n    },\n    birthday: {\n        name: '&#127874; Synergism Birthday! &#127874;',\n        color: 'white',\n        url: '',\n        everyYear: true,\n        start: '01/05/2001 00:00:00',\n        end: '01/05/2001 23:59:59',\n        notice: 3,\n        event: true,\n        buffs: {\n            quark: 1,\n            goldenQuark: 1,\n            cubes: 1,\n            powderConversion: 1,\n            ascensionSpeed: 1,\n            globalSpeed: 1,\n            ascensionScore: 1,\n            antSacrifice: 1,\n            offering: 1,\n            obtainium: 1\n        }\n    }\n    */\n}\n\nlet nowEvent = events.default;\n\nexport const getEvent = (): HolidayData => {\n    return nowEvent;\n}\n\nexport const eventCheck = () => {\n    if (!player.dayCheck) {\n        return;\n    }\n    const now = new Date(getTimePinnedToLoadDate());\n    let start: Date;\n    let end: Date;\n\n    // Disable the event if there is any fraud, such as setting a device clock in the past\n    /* TODO: Figure out why some people get tagged for cheating even when they are playing legitimately\n             I have temporarily disabled the checks. */\n    nowEvent = events.default;\n    //if (now.getTime() >= player.dayCheck.getTime()) {\n    // Update currently valid events\n    for (const e in events) {\n        const event = events[e];\n        if (event.name !== 'default' && event.event === true) {\n            start = new Date(event.start);\n            end = new Date(event.end);\n            if (event.everyYear === true) {\n                const nowFullYear = now.getFullYear();\n                start = new Date(event.start);\n                end = new Date(event.end);\n                start.setFullYear(nowFullYear);\n                end.setFullYear(nowFullYear);\n                if (start.getTime() > end.getTime()) {\n                    end.setFullYear(nowFullYear + 1);\n                }\n                if (now.getTime() >= start.getTime() - 31536000000 && now.getTime() <= end.getTime() - 31536000000) {\n                    start.setFullYear(start.getFullYear() - 1);\n                    end.setFullYear(end.getFullYear() - 1);\n                }\n                if (now.getTime() >= end.getTime() + 86400000) {\n                    continue;\n                }\n            } else if (now.getTime() >= end.getTime() + 86400000) {\n                continue;\n            }\n            if (now.getTime() >= start.getTime() - event.notice * 86400000 && now.getTime() <= end.getTime()) {\n                nowEvent = event;\n                if (now.getTime() >= start.getTime() && now.getTime() <= end.getTime()) {\n                    break;\n                }\n            }\n        }\n    }\n    //}\n    const happyHolidays = DOMCacheGetOrSet('happyHolidays') as HTMLAnchorElement;\n    const eventBuffs = DOMCacheGetOrSet('eventBuffs');\n    const updateIsEventCheck = G['isEvent']\n    if (nowEvent.event === true) {\n        start = new Date(nowEvent.start);\n        end = new Date(nowEvent.end);\n        if (nowEvent.everyYear === true) {\n            const nowFullYear = now.getFullYear();\n            start.setFullYear(nowFullYear);\n            end.setFullYear(nowFullYear);\n            if (start.getTime() > end.getTime()) {\n                end.setFullYear(nowFullYear + 1);\n            }\n            if (now.getTime() >= start.getTime() - 31536000000 && now.getTime() <= end.getTime() - 31536000000) {\n                start.setFullYear(start.getFullYear() - 1);\n                end.setFullYear(end.getFullYear() - 1);\n            }\n        }\n        G['isEvent'] = now.getTime() >= start.getTime() && now.getTime() <= end.getTime();\n        let buffs = '';\n        for (let i = 0; i < eventBuffType.length; i++) {\n            const eventBuff = calculateEventSourceBuff(eventBuffType[i]);\n            if (eventBuff !== 0) {\n                if (eventBuffType[i] === 'One Mind' && player.singularityUpgrades.oneMind.level > 0) {\n                    buffs += `<span style=\"color: gold\">${eventBuff >= 0 ? '+' : '-'}${Math.round(Math.abs(eventBuff) * 100)}% ${eventBuffName[i]}</span> ,`\n                } else if (eventBuffType[i] !== 'One Mind' || player.singularityUpgrades.oneMind.level === 0) {\n                    buffs += `${eventBuff >= 0 ? '+' : '-'}${Math.round(Math.abs(eventBuff) * 100)}% ${eventBuffName[i]}, `;\n                }\n            }\n        }\n        if (buffs.length > 2) {\n            buffs = buffs.substring(0, buffs.length - 2);\n            buffs += '!';\n        }\n        DOMCacheGetOrSet('eventCurrent').textContent = G['isEvent']\n            ? i18next.t('settings.events.activeUntil', { x: end })\n            : i18next.t('settings.events.starts', { x: start })\n        eventBuffs.innerHTML = G['isEvent'] ? 'Current Buffs: ' + buffs : '';\n        //eventBuffs.style.color = 'lime';\n        happyHolidays.innerHTML = nowEvent.name;\n        happyHolidays.style.color = nowEvent.color;\n        happyHolidays.href = nowEvent.url.length > 0 ? nowEvent.url : '#';\n    } else {\n        G['isEvent'] = false;\n        DOMCacheGetOrSet('eventCurrent').innerHTML = i18next.t('settings.events.inactive')\n        eventBuffs.textContent = now.getTime() >= player.dayCheck.getTime() ? '' : ''\n        eventBuffs.style.color = 'var(--red-text-color)';\n        happyHolidays.innerHTML = '';\n        happyHolidays.href = '';\n    }\n    if (G['isEvent'] !== updateIsEventCheck) {\n        revealStuff()\n    }\n}\n\nconst eventBuffType = ['Quarks', 'Golden Quarks', 'Cubes', 'Powder Conversion', 'Ascension Speed', 'Global Speed', 'Ascension Score', 'Ant Sacrifice', 'Offering', 'Obtainium', 'Octeract', 'One Mind'];\nconst eventBuffName = ['Quarks', 'Golden Quarks', 'Cubes from all type', 'Powder Conversion', 'Ascension Speed', 'Global Speed', 'Ascension Score', 'Ant Sacrifice rewards', 'Offering', 'Obtainium', 'Eight Dimensional Hypercubes', 'One Mind Quark Bonus'];\n\nexport const calculateEventSourceBuff = (buff: string): number => {\n    const event = getEvent();\n    switch (buff) {\n        case 'Quarks': return event.buffs.quark || 0;\n        case 'Golden Quarks': return event.buffs.goldenQuark || 0;\n        case 'Cubes': return event.buffs.cubes || 0;\n        case 'Powder Conversion': return event.buffs.powderConversion || 0;\n        case 'Ascension Speed': return event.buffs.ascensionSpeed || 0;\n        case 'Global Speed': return event.buffs.globalSpeed || 0;\n        case 'Ascension Score': return event.buffs.ascensionScore || 0;\n        case 'Ant Sacrifice': return event.buffs.antSacrifice || 0;\n        case 'Offering': return event.buffs.offering || 0;\n        case 'Obtainium': return event.buffs.obtainium || 0;\n        case 'Octeract': return event.buffs.octeract || 0;\n        case 'One Mind': return (player.singularityUpgrades.oneMind.level > 0) ? event.buffs.oneMind || 0 : 0\n        default: return 0;\n    }\n}\n\nexport const clickSmith = (): Promise<void> => {\n    G['eventClicked'] = true\n    DOMCacheGetOrSet('eventClicked').style.display = 'block'\n    return Alert(i18next.t('event.aprilFools.clicked'))\n}\n", "import { player, format } from './Synergism'\nimport { calculateCubeBlessings, calculateCubicSumData, calculateSummationNonLinear } from './Calculate'\nimport { upgradeupdate } from './Upgrades'\nimport { revealStuff } from './UpdateHTML'\nimport { Globals as G } from './Variables'\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport { updateResearchBG } from './Research'\nimport { calculateSingularityDebuff } from './singularity'\nimport i18next from 'i18next';\n\nexport interface IMultiBuy {\n    levelCanBuy: number\n    cost: number\n}\n\nconst cubeAutomationIndices = [4, 5, 6, 7, 8, 9, 10, // row 1\n    20,                   // row 2\n    26, 27,               // row 3\n    48, 49]               // row 5\n\nconst researchAutomationIndices = [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, // row 2\n    61, 71, 72, 73, 74, 75, // row 3\n    124,                    // row 5\n    130, 135, 145, 150,     // row 6\n    175,                    // row 7\n    190]                    // row 8\n\nconst cubeBaseCost = [\n    200, 200, 200, 500, 500, 500, 500, 500, 2000, 40000,\n    5000, 1000, 10000, 20000, 40000, 10000, 4000, 1e4, 50000, 12500,\n    5e4, 3e4, 3e4, 4e4, 2e5, 4e5, 1e5, 177777, 1e5, 1e6,\n    5e5, 3e5, 2e6, 4e6, 2e6, 4e6, 1e6, 2e7, 5e7, 1e7,\n    5e6, 1e7, 1e8, 4e7, 2e7, 4e7, 5e7, 1e8, 5e8, 1e8,\n    1, 1e4, 1e8, 1e12, 1e16, 10, 1e5, 1e9, 1e13, 1e17,\n    1e2, 1e6, 1e10, 1e14, 1e18, 1e20, 1e30, 1e40, 1e50, 1e60\n];\n\nexport const cubeMaxLevel = [\n    3, 10, 5, 1, 1, 1, 1, 1, 1, 1,\n    3, 10, 1, 10, 10, 10, 5, 1, 1, 1,\n    5, 10, 1, 10, 10, 10, 1, 1, 5, 1,\n    5, 1, 1, 10, 10, 10, 10, 1, 1, 10,\n    5, 10, 10, 10, 10, 20, 20, 1, 1, 100000,\n    1, 900, 100, 900, 900, 20, 1, 1, 400, 10000,\n    100, 1, 1, 1, 1, 1, 1, 1000, 1, 100000\n];\n\nconst getCubeCost = (i: number, buyMax: boolean): IMultiBuy => {\n    const linGrowth = (i === 50 ? 0.01 : 0);\n    const cubic = i > 50;\n    const maxLevel = getCubeMax(i)\n    let amountToBuy = buyMax ? 1e5: 1;\n    const cubeUpgrade = player.cubeUpgrades[i]!;\n    amountToBuy = Math.min(maxLevel - cubeUpgrade, amountToBuy)\n    const singularityMultiplier = (i <= 50) ? calculateSingularityDebuff('Cube Upgrades'): 1;\n\n    let metaData:IMultiBuy\n\n    if (cubic) {\n        // TODO: Fix this inconsistency later.\n        amountToBuy = buyMax ? maxLevel: Math.min(maxLevel, cubeUpgrade + 1)\n        metaData = calculateCubicSumData(cubeUpgrade, cubeBaseCost[i-1],\n            Number(player.wowCubes), amountToBuy)\n    } else {\n        metaData = calculateSummationNonLinear(cubeUpgrade,\n            cubeBaseCost[i-1] * singularityMultiplier,\n            Number(player.wowCubes), linGrowth, amountToBuy)\n    }\n\n    return metaData\n}\n\nconst getCubeMax = (i: number) => {\n    let baseValue = cubeMaxLevel[i-1];\n\n    if (player.cubeUpgrades[57] > 0 && i < 50 && i % 10 === 1) {\n        baseValue += 1;\n    }\n\n    return baseValue\n}\n\nexport const cubeUpgradeDesc = (i: number, buyMax = player.cubeUpgradesBuyMaxToggle) => {\n    const metaData = getCubeCost(i, buyMax)\n    const a = DOMCacheGetOrSet('cubeUpgradeName')\n    const b = DOMCacheGetOrSet('cubeUpgradeDescription')\n    const c = DOMCacheGetOrSet('cubeUpgradeCost')\n    const d = DOMCacheGetOrSet('cubeUpgradeLevel')\n    const maxLevel = getCubeMax(i);\n\n    a.textContent = i18next.t(`cubes.upgradeNames.${i}`);\n    b.textContent = i18next.t(`cubes.upgradeDescriptions.${i}`);\n    c.textContent = i18next.t('cubes.cubeMetadata.cost', {value1: format(metaData.cost, 0, true), value2: format(metaData.levelCanBuy-player.cubeUpgrades[i]!,0,true)})\n    c.style.color = 'var(--green-text-color)'\n    d.textContent = i18next.t('cubes.cubeMetadata.level', {value1: format(player.cubeUpgrades[i], 0, true), value2: format(maxLevel, 0, true)})\n    d.style.color = 'white'\n\n    // This conditional is true only in the case where you can buy zero levels.\n    if (Number(player.wowCubes) < metaData.cost) {\n        c.style.color = 'var(--crimson-text-color)'\n    }\n    if (player.cubeUpgrades[i] === maxLevel) {\n        c.style.color = 'gold'\n        c.textContent = i18next.t('cubes.cubeMetadata.maxLevel')\n        d.style.color = 'plum'\n    }\n}\n\nexport const updateCubeUpgradeBG = (i: number) => {\n    const a = DOMCacheGetOrSet('cubeUpg' + i)\n    const maxCubeLevel = getCubeMax(i);\n    const cubeUpgrade = player.cubeUpgrades[i]!;\n    if (cubeUpgrade > maxCubeLevel) {\n        player.wowCubes.add((cubeUpgrade - maxCubeLevel) * cubeBaseCost[i-1]);\n        player.cubeUpgrades[i] = maxCubeLevel;\n    }\n    if (player.cubeUpgrades[i] === 0) {\n        a.style.backgroundColor = ''\n    }\n    if (cubeUpgrade > 0 && cubeUpgrade < maxCubeLevel) {\n        a.style.backgroundColor = 'purple'\n    }\n    if (player.cubeUpgrades[i] === maxCubeLevel) {\n        a.style.backgroundColor = 'green'\n    }\n\n}\n\nexport const awardAutosCookieUpgrade = () => {\n    for (const i of cubeAutomationIndices) {\n        const maxLevel = getCubeMax(i)\n        player.cubeUpgrades[i] = maxLevel;\n        updateCubeUpgradeBG(i);\n    }\n\n    calculateCubeBlessings();\n\n    for (const i of researchAutomationIndices) {\n        player.researches[i] = G['researchMaxLevels'][i];\n        updateResearchBG(i);\n    }\n}\n\nexport const buyCubeUpgrades = (i: number, buyMax = player.cubeUpgradesBuyMaxToggle, auto = false) => {\n    // Actually lock for HTML exploit\n    if ((i > 50 && i <= 55 && !player.singularityUpgrades.cookies.getEffect().bonus) ||\n        (i > 55 && i <= 60 && !player.singularityUpgrades.cookies2.getEffect().bonus) ||\n        (i > 60 && i <= 65 && !player.singularityUpgrades.cookies3.getEffect().bonus) ||\n        (i > 65 && i <= 70 && !player.singularityUpgrades.cookies4.getEffect().bonus) ||\n        (i > 70 && !player.singularityUpgrades.cookies5.getEffect().bonus)) {\n        return;\n    }\n\n    const metaData = getCubeCost(i, buyMax);\n    const maxLevel = getCubeMax(i);\n    if (Number(player.wowCubes) >= metaData.cost && player.cubeUpgrades[i]! < maxLevel) {\n        player.wowCubes.sub(100 / 100 * metaData.cost);\n        player.cubeUpgrades[i] = metaData.levelCanBuy;\n    } else {\n        return;\n    }\n\n    if (i === 4 && player.cubeUpgrades[4] > 0) {\n        for (let j = 94; j <= 98; j++){\n            player.upgrades[j] = 1;\n            upgradeupdate(j, true)\n        }\n    }\n    if (i === 5 && player.cubeUpgrades[5] > 0) {\n        player.upgrades[99] = 1\n        upgradeupdate(99, true)\n    }\n    if (i === 6 && player.cubeUpgrades[6] > 0) {\n        player.upgrades[100] = 1\n        upgradeupdate(100, true)\n    }\n\n    if (i === 51 && player.cubeUpgrades[51] > 0) {\n        awardAutosCookieUpgrade();\n    }\n\n    if (i === 57 && player.cubeUpgrades[57] > 0) {\n        for (let j = 1; j < player.cubeUpgrades.length; j++) {\n            updateCubeUpgradeBG(j);\n        }\n    }\n\n    if (auto === false) {\n        cubeUpgradeDesc(i);\n        revealStuff();\n        calculateCubeBlessings();\n    }\n    updateCubeUpgradeBG(i);\n}\n\nexport const autoBuyCubeUpgrades = () => {\n    if (player.autoCubeUpgradesToggle && ((player.highestSingularityCount >= 50 && player.insideSingularityChallenge) || player.highestSingularityCount >= 150)) {\n        const cheapet = [];\n\n        for (let i = 1; i < player.cubeUpgrades.length; i++) {\n            const maxLevel = getCubeMax(i);\n            if (player.cubeUpgrades[i]! < maxLevel) {\n                const metaData = getCubeCost(i, true);\n                cheapet.push([i, metaData.cost, metaData.levelCanBuy]);\n            }\n        }\n\n        if (cheapet.length > 0) {\n            let update = false;\n\n            cheapet.sort((a, b) => {\n                return a[1] - b[1];\n            });\n\n            for (const value of cheapet) {\n                const maxLevel = getCubeMax(value[0]);\n                const metaData = getCubeCost(value[0], true);\n                if (Number(player.wowCubes) >= metaData.cost && player.cubeUpgrades[value[0]]! < maxLevel && (player.cubeUpgradesBuyMaxToggle === true || maxLevel === metaData.levelCanBuy)) {\n                    buyCubeUpgrades(value[0], true, true);\n                    update = true;\n                }\n            }\n\n            if (update === true) {\n                revealStuff();\n                calculateCubeBlessings();\n            }\n        }\n    }\n}\n", "import { player, format } from './Synergism';\nimport { Synergism } from './Events';\nimport { Alert, revealStuff } from './UpdateHTML';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport { calculateSingularityDebuff } from './singularity';\n\nconst platonicUpgradeDesc = [\n    '+0.0090% Cubes per Corruption level per level!',\n    '+0.018% Tesseracts per Corruption level per level!',\n    '+0.054% Hypercubes per Corruption level per level!',\n    'Gain +2.4% Platonic Cubes per level! It is that simple.',\n    'C10 Exponent: 1.035 --> 1.0375, Constant tax exponent +0.10, 2x faster Constant production, +20% Quarks, +10 Reincarnation Challenge Cap, +5 Ascension Challenge Cap, 2x Obtainium and Offerings, ^1.10 coin gain in C15, as well +1 Corruption Cap Level!',\n    'Multiplies Viscosity exponent by (1 + level/30), capacity of ^1 on Multipliers and Accelerators.',\n    'Raises speed below 1x to the power of ^(1 - level/30).',\n    'Divides Hyperchallenged by (1 + 0.4 * level), with a minimum 1x Challenge requirement multiplier!',\n    'Raise Obtainium to the power of (1+(0.09*log10(Obtainium owned))) and add another x2.5 multiplier (Uncorruptable), up until 1e100 Obtainium!',\n    'C10 Exponent: 1.0375 --> 1.04, Constant tax exponent +0.20, 10x faster Constant production, +25% Quarks, +10 Reincarnation Challenge Cap, +5 Ascension Challenge Cap, 3.5x Obtainium and Offerings, 2x All Cubes, ^1.25 ant exponent in C15, +1 Corruption Cap Level again!',\n    'With this upgrade, you will gain diamonds equal to particle gain on Reincarnation while using Market Deflation 11 or higher! Does not work with Cube upgrade [3x8]!',\n    'Gain (1 + lvl/100)x Ant multiplier per Challenge completion, ignoring corruptions to Ants.',\n    'Effect of Drought is raised to the power of 0.5.',\n    'Reduce the effect of Financial Recession in Challenge 15, multiplying the coin exponent by 1.55.',\n    'You begin to find the start of the abyss. Coin Exponent +0.10 in Challenge 15, Challenge 15 Score +25%, Ascension Speed +0.2% per Corruption Level (Max: 20%), +1% all Cube types per C9 Completion (Multiplicative), +30% Quarks, 1e250x Tesseract Building Multiplier, 2x Ascension Count, +30 Reincarnation Challenge Cap, +20 Ascension Challenge Cap, 6x Offerings and Obtainium (Uncorruptable)! Talk about a deep dive.',\n    'Increase powder conversion rate by 1% per level, gain +2% Ascension count per level and gain up to 2% more Ascension count per level based on powder, up to 100,000. This will also multiply Tesseract Building production by (Powder + 1)^(10 * level), uncapped.',\n    'If Viscosity Corruption is set to level 10 or higher, score multiplier is raised by an exponent. That exponent is 3 + 0.04 per level of this upgrade.',\n    'Raise the base percentage of Constant Upgrade 1 by 0.1% and increase the base percentage cap of Constant Upgrade 2 by 0.3% per level!',\n    'The diminishing return power on Chronos Hepteract changes from 0.166 to (0.166 + 0.00133 * level) [Max of 0.2333].',\n    'You know, maybe some things should be left unbought.'\n];\n\nexport interface IPlatBaseCost {\n    obtainium: number\n    offerings: number\n    cubes: number\n    tesseracts: number\n    hypercubes: number\n    platonics: number\n    abyssals: number\n    maxLevel: number\n    priceMult?: number\n}\n\nexport const platUpgradeBaseCosts: Record<number, IPlatBaseCost> = {\n    1: {\n        obtainium: 1e70,\n        offerings: 1e45,\n        cubes: 1e13,\n        tesseracts: 1e6,\n        hypercubes: 1e5,\n        platonics: 1e4,\n        abyssals: 0,\n        maxLevel: 250,\n        priceMult: 2\n    },\n    2: {\n        obtainium: 3e70,\n        offerings: 2e45,\n        cubes: 1e11,\n        tesseracts: 1e8,\n        hypercubes: 1e5,\n        platonics: 1e4,\n        abyssals: 0,\n        maxLevel: 250,\n        priceMult: 2\n    },\n    3: {\n        obtainium: 1e71,\n        offerings: 4e45,\n        cubes: 1e11,\n        tesseracts: 1e6,\n        hypercubes: 1e7,\n        platonics: 1e4,\n        abyssals: 0,\n        maxLevel: 250,\n        priceMult: 2\n    },\n    4: {\n        obtainium: 4e71,\n        offerings: 1e46,\n        cubes: 1e12,\n        tesseracts: 1e7,\n        hypercubes: 1e6,\n        platonics: 1e6,\n        abyssals: 0,\n        maxLevel: 250,\n        priceMult: 2\n    },\n    5: {\n        obtainium: 1e80,\n        offerings: 1e60,\n        cubes: 1e14,\n        tesseracts: 1e9,\n        hypercubes: 1e8,\n        platonics: 1e7,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    6: {\n        obtainium: 1e82,\n        offerings: 1e61,\n        cubes: 1e15,\n        tesseracts: 1e9,\n        hypercubes: 1e8,\n        platonics: 1e7,\n        abyssals: 0,\n        maxLevel: 10\n    },\n    7: {\n        obtainium: 1e84,\n        offerings: 3e62,\n        cubes: 2e15,\n        tesseracts: 2e9,\n        hypercubes: 2e8,\n        platonics: 1.5e7,\n        abyssals: 0,\n        maxLevel: 15\n    },\n    8: {\n        obtainium: 1e87,\n        offerings: 1e64,\n        cubes: 4e15,\n        tesseracts: 4e9,\n        hypercubes: 4e8,\n        platonics: 3e7,\n        abyssals: 0,\n        maxLevel: 5\n    },\n    9: {\n        obtainium: 1e90,\n        offerings: 1e66,\n        cubes: 1e16,\n        tesseracts: 1e10,\n        hypercubes: 1e9,\n        platonics: 5e7,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    10: {\n        obtainium: 1e93,\n        offerings: 1e68,\n        cubes: 1e18,\n        tesseracts: 1e12,\n        hypercubes: 1e11,\n        platonics: 1e9,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    11: {\n        obtainium: 2e96,\n        offerings: 1e70,\n        cubes: 2e17,\n        tesseracts: 2e11,\n        hypercubes: 2e10,\n        platonics: 2e8,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    12: {\n        obtainium: 1e100,\n        offerings: 1e72,\n        cubes: 1e18,\n        tesseracts: 1e12,\n        hypercubes: 1e11,\n        platonics: 1e9,\n        abyssals: 0,\n        maxLevel: 10\n    },\n    13: {\n        obtainium: 2e104,\n        offerings: 1e74,\n        cubes: 2e19,\n        tesseracts: 4e12,\n        hypercubes: 4e11,\n        platonics: 4e9,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    14: {\n        obtainium: 1e108,\n        offerings: 1e77,\n        cubes: 4e20,\n        tesseracts: 1e13,\n        hypercubes: 1e12,\n        platonics: 1e10,\n        abyssals: 0,\n        maxLevel: 1\n    },\n    15: {\n        obtainium: 1e115,\n        offerings: 1e80,\n        cubes: 1e23,\n        tesseracts: 1e15,\n        hypercubes: 1e14,\n        platonics: 1e12,\n        abyssals: 1,\n        maxLevel: 1\n    },\n    16: {\n        obtainium: 1e140,\n        offerings: 1e110,\n        cubes: 0,\n        tesseracts: 0,\n        hypercubes: 2.5e15,\n        platonics: 0,\n        abyssals: 0,\n        maxLevel: 100,\n        priceMult: 10\n    },\n    17: {\n        obtainium: 1e145,\n        offerings: 1e113,\n        cubes: 0,\n        tesseracts: 0,\n        hypercubes: 1e19,\n        platonics: 0,\n        abyssals: 2,\n        maxLevel: 20,\n        priceMult: 10\n    },\n    18: {\n        obtainium: 1e150,\n        offerings: 1e116,\n        cubes: 0,\n        tesseracts: 0,\n        hypercubes: 1e19,\n        platonics: 0,\n        abyssals: 4,\n        maxLevel: 40,\n        priceMult: 500\n    },\n    19: {\n        obtainium: 1e160,\n        offerings: 1e121,\n        cubes: 0,\n        tesseracts: 0,\n        hypercubes: 1e21,\n        platonics: 0,\n        abyssals: 64,\n        maxLevel: 50,\n        priceMult: 200\n    },\n    20: {\n        obtainium: 1e180,\n        offerings: 1e130,\n        cubes: 1e45,\n        tesseracts: 1e28,\n        hypercubes: 1e25,\n        platonics: 1e25,\n        abyssals: Math.pow(2, 30) - 1,\n        maxLevel: 1\n    }\n}\n\nconst checkPlatonicUpgrade = (index: number, auto = false): Record<keyof (IPlatBaseCost & { canBuy: boolean }), boolean> => {\n    let checksum = 0\n    const resources = ['obtainium', 'offerings', 'cubes', 'tesseracts', 'hypercubes', 'platonics', 'abyssals'] as const;\n    const resourceNames = ['researchPoints', 'runeshards', 'wowCubes', 'wowTesseracts', 'wowHypercubes', 'wowPlatonicCubes', 'wowAbyssals'] as const;\n    const checks: Record<string, boolean> = {\n        obtainium: false,\n        offerings: false,\n        cubes: false,\n        tesseracts: false,\n        hypercubes: false,\n        platonics: false,\n        abyssals: false,\n        canBuy: false\n    }\n    let priceMultiplier = 1;\n    if (platUpgradeBaseCosts[index].priceMult) {\n        priceMultiplier = Math.pow(platUpgradeBaseCosts[index].priceMult!, Math.pow(player.platonicUpgrades[index] / (platUpgradeBaseCosts[index].maxLevel - 1), 1.25))\n    }\n    priceMultiplier *= calculateSingularityDebuff('Platonic Costs')\n\n    for (let i = 0; i < resources.length - 1; i++) {\n        if (auto === true && (resources[i] === 'obtainium' || resources[i] === 'offerings')) {\n            checksum++;\n            checks[resources[i]] = true\n        } else if (Math.floor(platUpgradeBaseCosts[index][resources[i]] * priceMultiplier) <= player[resourceNames[i]]) {\n            checksum++;\n            checks[resources[i]] = true\n        }\n    }\n\n    if (player.hepteractCrafts.abyss.BAL >= Math.floor(platUpgradeBaseCosts[index].abyssals * priceMultiplier) || platUpgradeBaseCosts[index].abyssals === 0) {\n        checksum ++\n        checks['abyssals'] = true\n    }\n\n    if (checksum === resources.length && player.platonicUpgrades[index] < platUpgradeBaseCosts[index].maxLevel) {\n        checks.canBuy = true\n    }\n    return checks\n}\n\nexport const createPlatonicDescription = (index: number) => {\n    let maxLevelAppend = '';\n    if (player.platonicUpgrades[index] === platUpgradeBaseCosts[index].maxLevel) {\n        maxLevelAppend = ' [MAX]'\n    }\n    const resourceCheck = checkPlatonicUpgrade(index);\n\n    let priceMultiplier = 1;\n    if (platUpgradeBaseCosts[index].priceMult) {\n        priceMultiplier = Math.pow(platUpgradeBaseCosts[index].priceMult!, Math.pow(player.platonicUpgrades[index] / (platUpgradeBaseCosts[index].maxLevel - 1), 1.25))\n    }\n    priceMultiplier *= calculateSingularityDebuff('Platonic Costs')\n\n    DOMCacheGetOrSet('platonicUpgradeDescription').textContent = platonicUpgradeDesc[index-1];\n    DOMCacheGetOrSet('platonicUpgradeLevel').textContent = 'Level: ' + format(player.platonicUpgrades[index]) + '/' + format(platUpgradeBaseCosts[index].maxLevel) + maxLevelAppend\n    DOMCacheGetOrSet('platonicOfferingCost').textContent = format(player.runeshards) + '/' + format(platUpgradeBaseCosts[index].offerings * priceMultiplier) + ' Offerings'\n    DOMCacheGetOrSet('platonicObtainiumCost').textContent = format(player.researchPoints) + '/' + format(platUpgradeBaseCosts[index].obtainium * priceMultiplier) + ' Obtainium'\n    DOMCacheGetOrSet('platonicCubeCost').textContent = format(player.wowCubes) + '/' + format(platUpgradeBaseCosts[index].cubes * priceMultiplier) + ' Wow! Cubes'\n    DOMCacheGetOrSet('platonicTesseractCost').textContent = format(player.wowTesseracts) + '/' + format(platUpgradeBaseCosts[index].tesseracts * priceMultiplier) + ' Wow! Tesseracts'\n    DOMCacheGetOrSet('platonicHypercubeCost').textContent = format(player.wowHypercubes) + '/' + format(platUpgradeBaseCosts[index].hypercubes * priceMultiplier) + ' Wow! Hypercubes'\n    DOMCacheGetOrSet('platonicPlatonicCost').textContent = format(player.wowPlatonicCubes) + '/' + format(platUpgradeBaseCosts[index].platonics * priceMultiplier) + ' Platonic! Cubes'\n    DOMCacheGetOrSet('platonicHepteractCost').textContent = format(player.hepteractCrafts.abyss.BAL) + '/' + format(Math.floor(platUpgradeBaseCosts[index].abyssals * priceMultiplier), 0, true) + ' Hepteracts of the Abyss'\n\n    resourceCheck.offerings ?\n        DOMCacheGetOrSet('platonicOfferingCost').style.color = 'lime' :\n        DOMCacheGetOrSet('platonicOfferingCost').style.color = 'var(--crimson-text-color)';\n\n    resourceCheck.obtainium ?\n        DOMCacheGetOrSet('platonicObtainiumCost').style.color = 'lime' :\n        DOMCacheGetOrSet('platonicObtainiumCost').style.color = 'var(--crimson-text-color)';\n\n    resourceCheck.cubes ?\n        DOMCacheGetOrSet('platonicCubeCost').style.color = 'lime' :\n        DOMCacheGetOrSet('platonicCubeCost').style.color = 'var(--crimson-text-color)';\n\n    resourceCheck.tesseracts ?\n        DOMCacheGetOrSet('platonicTesseractCost').style.color = 'lime' :\n        DOMCacheGetOrSet('platonicTesseractCost').style.color = 'var(--crimson-text-color)';\n\n    resourceCheck.hypercubes ?\n        DOMCacheGetOrSet('platonicHypercubeCost').style.color = 'lime' :\n        DOMCacheGetOrSet('platonicHypercubeCost').style.color = 'var(--crimson-text-color)';\n\n    resourceCheck.platonics ?\n        DOMCacheGetOrSet('platonicPlatonicCost').style.color = 'lime' :\n        DOMCacheGetOrSet('platonicPlatonicCost').style.color = 'var(--crimson-text-color)';\n\n    resourceCheck.abyssals ?\n        DOMCacheGetOrSet('platonicHepteractCost').style.color = 'lime' :\n        DOMCacheGetOrSet('platonicHepteractCost').style.color = 'var(--crimson-text-color)';\n\n    if (player.platonicUpgrades[index] < platUpgradeBaseCosts[index].maxLevel) {\n        DOMCacheGetOrSet('platonicUpgradeLevel').style.color = 'cyan'\n        resourceCheck.canBuy ?\n            (DOMCacheGetOrSet('platonicCanBuy').style.color = 'gold', DOMCacheGetOrSet('platonicCanBuy').textContent = '===Affordable! Click to buy!===') :\n            (DOMCacheGetOrSet('platonicCanBuy').style.color = 'var(--crimson-text-color)', DOMCacheGetOrSet('platonicCanBuy').textContent = '===You cannot afford this!===');\n    }\n\n    if (player.platonicUpgrades[index] === platUpgradeBaseCosts[index].maxLevel) {\n        DOMCacheGetOrSet('platonicUpgradeLevel').style.color = 'gold'\n        DOMCacheGetOrSet('platonicCanBuy').style.color = 'var(--orchid-text-color)'\n        DOMCacheGetOrSet('platonicCanBuy').textContent = '===Maxed==='\n    }\n}\n\nexport const updatePlatonicUpgradeBG = (i: number) => {\n    const a = DOMCacheGetOrSet(`platUpg${i}`)\n\n    const maxLevel = platUpgradeBaseCosts[i].maxLevel\n    if (player.platonicUpgrades[i] === 0) {\n        a.style.backgroundColor = ''\n    } else if (player.platonicUpgrades[i] > 0 && player.platonicUpgrades[i] < maxLevel) {\n        a.style.backgroundColor = 'purple'\n    } else if (player.platonicUpgrades[i] === maxLevel) {\n        a.style.backgroundColor = 'green'\n    }\n\n}\n\nexport const buyPlatonicUpgrades = (index: number, auto = false) => {\n    while (index > 0) {\n        const resourceCheck = checkPlatonicUpgrade(index, auto)\n        let priceMultiplier = 1;\n        if (platUpgradeBaseCosts[index].priceMult) {\n            priceMultiplier = Math.pow(platUpgradeBaseCosts[index].priceMult!, Math.pow(player.platonicUpgrades[index] / (platUpgradeBaseCosts[index].maxLevel - 1), 1.25))\n        }\n        priceMultiplier *= calculateSingularityDebuff('Platonic Costs');\n\n        if (resourceCheck.canBuy) {\n            player.platonicUpgrades[index] += 1\n            // Auto Platonic Upgrades no longer claim the cost of Offerings and Obtainiums\n            if (!auto) {\n                player.researchPoints -= Math.floor(platUpgradeBaseCosts[index].obtainium * priceMultiplier)\n                player.runeshards -= Math.floor(platUpgradeBaseCosts[index].offerings * priceMultiplier)\n            }\n            player.wowCubes.sub(Math.floor(platUpgradeBaseCosts[index].cubes * priceMultiplier));\n            player.wowTesseracts.sub(Math.floor(platUpgradeBaseCosts[index].tesseracts * priceMultiplier));\n            player.wowHypercubes.sub(Math.floor(platUpgradeBaseCosts[index].hypercubes * priceMultiplier));\n            player.wowPlatonicCubes.sub(Math.floor(platUpgradeBaseCosts[index].platonics * priceMultiplier));\n            player.hepteractCrafts.abyss.spend(Math.floor(platUpgradeBaseCosts[index].abyssals * priceMultiplier));\n\n            Synergism.emit('boughtPlatonicUpgrade', platUpgradeBaseCosts[index]);\n            if (index === 20 && !auto && player.singularityCount === 0) {\n                void Alert('While I strongly recommended you not to buy this, you did it anyway. For that, you have unlocked the rune of Grandiloquence, for you are a richass.')\n            }\n        } else {\n            break;\n        }\n\n        if (player.platonicUpgrades[index] === platUpgradeBaseCosts[index].maxLevel || player.singularityCount === 0) {\n            break\n        }\n    }\n    createPlatonicDescription(index)\n    updatePlatonicUpgradeBG(index)\n    revealStuff();\n}\n\nexport const autoBuyPlatonicUpgrades = () => {\n    if (player.autoPlatonicUpgradesToggle === true && ((player.highestSingularityCount >= 100 && player.insideSingularityChallenge) || player.highestSingularityCount >= 200)) {\n        for (let i = 1; i < player.platonicUpgrades.length; i++) {\n            if (player.platonicUpgrades[i] < platUpgradeBaseCosts[i].maxLevel) {\n                const resourceCheck = checkPlatonicUpgrade(i, true);\n                if (resourceCheck.canBuy) {\n                    void buyPlatonicUpgrades(i, true);\n                }\n            }\n        }\n    }\n}\n", "import { player, format, blankSave, updateAll, saveSynergy } from './Synergism';\nimport {\n    calculateOfferings, CalcCorruptionStuff, calculateCubeBlessings, calculateRuneLevels,\n    calculateAnts, calculateObtainium, calculateTalismanEffects, calculateAntSacrificeELO,\n    calcAscensionCount, calculateGoldenQuarkGain, calculatePowderConversion } from './Calculate';\nimport { resetofferings } from './Runes';\nimport { updateTalismanInventory, updateTalismanAppearance } from './Talismans';\nimport { calculateTesseractBlessings } from './Tesseracts';\nimport { Alert, revealStuff, updateChallengeDisplay } from './UpdateHTML';\nimport { upgradeupdate } from './Upgrades';\nimport { Globals as G } from './Variables';\nimport Decimal from 'break_infinity.js';\nimport { getElementById } from './Utility';\nimport { achievementaward, ascensionAchievementCheck, challengeachievementcheck } from './Achievements';\nimport { buyResearch, updateResearchBG } from './Research';\nimport { calculateHypercubeBlessings } from './Hypercubes';\nimport type {\n    ResetHistoryEntryPrestige,\n    ResetHistoryEntryTranscend,\n    ResetHistoryEntryReincarnate,\n    ResetHistoryEntryAscend,\n    ResetHistoryEntrySingularity\n} from './History';\nimport { challengeRequirement } from './Challenges';\nimport { Synergism } from './Events';\nimport type { Player, resetNames, OneToFive } from './types/Synergism';\nimport { updateClassList } from './Utility';\nimport { corrChallengeMinimum, corruptionStatsUpdate, maxCorruptionLevel } from './Corruptions';\nimport { toggleAutoChallengeModeText, toggleSubTab, toggleTabs } from './Toggles';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport { WowCubes } from './CubeExperimental';\nimport { importSynergism } from './ImportExport';\nimport { resetShopUpgrades, shopData } from './Shop';\nimport { QuarkHandler } from './Quark';\nimport { calculateSingularityDebuff, getFastForwardTotalMultiplier } from './singularity';\nimport { updateCubeUpgradeBG, awardAutosCookieUpgrade, autoBuyCubeUpgrades } from './Cubes';\nimport { autoBuyPlatonicUpgrades, updatePlatonicUpgradeBG } from './Platonic';\nimport { calculateTessBuildingsInBudget, buyTesseractBuilding } from './Buy'\nimport { getAutoHepteractCrafts } from './Hepteracts'\nimport type { TesseractBuildings } from './Buy';\nimport { sumContents } from './Utility';\nimport { setInterval, clearInterval } from './Timers'\nimport { IconSets } from './Themes';\n\nlet repeatreset: ReturnType<typeof setTimeout>;\n\nexport const resetrepeat = (input: resetNames) => {\n    clearInterval(repeatreset);\n    repeatreset = setInterval(() => resetdetails(input), 50);\n}\n\nexport const resetdetails = (input: resetNames) => {\n    DOMCacheGetOrSet('resetofferings1').style.display = 'block'\n\n    const transcensionChallenge = player.currentChallenge.transcension;\n    const reincarnationChallenge = player.currentChallenge.reincarnation;\n\n    const offering = calculateOfferings(input);\n    const offeringImage = getElementById<HTMLImageElement>('resetofferings1');\n    const offeringText = DOMCacheGetOrSet('resetofferings2');\n    const currencyImage1 = getElementById<HTMLImageElement>('resetcurrency1');\n    const resetObtainiumImage = DOMCacheGetOrSet('resetobtainium');\n    const resetObtainiumText = DOMCacheGetOrSet('resetobtainium2');\n    const resetInfo = DOMCacheGetOrSet('resetinfo');\n    const resetCurrencyGain = DOMCacheGetOrSet('resetcurrency2');\n\n    (input == 'reincarnation') ?\n        (resetObtainiumImage.style.display = 'block', resetObtainiumText.textContent = format(Math.floor(G['obtainiumGain']))):\n        (resetObtainiumImage.style.display = 'none', resetObtainiumText.textContent = '');\n\n    (input == 'ascensionChallenge' || input == 'ascension' || input == 'singularity')?\n        offeringImage.style.display = offeringText.style.display = 'none':\n        offeringImage.style.display = offeringText.style.display = 'block';\n\n    switch (input){\n        case 'prestige':\n            if (!currencyImage1.src.endsWith('Pictures/' + IconSets[player.iconSet][0] + '/Diamond.png')) {\n                currencyImage1.src = 'Pictures/' + IconSets[player.iconSet][0] + '/Diamond.png'\n            }\n            currencyImage1.style.display = 'block'\n            resetCurrencyGain.textContent = '+' + format(G['prestigePointGain']);\n            resetInfo.textContent = 'Coins, Coin Producers, Coin Upgrades, and Crystals are reset, but in return you gain diamonds and a few Offerings. Required: ' + format(player.coinsThisPrestige) + '/1e16 Coins || TIME SPENT: ' + format(player.prestigecounter) + ' Seconds.';\n            resetInfo.style.color = 'turquoise';\n            break;\n        case 'transcension':\n            if (!currencyImage1.src.endsWith('Pictures/' + IconSets[player.iconSet][0] + '/Mythos.png')) {\n                currencyImage1.src = 'Pictures/' + IconSets[player.iconSet][0] + '/Mythos.png'\n            }\n            currencyImage1.style.display = 'block'\n            resetCurrencyGain.textContent = '+' + format(G['transcendPointGain']);\n            resetInfo.textContent = 'Reset all Coin and Diamond Upgrades/Features, Crystal Upgrades & Producers, for Mythos/Offerings. Required: ' + format(player.coinsThisTranscension) + '/1e100 Coins || TIME SPENT: ' + format(player.transcendcounter) + ' Seconds.';\n            resetInfo.style.color = 'var(--orchid-text-color)';\n            break;\n        case 'reincarnation':\n            if (!currencyImage1.src.endsWith('Pictures/' + IconSets[player.iconSet][0] + '/Particle.png')) {\n                currencyImage1.src = 'Pictures/' + IconSets[player.iconSet][0] + '/Particle.png'\n            }\n            currencyImage1.style.display = 'block'\n            resetCurrencyGain.textContent = '+' + format(G['reincarnationPointGain']);\n            resetInfo.textContent = 'Reset ALL previous reset tiers, but you will gain Particles, Obtainium and Offerings! Required: ' + format(player.transcendShards) + '/1e300 Mythos Shards || TIME SPENT: ' + format(player.reincarnationcounter) + ' Seconds.';\n            resetInfo.style.color = 'limegreen';\n            break;\n        case 'acceleratorBoost':\n            if (!currencyImage1.src.endsWith('Pictures/' + IconSets[player.iconSet][0] + '/Diamond.png')) {\n                currencyImage1.src = 'Pictures/' + IconSets[player.iconSet][0] + '/Diamond.png'\n            }\n            currencyImage1.style.display = 'block'\n            resetCurrencyGain.textContent = '-' + format(player.acceleratorBoostCost);\n            resetInfo.textContent = 'Reset Coin Producers/Upgrades, Crystals and Diamonds in order to increase the power of your Accelerators. Required: ' + format(player.prestigePoints) + '/' + format(player.acceleratorBoostCost) + ' Diamonds.';\n            resetInfo.style.color = 'cyan';\n            break;\n        case 'transcensionChallenge':\n            currencyImage1.style.display = 'none'\n            resetCurrencyGain.textContent = '';\n\n            (transcensionChallenge !== 0)?\n                (resetInfo.style.color = 'aquamarine', resetInfo.textContent = 'Are you tired of being in your Challenge or stuck? Click to leave Challenge ' + transcensionChallenge + '. Progress: ' + format(player.coinsThisTranscension) + '/' + format(challengeRequirement(transcensionChallenge, player.challengecompletions[transcensionChallenge])) + ' Coins. TIME SPENT: ' + format(player.transcendcounter) + ' Seconds.'):\n                (resetInfo.style.color = 'var(--crimson-text-color)', resetInfo.textContent = 'You\\'re not in a Transcension Challenge right now. Get in one before you can leave it, duh!');\n            break;\n        case 'reincarnationChallenge':\n            currencyImage1.style.display = 'none'\n            resetCurrencyGain.textContent = '';\n\n            if (reincarnationChallenge !== 0) {\n                const goal = reincarnationChallenge >= 9 ? 'coins' : 'transcendShards';\n                const goaldesc = reincarnationChallenge >= 9 ? ' Coins' : ' Mythos Shards';\n\n                resetInfo.style.color = 'silver';\n                resetInfo.textContent = 'Are you done or tired of being in your Challenge? Click to leave Challenge ' + reincarnationChallenge + '. Progress: ' + format(player[goal]) + '/' + format(challengeRequirement(reincarnationChallenge, player.challengecompletions[reincarnationChallenge], reincarnationChallenge)) + goaldesc + '. TIME SPENT: ' + format(player.reincarnationcounter) + ' Seconds.';\n            } else {\n                resetInfo.style.color = 'var(--crimson-text-color)';\n                resetInfo.textContent = 'You\\'re not in a Reincarnation Challenge right now. How could you leave what you are not in?';\n            }\n            break;\n        case 'ascensionChallenge':\n            currencyImage1.style.display = 'none'\n            resetCurrencyGain.textContent = '';\n            resetInfo.textContent = 'Click this if you\\'re in an Ascension Challenge and want to leave. You get it already!';\n            resetInfo.style.color = 'gold';\n            break;\n        case 'ascension':\n            currencyImage1.style.display = 'none'\n            resetCurrencyGain.textContent = '';\n            resetInfo.textContent = 'Ascend, C-10 is required! +' + format(CalcCorruptionStuff()[4], 0, true) + ' Wow! Cubes for doing it! Time: ' + format(player.ascensionCounter, 0, false) + ' Seconds. (Real-time ' + format(player.ascensionCounterRealReal, 0, false) + ' Seconds)';\n            resetInfo.style.color = 'gold';\n            break;\n        case 'singularity':\n            currencyImage1.style.display = 'none'\n            resetCurrencyGain.textContent = '';\n            resetInfo.textContent = 'Are you willing to give up your laurels for a greater Challenge? The Ant God bribes you with ' + format(calculateGoldenQuarkGain(), 2, true) + ' Golden Quarks. Time: ' + format(player.singularityCounter, 0, false) + ' Seconds.';\n            resetInfo.style.color = 'lightgoldenrodyellow'\n    }\n    DOMCacheGetOrSet('resetofferings2').textContent = '+' + format(offering)\n}\n\nexport const updateAutoReset = (i: number) => {\n    let value = null;\n    if (i === 1) {\n        value = parseFloat((DOMCacheGetOrSet('prestigeamount') as HTMLInputElement).value) || 0;\n        player.prestigeamount = Math.max(value, 0);\n    } else if (i === 2) {\n        value = parseFloat((DOMCacheGetOrSet('transcendamount') as HTMLInputElement).value) || 0;\n        player.transcendamount = Math.max(value, 0);\n    } else if (i === 3) {\n        value = parseFloat((DOMCacheGetOrSet('reincarnationamount') as HTMLInputElement).value) || 0;\n        player.reincarnationamount = Math.max(value, 0);\n    } else if (i === 4) {\n        value = Math.floor(parseFloat((DOMCacheGetOrSet('ascensionAmount') as HTMLInputElement).value)) || 1;\n        player.autoAscendThreshold = Math.max(value, 1);\n    } else if (i === 5) {\n        value = parseFloat((DOMCacheGetOrSet('autoAntSacrificeAmount') as HTMLInputElement).value) || 0;\n        player.autoAntSacTimer = Math.max(value, 0);\n    }\n}\n\nexport const updateTesseractAutoBuyAmount = () => {\n    const value = Math.floor(parseFloat((DOMCacheGetOrSet('tesseractAmount') as HTMLInputElement).value)) || 0;\n    player.tesseractAutoBuyerAmount = Math.max(value, 0);\n}\n\nexport const updateAutoCubesOpens = (i: number) => {\n    let value = null\n    if (i === 1) {\n        value = Number((DOMCacheGetOrSet('cubeOpensInput') as HTMLInputElement).value) || 0;\n        player.openCubes = Math.max(Math.min(value, 100), 0);\n    } else if (i === 2) {\n        value = Number((DOMCacheGetOrSet('tesseractsOpensInput') as HTMLInputElement).value) || 0;\n        player.openTesseracts = Math.max(Math.min(value, 100), 0);\n    } else if (i === 3) {\n        value = Number((DOMCacheGetOrSet('hypercubesOpensInput') as HTMLInputElement).value) || 0;\n        player.openHypercubes = Math.max(Math.min(value, 100), 0);\n    } else if (i === 4) {\n        value = Number((DOMCacheGetOrSet('platonicCubeOpensInput') as HTMLInputElement).value) || 0;\n        player.openPlatonicsCubes = Math.max(Math.min(value, 100), 0);\n    }\n}\n\nconst resetAddHistoryEntry = (input: resetNames, from = 'unknown') => {\n    const offeringsGiven = calculateOfferings(input);\n    const isChallenge = ['enterChallenge', 'leaveChallenge'].includes(from);\n\n    if (input === 'prestige') {\n        const historyEntry: ResetHistoryEntryPrestige = {\n            seconds: player.prestigecounter,\n            date: Date.now(),\n            offerings: offeringsGiven,\n            kind: 'prestige',\n            diamonds: G['prestigePointGain'].toString()\n        }\n\n        Synergism.emit('historyAdd', 'reset', historyEntry);\n    } else if (input === 'transcension' || input === 'transcensionChallenge') {\n        // Heuristics: transcend entries are not added when entering or leaving a challenge,\n        // unless a meaningful gain in particles was made. This prevents spam when using the challenge automator.\n        const historyEntry: ResetHistoryEntryTranscend = {\n            seconds: player.transcendcounter,\n            date: Date.now(),\n            offerings: offeringsGiven,\n            kind: 'transcend',\n            mythos: G['transcendPointGain'].toString()\n        }\n\n        Synergism.emit('historyAdd', 'reset', historyEntry);\n    } else if (input === 'reincarnation' || input === 'reincarnationChallenge') {\n        // Heuristics: reincarnate entries are not added when entering or leaving a challenge,\n        // unless a meaningful gain in particles was made. This prevents spam when using the challenge automator.\n        if (!isChallenge || G['reincarnationPointGain'].gte(player.reincarnationPoints.div(10))) {\n            const historyEntry: ResetHistoryEntryReincarnate = {\n                seconds: player.reincarnationcounter,\n                date: Date.now(),\n                offerings: offeringsGiven,\n                kind: 'reincarnate',\n                particles: G['reincarnationPointGain'].toString(),\n                obtainium: G['obtainiumGain']\n            }\n\n            Synergism.emit('historyAdd', 'reset', historyEntry);\n        }\n    } else if (input === 'ascension' || input === 'ascensionChallenge') {\n        // Ascension entries will only be logged if C10 was completed.\n        if (player.challengecompletions[10] > 0) {\n            const corruptionMetaData = CalcCorruptionStuff();\n            const historyEntry: ResetHistoryEntryAscend = {\n                seconds: player.ascensionCounter,\n                date: Date.now(),\n                c10Completions: player.challengecompletions[10],\n                usedCorruptions: player.usedCorruptions.slice(0), // shallow copy,\n                corruptionScore: corruptionMetaData[3],\n                wowCubes: corruptionMetaData[4],\n                wowTesseracts: corruptionMetaData[5],\n                wowHypercubes: corruptionMetaData[6],\n                wowPlatonicCubes: corruptionMetaData[7],\n                wowHepteracts: corruptionMetaData[8],\n                kind: 'ascend'\n            }\n\n            // If we are _leaving_ an ascension challenge, log that too.\n            if (from !== 'enterChallenge' && player.currentChallenge.ascension !== 0) {\n                historyEntry.currentChallenge = player.currentChallenge.ascension;\n            }\n\n            Synergism.emit('historyAdd', 'ascend', historyEntry);\n        }\n    }\n};\n\nexport const reset = (input: resetNames, fast = false, from = 'unknown') => {\n    // Handle adding history entries before actually resetting data, to ensure optimal accuracy.\n    resetAddHistoryEntry(input, from);\n\n    resetofferings(input)\n    resetUpgrades(1);\n    player.coins = new Decimal('102');\n    player.coinsThisPrestige = new Decimal('100');\n    player.firstOwnedCoin = 0;\n    player.firstGeneratedCoin = new Decimal('0');\n    player.firstCostCoin = new Decimal('100');\n    player.secondOwnedCoin = 0;\n    player.secondGeneratedCoin = new Decimal('0');\n    player.secondCostCoin = new Decimal('1e3');\n    player.thirdOwnedCoin = 0;\n    player.thirdGeneratedCoin = new Decimal('0');\n    player.thirdCostCoin = new Decimal('2e4');\n    player.fourthOwnedCoin = 0;\n    player.fourthGeneratedCoin = new Decimal('0');\n    player.fourthCostCoin = new Decimal('4e5');\n    player.fifthOwnedCoin = 0;\n    player.fifthGeneratedCoin = new Decimal('0');\n    player.fifthCostCoin = new Decimal('8e6');\n    player.firstGeneratedDiamonds = new Decimal('0');\n    player.secondGeneratedDiamonds = new Decimal('0');\n    player.thirdGeneratedDiamonds = new Decimal('0');\n    player.fourthGeneratedDiamonds = new Decimal('0');\n    player.fifthGeneratedDiamonds = new Decimal('0');\n    player.multiplierCost = new Decimal('1e4');\n    player.multiplierBought = 0;\n    player.acceleratorCost = new Decimal('500');\n    player.acceleratorBought = 0;\n\n    player.prestigeCount += 1;\n\n    player.prestigePoints = player.prestigePoints.add(G['prestigePointGain']);\n    player.prestigeShards = new Decimal('0');\n    player.prestigenoaccelerator = true;\n    player.prestigenomultiplier = true;\n    player.prestigenocoinupgrades = true;\n\n    // Notify new players the reset\n    if (player.highestSingularityCount === 0) {\n        if (input === 'prestige' && player.unlocks.prestige === false) {\n            DOMCacheGetOrSet('prestigebtn').style.boxShadow = '';\n        }\n        if (input === 'transcension' && player.unlocks.transcend === false) {\n            DOMCacheGetOrSet('transcendbtn').style.boxShadow = '';\n        }\n        if (input === 'reincarnation' && player.unlocks.reincarnate === false) {\n            DOMCacheGetOrSet('reincarnatebtn').style.boxShadow = '';\n        }\n        if (input === 'ascension' && player.ascensionCount === 0) {\n            DOMCacheGetOrSet('ascendbtn').style.boxShadow = '';\n        }\n    }\n\n    player.unlocks.prestige = true;\n\n    if (player.prestigecounter < player.fastestprestige) {\n        player.fastestprestige = player.prestigecounter;\n    }\n\n    G['prestigePointGain'] = new Decimal('0');\n\n    player.prestigecounter = 0;\n    G['autoResetTimers'].prestige = 0;\n\n    G['generatorPower'] = new Decimal(1);\n\n    const types = ['transcension', 'transcensionChallenge', 'reincarnation', 'reincarnationChallenge', 'ascension', 'ascensionChallenge'];\n    if (types.includes(input)) {\n        resetUpgrades(2);\n        player.coinsThisTranscension = new Decimal('100');\n        player.firstOwnedDiamonds = 0;\n        player.firstCostDiamonds = new Decimal('100');\n        player.secondOwnedDiamonds = 0;\n        player.secondCostDiamonds = new Decimal('1e5');\n        player.thirdOwnedDiamonds = 0;\n        player.thirdCostDiamonds = new Decimal('1e15');\n        player.fourthOwnedDiamonds = 0;\n        player.fourthCostDiamonds = new Decimal('1e40');\n        player.fifthOwnedDiamonds = 0;\n        player.fifthCostDiamonds = new Decimal('1e100');\n        player.firstGeneratedMythos = new Decimal('0');\n        player.secondGeneratedMythos = new Decimal('0');\n        player.thirdGeneratedMythos = new Decimal('0');\n        player.fourthGeneratedMythos = new Decimal('0');\n        player.fifthGeneratedMythos = new Decimal('0');\n        player.acceleratorBoostBought = 0;\n        player.acceleratorBoostCost = new Decimal('1e3');\n\n        player.transcendCount += 1;\n\n        player.prestigePoints = new Decimal('0');\n        player.transcendPoints = player.transcendPoints.add(G['transcendPointGain']);\n        player.transcendShards = new Decimal('0');\n        player.transcendnocoinupgrades = true;\n        player.transcendnocoinorprestigeupgrades = true;\n        player.transcendnoaccelerator = true;\n        player.transcendnomultiplier = true;\n\n        G['transcendPointGain'] = new Decimal('0')\n\n        if (player.achievements[78] > 0.5) {\n            player.firstOwnedDiamonds += 1\n        }\n        if (player.achievements[85] > 0.5) {\n            player.secondOwnedDiamonds += 1\n        }\n        if (player.achievements[92] > 0.5) {\n            player.thirdOwnedDiamonds += 1\n        }\n        if (player.achievements[99] > 0.5) {\n            player.fourthOwnedDiamonds += 1\n        }\n        if (player.achievements[106] > 0.5) {\n            player.fifthOwnedDiamonds += 1\n        }\n\n        if (player.achievements[4] > 0.5) {\n            player.upgrades[81] = 1\n        }\n        if (player.achievements[11] > 0.5) {\n            player.upgrades[82] = 1\n        }\n        if (player.achievements[18] > 0.5) {\n            player.upgrades[83] = 1\n        }\n        if (player.achievements[25] > 0.5) {\n            player.upgrades[84] = 1\n        }\n        if (player.achievements[32] > 0.5) {\n            player.upgrades[85] = 1\n        }\n        if (player.achievements[80] > 0.5) {\n            player.upgrades[87] = 1\n        }\n\n        if (player.transcendcounter < player.fastesttranscend && player.currentChallenge.transcension === 0) {\n            player.fastesttranscend = player.transcendcounter;\n        }\n\n        player.transcendcounter = 0;\n        G['autoResetTimers'].transcension = 0;\n    }\n\n    if (input == 'reincarnation' || input == 'reincarnationChallenge') {\n        if (player.usedCorruptions[6] > 10 && player.platonicUpgrades[11] > 0) {\n            player.prestigePoints = player.prestigePoints.add(G['reincarnationPointGain'])\n        }\n    }\n\n    if (input === 'reincarnation' || input === 'reincarnationChallenge' || input === 'ascension' || input === 'ascensionChallenge' || input == 'singularity') {\n        // Fail safe if for some reason ascension achievement isn't awarded. hacky solution but am too tired to fix right now\n        if (player.ascensionCount > 0 && player.achievements[183] < 1) {\n            ascensionAchievementCheck(1);\n        }\n\n        player.researchPoints = Math.min(1e300, player.researchPoints + Math.floor(G['obtainiumGain']));\n\n        const opscheck = G['obtainiumGain'] / (1 + player.reincarnationcounter)\n        if (opscheck > player.obtainiumpersecond) {\n            player.obtainiumpersecond = opscheck\n        }\n        player.currentChallenge.transcension = 0;\n        resetUpgrades(3);\n        player.coinsThisReincarnation = new Decimal('100');\n        player.firstOwnedMythos = 0;\n        player.firstCostMythos = new Decimal('1');\n        player.secondOwnedMythos = 0;\n        player.secondCostMythos = new Decimal('1e2');\n        player.thirdOwnedMythos = 0;\n        player.thirdCostMythos = new Decimal('1e4');\n        player.fourthOwnedMythos = 0;\n        player.fourthCostMythos = new Decimal('1e8');\n        player.fifthOwnedMythos = 0;\n        player.fifthCostMythos = new Decimal('1e16');\n        player.firstGeneratedParticles = new Decimal('0');\n        player.secondGeneratedParticles = new Decimal('0');\n        player.thirdGeneratedParticles = new Decimal('0');\n        player.fourthGeneratedParticles = new Decimal('0');\n        player.fifthGeneratedParticles = new Decimal('0');\n\n        player.reincarnationCount += 1;\n\n        player.transcendPoints = new Decimal('0');\n        player.reincarnationPoints = player.reincarnationPoints.add(G['reincarnationPointGain']);\n        player.reincarnationShards = new Decimal('0');\n        player.challengecompletions[1] = 0;\n        player.challengecompletions[2] = 0;\n        player.challengecompletions[3] = 0;\n        player.challengecompletions[4] = 0;\n        player.challengecompletions[5] = 0;\n\n        G['reincarnationPointGain'] = new Decimal('0');\n\n        if (player.shopUpgrades.instantChallenge > 0 && player.currentChallenge.reincarnation === 0) {\n            player.challengecompletions[1] = player.highestchallengecompletions[1]\n            player.challengecompletions[2] = player.highestchallengecompletions[2]\n            player.challengecompletions[3] = player.highestchallengecompletions[3]\n            player.challengecompletions[4] = player.highestchallengecompletions[4]\n            player.challengecompletions[5] = player.highestchallengecompletions[5]\n\n        }\n\n        player.reincarnatenocoinupgrades = true;\n        player.reincarnatenocoinorprestigeupgrades = true;\n        player.reincarnatenocoinprestigeortranscendupgrades = true;\n        player.reincarnatenocoinprestigetranscendorgeneratorupgrades = true;\n        player.reincarnatenoaccelerator = true;\n        player.reincarnatenomultiplier = true;\n\n        if (player.reincarnationcounter < player.fastestreincarnate && player.currentChallenge.reincarnation === 0) {\n            player.fastestreincarnate = player.reincarnationcounter;\n        }\n\n        calculateCubeBlessings();\n        player.reincarnationcounter = 0;\n        G['autoResetTimers'].reincarnation = 0;\n\n        if (player.autoResearchToggle && player.autoResearch > 0.5) {\n            const linGrowth = (player.autoResearch === 200) ? 0.01 : 0;\n            buyResearch(player.autoResearch, true, linGrowth)\n        }\n\n        calculateRuneLevels();\n        calculateAnts();\n    }\n\n    if (input === 'ascension' || input === 'ascensionChallenge' || input === 'singularity') {\n        const metaData = CalcCorruptionStuff()\n        if (player.challengecompletions[10] > 0) {\n            ascensionAchievementCheck(3, metaData[3]);\n        }\n        // reset auto challenges\n        player.currentChallenge.transcension = 0;\n        player.currentChallenge.reincarnation = 0;\n\n        // The start of the auto challenge to improve QoL starts with C10\n        if (input === 'ascensionChallenge' && player.currentChallenge.ascension > 10 && player.highestSingularityCount >= 2 && player.autoChallengeToggles[10]) {\n            player.autoChallengeIndex = 10;\n        } else {\n            player.autoChallengeIndex = 1;\n        }\n        toggleAutoChallengeModeText('START');\n\n        G['autoChallengeTimerIncrement'] = 0;\n        //reset rest\n        resetResearches();\n        resetAnts();\n        resetTalismans();\n        player.reincarnationPoints = new Decimal('0');\n        player.reincarnationShards = new Decimal('0');\n        player.obtainiumpersecond = 0;\n        player.maxobtainiumpersecond = 0;\n        player.offeringpersecond = 0;\n        player.antSacrificePoints = 0;\n        player.antSacrificeTimer = 0;\n        player.antSacrificeTimerReal = 0;\n        player.antUpgrades[12-1] = 0;\n        for (let j = 61; j <= 80; j++) {\n            player.upgrades[j] = 0;\n        }\n        for (let j = 94; j <= 100; j++) {\n            player.upgrades[j] = 0;\n        }\n        player.firstOwnedParticles = 0;\n        player.secondOwnedParticles = 0;\n        player.thirdOwnedParticles = 0;\n        player.fourthOwnedParticles = 0;\n        player.fifthOwnedParticles = 0;\n        player.firstCostParticles = new Decimal('1');\n        player.secondCostParticles = new Decimal('100');\n        player.thirdCostParticles = new Decimal('1e4');\n        player.fourthCostParticles = new Decimal('1e8');\n        player.fifthCostParticles = new Decimal('1e16');\n        player.runeexp = [0, 0, 0, 0, 0, player.runeexp[5], player.runeexp[6]];\n        player.runelevels = [0, 0, 0, 0, 0, player.runelevels[5], player.runelevels[6]];\n        player.runeshards = 0;\n        player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0];\n\n        player.runelevels[0] = 3 * player.cubeUpgrades[26];\n        player.runelevels[1] = 3 * player.cubeUpgrades[26];\n        player.runelevels[2] = 3 * player.cubeUpgrades[26];\n        player.runelevels[3] = 3 * player.cubeUpgrades[26];\n        player.runelevels[4] = 3 * player.cubeUpgrades[26];\n\n        if (player.cubeUpgrades[27] === 1) {\n            player.firstOwnedParticles = 1;\n            player.secondOwnedParticles = 1;\n            player.thirdOwnedParticles = 1;\n            player.fourthOwnedParticles = 1;\n            player.fifthOwnedParticles = 1;\n        }\n\n        // If challenge 10 is incomplete, you won't get a cube no matter what\n        if (player.challengecompletions[10] > 0 && player.ascensionCounter > 0) {\n            player.ascensionCount += calcAscensionCount();\n            //Metadata is defined up in the top of the (i > 3.5) case\n            // Protect the cube from developer mistakes\n            if (isFinite(metaData[4]) && isFinite(metaData[5]) && isFinite(metaData[6]) && isFinite(metaData[7]) && isFinite(metaData[8])) {\n                player.wowCubes.add(metaData[4]);\n                player.wowTesseracts.add(metaData[5]);\n                player.wowHypercubes.add(metaData[6]);\n                player.wowPlatonicCubes.add(metaData[7]);\n                player.wowAbyssals = Math.min(1e300, player.wowAbyssals + metaData[8]);\n            }\n        }\n\n        for (let j = 1; j <= 10; j++) {\n            player.challengecompletions[j] = 0;\n            player.highestchallengecompletions[j] = 0;\n        }\n\n        player.challengecompletions[6] = player.highestchallengecompletions[6] = player.cubeUpgrades[49]\n        player.challengecompletions[7] = player.highestchallengecompletions[7] = player.cubeUpgrades[49]\n        player.challengecompletions[8] = player.highestchallengecompletions[8] = player.cubeUpgrades[49]\n\n        DOMCacheGetOrSet(`res${player.autoResearch || 1}`).classList.remove('researchRoomba');\n        player.roombaResearchIndex = 0;\n        player.autoResearch = 1;\n\n        for (let j = 1; j <= (200); j++) {\n            const k = `res${j}`;\n            if (player.researches[j] > 0.5 && player.researches[j] < G['researchMaxLevels'][j]) {\n                updateClassList(k, ['researchPurchased'], ['researchAvailable', 'researchMaxed', 'researchPurchasedAvailable', 'researchUnpurchased'])\n            } else if (player.researches[j] > 0.5 && player.researches[j] >= G['researchMaxLevels'][j]) {\n                updateClassList(k, ['researchMaxed'], ['researchAvailable', 'researchPurchased', 'researchPurchasedAvailable', 'researchUnpurchased'])\n            } else {\n                updateClassList(k, ['researchUnpurchased'], ['researchAvailable', 'researchPurchased', 'researchPurchasedAvailable', 'researchMaxed'])\n            }\n        }\n\n        calculateAnts();\n        calculateRuneLevels();\n        calculateAntSacrificeELO();\n        calculateTalismanEffects();\n        calculateObtainium();\n        ascensionAchievementCheck(1);\n\n        player.ascensionCounter = 0;\n        player.ascensionCounterReal = 0;\n        player.ascensionCounterRealReal = 0;\n\n        updateTalismanInventory();\n        updateTalismanAppearance(0);\n        updateTalismanAppearance(1);\n        updateTalismanAppearance(2);\n        updateTalismanAppearance(3);\n        updateTalismanAppearance(4);\n        updateTalismanAppearance(5);\n        updateTalismanAppearance(6);\n        calculateCubeBlessings();\n        calculateTesseractBlessings();\n        calculateHypercubeBlessings();\n\n        if (player.cubeUpgrades[4] === 1) {\n            player.upgrades[94] = 1;\n            player.upgrades[95] = 1;\n            player.upgrades[96] = 1;\n            player.upgrades[97] = 1;\n            player.upgrades[98] = 1;\n        }\n        if (player.cubeUpgrades[5] === 1) {\n            player.upgrades[99] = 1;\n        }\n        if (player.cubeUpgrades[6] === 1) {\n            player.upgrades[100] = 1\n        }\n\n        for (let j = 61; j <= 80; j++) {\n            DOMCacheGetOrSet(`upg${j}`).style.backgroundColor = ''\n        }\n        for (let j = 94; j <= 100; j++) {\n            if (player.upgrades[j] === 0) {\n                DOMCacheGetOrSet(`upg${j}`).style.backgroundColor = ''\n            }\n        }\n\n        const maxLevel = maxCorruptionLevel();\n        player.usedCorruptions = player.prototypeCorruptions.map((curr:number, index:number) => {\n            if (index >= 2 && index <= 9) {\n                return Math.min(maxLevel * (player.challengecompletions[corrChallengeMinimum(index)] > 0 ||\n                                            player.singularityUpgrades.platonicTau.getEffect().bonus ? 1: 0), curr)\n            }\n            return curr\n        })\n        player.usedCorruptions[1] = 0;\n        player.prototypeCorruptions[1] = 0;\n        //fix c15 ascension bug by restoring the corruptions if the player ascended instead of leaving\n        if (player.currentChallenge.ascension === 15 && (input === 'ascension' || input === 'ascensionChallenge')) {\n            player.usedCorruptions[0] = 0;\n            player.prototypeCorruptions[0] = 0;\n            for (let i = 2; i <= 9; i++) {\n                player.usedCorruptions[i] = 11;\n            }\n        }\n\n        corruptionStatsUpdate();\n        updateSingularityMilestoneAwards(false);\n    }\n\n    if (input === 'ascension' || input === 'ascensionChallenge') {\n        // Hepteract Autocraft\n        const autoHepteractCrafts = getAutoHepteractCrafts();\n        const numberOfAutoCraftsAndOrbs = autoHepteractCrafts.length + (player.overfluxOrbsAutoBuy ? 1 : 0);\n        if (player.highestSingularityCount >= 1 && numberOfAutoCraftsAndOrbs > 0) {\n            // Computes the max number of Hepteracts to spend on each auto Hepteract craft\n            const heptAutoSpend = Math.floor((player.wowAbyssals / numberOfAutoCraftsAndOrbs) * (player.hepteractAutoCraftPercentage / 100))\n            for (const craft of autoHepteractCrafts) {\n                craft.autoCraft(heptAutoSpend);\n            }\n\n            if (player.overfluxOrbsAutoBuy) {\n                const orbsAmount = Math.floor(heptAutoSpend / 250000);\n                if (player.wowAbyssals - (250000 * orbsAmount) >= 0) {\n                    player.overfluxOrbs += orbsAmount;\n                    player.overfluxPowder += player.shopUpgrades.powderAuto * calculatePowderConversion().mult * orbsAmount / 100;\n                    player.wowAbyssals -= 250000 * orbsAmount;\n                }\n                if (player.wowAbyssals < 0) {\n                    player.wowAbyssals = 0;\n                }\n            }\n        }\n\n        // Autobuy tesseract buildings (Mode: PERCENTAGE)\n        if (player.researches[190] > 0 && player.tesseractAutoBuyerToggle === 1 && player.resettoggle4 === 2) {\n            const ownedBuildings: TesseractBuildings = [null, null, null, null, null];\n            for (let i = 1; i <= 5; i++) {\n                if (player.autoTesseracts[i]) {\n                    ownedBuildings[i-1] = player[`ascendBuilding${i as OneToFive}` as const]['owned'];\n                }\n            }\n            const percentageToSpend = 100 - Math.min(100, player.tesseractAutoBuyerAmount);\n            const budget = Number(player.wowTesseracts) * percentageToSpend / 100;\n            const buyToBuildings = calculateTessBuildingsInBudget(ownedBuildings, budget);\n            // Prioritise buying buildings from highest tier to lowest,\n            // in case there are any off-by-ones or floating point errors.\n            for (let i = 5; i >= 1; i--) {\n                const buyFrom = ownedBuildings[i-1];\n                const buyTo = buyToBuildings[i-1];\n                if (buyFrom !== null && buyTo !== null && buyTo !== buyFrom) {\n                    buyTesseractBuilding(i as OneToFive, buyTo - buyFrom);\n                }\n            }\n        }\n\n        // Automation Platonic Upgrades\n        autoBuyPlatonicUpgrades();\n\n        // Automation Cube Upgrades\n        autoBuyCubeUpgrades();\n\n        // Auto open Cubes. If to remove !== 0, game will lag a bit if it was set to 0\n        if (player.highestSingularityCount >= 35) {\n            if (player.autoOpenCubes && player.openCubes !== 0 && player.cubeUpgrades[51] > 0) {\n                player.wowCubes.open(Math.floor(Number(player.wowCubes) * player.openCubes / 100), false)\n            }\n            if (player.autoOpenTesseracts && player.openTesseracts !== 0 && player.challengecompletions[11] > 0) {\n                if (player.tesseractAutoBuyerToggle !== 1 || player.resettoggle4 === 2) {\n                    player.wowTesseracts.open(Math.floor(Number(player.wowTesseracts) * player.openTesseracts / 100), false)\n                }\n            }\n            if (player.autoOpenHypercubes && player.openHypercubes !== 0 && player.challengecompletions[13] > 0) {\n                player.wowHypercubes.open(Math.floor(Number(player.wowHypercubes) * player.openHypercubes / 100), false)\n            }\n            if (player.autoOpenPlatonicsCubes && player.openPlatonicsCubes !== 0 && player.challengecompletions[14] > 0) {\n                player.wowPlatonicCubes.open(Math.floor(Number(player.wowPlatonicCubes) * player.openPlatonicsCubes / 100), false)\n            }\n        }\n    }\n\n    //Always unlocks\n    player.unlocks.prestige = true\n\n    if (input == 'transcension' || input == 'transcensionChallenge') {\n        player.unlocks.transcend = true\n    }\n    if (input == 'reincarnation' || input == 'reincarnationChallenge') {\n        player.unlocks.reincarnate = true\n    }\n\n    if (input === 'singularity') {\n        player.unlocks.coinone = false\n        player.unlocks.cointwo = false\n        player.unlocks.cointhree = false\n        player.unlocks.coinfour = false\n        player.unlocks.generation = false\n        player.unlocks.prestige = false\n        player.unlocks.transcend = false\n        player.unlocks.reincarnate = false\n        player.unlocks.rrow1 = false\n        player.unlocks.rrow2 = false\n        player.unlocks.rrow3 = false\n        player.unlocks.rrow4 = false\n\n        player.ascendBuilding1.owned = 0\n        player.ascendBuilding1.generated = new Decimal('0')\n        player.ascendBuilding2.owned = 0\n        player.ascendBuilding2.generated = new Decimal('0')\n        player.ascendBuilding3.owned = 0\n        player.ascendBuilding3.generated = new Decimal('0')\n        player.ascendBuilding4.owned = 0\n        player.ascendBuilding4.generated = new Decimal('0')\n        player.ascendBuilding5.owned = 0\n        player.ascendBuilding5.generated = new Decimal('0')\n\n        player.constantUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n\n        player.wowCubes = new WowCubes(0)\n        player.wowTesseracts = new WowCubes(0)\n        player.wowHypercubes = new WowCubes(0)\n        player.wowTesseracts = new WowCubes(0)\n        player.wowAbyssals = 0;\n\n        for (let index = 1; index <= 50; index++) {\n            player.cubeUpgrades[index] = 0;\n        }\n    }\n\n    if (!fast) {\n        revealStuff();\n    }\n    if (input === 'transcensionChallenge' || input === 'reincarnationChallenge' || input === 'ascensionChallenge') {\n        updateChallengeDisplay();\n    }\n\n    updateAll();\n}\n\n/**\n *\n * Computes which achievements in 274-280 are achievable given current singularity number\n */\nexport const updateSingularityAchievements = (): void => {\n    if (player.highestSingularityCount >= 1) {\n        achievementaward(274)\n    }\n    if (player.highestSingularityCount >= 2) {\n        achievementaward(275)\n    }\n    if (player.highestSingularityCount >= 3) {\n        achievementaward(276)\n    }\n    if (player.highestSingularityCount >= 4) {\n        achievementaward(277)\n    }\n    if (player.highestSingularityCount >= 5) {\n        achievementaward(278)\n    }\n    if (player.highestSingularityCount >= 7) {\n        achievementaward(279)\n    }\n    if (player.highestSingularityCount >= 10) {\n        achievementaward(280)\n    }\n}\n\nexport const updateSingularityMilestoneAwards = (singularityReset = true): void => {\n    // 1 transcension, 1001 mythos\n    if (player.achievements[275] > 0) { // Singularity 2\n        if (singularityReset) {\n            player.prestigeCount = 1;\n            player.transcendCount = 1;\n        }\n        player.transcendPoints = new Decimal('1001');\n\n        player.unlocks.coinone = true;\n        player.unlocks.cointwo = true;\n        player.unlocks.cointhree = true;\n        player.unlocks.coinfour = true;\n        player.unlocks.prestige = true;\n        player.unlocks.generation = true;\n        player.unlocks.transcend = true;\n        for (let i = 0; i < 5; i++){\n            achievementaward(4 + 7 * i)\n        }\n        achievementaward(36); // 1 prestige\n        achievementaward(43); // 1 transcension\n    }\n    if (player.achievements[276] > 0) { // Singularity 3\n        if (player.currentChallenge.ascension !== 12) {\n            if (singularityReset) {\n                player.reincarnationCount = 1;\n            }\n            player.reincarnationPoints = new Decimal('10');\n        }\n        player.unlocks.reincarnate = true;\n        player.unlocks.rrow1 = true;\n        player.researches[47] = 1;\n\n        for (let i = 0; i < 2; i++) {\n            for (let j = 0; j < 5; j++) {\n                achievementaward(78 + i + 7 * j)\n            }\n        }\n\n        for (let i = 0; i < 7; i++) {\n            achievementaward(57 + i);\n            achievementaward(64 + i);\n            achievementaward(71 + i);\n        }\n\n        achievementaward(37)\n        achievementaward(38)\n        achievementaward(44)\n        achievementaward(50)\n        achievementaward(80)\n        achievementaward(87)\n\n    }\n    if (player.achievements[277] > 0) { // Singularity 4\n        if (player.currentChallenge.ascension !== 14) {\n            player.researchPoints = Math.floor(500 * calculateSingularityDebuff('Offering') * calculateSingularityDebuff('Researches'))\n        }\n        if (player.currentChallenge.ascension !== 12) {\n            player.reincarnationPoints = new Decimal('1e16')\n        }\n        player.challengecompletions[6] = 1;\n        player.highestchallengecompletions[6] = 1;\n        achievementaward(113);\n    }\n    const shopItemPerk_5 = ['offeringAuto', 'offeringEX', 'obtainiumAuto', 'obtainiumEX', 'antSpeed', 'cashGrab'] as const;\n    const perk_5 = player.achievements[278] > 0;\n    if (perk_5 && singularityReset) { // Singularity 5\n        for (const key of shopItemPerk_5) {\n            player.shopUpgrades[key] = 10;\n        }\n        player.cubeUpgrades[7] = 1;\n    }\n    if (player.achievements[279] > 0) { // Singularity 7\n        player.challengecompletions[7] = 1;\n        player.highestchallengecompletions[7] = 1;\n        achievementaward(120);\n        if (player.currentChallenge.ascension !== 12) {\n            player.reincarnationPoints = new Decimal('1e100');\n        }\n    }\n    if (player.achievements[280] > 0) { // Singularity 10\n        achievementaward(124);\n        achievementaward(127);\n        player.challengecompletions[8] = 1;\n        player.highestchallengecompletions[8] = 1;\n        player.cubeUpgrades[8] = 1;\n        player.cubeUpgrades[4] = 1; // Adding these ones,\n        player.cubeUpgrades[5] = 1; // so they wont reset\n        player.cubeUpgrades[6] = 1; // on first Ascension\n        player.firstOwnedAnts = 1;\n        for (let i = 0; i < 7; i++) {\n            achievementaward(176 + i)\n        }\n    }\n    if (player.highestSingularityCount > 10) { // Must be the same as autoResearchEnabled()\n        player.cubeUpgrades[9] = 1;\n    }\n    if (player.highestSingularityCount >= 15) {\n        player.challengecompletions[8] = 5;\n        player.highestchallengecompletions[8] = 5;\n        if (player.currentChallenge.ascension !== 12) {\n            player.reincarnationPoints = new Decimal('2.22e2222')\n        }\n        player.fifthOwnedAnts = 1;\n        player.cubeUpgrades[20] = 1;\n    }\n    const perk_20 = player.highestSingularityCount >= 20;\n    if (perk_20) {\n        const shopItemPerk_20 = ['offeringAuto', 'offeringEX', 'obtainiumAuto', 'obtainiumEX', 'antSpeed', 'cashGrab'] as const;\n        player.challengecompletions[9] = 1;\n        player.highestchallengecompletions[9] = 1;\n        achievementaward(134);\n        player.antPoints = new Decimal('1e100');\n        player.antUpgrades[11] = 1;\n        for (const key of shopItemPerk_20) {\n            player.shopUpgrades[key] = shopData[key].maxLevel;\n        }\n    }\n    if (player.highestSingularityCount >= 25) {\n        player.eighthOwnedAnts = 1;\n    }\n    if (player.highestSingularityCount >= 30) {\n        player.researches[130] = 1;\n        player.researches[135] = 1;\n        player.researches[145] = 1;\n    }\n    if (player.highestSingularityCount >= 101 && singularityReset) {\n        player.cubeUpgrades[51] = 1;\n        awardAutosCookieUpgrade();\n    }\n\n    if (player.singularityUpgrades.platonicAlpha.getEffect().bonus && player.platonicUpgrades[5] === 0) {\n        player.platonicUpgrades[5] = 1;\n        updatePlatonicUpgradeBG(5);\n    }\n\n    if (singularityReset) {\n        for (let j = 1; j <= 15; j++) {\n            challengeachievementcheck(j);\n        }\n    }\n    resetUpgrades(3);\n    if (singularityReset) {\n        for (let j = 1; j < player.cubeUpgrades.length; j++) {\n            updateCubeUpgradeBG(j);\n        }\n    }\n    for (let j = 1; j < player.researches.length; j++) {\n        if (player.researches[j] > 0) {\n            updateResearchBG(j);\n        }\n    }\n    updateSingularityGlobalPerks();\n    revealStuff();\n}\n\n// updates singularity perks that do not get saved to player object\n// so that we can call on save load to fix game state\nexport const updateSingularityGlobalPerks = () => {\n\n    const perk_5 = player.achievements[278] > 0;\n    const shopItemPerk_5 = ['offeringAuto', 'offeringEX', 'obtainiumAuto', 'obtainiumEX', 'antSpeed', 'cashGrab'] as const;\n    for (const key of shopItemPerk_5) {\n        shopData[key].refundMinimumLevel = perk_5 ? 10 : key.endsWith('Auto') ? 1 : 0;\n    }\n\n    const perk_20 = player.highestSingularityCount >= 20;\n    const shopItemPerk_20 = ['offeringAuto', 'offeringEX', 'obtainiumAuto', 'obtainiumEX', 'antSpeed', 'cashGrab'] as const;\n    for (const key of shopItemPerk_20) {\n        shopData[key].refundable = perk_20 ? false : true;\n    }\n\n    const perk_51 = player.highestSingularityCount >= 51;\n    const shopItemPerk_51 = ['seasonPass', 'seasonPass2', 'seasonPass3', 'seasonPassY', 'chronometer', 'chronometer2'] as const;\n    for (const key of shopItemPerk_51) {\n        shopData[key].refundable = perk_51 ? false : true;\n    }\n}\n\nexport const singularity = async (setSingNumber = -1): Promise<void> => {\n    if (player.runelevels[6] === 0 && setSingNumber === -1) {\n        return Alert('You nearly triggered a double singularity bug! Oh no! Luckily, our staff prevented this from happening.');\n    }\n\n    // setSingNumber is only not -1 when we are entering and exiting a challenge.\n    if (setSingNumber === -1) {\n        // get total cube blessings for history\n        const cubeArray = Object.values(player.cubeBlessings);\n        const tesseractArray = Object.values(player.tesseractBlessings);\n        const hypercubeArray = Object.values(player.hypercubeBlessings);\n        const platonicArray = Object.values(player.platonicBlessings);\n        // Update sing history\n        const historyEntry: ResetHistoryEntrySingularity = {\n            seconds: player.singularityCounter,\n            date: Date.now(),\n            singularityCount: player.singularityCount,\n            quarks: player.quarksThisSingularity,\n            c15Score: player.challenge15Exponent,\n            goldenQuarks: calculateGoldenQuarkGain(),\n            wowTribs: sumContents(cubeArray),\n            tessTribs: sumContents(tesseractArray),\n            hyperTribs: sumContents(hypercubeArray),\n            platTribs: sumContents(platonicArray),\n            octeracts: player.totalWowOcteracts,\n            quarkHept: player.hepteractCrafts.quark.BAL,\n            kind: 'singularity'\n        }\n        Synergism.emit('historyAdd', 'singularity', historyEntry);\n    }\n    // reset the rune instantly to hopefully prevent a double singularity\n    player.runelevels[6] = 0;\n\n    player.goldenQuarks += calculateGoldenQuarkGain();\n\n    if (setSingNumber === -1) {\n        const incrementSingCount = 1 + getFastForwardTotalMultiplier();\n        player.singularityCount += incrementSingCount;\n        if (player.singularityCount >= player.highestSingularityCount) {\n            player.highestSingularityCount = player.singularityCount;\n\n            if (player.highestSingularityCount === 5) {\n                player.singularityUpgrades.goldenQuarks3.freeLevels += 1;\n            }\n            if (player.highestSingularityCount === 10) {\n                player.singularityUpgrades.goldenQuarks3.freeLevels += 2;\n            }\n        }\n    } else {\n        player.singularityCount = setSingNumber;\n    }\n\n    player.totalQuarksEver += player.quarksThisSingularity;\n    await resetShopUpgrades(true);\n    const hold = Object.assign({}, blankSave, {\n        codes: Array.from(blankSave.codes)\n    }) as Player;\n\n    // Reset Displays\n    toggleTabs('buildings');\n    toggleSubTab(1, 0);\n    toggleSubTab(4, 0); // Set 'runes' subtab back to 'runes' tab\n    toggleSubTab(8, 0); // Set 'cube tribues' subtab back to 'cubes' tab\n    toggleSubTab(9, 0); // set 'corruption main'\n    toggleSubTab(10, 0); // set 'singularity main'\n    toggleSubTab(-1, 0); // set 'statistics main'\n\n    hold.history.singularity = player.history.singularity;\n    hold.totalQuarksEver = player.totalQuarksEver\n    hold.singularityCount = player.singularityCount;\n    hold.highestSingularityCount = player.highestSingularityCount;\n    hold.goldenQuarks = player.goldenQuarks;\n    hold.shopUpgrades = player.shopUpgrades;\n    hold.worlds = new QuarkHandler({ quarks: 0, bonus: 0 })\n    hold.singularityUpgrades = player.singularityUpgrades\n    hold.octeractUpgrades = player.octeractUpgrades\n    hold.autoChallengeToggles = player.autoChallengeToggles\n    hold.autoChallengeTimer = player.autoChallengeTimer\n    hold.saveString = player.saveString\n    hold.corruptionLoadouts = player.corruptionLoadouts\n    hold.corruptionLoadoutNames = player.corruptionLoadoutNames\n    hold.corruptionShowStats = player.corruptionShowStats\n    hold.toggles = player.toggles\n    hold.retrychallenges = player.retrychallenges\n    hold.resettoggle1 = player.resettoggle1\n    hold.resettoggle2 = player.resettoggle2\n    hold.resettoggle3 = player.resettoggle3\n    hold.resettoggle4 = player.resettoggle4\n    hold.coinbuyamount = player.coinbuyamount\n    hold.crystalbuyamount = player.crystalbuyamount\n    hold.mythosbuyamount = player.mythosbuyamount\n    hold.particlebuyamount = player.particlebuyamount\n    hold.offeringbuyamount = player.offeringbuyamount\n    hold.tesseractbuyamount = player.tesseractbuyamount\n    hold.shoptoggles = player.shoptoggles\n    hold.autoSacrificeToggle = player.autoSacrificeToggle\n    hold.autoBuyFragment = player.autoBuyFragment\n    hold.autoFortifyToggle = player.autoFortifyToggle\n    hold.autoEnhanceToggle = player.autoEnhanceToggle\n    hold.autoResearchToggle = player.autoResearchToggle\n    hold.autoResearchMode = player.autoResearchMode\n    hold.dailyCodeUsed = player.dailyCodeUsed\n    hold.runeBlessingBuyAmount = player.runeBlessingBuyAmount\n    hold.runeSpiritBuyAmount = player.runeSpiritBuyAmount\n    hold.prestigeamount = player.prestigeamount\n    hold.transcendamount = player.transcendamount\n    hold.reincarnationamount = player.reincarnationamount\n    hold.talismanOne = player.talismanOne\n    hold.talismanTwo = player.talismanTwo\n    hold.talismanThree = player.talismanThree\n    hold.talismanFour = player.talismanFour\n    hold.talismanFive = player.talismanFive\n    hold.talismanSix = player.talismanSix\n    hold.talismanSeven = player.talismanSeven\n    hold.buyTalismanShardPercent = player.buyTalismanShardPercent\n    hold.antMax = player.antMax\n    hold.autoAntSacrifice = player.autoAntSacrifice\n    hold.autoAntSacrificeMode = player.autoAntSacrificeMode\n    hold.autoAntSacTimer = player.autoAntSacTimer\n    hold.autoAscend = player.autoAscend\n    hold.autoAscendMode = player.autoAscendMode\n    hold.autoAscendThreshold = player.autoAscendThreshold\n    hold.autoResearch = 0\n    hold.autoTesseracts = player.autoTesseracts\n    hold.tesseractAutoBuyerToggle = player.tesseractAutoBuyerToggle\n    hold.tesseractAutoBuyerAmount = player.tesseractAutoBuyerAmount\n    hold.autoOpenCubes = player.autoOpenCubes\n    hold.openCubes = player.openCubes\n    hold.autoOpenTesseracts = player.autoOpenTesseracts\n    hold.openTesseracts = player.openTesseracts\n    hold.autoOpenHypercubes = player.autoOpenHypercubes\n    hold.openHypercubes = player.openHypercubes\n    hold.autoOpenPlatonicsCubes = player.autoOpenPlatonicsCubes\n    hold.openPlatonicsCubes = player.openPlatonicsCubes\n    hold.historyShowPerSecond = player.historyShowPerSecond\n    hold.exporttest = player.exporttest\n    hold.dayTimer = player.dayTimer\n    hold.dayCheck = player.dayCheck\n    hold.ascStatToggles = player.ascStatToggles\n    hold.hepteractAutoCraftPercentage = player.hepteractAutoCraftPercentage\n    hold.autoWarpCheck = player.autoWarpCheck\n    hold.shopBuyMaxToggle = player.shopBuyMaxToggle\n    hold.shopHideToggle = player.shopHideToggle\n    hold.shopConfirmationToggle = player.shopConfirmationToggle\n    hold.researchBuyMaxToggle = player.researchBuyMaxToggle\n    hold.cubeUpgradesBuyMaxToggle = player.cubeUpgradesBuyMaxToggle\n    hold.wowOcteracts = player.wowOcteracts\n    hold.totalWowOcteracts = player.totalWowOcteracts\n    hold.overfluxOrbsAutoBuy = player.overfluxOrbsAutoBuy\n    hold.hotkeys = player.hotkeys\n    hold.theme = player.theme\n    hold.notation = player.notation\n    hold.firstPlayed = player.firstPlayed\n    hold.autoCubeUpgradesToggle = player.autoCubeUpgradesToggle\n    hold.autoPlatonicUpgradesToggle = player.autoPlatonicUpgradesToggle\n    hold.insideSingularityChallenge = player.insideSingularityChallenge\n    hold.singularityChallenges = player.singularityChallenges\n    hold.iconSet = player.iconSet\n\n    // Quark Hepteract craft is saved entirely. For other crafts we only save their auto setting\n    hold.hepteractCrafts.quark = player.hepteractCrafts.quark;\n    for (const craftName of Object.keys(player.hepteractCrafts)) {\n        if (craftName !== 'quark') {\n            const craftKey = craftName as keyof Player['hepteractCrafts'];\n            hold.hepteractCrafts[craftKey].AUTO = player.hepteractCrafts[craftKey].AUTO;\n        }\n    }\n\n    const saveCode42 = player.codes.get(42) ?? false\n    const saveCode43 = player.codes.get(43) ?? false\n    const saveCode44 = player.codes.get(44) ?? false\n    const saveCode45 = player.codes.get(45) ?? false\n\n    // Import Game\n\n    /*(for (const obj in blankSave) {\n        const k = obj as keyof Player;\n        if (k in blankSave) {\n            player[k] = blankSave?.[k]\n        }\n    }*/\n    await importSynergism(btoa(JSON.stringify(hold)), true);\n    //Techically possible to import game during reset. But that will only \"hurt\" that imported save\n\n    // TODO: Do not enable data that has never used an event code\n    player.codes.set(39, true);\n    player.codes.set(40, true);\n    player.codes.set(41, true);\n    player.codes.set(42, saveCode42)\n    player.codes.set(43, saveCode43)\n    player.codes.set(44, saveCode44)\n    player.codes.set(45, saveCode45)\n    updateSingularityMilestoneAwards();\n\n    player.rngCode = Date.now();\n\n    // Save again at the end of singularity reset\n    void saveSynergy();\n}\n\nconst resetUpgrades = (i: number) => {\n    if (i > 2.5) {\n        for (let i = 41; i < 61; i++) {\n            if (i !== 46) {\n                player.upgrades[i] = 0;\n            }\n        }\n\n        if (player.researches[41] === 0) {\n            player.upgrades[46] = 0;\n        }\n\n        if (player.researches[41] < 0.5) {\n            player.upgrades[88] = 0;\n        }\n        if (player.achievements[50] === 0) {\n            player.upgrades[89] = 0;\n        }\n        if (player.researches[42] < 0.5) {\n            player.upgrades[90] = 0;\n        }\n        if (player.researches[43] < 0.5) {\n            player.upgrades[91] = 0;\n        }\n        if (player.researches[44] < 0.5) {\n            player.upgrades[92] = 0;\n        }\n        if (player.researches[45] < 0.5) {\n            player.upgrades[93] = 0;\n        }\n\n        player.upgrades[116] = 0;\n        player.upgrades[117] = 0;\n        player.upgrades[118] = 0;\n        player.upgrades[119] = 0;\n        player.upgrades[120] = 0;\n    }\n\n    for (let j = 1; j <= 20; j++) {\n        player.upgrades[j] = 0;\n    }\n\n    // both indices go up by 5, so we can put them together!\n    for (let j = 121, k = 106; j <= 125; j++, k++) {\n        player.upgrades[j] = 0;\n        player.upgrades[k] = 0;\n    }\n\n    if (i > 1.5) {\n        if (player.achievements[4] < 0.5) {\n            player.upgrades[81] = 0;\n        }\n        if (player.achievements[11] < 0.5) {\n            player.upgrades[82] = 0;\n        }\n        if (player.achievements[18] < 0.5) {\n            player.upgrades[83] = 0;\n        }\n        if (player.achievements[25] < 0.5) {\n            player.upgrades[84] = 0;\n        }\n        if (player.achievements[32] < 0.5) {\n            player.upgrades[85] = 0;\n        }\n        if (player.achievements[87] < 0.5) {\n            player.upgrades[86] = 0;\n        }\n        if (player.achievements[80] < 0.5) {\n            player.upgrades[87] = 0;\n        }\n\n\n        player.upgrades[101] = 0;\n        player.upgrades[102] = 0;\n        player.upgrades[103] = 0;\n        player.upgrades[104] = 0;\n        player.upgrades[105] = 0;\n\n\n    }\n\n    if (i > 1.5) {\n        for (let k = 21; k < 41; k++) {\n            player.upgrades[k] = 0;\n        }\n\n        player.upgrades[111] = 0;\n        player.upgrades[112] = 0;\n        player.upgrades[113] = 0;\n        player.upgrades[114] = 0;\n        player.upgrades[115] = 0;\n    }\n\n    if (i > 1.5) {\n        player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0]\n        player.crystalUpgradesCost = [7, 15, 20, 40, 100, 200, 500, 1000]\n\n        let m = 0;\n        m += Math.floor(G['rune3level'] * G['effectiveLevelMult'] / 16) * 100 / 100\n        if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\n            m += 10\n        }\n        player.crystalUpgrades = [m, m, m, m, m, m, m, m]\n    }\n\n    if (player.achievements[87] > 0.5) {\n        player.upgrades[86] = 1\n    }\n\n    for (let x = 1; x <= 125; x++) {\n        upgradeupdate(x, true)\n    }\n}\n\nexport const resetAnts = () => {\n    player.firstOwnedAnts = 0;\n    player.secondOwnedAnts = 0;\n    player.thirdOwnedAnts = 0;\n    player.fourthOwnedAnts = 0;\n    player.fifthOwnedAnts = 0;\n    player.sixthOwnedAnts = 0;\n    player.seventhOwnedAnts = 0;\n    player.eighthOwnedAnts = 0;\n\n    player.firstGeneratedAnts = new Decimal('0');\n    player.secondGeneratedAnts = new Decimal('0');\n    player.thirdGeneratedAnts = new Decimal('0');\n    player.fourthGeneratedAnts = new Decimal('0');\n    player.fifthGeneratedAnts = new Decimal('0');\n    player.sixthGeneratedAnts = new Decimal('0');\n    player.seventhGeneratedAnts = new Decimal('0');\n    player.eighthGeneratedAnts = new Decimal('0');\n\n    player.firstCostAnts = new Decimal('1e700');\n    player.secondCostAnts = new Decimal('3');\n    player.thirdCostAnts = new Decimal('100');\n    player.fourthCostAnts = new Decimal('1e4');\n    player.fifthCostAnts = new Decimal('1e12');\n    player.sixthCostAnts = new Decimal('1e36');\n    player.seventhCostAnts = new Decimal('1e100');\n    player.eighthCostAnts = new Decimal('1e300');\n\n    if (player.cubeUpgrades[48] > 0) {\n        player.firstOwnedAnts = 1;\n        player.firstCostAnts = new Decimal('1e741');\n    }\n\n    const ant12 = player.antUpgrades[12-1];\n    player.antUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ant12];\n    player.antPoints = new Decimal('1');\n\n    if (player.currentChallenge.ascension === 12) {\n        player.antPoints = new Decimal('7')\n    }\n\n    calculateAnts();\n    calculateRuneLevels();\n}\n\nconst resetResearches = () => {\n    player.researchPoints = 0;\n    //Array listing all the research indexes deserving of removal\n    const destroy = [\n        6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25,\n        26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n        51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70,\n        76, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98,\n        101, 102, 103, 104, 106, 107, 108, 109, 110, 116, 117, 118, 121, 122, 123,\n        126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 144, 146, 147, 148, 149,\n        151, 152, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 169, 171, 172, 173, 174,\n        176, 177, 178, 179, 181, 182, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 199\n    ];\n\n    if (player.highestSingularityCount < 25) {\n        destroy.push(138, 153, 168, 183, 198)\n    }\n\n    for (const item of destroy) {\n        player.researches[item] = 0;\n    }\n}\n\nconst resetTalismans = () => {\n    player.talismanLevels = [0, 0, 0, 0, 0, 0, 0];\n    player.talismanRarity = [1, 1, 1, 1, 1, 1, 1];\n\n    player.talismanShards = 0;\n    player.commonFragments = 0;\n    player.uncommonFragments = 0;\n    player.rareFragments = 0;\n    player.epicFragments = 0;\n    player.legendaryFragments = 0;\n    player.mythicalFragments = 0;\n}\n", "import { sacrificeAnts } from './Ants';\nimport { buyAccelerator, boostAccelerator, buyMultiplier } from './Buy';\nimport { player, resetCheck, synergismHotkeys } from './Synergism';\nimport { keyboardTabChange, toggleAutoChallengeRun, toggleCorruptionLevel, confirmReply } from './Toggles';\nimport { Alert, Prompt, Confirm } from './UpdateHTML';\nimport { Globals as G } from './Variables';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport { useConsumable } from  './Shop';\nimport { promocodes } from './ImportExport';\n\nexport const defaultHotkeys = new Map<string, [string,() => unknown, boolean]>([\n    ['A', ['Buy Accelerators', () => buyAccelerator(), false]],\n    ['B', ['Boost Accelerator', () => boostAccelerator(), false]],\n    ['C', ['Auto Challenge', () => {\n        toggleChallengeSweep()\n    }, false]],\n    ['E', ['Exit T / R Challenge', () => {\n        if (player.autoChallengeRunning) {\n            toggleChallengeSweep()\n        } else {\n            exitTranscendAndPrestigeChallenge()\n        }\n    }, false]],\n    ['M', ['Multipliers', () => buyMultiplier(), false]],\n    ['N', ['No (Cancel)', () => confirmReply(false), true]],\n    ['P', ['Reset Prestige', () => resetCheck('prestige'), false]],\n    ['R', ['Reset Reincarnate', () => resetCheck('reincarnation'), false]],\n    ['S', ['Sacrifice Ants', () => sacrificeAnts(), false]],\n    ['T', ['Reset Transcend', () => resetCheck('transcension'), false]],\n    ['Y', ['Yes (OK)', () => confirmReply(true), true]],\n    ['ARROWLEFT', ['Back a tab', () => keyboardTabChange(-1), false]],\n    ['ARROWRIGHT', ['Next tab', () => keyboardTabChange(1), false]],\n    ['ARROWUP', ['Back a subtab', () => keyboardTabChange(-1, false), false]],\n    ['ARROWDOWN', ['Next subtab', () => keyboardTabChange(1, false), false]],\n    ['SHIFT+A', ['Reset Ascend', () => resetCheck('ascension'), false]],\n    ['SHIFT+C', ['Cleanse Corruptions', () => toggleCorruptionLevel(10, 999), false]],\n    ['SHIFT+D', ['Spec. Action Add x1', () => promocodes('add', 1), false]],\n    ['SHIFT+E', ['Exit Asc. Challenge', () => resetCheck('ascensionChallenge'), false]], // Its already checks if inside Asc. Challenge\n    ['SHIFT+O', ['Use Off. Potion', () => useConsumable('offeringPotion'), false]],\n    ['SHIFT+P', ['Use Obt. Potion', () => useConsumable('obtainiumPotion'), false]],\n    ['SHIFT+S', ['Reset Singularity', () => resetCheck('singularity'), false]]\n]);\n\nexport let hotkeysEnabled = false;\n\nexport let hotkeys = new Map<string, [string,() => unknown, boolean]>(defaultHotkeys);\n\nconst toggleChallengeSweep = (): void => {\n    if (player.researches[150] > 0) {\n        toggleAutoChallengeRun()\n        if (!player.autoChallengeRunning) {\n            exitTranscendAndPrestigeChallenge()\n        }\n    }\n}\n\nconst exitTranscendAndPrestigeChallenge = () => {\n    if (player.currentChallenge.reincarnation !== 0) {\n        void resetCheck('reincarnationChallenge', undefined, true)\n    }\n    if (player.currentChallenge.transcension !== 0) {\n        void resetCheck('transcensionChallenge', undefined, true)\n    }\n}\n\nconst eventHotkeys = (event: KeyboardEvent): void => {\n    if (!hotkeysEnabled || player.toggles[39] === false) {\n        // There was a race condition where a user could spam Shift + S + Enter to\n        // Singularity which would cause a bug when rune 7 was bought. To prevent this,\n        // the game disables hotkeys when on the offline progress screen, and re-\n        // enables them when the user leaves.\n        return;\n    }\n\n    if (document.activeElement?.localName === 'input') {\n        // https://developer.mozilla.org/en-US/docs/Web/API/Event/stopPropagation\n        // finally fixes the bug where hotkeys would be activated when typing in an input field\n        return event.stopPropagation();\n    }\n\n    synergismHotkeys(event, event.code.replace(/^(Digit|Numpad)/, '').toUpperCase());\n\n    let keyPrefix = '';\n    if (event.ctrlKey) {\n        keyPrefix += 'CTRL+';\n    }\n    if (event.shiftKey) {\n        keyPrefix += 'SHIFT+';\n    }\n    if (event.altKey) {\n        keyPrefix += 'ALT+';\n    }\n    const key = keyPrefix + event.key.toUpperCase();\n\n    // Disable the TAB key as it may allow unexpected operations\n    if (key === 'TAB') {\n        event.preventDefault();\n    }\n\n    // Disable hotkeys if notifications are occurring\n    if (key !== 'ENTER' && DOMCacheGetOrSet('transparentBG').style.display === 'block') {\n        if (hotkeys.has(key) && (hotkeys.get(key)![2] !== true)) {\n            return;\n        }\n    }\n\n    let hotkeyName = '';\n    if (hotkeys.has(key)) {\n        hotkeyName = '' + hotkeys.get(key)![0];\n        hotkeys.get(key)![1]();\n        event.preventDefault();\n    }\n\n    if (G['currentTab'] === 'settings' && player.subtabNumber === 6) {\n        DOMCacheGetOrSet('lastHotkey').textContent = key;\n        DOMCacheGetOrSet('lastHotkeyName').textContent = hotkeyName;\n    }\n}\n\nconst makeSlot = (key: string, descr: string) => {\n    const div = document.createElement('div');\n    div.classList.add('hotkeyItem');\n\n    const span = document.createElement('span');\n    span.id = 'actualHotkey';\n    span.textContent = key;\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    span.addEventListener('click', async (e) => {\n        const target = e.target as HTMLElement;\n        const oldKey = target.textContent!.toUpperCase();\n        const name =\n            hotkeys.get(oldKey)?.[0] ??\n            target.nextSibling?.textContent;\n\n        // new value to set key as, unformatted\n        const newKey = await Prompt(`\n        Enter the new key you want to activate ${name} with.\n\n        MDN has a list of values for \"special keys\" if you would like to use one:\n        https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\n\n        You can also prefix your hotkey with [Ctrl,Shift,Alt]+<key>\n        `);\n\n        if (typeof newKey !== 'string') {\n            return;\n        }\n\n        const toSet = newKey.toUpperCase();\n\n        if (newKey.length === 0) {\n            return void Alert('You didn\\'t enter anything, canceled!');\n        }\n\n        if (!isNaN(Number(newKey))) {\n            return void Alert('Number keys are currently unavailable!');\n        }\n\n        if (hotkeys.has(toSet) || oldKey === toSet) {\n            return void Alert('That key is already binded to an action, use another key instead!');\n        } else if (hotkeys.has(oldKey)) {\n            const old = hotkeys.get(oldKey)!;\n\n            hotkeys.set(toSet, old);\n            hotkeys.delete(oldKey);\n\n            const keys = Object.keys(player.hotkeys);\n            player.hotkeys[keys.length] = [oldKey, toSet];\n\n            target.textContent = toSet;\n\n            enableHotkeys();\n        } else {\n            return void Alert(`No hotkey is triggered by ${oldKey}!`);\n        }\n    });\n\n    const p = document.createElement('p');\n    p.id = 'hotKeyDesc';\n    p.textContent = descr;\n\n    div.appendChild(span);\n    div.appendChild(p);\n\n    return div;\n}\n\nexport const disableHotkeys = () => hotkeysEnabled = false;\n\nexport const enableHotkeys = () => {\n    changeHotkeys();\n\n    const hotkey = document.querySelector('.hotkeys')!;\n\n    for (const child of Array.from(hotkey.children)) {\n        hotkey.removeChild(child);\n    }\n\n    for (const [key, [descr]] of [...hotkeys.entries()]) {\n        const div = makeSlot(key, descr);\n\n        hotkey.appendChild(div);\n    }\n\n    hotkeysEnabled = true;\n}\n\nexport const changeHotkeys = () => {\n    hotkeys = new Map(defaultHotkeys);\n\n    for (const key in player.hotkeys) {\n        const oldKey = player.hotkeys[key][0];\n        const toSet = player.hotkeys[key][1];\n        if (hotkeys.has(oldKey)) {\n            const old = hotkeys.get(oldKey)!;\n            hotkeys.set(toSet, old);\n            hotkeys.delete(oldKey);\n        } else {\n            delete player.hotkeys[key];\n        }\n    }\n}\n\nexport const resetHotkeys = async () => {\n    enableHotkeys();\n\n    const keys = Object.keys(player.hotkeys);\n    if (keys.length === 0) {\n        return await Alert('You haven\\'t changed the hotkey');\n    }\n\n    let settext = '';\n    const hotkey = new Map(defaultHotkeys);\n    for (const key in player.hotkeys) {\n        const oldKey = player.hotkeys[key][0];\n        const toSet = player.hotkeys[key][1];\n        if (hotkey.has(oldKey)) {\n            const old = hotkey.get(oldKey)!;\n            settext += `\\t${oldKey}[${old[0]}] to ${toSet}, `;\n            hotkey.set(toSet, old);\n            hotkey.delete(oldKey);\n        }\n    }\n\n    const confirmed = await Confirm(`Are you sure you want to default all the changed hotkeys?\\nBelow is a history of hotkeys you have changed\\n\\n${settext}`);\n    if (confirmed) {\n        hotkeys = new Map(defaultHotkeys);\n        player.hotkeys = {};\n        enableHotkeys();\n    }\n}\n\ndocument.addEventListener('keydown', eventHotkeys);\n", "import { player, saveSynergy, format, resourceGain, updateAll, getTimePinnedToLoadDate } from './Synergism';\nimport { sumContents, productContents } from './Utility';\nimport { Globals as G } from './Variables';\nimport { CalcECC } from './Challenges';\nimport Decimal from 'break_infinity.js';\nimport { toggleTalismanBuy, updateTalismanInventory } from './Talismans';\nimport { reset } from './Reset';\nimport { achievementaward } from './Achievements';\nimport type { resetNames } from './types/Synergism';\nimport { hepteractEffective } from './Hepteracts';\nimport { addTimers, automaticTools } from './Helper';\nimport { Alert, Prompt } from './UpdateHTML';\nimport { quarkHandler } from './Quark';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport { calculateSingularityDebuff } from './singularity';\nimport { calculateEventSourceBuff } from './Event';\nimport { disableHotkeys, enableHotkeys } from './Hotkeys';\nimport { setInterval, clearInterval } from './Timers';\nimport { getFastForwardTotalMultiplier } from './singularity';\nimport i18next from 'i18next';\n\nexport const calculateTotalCoinOwned = () => {\n    G['totalCoinOwned'] =\n        player.firstOwnedCoin +\n        player.secondOwnedCoin +\n        player.thirdOwnedCoin +\n        player.fourthOwnedCoin +\n        player.fifthOwnedCoin;\n}\n\nexport const calculateTotalAcceleratorBoost = () => {\n    let b = 0\n    if (player.upgrades[26] > 0.5) {\n        b += 1;\n    }\n    if (player.upgrades[31] > 0.5) {\n        b += Math.floor(G['totalCoinOwned'] / 2000) * 100 / 100\n    }\n    if (player.achievements[7] > 0.5) {\n        b += Math.floor(player.firstOwnedCoin / 2000)\n    }\n    if (player.achievements[14] > 0.5) {\n        b += Math.floor(player.secondOwnedCoin / 2000)\n    }\n    if (player.achievements[21] > 0.5) {\n        b += Math.floor(player.thirdOwnedCoin / 2000)\n    }\n    if (player.achievements[28] > 0.5) {\n        b += Math.floor(player.fourthOwnedCoin / 2000)\n    }\n    if (player.achievements[35] > 0.5) {\n        b += Math.floor(player.fifthOwnedCoin / 2000)\n    }\n\n    b += player.researches[93] * Math.floor(1 / 20 * (G['rune1level'] + G['rune2level'] + G['rune3level'] + G['rune4level'] + G['rune5level']))\n    b += Math.floor((0.01 + G['rune1level']) * G['effectiveLevelMult'] / 20);\n    b *= (1 + 1 / 5 * player.researches[3] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])))\n    b *= (1 + 1 / 20 * player.researches[16] + 1 / 20 * player.researches[17])\n    b *= (1 + 1 / 20 * player.researches[88])\n    b *= calculateSigmoidExponential(20, (player.antUpgrades[4-1]! + G['bonusant4']) / 1000 * 20 / 19)\n    b *= (1 + 1 / 100 * player.researches[127])\n    b *= (1 + 0.8 / 100 * player.researches[142])\n    b *= (1 + 0.6 / 100 * player.researches[157])\n    b *= (1 + 0.4 / 100 * player.researches[172])\n    b *= (1 + 0.2 / 100 * player.researches[187])\n    b *= (1 + 0.01 / 100 * player.researches[200])\n    b *= (1 + 0.01 / 100 * player.cubeUpgrades[50])\n    b *= (1 + 1/1000 * hepteractEffective('acceleratorBoost'))\n    if (player.upgrades[73] > 0.5 && player.currentChallenge.reincarnation !== 0) {\n        b *= 2\n    }\n    b = Math.min(1e100, Math.floor(b));\n    G['freeAcceleratorBoost'] = b;\n\n    G['totalAcceleratorBoost'] = Math.floor(player.acceleratorBoostBought + G['freeAcceleratorBoost']) * 100 / 100;\n}\n\nexport const calculateAcceleratorMultiplier = () => {\n    G['acceleratorMultiplier'] = 1;\n    G['acceleratorMultiplier'] *= (1 + player.achievements[60] / 100)\n    G['acceleratorMultiplier'] *= (1 + player.achievements[61] / 100)\n    G['acceleratorMultiplier'] *= (1 + player.achievements[62] / 100)\n    G['acceleratorMultiplier'] *= (1 + 1 / 5 * player.researches[1] * (1 + 1 / 2 * CalcECC('ascension', player.challengecompletions[14])))\n    G['acceleratorMultiplier'] *= (1 + 1 / 20 * player.researches[6] + 1 / 25 * player.researches[7] + 1 / 40 * player.researches[8] + 3 / 200 * player.researches[9] + 1 / 200 * player.researches[10]);\n    G['acceleratorMultiplier'] *= (1 + 1 / 20 * player.researches[86])\n    G['acceleratorMultiplier'] *= (1 + 1 / 100 * player.researches[126])\n    G['acceleratorMultiplier'] *= (1 + 0.8 / 100 * player.researches[141])\n    G['acceleratorMultiplier'] *= (1 + 0.6 / 100 * player.researches[156])\n    G['acceleratorMultiplier'] *= (1 + 0.4 / 100 * player.researches[171])\n    G['acceleratorMultiplier'] *= (1 + 0.2 / 100 * player.researches[186])\n    G['acceleratorMultiplier'] *= (1 + 0.01 / 100 * player.researches[200])\n    G['acceleratorMultiplier'] *= (1 + 0.01 / 100 * player.cubeUpgrades[50])\n    G['acceleratorMultiplier'] *= Math.pow(1.01, player.upgrades[21] + player.upgrades[22] + player.upgrades[23] + player.upgrades[24] + player.upgrades[25])\n    if ((player.currentChallenge.transcension !== 0 || player.currentChallenge.reincarnation !== 0) && player.upgrades[50] > 0.5) {\n        G['acceleratorMultiplier'] *= 1.25\n    }\n}\n\nexport const calculateRecycleMultiplier = () => {\n    // Factors where recycle bonus comes from\n    const recycleFactors = sumContents([\n        0.05 * player.achievements[80],\n        0.05 * player.achievements[87],\n        0.05 * player.achievements[94],\n        0.05 * player.achievements[101],\n        0.05 * player.achievements[108],\n        0.05 * player.achievements[115],\n        0.075 * player.achievements[122],\n        0.075 * player.achievements[129],\n        0.05 * player.upgrades[61],\n        0.25 * Math.min(1, G['rune4level'] / 400),\n        0.005 * player.cubeUpgrades[2]\n    ]);\n\n    return 1 / (1 - recycleFactors);\n}\n\nexport function calculateRuneExpGiven(runeIndex: number, all: boolean, runeLevel: number, returnFactors: true): number[];\nexport function calculateRuneExpGiven(runeIndex: number, all: boolean, runeLevel: number, returnFactors: false): number;\nexport function calculateRuneExpGiven(runeIndex: number, all: boolean, runeLevel: number): number;\nexport function calculateRuneExpGiven(runeIndex: number, all: boolean): number;\nexport function calculateRuneExpGiven(runeIndex: number, all = false, runeLevel = player.runelevels[runeIndex], returnFactors = false) {\n    // recycleMult accounted for all recycle chance, but inversed so it's a multiplier instead\n    const recycleMultiplier = calculateRecycleMultiplier();\n\n    // Rune multiplier that is summed instead of added\n    let allRuneExpAdditiveMultiplier: number | null = null;\n    if (all) {\n        allRuneExpAdditiveMultiplier = sumContents([\n            //Challenge 3 completions\n            1 / 100 * player.highestchallengecompletions[3],\n            //Reincarnation 2x1\n            1 * player.upgrades[66]\n        ]);\n    } else {\n        allRuneExpAdditiveMultiplier = sumContents([\n            // Base amount multiplied per offering\n            1,\n            // +1 if C1 completion\n            Math.min(1, player.highestchallengecompletions[1]),\n            // +0.10 per C1 completion\n            0.4 / 10 * player.highestchallengecompletions[1],\n            // Research 5x2\n            0.6 * player.researches[22],\n            // Research 5x3\n            0.3 * player.researches[23],\n            // Particle Upgrade 1x1\n            2 * player.upgrades[61],\n            // Particle upgrade 3x1\n            player.upgrades[71] * runeLevel / 25\n        ]);\n    }\n\n    // Rune multiplier that gets applied to all runes\n    const allRuneExpMultiplier = productContents([\n        // Research 4x16\n        1 + (player.researches[91] / 20),\n        // Research 4x17\n        1 + (player.researches[92] / 20),\n        // Ant 8\n        calculateSigmoidExponential(999, 1 / 10000 * Math.pow(player.antUpgrades[8-1]! + G['bonusant8'], 1.1)),\n        // Cube Bonus\n        G['cubeBonusMultiplier'][4],\n        // Cube Upgrade Bonus\n        (1 + player.ascensionCounter / 1000 * player.cubeUpgrades[32]),\n        // Constant Upgrade Multiplier\n        1 + 1 / 10 * player.constantUpgrades[8],\n        // Challenge 15 reward multiplier\n        G['challenge15Rewards'].runeExp\n    ]);\n        // Corruption Divisor\n    const droughtEffect = 1 / Math.pow(G['droughtMultiplier'][player.usedCorruptions[8]], 1 - 1 / 2 * player.platonicUpgrades[13]);\n\n    // Rune multiplier that gets applied to specific runes\n    const runeExpMultiplier = [\n        productContents([\n            1 + (player.researches[78] / 50), 1 + (player.researches[111] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[7]) / 10), droughtEffect\n        ]),\n        productContents([\n            1 + (player.researches[80] / 50), 1 + (player.researches[112] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[7]) / 10), droughtEffect\n        ]),\n        productContents([\n            1 + (player.researches[79] / 50), 1 + (player.researches[113] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[8]) / 5), droughtEffect\n        ]),\n        productContents([\n            1 + (player.researches[77] / 50), 1 + (player.researches[114] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[6]) / 10), droughtEffect\n        ]),\n        productContents([\n            1 + (player.researches[83] / 20), 1 + (player.researches[115] / 100), 1 + (CalcECC('reincarnation', player.challengecompletions[9]) / 5), droughtEffect\n        ]),\n        productContents([1]),\n        productContents([1])\n    ];\n\n    const fact = [\n        allRuneExpAdditiveMultiplier,\n        allRuneExpMultiplier,\n        recycleMultiplier,\n        runeExpMultiplier[runeIndex]\n    ];\n\n    return returnFactors ? fact : Math.min(1e200, productContents(fact));\n}\n\nexport const lookupTableGen = (runeLevel: number) => {\n    // Rune exp required to level multipliers\n    const allRuneExpRequiredMultiplier = productContents([\n        Math.pow((runeLevel + 1) / 2, 3),\n        ((3.5 * runeLevel) + 100) / 500,\n        Math.max(1, (runeLevel - 200) / 9),\n        Math.max(1, (runeLevel - 400) / 12),\n        Math.max(1, (runeLevel - 600) / 15),\n        Math.max(1, Math.pow(1.03, (runeLevel - 800) / 4))\n    ]);\n\n    return allRuneExpRequiredMultiplier\n}\n\nlet lookupTableRuneExp: number[] | null = null;\n\n// Returns the amount of exp required to level a rune\nexport const calculateRuneExpToLevel = (runeIndex: number, runeLevel = player.runelevels[runeIndex]) => {\n    lookupTableRuneExp ??= Array.from({ length: 40000 }, (_, i) => lookupTableGen(i));\n\n    // For runes 6 and 7 we will apply a special multiplier\n    let multiplier = lookupTableRuneExp[runeLevel]\n    if (runeIndex === 5) {\n        multiplier = Math.pow(100, runeLevel)\n    }\n    if (runeIndex === 6) {\n        multiplier = Math.pow(1e25, runeLevel) * (player.highestSingularityCount + 1)\n    }\n    return multiplier * G['runeexpbase'][runeIndex];\n}\n\nexport const calculateMaxRunes = (i: number) => {\n    let max = 1000;\n\n    const increaseAll = 20 * (player.cubeUpgrades[16] + player.cubeUpgrades[37])\n        + 3 * player.constantUpgrades[7] + 80 * CalcECC('ascension', player.challengecompletions[11])\n        + 200 * CalcECC('ascension', player.challengecompletions[14])\n        + Math.floor(0.04 * player.researches[200] + 0.04 * player.cubeUpgrades[50])\n    const increaseMaxLevel = [\n        null,\n        10 * (player.researches[78] + player.researches[111]) + increaseAll,\n        10 * (player.researches[80] + player.researches[112]) + increaseAll,\n        10 * (player.researches[79] + player.researches[113]) + increaseAll,\n        10 * (player.researches[77] + player.researches[114]) + increaseAll,\n        10 * player.researches[115] + increaseAll,\n        -901,\n        -999\n    ]\n\n    max = (increaseMaxLevel[i]! > G['runeMaxLvl'] ? G['runeMaxLvl'] : max + increaseMaxLevel[i]!)\n    return max\n}\n\nexport const calculateEffectiveIALevel = () => {\n    return player.runelevels[5] + Math.max(0, player.runelevels[5] - 74) + Math.max(0, player.runelevels[5] - 98)\n}\n\nexport function calculateOfferings(input: resetNames): number;\nexport function calculateOfferings(input: resetNames, calcMult: false): number[];\nexport function calculateOfferings(input: resetNames, calcMult: false, statistic: boolean): number[];\nexport function calculateOfferings(input: resetNames, calcMult: true, statistic: boolean): number;\nexport function calculateOfferings(input: resetNames, calcMult = true, statistic = false) {\n\n    if (input == 'acceleratorBoost' || input == 'ascension' || input == 'ascensionChallenge'){\n        return 0;\n    }\n\n    let q = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n\n    if (input == 'reincarnation' || input == 'reincarnationChallenge') {\n        a += 3\n        if (player.achievements[52] > 0.5) {\n            a += (25 * Math.min(player.reincarnationcounter / 1800, 1))\n        }\n        if (player.upgrades[62] > 0.5) {\n            a += 1 / 50 * (sumContents(player.challengecompletions))\n        }\n        a += 0.6 * player.researches[25]\n        if (player.researches[95] === 1) {\n            a += 4\n        }\n        a += 1 / 200 * G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[85] / 200)\n        a *= (1 + Math.pow(Decimal.log(player.reincarnationShards.add(1), 10), 2 / 3) / 4);\n        a *= Math.min(Math.pow(player.reincarnationcounter / 10 + 1, 2), 1)\n        if (player.reincarnationcounter >= 5) {\n            a *= Math.max(1, player.reincarnationcounter / 10)\n        }\n\n    }\n    if (input == 'transcension' || input == 'transcensionChallenge' || input == 'reincarnation' ||\n        input == 'reincarnationChallenge') {\n        b += 2\n        if (player.reincarnationCount > 0) {\n            b += 2\n        }\n        if (player.achievements[44] > 0.5) {\n            b += (15 * Math.min(player.transcendcounter / 1800, 1))\n        }\n        if (player.challengecompletions[2] > 0) {\n            b += 1;\n        }\n        b += 0.2 * player.researches[24]\n        b += 1 / 200 * G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[85] / 200)\n        b *= (1 + Math.pow(Decimal.log(player.transcendShards.add(1), 10), 1 / 2) / 5);\n        b *= (1 + CalcECC('reincarnation', player.challengecompletions[8]) / 25)\n        b *= Math.min(Math.pow(player.transcendcounter / 10, 2), 1)\n        if (player.transcendCount >= 5) {\n            b *= Math.max(1, player.transcendcounter / 10)\n        }\n    }\n    // This will always be calculated if '0' is not already returned\n    c += 1\n    if (player.transcendCount > 0 || player.reincarnationCount > 0) {\n        c += 1\n    }\n    if (player.reincarnationCount > 0) {\n        c += 2\n    }\n    if (player.achievements[37] > 0.5) {\n        c += (15 * Math.min(player.prestigecounter / 1800, 1))\n    }\n    if (player.challengecompletions[2] > 0) {\n        c += 1;\n    }\n    c += 0.2 * player.researches[24]\n    c += 1 / 200 * G['rune5level'] * G['effectiveLevelMult'] * (1 + player.researches[85] / 200)\n    c *= (1 + Math.pow(Decimal.log(player.prestigeShards.add(1), 10), 1 / 2) / 5);\n    c *= (1 + CalcECC('reincarnation', player.challengecompletions[6]) / 50)\n    c *= Math.min(Math.pow(player.prestigecounter / 10, 2), 1)\n    if (player.prestigeCount >= 5) {\n        c *= Math.max(1, player.prestigecounter / 10)\n    }\n    q = a + b + c\n\n    const arr = [\n        1 + 10 * player.achievements[33] / 100, // Alchemy Achievement 5\n        1 + 15 * player.achievements[34] / 100, // Alchemy Achievement 6\n        1 + 25 * player.achievements[35] / 100, // Alchemy Achievement 7\n        1 + 20 * player.upgrades[38] / 100, // Diamond Upgrade 4x3\n        1 + player.upgrades[75] * 2 * Math.min(1, Math.pow(player.maxobtainium / 30000000, 0.5)), // Particle Upgrade 3x5\n        1 + 1 / 50 * player.shopUpgrades.offeringAuto, // Auto Offering Shop\n        1 + 1 / 25 * player.shopUpgrades.offeringEX, // Offering EX Shop\n        1 + 1 / 100 * player.shopUpgrades.cashGrab, // Cash Grab\n        1 + 1 / 10000 * sumContents(player.challengecompletions) * player.researches[85], // Research 4x10\n        1 + Math.pow((player.antUpgrades[6-1]! + G['bonusant6']), .66), // Ant Upgrade:\n        G['cubeBonusMultiplier'][3], // Brutus\n        1 + 0.02 * player.constantUpgrades[3], // Constant Upgrade 3\n        1 + 0.0003 * player.talismanLevels[3-1] * player.researches[149] + 0.0004 * player.talismanLevels[3-1] * player.researches[179], // Research 6x24,8x4\n        1 + 0.12 * CalcECC('ascension', player.challengecompletions[12]), // Challenge 12\n        1 + 0.01 / 100 * player.researches[200], // Research 8x25\n        1 + Math.min(1, player.ascensionCount / 1e6) * player.achievements[187], // Ascension Count Achievement\n        1 + .6 * player.achievements[250] + 1 * player.achievements[251], // Sun&Moon Achievements\n        1 + 0.05 * player.cubeUpgrades[46],  // Cube Upgrade 5x6\n        1 + 0.02 / 100 * player.cubeUpgrades[50],  // Cube Upgrade 5x10\n        1 + player.platonicUpgrades[5],  // Platonic ALPHA\n        1 + 2.5 * player.platonicUpgrades[10], // Platonic BETA\n        1 + 5 * player.platonicUpgrades[15], // Platonic OMEGA\n        G['challenge15Rewards'].offering, // C15 Reward\n        1 + 5 * (player.singularityUpgrades.starterPack.getEffect().bonus ? 1 : 0), // Starter Pack Upgrade\n        +player.singularityUpgrades.singOfferings1.getEffect().bonus, // Offering Charge GQ Upgrade\n        +player.singularityUpgrades.singOfferings2.getEffect().bonus, // Offering Storm GQ Upgrade\n        +player.singularityUpgrades.singOfferings3.getEffect().bonus, // Offering Tempest GQ Upgrade\n        +player.singularityUpgrades.singCitadel.getEffect().bonus, // Citadel GQ Upgrade\n        +player.singularityUpgrades.singCitadel2.getEffect().bonus, // Citadel 2 GQ Upgrade\n        1 + player.cubeUpgrades[54] / 100, // Cube upgrade 6x4 (Cx4)\n        +player.octeractUpgrades.octeractOfferings1.getEffect().bonus, // Offering Electrolosis OC Upgrade\n        1 + calculateEventBuff('Offering') // Event\n    ];\n\n    if (calcMult) {\n        q *= productContents(arr)\n    } else {\n        return arr;\n    }\n\n    if (statistic) {\n        return productContents(arr)\n    }\n\n    if (G['eventClicked'] && G['isEvent']) {\n        q *= 1.05\n    }\n    q /= calculateSingularityDebuff('Offering');\n    q = Math.floor(q) * 100 / 100\n    if (player.currentChallenge.ascension === 15) {\n        q *= (1 + 7 * player.cubeUpgrades[62]);\n    }\n    q *= (1 + 1/200 * player.shopUpgrades.cashGrab2);\n    q *= (1 + 1/100 * player.shopUpgrades.offeringEX2 * player.singularityCount);\n    q *= Math.pow(1.02, player.shopUpgrades.offeringEX3)\n    q *= calculateTotalOcteractOfferingBonus();\n    q = Math.min(1e300, q);\n\n    let persecond = 0;\n    if (input === 'prestige') {\n        persecond = q / (1 + player.prestigecounter)\n    }\n    if (input === 'transcension' || input == 'transcensionChallenge') {\n        persecond = q / (1 + player.transcendcounter)\n    }\n    if (input === 'reincarnation' || input == 'reincarnationChallenge') {\n        persecond = q / (1 + player.reincarnationcounter)\n    }\n    if (persecond > player.offeringpersecond) {\n        player.offeringpersecond = persecond\n    }\n\n    return q;\n}\n\nexport const calculateObtainium = () => {\n    G['obtainiumGain'] = 1;\n    if (player.upgrades[69] > 0) {\n        G['obtainiumGain'] *= Math.min(10, new Decimal(Decimal.pow(Decimal.log(G['reincarnationPointGain'].add(10), 10), 0.5)).toNumber())\n    }\n    if (player.upgrades[72] > 0) {\n        G['obtainiumGain'] *= Math.min(50, (1 + 2 * player.challengecompletions[6] + 2 * player.challengecompletions[7] + 2\n             * player.challengecompletions[8] + 2 * player.challengecompletions[9] + 2 * player.challengecompletions[10]))\n    }\n    if (player.upgrades[74] > 0) {\n        G['obtainiumGain'] *= (1 + 4 * Math.min(1, Math.pow(player.maxofferings / 100000, 0.5)))\n    }\n    G['obtainiumGain'] *= (1 + player.researches[65] / 5)\n    G['obtainiumGain'] *= (1 + player.researches[76] / 10)\n    G['obtainiumGain'] *= (1 + player.researches[81] / 10)\n    G['obtainiumGain'] *= (1 + player.shopUpgrades.obtainiumAuto / 50)\n    G['obtainiumGain'] *= (1 + player.shopUpgrades.cashGrab / 100)\n    G['obtainiumGain'] *= (1 + G['rune5level'] / 200 * G['effectiveLevelMult'] * (1 + player.researches[84] / 200 * (1 + 1 * G['effectiveRuneSpiritPower'][5] * calculateCorruptionPoints() / 400)))\n    G['obtainiumGain'] *= (1 + 0.01 * player.achievements[84] + 0.03 * player.achievements[91] + 0.05 * player.achievements[98] + 0.07\n         * player.achievements[105] + 0.09 * player.achievements[112] + 0.11 * player.achievements[119] + 0.13 * player.achievements[126] + 0.15\n         * player.achievements[133] + 0.17 * player.achievements[140] + 0.19 * player.achievements[147])\n    G['obtainiumGain'] *= (1 + 2 * Math.pow((player.antUpgrades[10-1]! + G['bonusant10']) / 50, 2 / 3))\n    G['obtainiumGain'] *= (1 + player.achievements[188] * Math.min(2, player.ascensionCount / 5e6))\n    G['obtainiumGain'] *= (1 + 0.6 * player.achievements[250] + 1 * player.achievements[251])\n    G['obtainiumGain'] *= G['cubeBonusMultiplier'][5]\n    G['obtainiumGain'] *= (1 + 0.04 * player.constantUpgrades[4])\n    G['obtainiumGain'] *= (1 + 0.1 * player.cubeUpgrades[47])\n    G['obtainiumGain'] *= (1 + 0.1 * player.cubeUpgrades[3])\n    G['obtainiumGain'] *= (1 + 0.5 * CalcECC('ascension', player.challengecompletions[12]))\n    G['obtainiumGain'] *= (1 + calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][4])\n    G['obtainiumGain'] *= (1 + 0.03 * Math.log(player.uncommonFragments + 1) / Math.log(4) * player.researches[144])\n    G['obtainiumGain'] *= (1 + 0.02 / 100 * player.cubeUpgrades[50])\n    if (player.achievements[53] > 0) {\n        G['obtainiumGain'] *= (1 + 1 / 800 * (G['runeSum']))\n    }\n    if (player.achievements[128]) {\n        G['obtainiumGain'] *= 1.5\n    }\n    if (player.achievements[129]) {\n        G['obtainiumGain'] *= 1.25\n    }\n\n    if (player.achievements[51] > 0) {\n        G['obtainiumGain'] += 4\n    }\n    if (player.reincarnationcounter >= 2) {\n        G['obtainiumGain'] += 1 * player.researches[63]\n    }\n    if (player.reincarnationcounter >= 5) {\n        G['obtainiumGain'] += 2 * player.researches[64]\n    }\n    G['obtainiumGain'] *= Math.min(1, Math.pow(player.reincarnationcounter / 10, 2));\n    G['obtainiumGain'] *= (1 + 1 / 25 * player.shopUpgrades.obtainiumEX)\n    if (player.reincarnationCount >= 5) {\n        G['obtainiumGain'] *= Math.max(1, player.reincarnationcounter / 10)\n    }\n    G['obtainiumGain'] *= Math.pow(Decimal.log(player.transcendShards.add(1), 10) / 300, 2);\n    G['obtainiumGain'] = Math.pow(G['obtainiumGain'], Math.min(1, G['illiteracyPower'][player.usedCorruptions[5]] * (1 + 9 / 100 * player.platonicUpgrades[9] * Math.min(100, Math.log10(player.researchPoints + 10)))))\n    G['obtainiumGain'] *= (1 + 4 / 100 * player.cubeUpgrades[42])\n    G['obtainiumGain'] *= (1 + 3 / 100 * player.cubeUpgrades[43])\n    G['obtainiumGain'] *= (1 + player.platonicUpgrades[5])\n    G['obtainiumGain'] *= (1 + 1.5 * player.platonicUpgrades[9])\n    G['obtainiumGain'] *= (1 + 2.5 * player.platonicUpgrades[10])\n    G['obtainiumGain'] *= (1 + 5 * player.platonicUpgrades[15])\n    G['obtainiumGain'] *= G['challenge15Rewards'].obtainium\n    G['obtainiumGain'] *= 1 + 5 * (player.singularityUpgrades.starterPack.getEffect().bonus ? 1 : 0)\n    G['obtainiumGain'] *= +player.singularityUpgrades.singObtainium1.getEffect().bonus\n    G['obtainiumGain'] *= +player.singularityUpgrades.singObtainium2.getEffect().bonus\n    G['obtainiumGain'] *= +player.singularityUpgrades.singObtainium3.getEffect().bonus\n    G['obtainiumGain'] *= (1 + player.cubeUpgrades[55] / 100) // Cube Upgrade 6x5 (Cx5)\n    G['obtainiumGain'] *= (1 + 1/200 * player.shopUpgrades.cashGrab2)\n    G['obtainiumGain'] *= (1 + 1/100 * player.shopUpgrades.obtainiumEX2 * player.singularityCount)\n    G['obtainiumGain'] *= 1 + calculateEventBuff('Obtainium');\n    G['obtainiumGain'] *= +player.singularityUpgrades.singCitadel.getEffect().bonus;\n    G['obtainiumGain'] *= +player.singularityUpgrades.singCitadel2.getEffect().bonus;\n    G['obtainiumGain'] *= +player.octeractUpgrades.octeractObtainium1.getEffect().bonus;\n    G['obtainiumGain'] *= Math.pow(1.02, player.shopUpgrades.obtainiumEX3);\n    G['obtainiumGain'] *= calculateTotalOcteractObtainiumBonus()\n\n    if (G['eventClicked'] && G['isEvent']) {\n        G['obtainiumGain'] *= 1.05\n    }\n\n    if (player.currentChallenge.ascension === 15) {\n        G['obtainiumGain'] += 1;\n        G['obtainiumGain'] *= (1 + 7 * player.cubeUpgrades[62])\n    }\n\n    if (!isFinite(G['obtainiumGain'])) {\n        G['obtainiumGain'] = 1e300;\n    }\n    G['obtainiumGain'] = Math.min(1e300, G['obtainiumGain']);\n    G['obtainiumGain'] /= calculateSingularityDebuff('Obtainium');\n\n    if (player.usedCorruptions[5] >= 15) {\n        G['obtainiumGain'] = Math.pow(G['obtainiumGain'], 1/4)\n    }\n    if (player.usedCorruptions[5] >= 16) {\n        G['obtainiumGain'] = Math.pow(G['obtainiumGain'], 1/3)\n    }\n\n    G['obtainiumGain'] = Math.max(1 + player.singularityCount, G['obtainiumGain']);\n    if (player.currentChallenge.ascension === 14) {\n        G['obtainiumGain'] = 0\n    }\n    player.obtainiumpersecond = Math.min(1e300, G['obtainiumGain']) / (0.1 + player.reincarnationcounter);\n    player.maxobtainiumpersecond = Math.max(player.maxobtainiumpersecond, player.obtainiumpersecond);\n}\n\nexport const calculateAutomaticObtainium = () => {\n    return 0.05 * (10 * player.researches[61] + 2 * player.researches[62]) * player.maxobtainiumpersecond * (1 + 4 * player.cubeUpgrades[3] / 5);\n}\n\n\n// TODO: REFACTOR THIS - May 15, 2022.\nexport const calculateTalismanEffects = () => {\n    let positiveBonus = 0;\n    let negativeBonus = 0;\n    if (player.achievements[135] === 1) {\n        positiveBonus += 0.02\n    }\n    if (player.achievements[136] === 1) {\n        positiveBonus += 0.02\n    }\n    positiveBonus += 0.02 * (player.talismanRarity[4-1] - 1)\n    positiveBonus += 3 * player.researches[106] / 100\n    positiveBonus += 3 * player.researches[107] / 100\n    positiveBonus += 3 * player.researches[116] / 200\n    positiveBonus += 3 * player.researches[117] / 200\n    positiveBonus += (G['cubeBonusMultiplier'][9] - 1)\n    positiveBonus += 0.0004 * player.cubeUpgrades[50]\n    negativeBonus += 0.06 * player.researches[118]\n    negativeBonus += 0.0004 * player.cubeUpgrades[50]\n\n    if (player.highestSingularityCount >= 7) {\n        positiveBonus += negativeBonus;\n        negativeBonus = positiveBonus\n    }\n\n    if (player.highestSingularityCount < 7) {\n        for (let i = 1; i <= 5; i++) {\n            if (player.talismanOne[i] === (1)) {\n                G['talisman1Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[1-1]]! + positiveBonus) * player.talismanLevels[1-1] * G['challenge15Rewards'].talismanBonus\n            } else {\n                G['talisman1Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[1-1]]! - negativeBonus) * player.talismanLevels[1-1] * (-1) * G['challenge15Rewards'].talismanBonus\n            }\n\n            if (player.talismanTwo[i] === (1)) {\n                G['talisman2Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[2-1]]! + positiveBonus) * player.talismanLevels[2-1] * G['challenge15Rewards'].talismanBonus\n            } else {\n                G['talisman2Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[2-1]]! - negativeBonus) * player.talismanLevels[2-1] * (-1) * G['challenge15Rewards'].talismanBonus\n            }\n\n            if (player.talismanThree[i] === (1)) {\n                G['talisman3Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[3-1]]! + positiveBonus) * player.talismanLevels[3-1] * G['challenge15Rewards'].talismanBonus\n            } else {\n                G['talisman3Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[3-1]]! - negativeBonus) * player.talismanLevels[3-1] * (-1) * G['challenge15Rewards'].talismanBonus\n            }\n\n            if (player.talismanFour[i] === (1)) {\n                G['talisman4Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[4-1]]! + positiveBonus) * player.talismanLevels[4-1] * G['challenge15Rewards'].talismanBonus\n            } else {\n                G['talisman4Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[4-1]]! - negativeBonus) * player.talismanLevels[4-1] * (-1) * G['challenge15Rewards'].talismanBonus\n            }\n\n            if (player.talismanFive[i] === (1)) {\n                G['talisman5Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[5-1]]! + positiveBonus) * player.talismanLevels[5-1] * G['challenge15Rewards'].talismanBonus\n            } else {\n                G['talisman5Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[5-1]]! - negativeBonus) * player.talismanLevels[5-1] * (-1) * G['challenge15Rewards'].talismanBonus\n            }\n\n            if (player.talismanSix[i] === (1)) {\n                G['talisman6Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[6-1]]! + positiveBonus) * player.talismanLevels[6-1] * G['challenge15Rewards'].talismanBonus\n            } else {\n                G['talisman6Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[6-1]]! - negativeBonus) * player.talismanLevels[6-1] * (-1) * G['challenge15Rewards'].talismanBonus\n            }\n\n            if (player.talismanSeven[i] === (1)) {\n                G['talisman7Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[7-1]]! + positiveBonus) * player.talismanLevels[7-1] * G['challenge15Rewards'].talismanBonus\n            } else {\n                G['talisman7Effect'][i] = (G['talismanNegativeModifier'][player.talismanRarity[7-1]]! - negativeBonus) * player.talismanLevels[7-1] * (-1) * G['challenge15Rewards'].talismanBonus\n            }\n\n        }\n    } else {\n        for (let i = 1; i <= 5; i ++) {\n            G['talisman1Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[1-1]]! + positiveBonus) * player.talismanLevels[1-1] * G['challenge15Rewards'].talismanBonus\n            G['talisman2Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[2-1]]! + positiveBonus) * player.talismanLevels[2-1] * G['challenge15Rewards'].talismanBonus\n            G['talisman3Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[3-1]]! + positiveBonus) * player.talismanLevels[3-1] * G['challenge15Rewards'].talismanBonus\n            G['talisman4Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[4-1]]! + positiveBonus) * player.talismanLevels[4-1] * G['challenge15Rewards'].talismanBonus\n            G['talisman5Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[5-1]]! + positiveBonus) * player.talismanLevels[5-1] * G['challenge15Rewards'].talismanBonus\n            G['talisman6Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[6-1]]! + positiveBonus) * player.talismanLevels[6-1] * G['challenge15Rewards'].talismanBonus\n            G['talisman7Effect'][i] = (G['talismanPositiveModifier'][player.talismanRarity[7-1]]! + positiveBonus) * player.talismanLevels[7-1] * G['challenge15Rewards'].talismanBonus\n        }\n    }\n    const talismansEffects = [G['talisman1Effect'], G['talisman2Effect'], G['talisman3Effect'], G['talisman4Effect'], G['talisman5Effect'], G['talisman6Effect'], G['talisman7Effect']];\n    const runesTalisman = [0, 0, 0, 0, 0, 0];\n    talismansEffects.forEach((talismanEffect) => {\n        talismanEffect.forEach((levels, runeNumber) => {\n            runesTalisman[runeNumber] += levels!;\n        });\n    });\n    [, G['rune1Talisman'], G['rune2Talisman'], G['rune3Talisman'], G['rune4Talisman'], G['rune5Talisman']] = runesTalisman;\n    G['talisman6Power'] = 0;\n    G['talisman7Quarks'] = 0;\n    if (player.talismanRarity[1-1] === 6) {\n        G['rune2Talisman'] += 400;\n    }\n    if (player.talismanRarity[2-1] === 6) {\n        G['rune1Talisman'] += 400;\n    }\n    if (player.talismanRarity[3-1] === 6) {\n        G['rune4Talisman'] += 400;\n    }\n    if (player.talismanRarity[4-1] === 6) {\n        G['rune3Talisman'] += 400;\n    }\n    if (player.talismanRarity[5-1] === 6) {\n        G['rune5Talisman'] += 400;\n    }\n    if (player.talismanRarity[6-1] === 6) {\n        G['talisman6Power'] = 2.5;\n    }\n    if (player.talismanRarity[7-1] === 6) {\n        G['talisman7Quarks'] = 2;\n    }\n}\n\nexport const calculateRuneLevels = () => {\n    calculateTalismanEffects();\n    if (player.currentChallenge.reincarnation !== 9) {\n        const antUpgrade8 = player.antUpgrades[8] ?? 0;\n        G['rune1level'] = Math.max(1, player.runelevels[0] + Math.min(1e7, (antUpgrade8 + G['bonusant9'])) * 1 + (G['rune1Talisman']) + 7 * player.constantUpgrades[7])\n        G['rune2level'] = Math.max(1, player.runelevels[1] + Math.min(1e7, (antUpgrade8 + G['bonusant9'])) * 1 + (G['rune2Talisman']) + 7 * player.constantUpgrades[7])\n        G['rune3level'] = Math.max(1, player.runelevels[2] + Math.min(1e7, (antUpgrade8 + G['bonusant9'])) * 1 + (G['rune3Talisman']) + 7 * player.constantUpgrades[7])\n        G['rune4level'] = Math.max(1, player.runelevels[3] + Math.min(1e7, (antUpgrade8 + G['bonusant9'])) * 1 + (G['rune4Talisman']) + 7 * player.constantUpgrades[7])\n        G['rune5level'] = Math.max(1, player.runelevels[4] + Math.min(1e7, (antUpgrade8 + G['bonusant9'])) * 1 + (G['rune5Talisman']) + 7 * player.constantUpgrades[7])\n    }\n\n    G['runeSum'] = sumContents([G['rune1level'], G['rune2level'], G['rune3level'], G['rune4level'], G['rune5level']]);\n    calculateRuneBonuses();\n}\n\nexport const calculateRuneBonuses = () => {\n    G['blessingMultiplier'] = 1\n    G['spiritMultiplier'] = 1\n\n    G['blessingMultiplier'] *= (1 + 6.9 * player.researches[134] / 100)\n    G['blessingMultiplier'] *= (1 + (player.talismanRarity[3-1] - 1) / 10)\n    G['blessingMultiplier'] *= (1 + 0.10 * Math.log10(player.epicFragments + 1) * player.researches[174])\n    G['blessingMultiplier'] *= (1 + 2 * player.researches[194] / 100)\n    if (player.researches[160] > 0) {\n        G['blessingMultiplier'] *= Math.pow(1.25, 8)\n    }\n    G['spiritMultiplier'] *= (1 + 8 * player.researches[164] / 100)\n    if (player.researches[165] > 0 && player.currentChallenge.ascension !== 0) {\n        G['spiritMultiplier'] *= Math.pow(2, 8)\n    }\n    G['spiritMultiplier'] *= (1 + 0.15 * Math.log10(player.legendaryFragments + 1) * player.researches[189])\n    G['spiritMultiplier'] *= (1 + 2 * player.researches[194] / 100)\n    G['spiritMultiplier'] *= (1 + (player.talismanRarity[5-1] - 1) / 100)\n\n    for (let i = 1; i <= 5; i++) {\n        G['runeBlessings'][i] = G['blessingMultiplier'] * player.runelevels[i - 1] * player.runeBlessingLevels[i]\n        G['runeSpirits'][i] = G['spiritMultiplier'] * player.runelevels[i - 1] * player.runeSpiritLevels[i]\n    }\n\n    for (let i = 1; i <= 5; i++) {\n        if (G['runeBlessings'][i] <= 1e30) {\n            G['effectiveRuneBlessingPower'][i] = (Math.pow(G['runeBlessings'][i], 1 / 8)) / 75 * G['challenge15Rewards'].blessingBonus\n        } else if (G['runeBlessings'][i] > 1e30) {\n            G['effectiveRuneBlessingPower'][i] = Math.pow(10, 5 / 2) * (Math.pow(G['runeBlessings'][i], 1 / 24)) / 75 * G['challenge15Rewards'].blessingBonus\n        }\n\n        if (G['runeSpirits'][i] <= 1e25) {\n            G['effectiveRuneSpiritPower'][i] = (Math.pow(G['runeSpirits'][i], 1 / 8)) / 75 * G['challenge15Rewards'].spiritBonus\n        } else if (G['runeSpirits'][i] > 1e25) {\n            G['effectiveRuneSpiritPower'][i] = Math.pow(10, 25 / 12) * (Math.pow(G['runeSpirits'][i], 1 / 24)) / 75 * G['challenge15Rewards'].spiritBonus\n        }\n\n    }\n}\n\nexport const calculateAnts = () => {\n\n    let bonusLevels = 0;\n    bonusLevels += 2 * (player.talismanRarity[6-1] - 1);\n    bonusLevels += CalcECC('reincarnation', player.challengecompletions[9]);\n    bonusLevels += 2 * player.constantUpgrades[6];\n    bonusLevels += 12 * CalcECC('ascension', player.challengecompletions[11]);\n    bonusLevels += Math.floor(1 / 200 * player.researches[200]);\n    bonusLevels *= G['challenge15Rewards'].bonusAntLevel\n    let c11 = 0;\n    let c11bonus = 0;\n    if (player.currentChallenge.ascension === 11) {\n        c11 = 999\n    }\n    if (player.currentChallenge.ascension === 11) {\n        c11bonus = Math.floor((4 * player.challengecompletions[8] + 23 * player.challengecompletions[9]) * Math.max(0, (1 - player.challengecompletions[11] / 10)));\n    }\n    G['bonusant1'] = Math.min(player.antUpgrades[1-1]! + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant2'] = Math.min(player.antUpgrades[2-1]! + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant3'] = Math.min(player.antUpgrades[3-1]! + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant4'] = Math.min(player.antUpgrades[4-1]! + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant5'] = Math.min(player.antUpgrades[5-1]! + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant6'] = Math.min(player.antUpgrades[6-1]! + c11, 4 * player.researches[97] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant7'] = Math.min(player.antUpgrades[7-1]! + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant8'] = Math.min(player.antUpgrades[8-1]! + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant9'] = Math.min(player.antUpgrades[9-1]! + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant10'] = Math.min(player.antUpgrades[10-1]! + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant11'] = Math.min(player.antUpgrades[11-1]! + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n    G['bonusant12'] = Math.min(player.antUpgrades[12-1]! + c11, 4 * player.researches[98] + bonusLevels + player.researches[102] + 2 * player.researches[132] + c11bonus)\n\n}\n\nexport const calculateAntSacrificeELO = () => {\n    G['antELO'] = 0;\n    G['effectiveELO'] = 0;\n    const antUpgradeSum = sumContents(player.antUpgrades as number[]);\n    if (player.antPoints.gte('1e40')) {\n        G['antELO'] += Decimal.log(player.antPoints, 10);\n        G['antELO'] += 1 / 2 * antUpgradeSum;\n        G['antELO'] += 1 / 10 * player.firstOwnedAnts\n        G['antELO'] += 1 / 5 * player.secondOwnedAnts\n        G['antELO'] += 1 / 3 * player.thirdOwnedAnts\n        G['antELO'] += 1 / 2 * player.fourthOwnedAnts\n        G['antELO'] += player.fifthOwnedAnts\n        G['antELO'] += 2 * player.sixthOwnedAnts\n        G['antELO'] += 4 * player.seventhOwnedAnts\n        G['antELO'] += 8 * player.eighthOwnedAnts\n        G['antELO'] += 666 * player.researches[178]\n        G['antELO'] *= (1 + 0.01 * player.achievements[180] + 0.02 * player.achievements[181] + 0.03 * player.achievements[182])\n        G['antELO'] *= (1 + player.researches[110] / 100)\n        G['antELO'] *= (1 + 2.5 * player.researches[148] / 100)\n\n        if (player.achievements[176] === 1) {\n            G['antELO'] += 25\n        }\n        if (player.achievements[177] === 1) {\n            G['antELO'] += 50\n        }\n        if (player.achievements[178] === 1) {\n            G['antELO'] += 75\n        }\n        if (player.achievements[179] === 1) {\n            G['antELO'] += 100\n        }\n        G['antELO'] += 25 * player.researches[108]\n        G['antELO'] += 25 * player.researches[109]\n        G['antELO'] += 40 * player.researches[123]\n        G['antELO'] += 100 * CalcECC('reincarnation', player.challengecompletions[10])\n        G['antELO'] += 75 * player.upgrades[80]\n        G['antELO'] = 1 / 10 * Math.floor(10 * G['antELO'])\n\n        G['effectiveELO'] += 0.5 * Math.min(3500, G['antELO'])\n        G['effectiveELO'] += 0.1 * Math.min(4000, G['antELO'])\n        G['effectiveELO'] += 0.1 * Math.min(6000, G['antELO'])\n        G['effectiveELO'] += 0.1 * Math.min(10000, G['antELO'])\n        G['effectiveELO'] += 0.2 * G['antELO']\n        G['effectiveELO'] += (G['cubeBonusMultiplier'][8] - 1)\n        G['effectiveELO'] += 1 * player.cubeUpgrades[50]\n        G['effectiveELO'] *= (1 + 0.03 * player.upgrades[124])\n    }\n}\n\nconst calculateAntSacrificeMultipliers = () => {\n    G['timeMultiplier'] = Math.min(1, Math.pow(player.antSacrificeTimer / 10, 2))\n    if (player.achievements[177] === 0) {\n        G['timeMultiplier'] *= Math.min(1000, Math.max(1, player.antSacrificeTimer / 10))\n    }\n    if (player.achievements[177] > 0) {\n        G['timeMultiplier'] *= Math.max(1, player.antSacrificeTimer / 10)\n    }\n\n    G['upgradeMultiplier'] = 1;\n    G['upgradeMultiplier'] *= (1 + 2 * (1 - Math.pow(2, -(player.antUpgrades[11-1]! + G['bonusant11']) / 125)));\n    G['upgradeMultiplier'] *= (1 + player.researches[103] / 20);\n    G['upgradeMultiplier'] *= (1 + player.researches[104] / 20);\n    if (player.achievements[132] === 1) {\n        G['upgradeMultiplier'] *= 1.25\n    }\n    if (player.achievements[137] === 1) {\n        G['upgradeMultiplier'] *= 1.25\n    }\n    G['upgradeMultiplier'] *= (1 + 20 / 3 * G['effectiveRuneBlessingPower'][3]);\n    G['upgradeMultiplier'] *= (1 + 1 / 50 * CalcECC('reincarnation', player.challengecompletions[10]));\n    G['upgradeMultiplier'] *= (1 + 1 / 50 * player.researches[122]);\n    G['upgradeMultiplier'] *= (1 + 3 / 100 * player.researches[133]);\n    G['upgradeMultiplier'] *= (1 + 2 / 100 * player.researches[163]);\n    G['upgradeMultiplier'] *= (1 + 1 / 100 * player.researches[193]);\n    G['upgradeMultiplier'] *= (1 + 1 / 10 * player.upgrades[79]);\n    G['upgradeMultiplier'] *= (1 + 1 / 4 * player.upgrades[40]);\n    G['upgradeMultiplier'] *= G['cubeBonusMultiplier'][7];\n    G['upgradeMultiplier'] *= (1 + calculateEventBuff('Ant Sacrifice'));\n    G['upgradeMultiplier'] = Math.min(1e300, G['upgradeMultiplier']);\n}\n\ninterface IAntSacRewards {\n    antSacrificePoints: number\n    offerings: number\n    obtainium: number\n    talismanShards: number\n    commonFragments: number\n    uncommonFragments: number\n    rareFragments: number\n    epicFragments: number\n    legendaryFragments: number\n    mythicalFragments: number\n}\n\nexport const calculateAntSacrificeRewards = (): IAntSacRewards => {\n    calculateAntSacrificeELO();\n    calculateAntSacrificeMultipliers();\n\n    const maxCap = 1e300;\n    const rewardsMult = Math.min(maxCap, G['timeMultiplier'] * G['upgradeMultiplier']);\n    const rewards: IAntSacRewards = {\n        antSacrificePoints: G['effectiveELO'] * rewardsMult / 85,\n        offerings: Math.min(maxCap, player.offeringpersecond * 0.15 * G['effectiveELO'] * rewardsMult / 180),\n        obtainium: Math.min(maxCap, player.maxobtainiumpersecond * 0.24 * G['effectiveELO'] * rewardsMult / 180),\n        talismanShards: (G['antELO'] > 500)\n            ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 210 * Math.pow(1 / 4 * (Math.max(0, G['effectiveELO'] - 500)), 2))))\n            : 0,\n        commonFragments: (G['antELO'] > 750)\n            ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 110 * Math.pow(1 / 9 * (Math.max(0, G['effectiveELO'] - 750)), 1.83))))\n            : 0,\n        uncommonFragments: (G['antELO'] > 1000)\n            ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 170 * Math.pow(1 / 16 * (Math.max(0, G['effectiveELO'] - 1000)), 1.66))))\n            : 0,\n        rareFragments: (G['antELO'] > 1500)\n            ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 200 * Math.pow(1 / 25 * (Math.max(0, G['effectiveELO'] - 1500)), 1.50))))\n            : 0,\n        epicFragments: (G['antELO'] > 2000)\n            ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 200 * Math.pow(1 / 36 * (Math.max(0, G['effectiveELO'] - 2000)), 1.33))))\n            : 0,\n        legendaryFragments: (G['antELO'] > 3000)\n            ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 230 * Math.pow(1 / 49 * (Math.max(0, G['effectiveELO'] - 3000)), 1.16))))\n            : 0,\n        mythicalFragments: (G['antELO'] > 5000)\n            ? Math.min(maxCap, Math.max(1, Math.floor(rewardsMult / 220 * Math.pow(1 / 64 * (Math.max(0, G['effectiveELO'] - 4150)), 1))))\n            : 0\n    };\n\n    return rewards;\n}\n\nexport const timeWarp = async () => {\n    const time = await Prompt(i18next.t('calculate.timePrompt'));\n    const timeUse = Number(time);\n    if (\n        Number.isNaN(timeUse) ||\n            timeUse <= 0\n    ) {\n        return Alert(i18next.t('calculate.timePromptError'));\n    }\n\n    DOMCacheGetOrSet('offlineContainer').style.display = 'flex'\n    DOMCacheGetOrSet('offlineBlur').style.display = ''\n    await calculateOffline(timeUse)\n}\n\nexport const calculateOffline = async (forceTime = 0) => {\n    disableHotkeys();\n\n    G['timeWarp'] = true;\n\n    //Variable Declarations i guess\n    const maximumTimer = 86400 * 3 + 7200 * 2 * player.researches[31] + 7200 * 2 * player.researches[32];\n    const updatedTime = Date.now();\n    const timeAdd = Math.min(maximumTimer, Math.max(forceTime, (updatedTime - player.offlinetick) / 1000))\n    const timeTick = timeAdd/200;\n    let resourceTicks = 200;\n\n    DOMCacheGetOrSet('offlineTimer').textContent = i18next.t('calculate.offlineTimer', {value: format(timeAdd, 0)})\n\n    //May 11, 2021: I've revamped calculations for this significantly. Note to May 11 Platonic: Fuck off -May 15 Platonic\n    //Some one-time tick things that are relatively important\n    toggleTalismanBuy(player.buyTalismanShardPercent);\n    updateTalismanInventory();\n\n    const offlineDialog = player.offlinetick > 0;\n\n    player.offlinetick = (player.offlinetick < 1.5e12) ? (Date.now()) : player.offlinetick;\n\n    G['timeMultiplier'] = calculateTimeAcceleration().mult;\n    calculateObtainium();\n    const obtainiumGain = calculateAutomaticObtainium();\n\n    const resetAdd = {\n        prestige: timeAdd / Math.max(0.01, player.fastestprestige),\n        offering: Math.floor(timeAdd),\n        transcension: timeAdd / Math.max(0.01, player.fastesttranscend),\n        reincarnation: timeAdd / Math.max(0.01, player.fastestreincarnate),\n        obtainium: timeAdd * obtainiumGain * G['timeMultiplier']\n    };\n\n    const timerAdd = {\n        prestige: timeAdd * G['timeMultiplier'],\n        transcension: timeAdd * G['timeMultiplier'],\n        reincarnation: timeAdd * G['timeMultiplier'],\n        ants: timeAdd * G['timeMultiplier'],\n        antsReal: timeAdd,\n        ascension: player.ascensionCounter, //Calculate this after the fact\n        quarks: quarkHandler().gain //Calculate this after the fact\n    };\n\n    addTimers('ascension', timeAdd);\n    addTimers('quarks', timeAdd);\n    addTimers('goldenQuarks', timeAdd);\n    addTimers('singularity', timeAdd);\n    addTimers('octeracts', timeTick);\n\n    player.prestigeCount += resetAdd.prestige;\n    player.transcendCount += resetAdd.transcension;\n    player.reincarnationCount += resetAdd.reincarnation;\n    timerAdd.ascension = player.ascensionCounter - timerAdd.ascension\n    timerAdd.quarks = quarkHandler().gain - timerAdd.quarks\n\n    //200 simulated all ticks [July 12, 2021]\n    const runOffline = setInterval(() => {\n        G['timeMultiplier'] = calculateTimeAcceleration().mult;\n        calculateObtainium();\n\n        //Reset Stuff lmao!\n        addTimers('prestige', timeTick);\n        addTimers('transcension', timeTick);\n        addTimers('reincarnation', timeTick);\n        addTimers('octeracts', timeTick);\n\n        resourceGain(timeTick * G['timeMultiplier']);\n\n        //Auto Obtainium Stuff\n        if (player.researches[61] > 0 && player.currentChallenge.ascension !== 14) {\n            automaticTools('addObtainium', timeTick);\n        }\n\n        //Auto Ant Sacrifice Stuff\n        if (player.achievements[173] > 0) {\n            automaticTools('antSacrifice', timeTick);\n        }\n\n        //Auto Offerings\n        automaticTools('addOfferings', timeTick);\n        //Auto Rune Sacrifice Stuff\n        if (player.shopUpgrades.offeringAuto > 0 && player.autoSacrificeToggle) {\n            automaticTools('runeSacrifice', timeTick);\n        }\n\n        if (resourceTicks % 5 === 1) {\n            // 196, 191, ... , 6, 1 ticks remaining\n            updateAll();\n        }\n\n        resourceTicks -= 1;\n        //Misc functions\n        if (resourceTicks < 1) {\n            clearInterval(runOffline);\n            G['timeWarp'] = false;\n        }\n    }, 0);\n\n    DOMCacheGetOrSet('offlinePrestigeCountNumber').textContent = format(resetAdd.prestige, 0, true)\n    DOMCacheGetOrSet('offlinePrestigeTimer').innerHTML =\n      i18next.t('offlineProgress.currentPrestigeTimer', { value: format(timerAdd.prestige, 2, false) })\n    DOMCacheGetOrSet('offlineOfferingCount').innerHTML =\n      i18next.t('offlineProgress.offeringsGenerated', { value: format(resetAdd.offering, 0, true) })\n    DOMCacheGetOrSet('offlineTranscensionCount').innerHTML =\n      i18next.t('offlineProgress.transcensionCount', { value: format(resetAdd.transcension, 0, true) })\n    DOMCacheGetOrSet('offlineTranscensionTimer').innerHTML =\n      i18next.t('offlineProgress.currentTranscensionCounter', { value: format(timerAdd.transcension, 2, false) })\n    DOMCacheGetOrSet('offlineReincarnationCount').innerHTML =\n      i18next.t('offlineProgress.reincarnationCount', { value: format(resetAdd.reincarnation, 0, true) })\n    DOMCacheGetOrSet('offlineReincarnationTimer').innerHTML =\n      i18next.t('offlineProgress.currentReincarnationTimer', { value: format(timerAdd.reincarnation, 2, false) })\n    DOMCacheGetOrSet('offlineObtainiumCount').innerHTML =\n      i18next.t('offlineProgress.obtainiumGenerated', { value: format(resetAdd.obtainium, 0, true) })\n    DOMCacheGetOrSet('offlineAntTimer').innerHTML =\n      i18next.t('offlineProgress.ingameAntSacTimer', { value: format(timerAdd.ants, 2, false) })\n    DOMCacheGetOrSet('offlineRealAntTimer').innerHTML =\n      i18next.t('offlineProgress.realAntSacTimer', { value: format(timerAdd.antsReal, 2, true) })\n    DOMCacheGetOrSet('offlineAscensionTimer').innerHTML =\n      i18next.t('offlineProgress.currentAscensionTimer', { value: format(timerAdd.ascension, 2, true) })\n    DOMCacheGetOrSet('offlineQuarkCount').innerHTML =\n      i18next.t('offlineProgress.exportQuarks', { value: format(timerAdd.quarks, 0, true) })\n\n    DOMCacheGetOrSet('progressbardescription').textContent = i18next.t('calculate.offlineEarnings')\n\n    player.offlinetick = updatedTime\n    if (!player.loadedNov13Vers) {\n        if (player.challengecompletions[14] > 0 || player.highestchallengecompletions[14] > 0) {\n            const ascCount = player.ascensionCount;\n            reset('ascensionChallenge');\n            player.ascensionCount = (ascCount + 1)\n        }\n        player.loadedNov13Vers = true\n    }\n\n    await saveSynergy();\n\n    updateTalismanInventory();\n    calculateObtainium();\n    calculateAnts();\n    calculateRuneLevels();\n\n    // allow aesthetic offline progress\n    if (offlineDialog) {\n        const el = DOMCacheGetOrSet('notification');\n        el.classList.add('slide-out');\n        el.classList.remove('slide-in');\n        document.body.classList.remove('scrollbar');\n        document.body.classList.add('loading');\n        DOMCacheGetOrSet('exitOffline').style.visibility = 'hidden';\n        DOMCacheGetOrSet('offlineContainer').style.display = 'flex';\n        DOMCacheGetOrSet('transparentBG').style.display = 'block';\n    } else {\n        exitOffline();\n    }\n}\n\nexport const exitOffline = () => {\n    document.body.classList.remove('loading');\n    document.body.classList.add('scrollbar');\n    DOMCacheGetOrSet('transparentBG').style.display = 'none'\n    DOMCacheGetOrSet('offlineContainer').style.display = 'none';\n    DOMCacheGetOrSet('offlineBlur').style.display = 'none';\n    enableHotkeys();\n}\n\nexport const calculateSigmoid = (constant: number, factor: number, divisor: number) => {\n    return (1 + (constant - 1) * (1 - Math.pow(2, -(factor) / (divisor))));\n}\n\nexport const calculateSigmoidExponential = (constant: number, coefficient: number) => {\n    return (1 + (constant - 1) * (1 - Math.exp(-coefficient)))\n}\n\nexport const calculateCubeBlessings = () => {\n    // The visual updates are handled in visualUpdateCubes()\n    const cubeArray = [\n        player.cubeBlessings.accelerator,\n        player.cubeBlessings.multiplier,\n        player.cubeBlessings.offering,\n        player.cubeBlessings.runeExp,\n        player.cubeBlessings.obtainium,\n        player.cubeBlessings.antSpeed,\n        player.cubeBlessings.antSacrifice,\n        player.cubeBlessings.antELO,\n        player.cubeBlessings.talismanBonus,\n        player.cubeBlessings.globalSpeed\n    ];\n    const powerBonus = [\n        player.cubeUpgrades[45] / 100,\n        player.cubeUpgrades[35] / 100,\n        player.cubeUpgrades[24] / 100,\n        player.cubeUpgrades[14] / 100,\n        player.cubeUpgrades[40] / 100,\n        player.cubeUpgrades[22] / 40,\n        player.cubeUpgrades[15] / 100,\n        player.cubeUpgrades[25] / 100,\n        player.cubeUpgrades[44] / 100,\n        player.cubeUpgrades[34] / 100\n    ];\n\n    for (let i = 1; i <= 10; i++) {\n        let power = 1;\n        let mult = 1;\n        if (cubeArray[i-1] >= 1000) {\n            power = G['blessingDRPower'][i]!;\n            mult *= Math.pow(1000, (1 - G['blessingDRPower'][i]!) * (1 + powerBonus[i-1]));\n        }\n        if (i === 6) {\n            power = 2.25;\n            mult = 1;\n        }\n\n        G['cubeBonusMultiplier'][i] = Math.min(1e300, 1 + mult * G['blessingbase'][i]! * Math.pow(cubeArray[i-1], power * (1 + powerBonus[i-1])) * G['tesseractBonusMultiplier'][i]!);\n    }\n    calculateRuneLevels();\n    calculateAntSacrificeELO();\n    calculateObtainium();\n}\n\nexport const calculateTotalOcteractCubeBonus = () => {\n    if (player.singularityChallenges.noOcteracts.enabled) {\n        return 1\n    }\n    if (player.totalWowOcteracts < 1000) {\n        const bonus = (1 + 2/1000 * player.totalWowOcteracts) // At 1,000 returns 3\n        return bonus > 1.00001 ? bonus : 1\n    } else {\n        const power = 2 + +player.singularityChallenges.noOcteracts.rewards.octeractPow\n        return 3 * Math.pow(Math.log10(player.totalWowOcteracts) - 2, power) // At 1,000 returns 3\n    }\n}\n\nexport const calculateTotalOcteractQuarkBonus = () => {\n    if (player.singularityChallenges.noOcteracts.enabled) {\n        return 1\n    }\n    if (player.totalWowOcteracts < 1000) {\n        const bonus = (1 + 0.2 / 1000 * player.totalWowOcteracts) // At 1,000 returns 1.20\n        return bonus > 1.00001 ? bonus : 1\n    } else {\n        return 1.1 + 0.1 * (Math.log10(player.totalWowOcteracts) - 2) // At 1,000 returns 1.20\n    }\n}\n\nexport const calculateTotalOcteractOfferingBonus = () => {\n    if (!player.singularityChallenges.noOcteracts.rewards.offeringBonus) {\n        return 1\n    }\n    return Math.pow(calculateTotalOcteractQuarkBonus(), 1.5)\n}\n\nexport const calculateTotalOcteractObtainiumBonus = () => {\n    if (!player.singularityChallenges.noOcteracts.rewards.obtainiumBonus) {\n        return 1\n    }\n    return Math.pow(calculateTotalOcteractQuarkBonus(), 1.4)\n}\n\nexport const calculateAllCubeMultiplier = () => {\n    const arr = [\n        // Ascension Time Multiplier to cubes\n        Math.pow(Math.min(1, player.ascensionCounter / 10), 2) * (1 + (1 / 4 * player.achievements[204] + 1 / 4\n             * player.achievements[211] + 1 / 2 * player.achievements[218]) * Math.max(0, player.ascensionCounter / 10 - 1)),\n        // Sun and Moon achievements\n        1 + 6 / 100 * player.achievements[250] + 10 / 100 * player.achievements[251],\n        // Speed Achievement\n        1 + player.achievements[240] * Math.min(0.5, Math.max(0.1, 1 / 20 * Math.log10(calculateTimeAcceleration().mult + 0.01))),\n        // Challenge 15: All Cube Gain bonuses 1-5\n        G['challenge15Rewards'].cube1 * G['challenge15Rewards'].cube2 * G['challenge15Rewards'].cube3 * G['challenge15Rewards'].cube4 * G['challenge15Rewards'].cube5,\n        // Rune 6: Infinite Ascent\n        1 + 1/100 * calculateEffectiveIALevel(),\n        // BETA: 2x Cubes\n        1 + player.platonicUpgrades[10],\n        // OMEGA: C9 Cube Bonus\n        Math.pow(1.01, player.platonicUpgrades[15] * player.challengecompletions[9]),\n        // Powder Bonus\n        calculateCubeMultFromPowder(),\n        // Event\n        1 + calculateEventBuff('Cubes'),\n        // Singularity Factor\n        1 / calculateSingularityDebuff('Cubes'),\n        // Wow Pass Y\n        1 + 0.75 * player.shopUpgrades.seasonPassY / 100,\n        // BUY THIS! Golden Quark Upgrade\n        1 + 4 * (player.singularityUpgrades.starterPack.getEffect().bonus ? 1 : 0),\n        // Cube Flame [GQ]\n        +player.singularityUpgrades.singCubes1.getEffect().bonus,\n        // Cube Blaze [GQ]\n        +player.singularityUpgrades.singCubes2.getEffect().bonus,\n        // Cube Inferno [GQ]\n        +player.singularityUpgrades.singCubes3.getEffect().bonus,\n        // Wow Pass Z\n        1 + player.shopUpgrades.seasonPassZ * player.singularityCount / 100,\n        // Cookie Upgrade 16\n        1 + 1 * player.cubeUpgrades[66] * (1 - player.platonicUpgrades[15]),\n        // Cookie Upgrade 8 (now actually works)\n        1 + 0.25 * +G['isEvent'] * player.cubeUpgrades[58],\n        // Wow Octeract Bonus\n        calculateTotalOcteractCubeBonus(),\n        // No Singularity Upgrades Challenge\n        +player.singularityChallenges.noSingularityUpgrades.rewards.cubes,\n        // Singularity Citadel\n        +player.singularityUpgrades.singCitadel.getEffect().bonus,\n        // Singularity Citadel 2\n        +player.singularityUpgrades.singCitadel2.getEffect().bonus,\n        // Platonic DELTA\n        1 + +player.singularityUpgrades.platonicDelta.getEffect().bonus * Math.min(9, player.singularityCounter / (3600 * 24)),\n        // Wow Pass INF\n        Math.pow(1.02, player.shopUpgrades.seasonPassInfinity)\n        // Total Global Cube Multipliers: 19\n    ]\n\n    const extraMult = (G['isEvent'] && G['eventClicked']) ? 1.05 : 1\n    return {\n        mult: productContents(arr) * extraMult,\n        list: arr\n    }\n}\n\nexport const calculateCubeMultiplier = (score = -1) => {\n    if (score < 0) {\n        score = calculateAscensionScore().effectiveScore;\n    }\n\n    const arr = [\n        // Ascension Score Multiplier\n        Math.pow(score / 3000, 1 / 4.1),\n        // Global Multiplier\n        calculateAllCubeMultiplier().mult,\n        // Season Pass 1\n        1 + 2.25 * player.shopUpgrades.seasonPass / 100,\n        // Researches (Excl 8x25)\n        (1 + player.researches[119] / 400) * // 5x19\n        (1 + player.researches[120] / 400) * // 5x20\n        (1 + player.researches[137] / 100) * // 6x12\n        (1 + 0.9 * player.researches[152] / 100) * // 7x2\n        (1 + 0.8 * player.researches[167] / 100) * // 7x17\n        (1 + 0.7 * player.researches[182] / 100) * // 8x7\n        (1 + 0.03 / 100 * player.researches[192] * player.antUpgrades[12-1]!) * // 8x17\n        (1 + 0.6 * player.researches[197] / 100),  // 8x22\n        // Research 8x25\n        1 + 0.004 / 100 * player.researches[200],\n        // Cube Upgrades\n        (1 + player.cubeUpgrades[1] / 6) * // 1x1\n        (1 + player.cubeUpgrades[11] / 11) * // 2x1\n        (1 + 0.4 * player.cubeUpgrades[30]),    // 3x10\n        // Constant Upgrade 10\n        1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]),\n        // Achievement 189 Bonus\n        1 + player.achievements[189] * Math.min(2, player.ascensionCount / 2.5e8),\n        // Achievement 193 Bonus\n        1 + player.achievements[193] * Decimal.log(player.ascendShards.add(1), 10) / 400,\n        // Achievement 195 Bonus\n        1 + Math.min(250, player.achievements[195] * Decimal.log(player.ascendShards.add(1), 10) / 400),\n        // Achievement 198-201 Bonus\n        1 + 4 / 100 * (player.achievements[198] + player.achievements[199] + player.achievements[200]) + 3 / 100 * player.achievements[201],\n        // Achievement 254 Bonus\n        1 + (Math.min(0.15, 0.6/100 * Math.log10(score + 1))) * player.achievements[254],\n        // Spirit Power\n        1 + calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][2],\n        // Platonic Cube Opening Bonus\n        G['platonicBonusMultiplier'][0],\n        // Platonic 1x1\n        1 + 0.000090 * sumContents(player.usedCorruptions) * player.platonicUpgrades[1],\n        // Cube Upgrade 63 (Cx13)\n        1 + Math.pow(1.03, Math.log10(Math.max(1, player.wowAbyssals))) * player.cubeUpgrades[63] - player.cubeUpgrades[63]\n        // Total Multipliers to cubes: 15\n    ];\n\n    // Decided to return a copy of list as well as the actual multiplier, instead of differentiating\n    return {\n        list: arr,\n        mult: productContents(arr)\n    }\n}\n\nexport const calculateTesseractMultiplier = (score = -1) => {\n    if (score < 0) {\n        score = calculateAscensionScore().effectiveScore;\n    }\n\n    const corrSum = sumContents(player.usedCorruptions.slice(2, 10))\n    const arr = [\n        // Ascension Score Multiplier\n        Math.pow(1 + Math.max(0, (score - 1e5)) / 1e4, .35),\n        // Global Multiplier\n        calculateAllCubeMultiplier().mult,\n        // Season Pass 1\n        1 + 2.25 * player.shopUpgrades.seasonPass / 100,\n        // 10th Const Upgrade +Tesseract%\n        1 + 0.01 * Decimal.log(player.ascendShards.add(1), 4) * Math.min(1, player.constantUpgrades[10]),\n        // Cube Upgrade 3x10\n        1 + 0.4 * player.cubeUpgrades[30],\n        // Cube Upgrade 4x8\n        1 + 1 / 200 * player.cubeUpgrades[38] * corrSum,\n        // Achievement 195 Bonus\n        1 + Math.min(250, player.achievements[195] * Decimal.log(player.ascendShards.add(1), 10) / 400),\n        // Achievement 202 Bonus\n        1 + player.achievements[202] * Math.min(2, player.ascensionCount / 5e8),\n        // Achievement 205-208 Bonus\n        1 + 4 / 100 * (player.achievements[205] + player.achievements[206] + player.achievements[207]) + 3 / 100 * player.achievements[208],\n        // Achievement 255 Bonus\n        1 + Math.min(0.15, 0.6/100 * Math.log10(score + 1)) * player.achievements[255],\n        // Platonic Cube Bonus\n        G['platonicBonusMultiplier'][1],\n        // Platonic Upgrade 1x2\n        1 + 0.00018 * corrSum * player.platonicUpgrades[2]\n        // Total Tesseract Multipliers: 12\n    ]\n\n    return {\n        list: arr,\n        mult: productContents(arr)\n    }\n}\n\nexport const calculateHypercubeMultiplier = (score = -1) => {\n    if (score < 0) {\n        score = calculateAscensionScore().effectiveScore;\n    }\n\n    const arr = [\n        // Ascension Score Multiplier\n        Math.pow(1 + Math.max(0, (score - 1e9)) / 1e8, .5),\n        // Global Multiplier\n        calculateAllCubeMultiplier().mult,\n        // Season Pass 2\n        1 + 1.5 * player.shopUpgrades.seasonPass2 / 100,\n        // Achievement 212 - 215 Bonus\n        1 + 4 / 100 * (player.achievements[212] + player.achievements[213] + player.achievements[214]) + 3 / 100 * player.achievements[215],\n        // Achievement 216 Bonus\n        1 + player.achievements[216] * Math.min(2, player.ascensionCount / 1e9),\n        // Achievement 253 Bonus\n        1 + 1 / 10 * player.achievements[253],\n        // Achievement 256 Bonus\n        1 + Math.min(0.15, 0.6/100 * Math.log10(score + 1)) * player.achievements[256],\n        // Achievement 265 Bonus\n        1 + Math.min(2, player.ascensionCount / 2.5e10) * player.achievements[265],\n        // Platonic Cubes Opened Bonus\n        G['platonicBonusMultiplier'][2],\n        // Platonic Upgrade 1x3\n        1 + 0.00054 * sumContents(player.usedCorruptions) * player.platonicUpgrades[3],\n        // Hyperreal Hepteract Bonus\n        1 + 0.6/1000 * hepteractEffective('hyperrealism')\n        // Total Hypercube Multipliers: 11\n    ]\n\n    return {\n        list: arr,\n        mult: productContents(arr)\n    }\n}\n\nexport const calculatePlatonicMultiplier = (score = -1) => {\n    if (score < 0) {\n        score = calculateAscensionScore().effectiveScore;\n    }\n\n    const arr = [\n        // Ascension Score Multiplier\n        Math.pow(1 + Math.max(0, score - 2.666e12) / 2.666e11, .75),\n        // Global Multipliers\n        calculateAllCubeMultiplier().mult,\n        // Season Pass 2\n        1 + 1.5 * player.shopUpgrades.seasonPass2 / 100,\n        // Achievement 196 Bonus\n        1 + Math.min(20, player.achievements[196] * 1 / 5000 * Decimal.log(player.ascendShards.add(1), 10)),\n        // Achievement 219-222 Bonus\n        1 + 4 / 100 * (player.achievements[219] + player.achievements[220] + player.achievements[221]) + 3 / 100 * player.achievements[222],\n        // Achievement 223 Bonus\n        1 + player.achievements[223] * Math.min(2, player.ascensionCount / 1.337e9),\n        // Achievement 257 Bonus\n        1 + Math.min(0.15, 0.6/100 * Math.log10(score + 1)) * player.achievements[257],\n        // Platonic Cube Opening Bonus\n        G['platonicBonusMultiplier'][3],\n        // Platonic Upgrade 1x4\n        1 + 1.2 * player.platonicUpgrades[4] / 50\n        // Total Platonic Multipliers: 9\n    ]\n\n    return {\n        list: arr,\n        mult: productContents(arr)\n    }\n}\n\nexport const calculateHepteractMultiplier = (score = -1) => {\n    if (score < 0) {\n        score = calculateAscensionScore().effectiveScore;\n    }\n\n    const arr = [\n        // Ascension Score Multiplier\n        Math.pow(1 + Math.max(0, score - 1.666e16) / 3.33e16, 0.85),\n        // Global Multiplier\n        calculateAllCubeMultiplier().mult,\n        // Season Pass 3\n        1 + 1.5 * player.shopUpgrades.seasonPass3 / 100,\n        // Achievement 258 Bonus\n        1 + Math.min(0.15, 0.6/100 * Math.log10(score + 1)) * player.achievements[258],\n        // Achievement 264 Bonus [Max: 8T Asc]\n        1 + Math.min(0.4, player.ascensionCount / 2e13) * player.achievements[264],\n        // Achievement 265 Bonus [Max: 160T Asc]\n        1 + Math.min(0.2, player.ascensionCount / 8e14) * player.achievements[265],\n        // Achievement 270 Bonus\n        Math.min(2, (1 + 1/1000000 * Decimal.log(player.ascendShards.add(1), 10) * player.achievements[270]))\n        // Total Hepteract Multipliers: 7\n    ]\n\n    return {\n        list: arr,\n        mult: productContents(arr)\n    }\n}\n\nexport const getOcteractValueMultipliers = () => {\n    const corruptionLevelSum = sumContents(player.usedCorruptions.slice(2, 10))\n    return [\n        1 + 1.5 * player.shopUpgrades.seasonPass3 / 100,\n        1 + 0.75 * player.shopUpgrades.seasonPassY / 100,\n        1 + player.shopUpgrades.seasonPassZ * player.singularityCount / 100,\n        1 + player.shopUpgrades.seasonPassLost / 1000,\n        // cube upgrade 70, ie Cx20\n        1 + +(corruptionLevelSum >= 14 * 8) * player.cubeUpgrades[70] / 10000,\n        1 + +(corruptionLevelSum >= 14 * 8) * +player.singularityUpgrades.divinePack.getEffect().bonus,\n        // next three are flame/blaze/inferno\n        +player.singularityUpgrades.singCubes1.getEffect().bonus,\n        +player.singularityUpgrades.singCubes2.getEffect().bonus,\n        +player.singularityUpgrades.singCubes3.getEffect().bonus,\n        // absinthe through eighth wonder\n        +player.singularityUpgrades.singOcteractGain.getEffect().bonus,\n        +player.singularityUpgrades.singOcteractGain2.getEffect().bonus,\n        +player.singularityUpgrades.singOcteractGain3.getEffect().bonus,\n        +player.singularityUpgrades.singOcteractGain4.getEffect().bonus,\n        +player.singularityUpgrades.singOcteractGain5.getEffect().bonus,\n        // Patreon bonus\n        1 + (player.worlds.BONUS / 100) * +player.singularityUpgrades.singOcteractPatreonBonus.getEffect().bonus,\n        // octeracts for dummies\n        1 + 0.2 * +player.octeractUpgrades.octeractStarter.getEffect().bonus,\n        // cogenesis and trigenesis\n        +player.octeractUpgrades.octeractGain.getEffect().bonus,\n        +player.octeractUpgrades.octeractGain2.getEffect().bonus,\n        derpsmithCornucopiaBonus(),\n        // digital octeract accumulator\n        Math.pow(1 + +player.octeractUpgrades.octeractAscensionsOcteractGain.getEffect().bonus, 1 + Math.floor(Math.log10(1 + player.ascensionCount))),\n        1 + calculateEventBuff('Octeract'),\n        1 + +player.singularityUpgrades.platonicDelta.getEffect().bonus * Math.min(9, player.singularityCounter / (3600 * 24)),\n        // No Singulairty Upgrades\n        +player.singularityChallenges.noSingularityUpgrades.rewards.cubes,\n        // Wow Pass INF\n        Math.pow(1.02, player.shopUpgrades.seasonPassInfinity)\n    ];\n}\n\nexport const octeractGainPerSecond = () => {\n    const SCOREREQ = 1e23\n    const currentScore = calculateAscensionScore().effectiveScore\n\n    const baseMultiplier = (currentScore >= SCOREREQ) ? currentScore / SCOREREQ : 0;\n\n    const valueMultipliers = getOcteractValueMultipliers()\n\n    const ascensionSpeed = player.singularityUpgrades.oneMind.getEffect().bonus ? Math.pow(10, 1/2) : Math.pow(calculateAscensionAcceleration(), 1 / 2)\n    const oneMindModifier = player.singularityUpgrades.oneMind.getEffect().bonus ? Math.pow(calculateAscensionAcceleration() / 10, +player.octeractUpgrades.octeractOneMindImprover.getEffect().bonus): 1;\n    const extraMult = (G['isEvent'] && G['eventClicked']) ? 1.05 : 1\n    const perSecond = 1 / (24 * 3600 * 365 * 1e15) * baseMultiplier * productContents(valueMultipliers) * ascensionSpeed * oneMindModifier * extraMult\n    return perSecond\n}\n\n// This is an old calculation used only for Stats for Nerds\nexport const calculateOcteractMultiplier = (score = -1) => {\n    const SCOREREQ = 1e23\n    if (score < 0) {\n        score = calculateAscensionScore().effectiveScore;\n    }\n\n    const arr = getOcteractValueMultipliers()\n\n    // add base score to the beginning and ascension speed mult to the end of the list\n    arr.unshift((score >= SCOREREQ) ? score / SCOREREQ : 0)\n    const ascensionSpeed = calculateAscensionAcceleration()\n\n    const ascensionSpeedMulti = (player.singularityUpgrades.oneMind.getEffect().bonus) ?\n        Math.pow(10, 1/2) * Math.pow(ascensionSpeed / 10, +player.octeractUpgrades.octeractOneMindImprover.getEffect().bonus) :\n        Math.pow(ascensionSpeed, 1/2)\n    arr.push(ascensionSpeedMulti)\n\n    return {\n        list: arr,\n        mult: productContents(arr)\n    }\n}\n\nexport const calculateTimeAcceleration = () => {\n    const preCorruptionArr = [\n        (1 + 1 / 300 * Math.log10(player.maxobtainium + 1) * player.upgrades[70]),  // Particle upgrade 2x5\n        (1 + player.researches[121] / 50),                                          // research 5x21\n        (1 + 0.015 * player.researches[136]),                                       // research 6x11\n        (1 + 0.012 * player.researches[151]),                                       // research 7x1\n        (1 + 0.009 * player.researches[166]),                                       // research 7x16\n        (1 + 0.006 * player.researches[181]),                                       // research 8x6\n        (1 + 0.003 * player.researches[196]),                                       // research 8x21\n        (1 + 8 * G['effectiveRuneBlessingPower'][1]),                               // speed blessing\n        (1 + calculateCorruptionPoints() / 400 * G['effectiveRuneSpiritPower'][1]), // speed SPIRIT\n        G['cubeBonusMultiplier'][10],                                               // Chronos cube blessing\n        1 + player.cubeUpgrades[18] / 5,                                            // cube upgrade 2x8\n        calculateSigmoid(2, player.antUpgrades[12-1]! + G['bonusant12'], 69),       // ant 12\n        (1 + 0.10 * (player.talismanRarity[2-1] - 1)),                              // Chronos Talisman bonus\n        G['challenge15Rewards'].globalSpeed,                                        // Challenge 15 reward\n        1 + 0.01 * player.cubeUpgrades[52]                                          // cube upgrade 6x2 (Cx2)\n    ];\n\n    // Global Speed softcap + Corruption / Corruption-like effects\n    const corruptionArr: number[] = [\n        G['lazinessMultiplier'][player.usedCorruptions[3]]                          // Corruption:  Spacial Dilation\n    ];\n\n    const corruptableTimeMult = productContents(preCorruptionArr) * corruptionArr[0]; // DR applies after base corruption.\n\n    if (corruptableTimeMult > 100) {\n        const postSoftcap = 10 * Math.sqrt(corruptableTimeMult);\n        const softcapRatio = postSoftcap / corruptableTimeMult;\n\n        corruptionArr.push(softcapRatio);\n    } else {\n        corruptionArr.push(1);\n    }\n\n    if (corruptableTimeMult < 1) {\n        const postPlat2x2 = Math.pow(corruptableTimeMult, 1 - player.platonicUpgrades[7] / 30);\n        const plat2x2Ratio = postPlat2x2 / corruptableTimeMult;\n\n        corruptionArr.push(plat2x2Ratio);\n    } else {\n        corruptionArr.push(1);\n    }\n\n    corruptionArr.push(1.0 / calculateSingularityDebuff('Global Speed'));\n\n    // Uncorruptable effects\n    const postCorruptionArr = [\n        G['platonicBonusMultiplier'][7],    // Chronos statue\n        1 + (player.singularityUpgrades.intermediatePack.getEffect().bonus ? 1 : 0),\n        1 + +player.octeractUpgrades.octeractImprovedGlobalSpeed.getEffect().bonus * player.singularityCount\n    ];\n\n    const timeMult = productContents(preCorruptionArr) * productContents(corruptionArr) * productContents(postCorruptionArr);\n\n\n    if (player.usedCorruptions[3] >= 6 && player.achievements[241] < 1) {\n        achievementaward(241)\n    }\n    if (timeMult > 3600 && player.achievements[242] < 1) {\n        achievementaward(242)\n    }\n\n    return {\n        preList: preCorruptionArr,\n        drList: corruptionArr,\n        postList: postCorruptionArr,\n        mult: timeMult\n    };\n}\n\nexport const calculateLimitedAscensionsDebuff = () => {\n    if (!player.singularityChallenges.limitedAscensions.enabled) {\n        return 1\n    } else {\n        let exponent = (player.ascensionCount - Math.max(0, 20 - player.singularityChallenges.limitedAscensions.completions))\n        exponent = Math.max(0, exponent)\n        return Math.pow(2, exponent)\n    }\n}\n\nexport const calculateAscensionSpeedMultiplier = () => {\n    const arr = [\n        1 + 1.2 / 100 * player.shopUpgrades.chronometer,                                                // Chronometer\n        1 + 0.6 / 100 * player.shopUpgrades.chronometer2,                                               // Chronometer 2\n        1 + 1.5 / 100 * player.shopUpgrades.chronometer3,                                               // Chronometer 3\n        1 + 0.6 / 1000 * hepteractEffective('chronos'),                                                 // Chronos Hepteract\n        1 + Math.min(0.10, 1 / 100 * Math.log10(player.ascensionCount + 1)) * player.achievements[262], // Achievement 262 Bonus\n        1 + Math.min(0.10, 1 / 100 * Math.log10(player.ascensionCount + 1)) * player.achievements[263], // Achievement 263 Bonus\n        1 + 0.002 * sumContents(player.usedCorruptions) * player.platonicUpgrades[15],                  // Platonic Omega\n        G['challenge15Rewards'].ascensionSpeed,                                                         // Challenge 15 Reward\n        1 + 1 / 400 * player.cubeUpgrades[59],                                                          // Cookie Upgrade 9\n        1 + 0.5 * (player.singularityUpgrades.intermediatePack.getEffect().bonus ? 1 : 0),              // Intermediate Pack, Sing Shop\n        1 + 1 / 1000 * player.singularityCount * player.shopUpgrades.chronometerZ,                      // Chronometer Z\n        1 + +player.octeractUpgrades.octeractImprovedAscensionSpeed.getEffect().bonus * player.singularityCount, // Abstract Photokinetics, Oct Upg\n        1 + +player.octeractUpgrades.octeractImprovedAscensionSpeed2.getEffect().bonus * player.singularityCount, // Abstract Exokinetics, Oct Upg\n        1 + calculateEventBuff('Ascension Speed'),                                                      // Event\n        (player.singularityUpgrades.singAscensionSpeed2.level > 0 && player.runelevels[6] < 1) ? 6 : 1, // A mediocre ascension speedup!\n        Math.pow(1.01, player.shopUpgrades.chronometerInfinity),                                         // Chronometer INF\n        1 / calculateLimitedAscensionsDebuff(),                                                           // EXALT Debuff\n        Math.pow(1 + +player.singularityChallenges.limitedAscensions.rewards.ascensionSpeedMult, 1 + Math.max(0, Math.floor(Math.log10(player.ascensionCount)))) // EXALT Buff                                                                                                 // EXALT Buff\n    ];\n\n    // A hecking good ascension speedup!\n    const baseMultiplier = productContents(arr);\n    const exponent = (player.singularityUpgrades.singAscensionSpeed.level > 0\n        ? (baseMultiplier >= 1\n            ? 1.03\n            : 0.97)\n        : 1);\n    arr.push(Math.pow(baseMultiplier, exponent) / baseMultiplier);\n\n    // Singularity Penalty\n    arr.push(1 / calculateSingularityDebuff('Ascension Speed'));\n\n    return {\n        list: arr,\n        mult: productContents(arr)\n    }\n}\n\nexport const calculateAscensionAcceleration = () => {\n    return calculateAscensionSpeedMultiplier().mult\n}\n\nexport const calculateSingularityQuarkMilestoneMultiplier = () => {\n    let multiplier = 1\n    const singThresholds = [5, 20, 35, 50, 65, 80, 90, 100, 121, 144, 150, 160, 166, 169, 170, 175, 180, 190, 196, 200, 200, 201, 202, 203, 204, 205, 210, 212, 214, 216, 218, 220, 225, 250];\n    for (const sing of singThresholds) {\n        if (player.highestSingularityCount >= sing) {\n            multiplier *= 1.05\n        }\n    }\n\n    if (player.highestSingularityCount >= 200) {\n        multiplier *= Math.pow((player.highestSingularityCount - 179) / 20, 2)\n    }\n\n    return multiplier\n}\n\nexport const calculateQuarkMultiplier = () => {\n    let multiplier = 1;\n    if (player.achievementPoints > 0) { // Achievement Points\n        multiplier += player.achievementPoints / 25000; // Cap of +0.20 at 5,000 Pts\n    }\n    if (player.achievements[250] > 0) { // Max research 8x25\n        multiplier += 0.10;\n    }\n    if (player.achievements[251] > 0) { // Max Wow! Cube Upgrade 5x10\n        multiplier += 0.10;\n    }\n    if (player.platonicUpgrades[5] > 0) { // Platonic ALPHA upgrade\n        multiplier += 0.20;\n    }\n    if (player.platonicUpgrades[10] > 0) { // Platonic BETA Upgrade\n        multiplier += 0.25;\n    }\n    if (player.platonicUpgrades[15] > 0) { // Platonic OMEGA upgrade\n        multiplier += 0.30;\n    }\n    if (player.challenge15Exponent >= 1e11) { // Challenge 15: Exceed 1e11 exponent reward\n        multiplier += (G['challenge15Rewards'].quarks - 1);\n    }\n    if (player.shopUpgrades.infiniteAscent) { // Purchased Infinite Ascent Rune\n        multiplier *= (1.1 + 0.15 / 75 * calculateEffectiveIALevel());\n    }\n    if (player.challenge15Exponent >= 1e15) { // Challenge 15: Exceed 1e15 exponent reward\n        multiplier *= (1 + 5/10000 * hepteractEffective('quark'));\n    }\n    if (player.overfluxPowder > 0) { // Overflux Powder [Max: 10% at 10,000]\n        multiplier *= calculateQuarkMultFromPowder();\n    }\n    if (player.achievements[266] > 0) { // Achievement 266 [Max: 10% at 1Qa Ascensions]\n        multiplier *= (1 + Math.min(0.1, (player.ascensionCount) / 1e16))\n    }\n    if (player.singularityCount > 0) { // Singularity Modifier\n        multiplier *= (1 + player.singularityCount / 10)\n    }\n    if (G['isEvent']) {\n        multiplier *= 1 + calculateEventBuff('Quarks') + calculateEventBuff('One Mind');\n    }\n    if (player.cubeUpgrades[53] > 0) { // Cube Upgrade 6x3 (Cx3)\n        multiplier *= (1 + 0.10 * player.cubeUpgrades[53] / 100)\n    }\n    if (player.cubeUpgrades[68] > 0) { // Cube Upgrade 7x8\n        multiplier *= (1 + 1/10000 * player.cubeUpgrades[68] + 0.05 * (Math.floor(player.cubeUpgrades[68] / 1000)))\n    }\n\n    multiplier *= calculateSingularityQuarkMilestoneMultiplier();\n\n    multiplier *= +player.octeractUpgrades.octeractQuarkGain.getEffect().bonus // Oct Improver 1\n    multiplier *= (1 + 0.3 * + player.octeractUpgrades.octeractStarter.getEffect().bonus) // Oct Starter Pack\n\n    multiplier *= (1 + 1/10000 * Math.floor(player.octeractUpgrades.octeractQuarkGain.level / 111) *\n                                player.octeractUpgrades.octeractQuarkGain2.level *\n                                Math.floor(1 + Math.log10(Math.max(1, player.hepteractCrafts.quark.BAL)))) // Improver 2\n\n    multiplier *= (1 + 0.02 * player.singularityUpgrades.intermediatePack.level +               // 1.02\n                           0.04 * player.singularityUpgrades.advancedPack.level +               // 1.06\n                           0.06 * player.singularityUpgrades.expertPack.level +                 // 1.12\n                           0.08 * player.singularityUpgrades.masterPack.level +                 // 1.20\n                           0.10 * player.singularityUpgrades.divinePack.level)                  // 1.30\n\n    multiplier *= 1 + +player.singularityUpgrades.singQuarkImprover1.getEffect().bonus // Doohickey\n    multiplier *= calculateTotalOcteractQuarkBonus()\n\n    if (player.highestSingularityCount === 0) {\n        multiplier *= 1.25\n    }\n\n    return multiplier\n}\n\n/**\n *\n * Calculate the number of Golden Quarks earned in current singularity\n */\nexport const calculateGoldenQuarkMultiplier = (computeMultiplier = false) => {\n    const base = 2 * player.singularityCount + 10;\n\n    let bonus = (player.singularityCount < 10) ? (200 - 10 * player.singularityCount) : 0;\n    if (player.singularityCount === 0) {\n        bonus += 200;\n    }\n\n    let perkMultiplier = 1\n    if (player.highestSingularityCount >= 200) {\n        perkMultiplier = 3\n    }\n    if (player.highestSingularityCount >= 208) {\n        perkMultiplier = 5\n    }\n    if (player.highestSingularityCount >= 221) {\n        perkMultiplier = 8\n    }\n\n    const arr = [\n        1 + Math.max(0, Math.log10(player.challenge15Exponent + 1) - 20) / 2,                           // Challenge 15 Exponent\n        1 + player.worlds.BONUS / 100,                                                                  // Patreon Bonus\n        +player.singularityUpgrades.goldenQuarks1.getEffect().bonus,                                    // Golden Quarks I\n        1 + 0.12 * player.cubeUpgrades[69],                                                             // Cookie Upgrade 19\n        +player.singularityChallenges.noSingularityUpgrades.rewards.goldenQuarks,                       // No Singularity Upgrades\n        1 + calculateEventBuff('Golden Quarks'),                                                        // Event\n        1 + getFastForwardTotalMultiplier(),                                                            // Singularity Fast Forwards\n        player.highestSingularityCount >= 100 ? 1 + Math.min(1, player.highestSingularityCount / 250) : 1, // Golden Revolution II\n        perkMultiplier                                                                                  // Immaculate Alchemy\n    ];\n\n    // Total Quarks Coefficient\n    arr.push(computeMultiplier === true\n        ? 1 / 1e5\n        : ((base + player.quarksThisSingularity / 1e5) * productContents(arr) + bonus) / productContents(arr)\n    );\n\n    return {\n        list: arr,\n        mult: productContents(arr)\n    }\n}\n\nexport const calculateGoldenQuarkGain = (computeMultiplier = false):number => {\n    return calculateGoldenQuarkMultiplier(computeMultiplier).mult;\n}\n\nexport const calculateCorruptionPoints = () => {\n    let basePoints = 400;\n    const bonusLevel = player.singularityUpgrades.corruptionFifteen.getEffect().bonus ? 1 : 0;\n\n    for (let i = 1; i <= 9; i++) {\n        basePoints += 16 * Math.pow(player.usedCorruptions[i] + bonusLevel, 2)\n    }\n\n    return (basePoints)\n}\n\n//If you want to sum from a baseline level i to the maximum buyable level n, what would the cost be and how many levels would you get?\nexport const calculateSummationLinear = (\n    baseLevel: number,\n    baseCost: number,\n    resourceAvailable: number,\n    differenceCap = 1e9\n): [number, number] => {\n    const subtractCost = baseCost * baseLevel * (1 + baseLevel) / 2;\n    const buyToLevel = Math.min(baseLevel + differenceCap, Math.floor(-1 / 2 + Math.sqrt(1 / 4 + 2 * (resourceAvailable + subtractCost) / baseCost)));\n    const realCost = (baseCost * buyToLevel * (1 + buyToLevel) / 2) - subtractCost;\n\n    return [\n        buyToLevel,\n        realCost\n    ];\n}\n\n//If you want to sum from a baseline level baseLevel to some level where the cost per level is base * (1 + level * diffPerLevel), this finds out how many total levels you can buy.\nexport const calculateSummationNonLinear = (\n    baseLevel: number,\n    baseCost: number,\n    resourceAvailable: number,\n    diffPerLevel: number,\n    buyAmount: number\n): {levelCanBuy: number, cost: number} => {\n    const c = diffPerLevel / 2\n    resourceAvailable = resourceAvailable || 0\n    const alreadySpent = baseCost * (c * Math.pow(baseLevel, 2) + baseLevel * (1 - c))\n    resourceAvailable += alreadySpent\n    const v = resourceAvailable / baseCost\n    let buyToLevel = c > 0\n        ? Math.max(0, Math.floor((c - 1) / (2 * c) + Math.pow(Math.pow(1 - c, 2) + 4 * c * v, 1 / 2) / (2 * c)))\n        : Math.floor(v);\n\n    buyToLevel = Math.min(buyToLevel, buyAmount + baseLevel)\n    buyToLevel = Math.max(buyToLevel, baseLevel)\n    let totalCost = baseCost * (c * Math.pow(buyToLevel, 2) + buyToLevel * (1 - c)) - alreadySpent\n    if (buyToLevel == baseLevel) {\n        totalCost = baseCost * (1 + 2 * c * baseLevel)\n    }\n    return {\n        levelCanBuy: buyToLevel,\n        cost: totalCost\n    }\n}\n\n/**\n *\n * @param n A nonnegative integer\n * @returns The sum of the first n positive cubes, 0 if n = 0, or -1 otherwise.\n */\nexport const calculateSummationCubic = (n: number) => {\n\n    if (n < 0) {\n        return -1\n    }\n    if (!Number.isInteger(n)) {\n        return -1\n    }\n\n    return Math.pow(n * (n+1) / 2, 2)\n}\n\n/**\n * Solves a*n^2 + b*n + c = 0 for real solutions.\n * @param a Coefficient of n^2. Must be nonzero!\n * @param b Coefficient of n.\n * @param c Coefficient of constant term\n * @param positive Boolean which if true makes solution use positive discriminant.\n * @returns Positive root of the quadratic, if it exists, and positive is true, otherwise false\n */\nexport const solveQuadratic = (a: number, b: number, c:number, positive:boolean) => {\n    if (a < 0) {\n        throw new Error(String(i18next.t('calculate.quadraticImproperError')))\n    }\n    const determinant = Math.pow(b, 2) - 4 * a * c\n    if (determinant < 0) {\n        throw new Error(String(i18next.t('calculate.quadraticDeterminantError')))\n    }\n\n    if (determinant === 0) {\n        return -b / (2 * a)\n    }\n    const numeratorPos = -b + Math.sqrt(Math.pow(b, 2) - 4 * a * c)\n    const numeratorNeg = -b - Math.sqrt(Math.pow(b, 2) - 4 * a * c)\n\n    if (positive) {\n        return numeratorPos / (2 * a)\n    } else {\n        return numeratorNeg / (2 * a)\n    }\n}\n\n/**\n *\n * @param initialLevel\n * @param base\n * @param amountToSpend\n */\nexport const calculateCubicSumData = (initialLevel: number, baseCost: number,\n    amountToSpend: number, maxLevel: number) => {\n    if (initialLevel >= maxLevel) {\n        return {\n            levelCanBuy: maxLevel,\n            cost: 0\n        }\n    }\n    const alreadySpent = baseCost * calculateSummationCubic(initialLevel);\n    const totalToSpend = alreadySpent + amountToSpend\n\n    // Solves (n(n+1)/2)^2 * baseCost = totalToSpend\n    /* Create a det = Sqrt(totalToSpend / baseCost)\n    *  Simplification gives n * (n+1) = 2 * det\n    *  We can rewrite as n^2 + n - 2 * det = 0 and solve for n.\n    */\n    if (totalToSpend < 0) {\n        throw new Error(String(i18next.t('calculate.cubicSumNegativeError')))\n    }\n\n    const determinantRoot = Math.pow(totalToSpend / baseCost, 0.5) // Assume nonnegative!\n    const solution = solveQuadratic(1, 1, -2 * determinantRoot, true)\n\n    const levelToBuy = Math.max(Math.min(maxLevel, Math.floor(solution)), initialLevel)\n    const realCost = (levelToBuy === initialLevel)? baseCost * Math.pow(initialLevel + 1, 3) :\n        baseCost * calculateSummationCubic(levelToBuy) - alreadySpent;\n\n    return {\n        levelCanBuy: levelToBuy,\n        cost: realCost\n    }\n}\n\n// IDEA: Rework this shit to be friendly for Stats for Nerds\n/* May 25, 2021 - Platonic\n    Reorganize this function to make sense, because right now it aint\n    What I did was use the separation of cube gain method on other cube types, and made some methods their\n    own function (specifically: calc of effective score and other global multipliers) to make it easy.\n*/\n\nexport const computeAscensionScoreBonusMultiplier = () => {\n    let multiplier = 1;\n    multiplier *= G['challenge15Rewards'].score\n    multiplier *= G['platonicBonusMultiplier'][6]\n\n    if (player.cubeUpgrades[21] > 0) {\n        multiplier *= (1 + 0.05 * player.cubeUpgrades[21]);\n    }\n    if (player.cubeUpgrades[31] > 0) {\n        multiplier *= (1 + 0.05 * player.cubeUpgrades[31])\n    }\n    if (player.cubeUpgrades[41] > 0) {\n        multiplier *= (1 + 0.05 * player.cubeUpgrades[41])\n    }\n    if (player.achievements[267] > 0) {\n        multiplier *= (1 + Math.min(1, 1/100000 * Decimal.log(player.ascendShards.add(1), 10)));\n    }\n    if (player.achievements[259] > 0) {\n        multiplier *= Math.max(1, Math.pow(1.01, Math.log2(player.hepteractCrafts.abyss.CAP)));\n    }\n    if (G['isEvent']) {\n        multiplier *= 1 + calculateEventBuff('Ascension Score');\n    }\n\n    return multiplier\n}\n\nexport const calculateAscensionScore = () => {\n    let baseScore = 0;\n    let corruptionMultiplier = 1;\n    let effectiveScore = 0;\n\n    let bonusLevel = player.singularityUpgrades.corruptionFifteen.getEffect().bonus ? 1 : 0;\n    bonusLevel += +player.singularityChallenges.oneChallengeCap.rewards.freeCorruptionLevel\n    // Init Arrays with challenge values :)\n    const challengeScoreArrays1 = [0, 8, 10, 12, 15, 20, 60, 80, 120, 180, 300];\n    const challengeScoreArrays2 = [0, 10, 12, 15, 20, 30, 80, 120, 180, 300, 450];\n    const challengeScoreArrays3 = [0, 20, 30, 50, 100, 200, 250, 300, 400, 500, 750];\n    const challengeScoreArrays4 = [0, 10000, 10000, 10000, 10000, 10000, 2000, 3000, 4000, 5000, 7500]\n\n    challengeScoreArrays1[1] += player.cubeUpgrades[56]\n    challengeScoreArrays1[2] += player.cubeUpgrades[56]\n    challengeScoreArrays1[3] += player.cubeUpgrades[56]\n\n    // Iterate challenges 1 through 10 and award base score according to the array values\n    // Transcend Challenge: First Threshold at 75 completions, second at 750\n    // Reincarnation Challenge: First at 25, second at 60. It probably should be higher but Platonic is a dumb dumb\n    for (let i = 1; i <= 10; i++) {\n        baseScore += challengeScoreArrays1[i] * player.highestchallengecompletions[i]\n        if (i <= 5 && player.highestchallengecompletions[i] >= 75) {\n            baseScore += challengeScoreArrays2[i] * (player.highestchallengecompletions[i] - 75)\n            if (player.highestchallengecompletions[i] >= 750) {\n                baseScore += challengeScoreArrays3[i] * (player.highestchallengecompletions[i] - 750)\n            }\n            if (player.highestchallengecompletions[i] >= 9000) {\n                baseScore += challengeScoreArrays4[i] * (player.highestchallengecompletions[i] - 9000)\n            }\n        }\n        if (i <= 10 && i > 5 && player.highestchallengecompletions[i] >= 25) {\n            baseScore += challengeScoreArrays2[i] * (player.highestchallengecompletions[i] - 25)\n            if (player.highestchallengecompletions[i] >= 60) {\n                baseScore += challengeScoreArrays3[i] * (player.highestchallengecompletions[i] - 60)\n            }\n        }\n    }\n\n    // Calculation of Challenge 10 Exponent (It gives a constant multiplier per completion)\n    // 1.03 +\n    // 0.005 from Cube 3x9 +\n    // 0.0025 from Platonic ALPHA (Plat 1x5)\n    // 0.005 from Platonic BETA (Plat 2x5)\n    // Max: 1.0425\n    baseScore *= Math.pow(1.03 + 0.005 * player.cubeUpgrades[39] + 0.0025 * (player.platonicUpgrades[5] + player.platonicUpgrades[10]), player.highestchallengecompletions[10]);\n    // Corruption Multiplier is the product of all Corruption Score multipliers based on used corruptions\n    let bonusVal = player.singularityUpgrades.advancedPack.getEffect().bonus ? 0.33: 0;\n    bonusVal += +player.singularityChallenges.oneChallengeCap.rewards.corrScoreIncrease\n    for (let i = 2; i < 10; i++) {\n        const exponent = ((i === 2) && player.usedCorruptions[i] >= 10) ? 1 + 2 * Math.min(1, player.platonicUpgrades[17]) + 0.04 * player.platonicUpgrades[17] : 1;\n        corruptionMultiplier *= (Math.pow(G['corruptionPointMultipliers'][player.usedCorruptions[i] + bonusLevel], exponent) + bonusVal);\n\n        if (player.usedCorruptions[i] >= 14 && player.singularityUpgrades.masterPack.getEffect().bonus) {\n            corruptionMultiplier *= 1.1\n        }\n    }\n\n    const bonusMultiplier = computeAscensionScoreBonusMultiplier();\n\n    effectiveScore = baseScore * corruptionMultiplier * bonusMultiplier\n    if (effectiveScore > 1e23) {\n        effectiveScore = Math.pow(effectiveScore, 0.5) * Math.pow(1e23, 0.5);\n    }\n\n    player.singularityUpgrades.expertPack.getEffect().bonus ? effectiveScore *= 1.5 : effectiveScore *= 1;\n\n    return {\n        baseScore: baseScore,\n        corruptionMultiplier: corruptionMultiplier,\n        bonusMultiplier: bonusMultiplier,\n        effectiveScore: effectiveScore\n    }\n}\n\nexport const CalcCorruptionStuff = () => {\n    let cubeBank = 0;\n    let challengeModifier = 1;\n    const scores = calculateAscensionScore();\n\n    const baseScore = scores.baseScore;\n    const corruptionMultiplier = scores.corruptionMultiplier;\n    const bonusMultiplier = scores.bonusMultiplier;\n    const effectiveScore = scores.effectiveScore;\n\n    for (let i = 1; i <= 10; i++) {\n        challengeModifier = (i >= 6) ? 2 : 1;\n        cubeBank += challengeModifier * player.highestchallengecompletions[i]\n    }\n\n    const oneMindModifier = (player.singularityUpgrades.oneMind.getEffect().bonus) ? calculateAscensionAcceleration() / 10 : 1\n\n    // Calculation of Cubes :)\n    let cubeGain = cubeBank;\n    cubeGain *= calculateCubeMultiplier(effectiveScore).mult;\n    cubeGain *= oneMindModifier\n\n    const bonusCubeExponent = (player.singularityUpgrades.platonicTau.getEffect().bonus) ? 1.01 : 1\n    cubeGain = Math.pow(cubeGain, bonusCubeExponent)\n\n    // Calculation of Tesseracts :))\n    let tesseractGain = 1;\n    if (effectiveScore >= 100000) {\n        tesseractGain += 0.5\n    }\n    tesseractGain *= calculateTesseractMultiplier(effectiveScore).mult;\n    tesseractGain *= oneMindModifier\n\n    // Calculation of Hypercubes :)))\n    let hypercubeGain = (effectiveScore >= 1e9) ? 1 : 0;\n    hypercubeGain *= calculateHypercubeMultiplier(effectiveScore).mult;\n    hypercubeGain *= oneMindModifier\n\n    // Calculation of Platonic Cubes :))))\n    let platonicGain = (effectiveScore >= 2.666e12) ? 1 : 0;\n    platonicGain *= calculatePlatonicMultiplier(effectiveScore).mult;\n    platonicGain *= oneMindModifier\n\n    // Calculation of Hepteracts :)))))\n    let hepteractGain = (G['challenge15Rewards']['hepteractUnlocked'] && effectiveScore >= 1.666e17 && player.achievements[255] > 0) ? 1 : 0;\n    hepteractGain *= calculateHepteractMultiplier(effectiveScore).mult\n    hepteractGain *= oneMindModifier\n\n    return [\n        cubeBank,\n        Math.floor(baseScore),\n        corruptionMultiplier,\n        Math.floor(effectiveScore),\n        Math.floor(cubeGain),\n        Math.max(player.singularityCount, Math.floor(tesseractGain)),\n        Math.floor(hypercubeGain),\n        Math.floor(platonicGain),\n        Math.floor(hepteractGain),\n        bonusMultiplier\n    ]\n}\n\nexport const calcAscensionCount = () => {\n    let ascCount = 1;\n\n    if (player.singularityChallenges.limitedAscensions.enabled) {\n        return ascCount\n    }\n\n    if (player.challengecompletions[10] > 0 && player.achievements[197] === 1) {\n        const {effectiveScore} = calculateAscensionScore();\n\n        if (player.ascensionCounter >= 10) {\n            if (player.achievements[188] > 0) {\n                ascCount += 99;\n            }\n\n            ascCount *= 1 + (player.ascensionCounter / 10 - 1) * 0.2\n                 * (player.achievements[189] + player.achievements[202] + player.achievements[209] + player.achievements[216] + player.achievements[223]);\n        }\n\n        ascCount *= player.achievements[187] && Math.floor(effectiveScore) > 1e8 ? (Math.log10(Math.floor(effectiveScore) + 1) - 1) : 1;\n        ascCount *= G['challenge15Rewards'].ascensions;\n        ascCount *= (player.achievements[260] > 0 ? 1.1 : 1);\n        ascCount *= (player.achievements[261] > 0 ? 1.1 : 1);\n        ascCount *= (player.platonicUpgrades[15] > 0 ? 2 : 1);\n        ascCount *= (1 + 0.02 * player.platonicUpgrades[16]);\n        ascCount *= (1 + 0.02 * player.platonicUpgrades[16] * Math.min(1, player.overfluxPowder / 100000));\n        ascCount *= (1 + player.singularityCount / 10);\n        ascCount *= +player.singularityUpgrades.ascensions.getEffect().bonus\n        ascCount *= +player.octeractUpgrades.octeractAscensions.getEffect().bonus\n        ascCount *= +player.octeractUpgrades.octeractAscensions2.getEffect().bonus\n        ascCount *= (player.singularityUpgrades.oneMind.getEffect().bonus) ? calculateAscensionAcceleration() / 10 : 1\n    }\n\n    return Math.floor(ascCount);\n};\n\n/**\n * Calculates the product of all Powder bonuses.\n * @returns The amount of Powder gained per Expired Orb on day reset\n */\nexport const calculatePowderConversion = () => {\n    const arr = [\n        1/100, // base\n        G['challenge15Rewards'].powder, // Challenge 15: Powder Bonus\n        (1 + player.shopUpgrades.powderEX / 50), // powderEX shop upgrade, 2% per level max 20%\n        (1 + player.achievements[256] / 20), // Achievement 256, 5%\n        (1 + player.achievements[257] / 20), // Achievement 257, 5%\n        1 + 0.01 * player.platonicUpgrades[16], // Platonic Upgrade 4x1\n        1 + calculateEventBuff('Powder Conversion') // Event\n    ]\n\n    return {\n        list: arr,\n        mult: productContents(arr)\n    }\n}\n\nexport const calculateCubeQuarkMultiplier = () => {\n    return (calculateSigmoid(2, Math.pow(player.overfluxOrbs, 0.5), 40) +\n           calculateSigmoid(1.5, Math.pow(player.overfluxOrbs, 0.5), 160) +\n           calculateSigmoid(1.5, Math.pow(player.overfluxOrbs, 0.5), 640) +\n           calculateSigmoid(1.15, +(player.highestSingularityCount >= 1) * Math.pow(player.overfluxOrbs, 0.45), 2560) +\n           calculateSigmoid(1.15, +(player.highestSingularityCount >= 2) * Math.pow(player.overfluxOrbs, 0.4), 10000) +\n           calculateSigmoid(1.25, +(player.highestSingularityCount >= 5) * Math.pow(player.overfluxOrbs, 0.35), 40000) +\n           calculateSigmoid(1.25, +(player.highestSingularityCount >= 10) * Math.pow(player.overfluxOrbs, 0.32), 160000) +\n           calculateSigmoid(1.35, +(player.highestSingularityCount >= 15) * Math.pow(player.overfluxOrbs, 0.27), 640000) +\n           calculateSigmoid(1.45, +(player.highestSingularityCount >= 20) * Math.pow(player.overfluxOrbs, 0.24), 2e6) +\n           calculateSigmoid(1.55, +(player.highestSingularityCount >= 25) * Math.pow(player.overfluxOrbs, 0.21), 1e7) +\n           calculateSigmoid(1.85, +(player.highestSingularityCount >= 30) * Math.pow(player.overfluxOrbs, 0.18), 4e7) +\n           calculateSigmoid(3, +(player.highestSingularityCount >= 35) * Math.pow(player.overfluxOrbs, 0.15), 1e8) -\n           11) * (1 + 1/500 * player.shopUpgrades.cubeToQuarkAll) *\n           (player.autoWarpCheck ? 1 + player.dailyPowderResetUses : 1);\n}\n\nexport const calculateCubeMultFromPowder = () => {\n    return (player.overfluxPowder > 10000) ? (1 + 1/16 * Math.pow(Math.log10(player.overfluxPowder), 2)) : (1 + 1/10000 * player.overfluxPowder)\n}\n\nexport const calculateQuarkMultFromPowder = () => {\n    return (player.overfluxPowder > 10000) ? (1 + 1/40 * Math.log10(player.overfluxPowder)) : (1 + 1/100000 * player.overfluxPowder);\n}\n\nexport const dailyResetCheck = () => {\n    if (!player.dayCheck) {\n        return;\n    }\n    const now = new Date(getTimePinnedToLoadDate());\n    const day = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const h = now.getHours()\n    const m = now.getMinutes()\n    const s = now.getSeconds()\n    player.dayTimer = (60 * 60 * 24) - (60 * 60 * h) - (60 * m) - s;\n\n    // Daily is not reset even if it is set to a past time.\n    // If the daily is not reset, the data may have been set to a future time.\n    if (day.getTime() - 3600000 > player.dayCheck.getTime()) {\n        player.dayCheck = day;\n\n        forcedDailyReset(true);\n        player.dailyPowderResetUses = 1 + player.shopUpgrades.extraWarp;\n        player.dailyCodeUsed = false;\n\n        DOMCacheGetOrSet('cubeQuarksOpenRequirement').style.display = 'block'\n        if (player.challengecompletions[11] > 0) {\n            DOMCacheGetOrSet('tesseractQuarksOpenRequirement').style.display = 'block'\n        }\n        if (player.challengecompletions[13] > 0) {\n            DOMCacheGetOrSet('hypercubeQuarksOpenRequirement').style.display = 'block'\n        }\n        if (player.challengecompletions[14] > 0) {\n            DOMCacheGetOrSet('platonicCubeQuarksOpenRequirement').style.display = 'block'\n        }\n    }\n}\n\n/**\n * Resets Cube Counts and stuff. NOTE: It is intentional it does not award powder or expire orbs.\n */\nexport const forcedDailyReset = (rewards = false) => {\n    player.cubeQuarkDaily = 0;\n    player.tesseractQuarkDaily = 0;\n    player.hypercubeQuarkDaily = 0;\n    player.platonicCubeQuarkDaily = 0;\n    player.cubeOpenedDaily = 0;\n    player.tesseractOpenedDaily = 0;\n    player.hypercubeOpenedDaily = 0;\n    player.platonicCubeOpenedDaily = 0;\n\n    if (rewards) {\n        player.overfluxPowder += player.overfluxOrbs * calculatePowderConversion().mult;\n        player.overfluxOrbs = G['challenge15Rewards'].freeOrbs;\n    }\n}\n\nexport const calculateEventBuff = (buff: string) => {\n    if (!G['isEvent']) {\n        return 0;\n    }\n    return calculateEventSourceBuff(buff);\n}\n\nexport const derpsmithCornucopiaBonus = () => {\n    let counter = 0\n    const singCounts = [18, 38, 58, 78, 88, 98, 118, 148, 178, 188, 198, 208, 218, 228, 238, 248]\n    for (const sing of singCounts) {\n        if (player.highestSingularityCount >= sing) {\n            counter += 1\n        }\n    }\n\n    return 1 + counter * player.highestSingularityCount / 100\n}\n", "import { player, format, formatTimeShort /*formatTimeShort*/ } from './Synergism';\nimport { Globals as G } from './Variables';\nimport Decimal from 'break_infinity.js';\nimport { CalcCorruptionStuff, calculateAscensionAcceleration, calculateTimeAcceleration } from './Calculate';\nimport { achievementaward, totalachievementpoints } from './Achievements';\nimport { displayRuneInformation } from './Runes';\nimport { autoResearchEnabled } from './Research';\nimport { visualUpdateBuildings, visualUpdateUpgrades, visualUpdateAchievements, visualUpdateRunes, visualUpdateChallenges, visualUpdateResearch, visualUpdateSettings, visualUpdateShop, visualUpdateSingularity, visualUpdateAnts, visualUpdateCubes, visualUpdateCorruptions, visualUpdateEvent } from './UpdateVisuals';\nimport { getMaxChallenges } from './Challenges';\nimport type { OneToFive, ZeroToFour, ZeroToSeven } from './types/Synergism';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport { updateSingularityPenalties, updateSingularityPerks } from './singularity';\nimport { revealCorruptions } from './Corruptions';\nimport i18next from 'i18next';\n\nexport const revealStuff = () => {\n    const example = document.getElementsByClassName('coinunlock1') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example.length; i++) {\n        example[i].style.display = player.unlocks.coinone ? 'block' : 'none';\n    }\n\n    const example2 = document.getElementsByClassName('coinunlock2') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example2.length; i++) {\n        example2[i].style.display = player.unlocks.cointwo ? 'block' : 'none';\n    }\n\n    const example3 = document.getElementsByClassName('coinunlock3') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example3.length; i++) {\n        example3[i].style.display = player.unlocks.cointhree ? 'block' : 'none';\n    }\n\n    const example4 = document.getElementsByClassName('coinunlock4') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example4.length; i++) {\n        example4[i].style.display = player.unlocks.coinfour ? 'block' : 'none';\n    }\n\n    const example5 = document.getElementsByClassName('prestigeunlock') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example5.length; i++) {\n        const parent = example5[i].parentElement!;\n        if (parent.classList.contains('offlineStats')) {\n            example5[i].style.display = player.unlocks.prestige ? 'flex' : 'none';\n        } else {\n            example5[i].style.display = player.unlocks.prestige ? 'block' : 'none';\n        }\n    }\n\n    const example6 = document.getElementsByClassName('generationunlock') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example6.length; i++) {\n        example6[i].style.display = player.unlocks.generation ? 'block' : 'none';\n    }\n\n    const example7 = document.getElementsByClassName('transcendunlock') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example7.length; i++) {\n        const parent = example7[i].parentElement!;\n        if (parent.classList.contains('offlineStats')) {\n            example7[i].style.display = player.unlocks.transcend ? 'flex' : 'none';\n        } else {\n            example7[i].style.display = player.unlocks.transcend ? 'block' : 'none';\n        }\n    }\n\n    const example8 = document.getElementsByClassName('reincarnationunlock') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example8.length; i++) {\n        const parent = example8[i].parentElement!;\n        if (parent.classList.contains('offlineStats')) {\n            example8[i].style.display = player.unlocks.reincarnate ? 'flex' : 'none';\n        } else {\n            example8[i].style.display = player.unlocks.reincarnate ? 'block' : 'none';\n        }\n    }\n\n    const example9 = document.getElementsByClassName('auto') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example9.length; i++) {\n        example9[i].style.display = 'none'\n    }\n\n    const example10 = document.getElementsByClassName('reinrow1') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example10.length; i++) {\n        player.researches[47] === 1 ? example10[i].style.display = 'block' : example10[i].style.display = 'none'\n    }\n\n    const example11 = document.getElementsByClassName('reinrow2') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example11.length; i++) {\n        player.researches[48] === 1 ? example11[i].style.display = 'block' : example11[i].style.display = 'none'\n    }\n\n    const example12 = document.getElementsByClassName('reinrow3') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example12.length; i++) {\n        player.researches[49] === 1 ? example12[i].style.display = 'block' : example12[i].style.display = 'none'\n    }\n\n    const example13 = document.getElementsByClassName('reinrow4') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example13.length; i++) {\n        player.researches[50] === 1 ? example13[i].style.display = 'block' : example13[i].style.display = 'none'\n    }\n\n    const example14 = document.getElementsByClassName('chal6') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example14.length; i++) {\n        player.achievements[113] === 1 ? example14[i].style.display = 'block' : example14[i].style.display = 'none'\n    }\n\n    const example15 = document.getElementsByClassName('chal7') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example15.length; i++) {\n        player.achievements[120] === 1 ? example15[i].style.display = 'block' : example15[i].style.display = 'none'\n    }\n\n    const example16 = document.getElementsByClassName('chal7x10') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example16.length; i++) {\n        player.achievements[124] === 1 ? example16[i].style.display = 'block' : example16[i].style.display = 'none'\n    }\n\n    const example17 = document.getElementsByClassName('chal8') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example17.length; i++) {\n        const parent = example17[i].parentElement!;\n        if (parent.classList.contains('offlineStats')) {\n            example17[i].style.display = player.achievements[127] === 1 ? 'flex' : 'none';\n        } else {\n            example17[i].style.display = player.achievements[127] === 1 ? 'block' : 'none';\n        }\n    }\n\n    const example18 = document.getElementsByClassName('chal9') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example18.length; i++) {\n        player.achievements[134] === 1 ? example18[i].style.display = 'block' : example18[i].style.display = 'none'\n    }\n\n    const example19 = document.getElementsByClassName('chal9x1') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example19.length; i++) {\n        player.highestchallengecompletions[9] > 0 ? example19[i].style.display = 'block' : example19[i].style.display = 'none'\n    }\n\n    const example20 = document.getElementsByClassName('chal10') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example20.length; i++) {\n        player.achievements[141] === 1 ? example20[i].style.display = 'block' : example20[i].style.display = 'none'\n    }\n\n    const example21 = document.getElementsByClassName('ascendunlock') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example21.length; i++) {\n        const parent = example21[i].parentElement!;\n        if (parent.classList.contains('offlineStats')) {\n            example21[i].style.display = player.ascensionCount > 0 ? 'flex' : 'none';\n        } else {\n            example21[i].style.display = player.ascensionCount > 0 ? 'block' : 'none';\n        }\n    }\n\n    const example22 = document.getElementsByClassName('chal11') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example22.length; i++) {\n        player.challengecompletions[11] > 0 ? example22[i].style.display = 'block' : example22[i].style.display = 'none'\n    }\n\n    const example23 = document.getElementsByClassName('chal12') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example23.length; i++) {\n        player.challengecompletions[12] > 0 ? example23[i].style.display = 'block' : example23[i].style.display = 'none'\n    }\n\n    const example24 = document.getElementsByClassName('chal13') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example24.length; i++) {\n        player.challengecompletions[13] > 0 ? example24[i].style.display = 'block' : example24[i].style.display = 'none'\n    }\n\n    const example25 = document.getElementsByClassName('chal14') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example25.length; i++) {\n        player.challengecompletions[14] > 0 ? example25[i].style.display = 'block' : example25[i].style.display = 'none'\n    }\n\n    const example26 = document.getElementsByClassName('ascendunlockib') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example26.length; i++) {\n        example26[i].style.display = player.ascensionCount > 0 ? 'inline-block' : 'none'\n    }\n\n    const example27 = document.getElementsByClassName('prestigeunlockib') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example27.length; i++) {\n        example27[i].style.display = player.unlocks.prestige ? 'inline-block' : 'none'\n    }\n\n    const example28 = document.getElementsByClassName('research150') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example28.length; i++) {\n        example28[i].style.display = player.researches[150] > 0 ? 'block' : 'none'\n    }\n\n    const example29 = document.getElementsByClassName('cubeUpgrade10') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example29.length; i++) {\n        example29[i].style.display = player.cubeUpgrades[10] > 0 ? 'flex' : 'none'\n    }\n\n    const example30 = document.getElementsByClassName('cubeUpgrade19') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < example30.length; i++) {\n        example30[i].style.display = player.cubeUpgrades[19] > 0 ? 'block' : 'none'\n    }\n\n    const example31 = document.getElementsByClassName('sacrificeAnts') as HTMLCollectionOf<HTMLElement>;\n    for (const ex of Array.from(example31)) { //Galactic Crumb Achievement 5\n        ex.style.display = player.achievements[173] === 1 ? 'block' : 'none';\n    }\n\n    const example32 = document.getElementsByClassName('hepteracts') as HTMLCollectionOf<HTMLElement>;\n    for (const ex of Array.from(example32)) { // Ability to use and gain hepteracts //\n        ex.style.display = player.challenge15Exponent >= 1e15 ? 'block' : 'none';\n    }\n\n    const singularityHTMLs = document.getElementsByClassName('singularity') as HTMLCollectionOf<HTMLElement>;\n    for (const HTML of Array.from(singularityHTMLs)) { // Ability to view singularity features.\n        const count = Number(HTML.getAttribute('count')) || 1;\n        HTML.style.display = player.highestSingularityCount >= count ? 'block' : 'none';\n    }\n\n    const eventHTMLs = document.getElementsByClassName('isEvent') as HTMLCollectionOf<HTMLElement>;\n    for (const HTML of Array.from(eventHTMLs)) {\n        HTML.style.display = G['isEvent'] ? 'block' : 'none';\n    }\n\n    visualUpdateShop();\n\n    const hepts = DOMCacheGetOrSet('corruptionHepteracts');\n    hepts.style.display = (player.achievements[255] > 0) ? 'block' : 'none';\n\n    const cookies1 = document.getElementsByClassName('assortedCookies1') as HTMLCollectionOf<HTMLElement>;\n    const cookies2 = document.getElementsByClassName('assortedCookies2') as HTMLCollectionOf<HTMLElement>;\n    const cookies3 = document.getElementsByClassName('assortedCookies3') as HTMLCollectionOf<HTMLElement>;\n    const cookies4 = document.getElementsByClassName('assortedCookies4') as HTMLCollectionOf<HTMLElement>;\n    for (const HTML of Array.from(cookies1)) {\n        HTML.style.display = player.singularityUpgrades.cookies.getEffect().bonus ? 'block' : 'none';\n    }\n    for (const HTML of Array.from(cookies2)) {\n        HTML.style.display = player.singularityUpgrades.cookies2.getEffect().bonus ? 'block' : 'none';\n    }\n    for (const HTML of Array.from(cookies3)) {\n        HTML.style.display = player.singularityUpgrades.cookies3.getEffect().bonus ? 'block' : 'none';\n    }\n    for (const HTML of Array.from(cookies4)) {\n        HTML.style.display = player.singularityUpgrades.cookies4.getEffect().bonus ? 'block' : 'none';\n    }\n\n    const goldenQuarks3 = document.getElementsByClassName('goldenQuark3Upg') as HTMLCollectionOf<HTMLElement>;\n    for (const HTML of Array.from(goldenQuarks3)) {\n        HTML.style.display = player.singularityUpgrades.goldenQuarks3.getEffect().bonus > 0 ? 'block' : 'none';\n    }\n    if (player.upgrades[89] === 1) {\n        DOMCacheGetOrSet('transcendautotoggle').style.display = 'block';\n        DOMCacheGetOrSet('transcendamount').style.display = 'block';\n        DOMCacheGetOrSet('autotranscend').style.display = 'block';\n    } else {\n        DOMCacheGetOrSet('transcendautotoggle').style.display = 'none';\n        DOMCacheGetOrSet('transcendamount').style.display = 'none';\n        DOMCacheGetOrSet('autotranscend').style.display = 'none';\n    }\n\n    player.achievements[38] === 1 ? //Prestige Diamond Achievement 3\n        (DOMCacheGetOrSet('rune2area').style.display = 'flex', DOMCacheGetOrSet('runeshowpower2').style.display = 'block') :\n        (DOMCacheGetOrSet('rune2area').style.display = 'none', DOMCacheGetOrSet('runeshowpower2').style.display = 'none');\n\n    if (player.achievements[43] === 1) { // Transcend Mythos Achievement 1\n        DOMCacheGetOrSet('prestigeautotoggle').style.display = 'block';\n        DOMCacheGetOrSet('prestigeamount').style.display = 'block';\n        DOMCacheGetOrSet('autoprestige').style.display = 'block';\n    } else {\n        DOMCacheGetOrSet('prestigeautotoggle').style.display = 'none';\n        DOMCacheGetOrSet('prestigeamount').style.display = 'none';\n        DOMCacheGetOrSet('autoprestige').style.display = 'none';\n    }\n\n    player.achievements[44] === 1 ? //Transcend Mythos Achievement 2\n        (DOMCacheGetOrSet('rune3area').style.display = 'flex', DOMCacheGetOrSet('runeshowpower3').style.display = 'block') :\n        (DOMCacheGetOrSet('rune3area').style.display = 'none', DOMCacheGetOrSet('runeshowpower3').style.display = 'none');\n\n    player.achievements[102] === 1 ? //Cost+ Challenge Achievement 4\n        (DOMCacheGetOrSet('rune4area').style.display = 'flex', DOMCacheGetOrSet('runeshowpower4').style.display = 'block') :\n        (DOMCacheGetOrSet('rune4area').style.display = 'none', DOMCacheGetOrSet('runeshowpower4').style.display = 'none');\n\n    player.achievements[119] === 1 ? //Tax+ Challenge Achievement 7\n        DOMCacheGetOrSet('talisman1area').style.display = 'flex' :\n        DOMCacheGetOrSet('talisman1area').style.display = 'none';\n\n    player.achievements[126] === 1 ? //No MA Challenge Achievement 7\n        DOMCacheGetOrSet('talisman2area').style.display = 'flex' :\n        DOMCacheGetOrSet('talisman2area').style.display = 'none';\n\n    player.achievements[133] === 1 ? //Cost++ Challenge Achievement 7\n        DOMCacheGetOrSet('talisman3area').style.display = 'flex' :\n        DOMCacheGetOrSet('talisman3area').style.display = 'none';\n\n    player.achievements[134] === 1 ? //No Runes Challenge Achievement 1\n        (DOMCacheGetOrSet('toggleRuneSubTab2').style.display = 'block', DOMCacheGetOrSet('toggleRuneSubTab3').style.display = 'block') :\n        (DOMCacheGetOrSet('toggleRuneSubTab2').style.display = 'none', DOMCacheGetOrSet('toggleRuneSubTab3').style.display = 'none');\n\n    player.achievements[140] === 1 ? //No Runes Challenge Achievement 7\n        DOMCacheGetOrSet('talisman4area').style.display = 'flex' :\n        DOMCacheGetOrSet('talisman4area').style.display = 'none';\n\n    player.achievements[147] === 1 ? //Sadistic Challenge Achievement 7\n        DOMCacheGetOrSet('talisman5area').style.display = 'flex' :\n        DOMCacheGetOrSet('talisman5area').style.display = 'none';\n\n    player.achievements[173] === 1 ? //Galactic Crumb Achievement 5\n        DOMCacheGetOrSet('sacrificeAnts').style.display = 'block' :\n        DOMCacheGetOrSet('sacrificeAnts').style.display = 'none';\n\n    player.researches[39] > 0 ? //3x9 Research [Crystal Building Power]\n        DOMCacheGetOrSet('reincarnationCrystalInfo').style.display = 'block' :\n        DOMCacheGetOrSet('reincarnationCrystalInfo').style.display = 'none';\n\n    player.researches[40] > 0 ? //3x10 Research [Mythos Shard Building Power]\n        DOMCacheGetOrSet('reincarnationMythosInfo').style.display = 'block' :\n        DOMCacheGetOrSet('reincarnationMythosInfo').style.display = 'none';\n\n    player.researches[46] > 0 ? //5x6 Research [Auto R.]\n        DOMCacheGetOrSet('reincarnateautomation').style.display = 'block' :\n        DOMCacheGetOrSet('reincarnateautomation').style.display = 'none';\n\n    player.researches[82] > 0 ? //2x17 Research [SI Rune Unlock]\n        (DOMCacheGetOrSet('rune5area').style.display = 'flex', DOMCacheGetOrSet('runeshowpower5').style.display = 'block') :\n        (DOMCacheGetOrSet('rune5area').style.display = 'none', DOMCacheGetOrSet('runeshowpower5').style.display = 'none');\n\n    player.researches[124] > 0 ? //5x24 Research [AutoSac]\n        (DOMCacheGetOrSet('antSacrificeButtons').style.display = 'flex', DOMCacheGetOrSet('autoAntSacrifice').style.display = 'block') :\n        (DOMCacheGetOrSet('antSacrificeButtons').style.display = 'none', DOMCacheGetOrSet('autoAntSacrifice').style.display = 'none');\n    player.researches[124] > 0 || player.highestSingularityCount > 0 ? //So you can turn it off before 5x24 Research\n        DOMCacheGetOrSet('toggleAutoSacrificeAnt').style.display = 'block' :\n        DOMCacheGetOrSet('toggleAutoSacrificeAnt').style.display = 'none';\n\n    player.researches[130] > 0 ? //6x5 Research [Talisman Auto Fortify]\n        DOMCacheGetOrSet('toggleautofortify').style.display = 'block' :\n        DOMCacheGetOrSet('toggleautofortify').style.display = 'none';\n\n    player.researches[135] > 0 ? //6x10 Research [Talisman Auto Sac]\n        DOMCacheGetOrSet('toggleautoenhance').style.display = 'block' :\n        DOMCacheGetOrSet('toggleautoenhance').style.display = 'none';\n\n    for (let z = 1; z <= 5; z++) {\n        (player.researches[190] > 0) ? //8x15 Research [Auto Tesseracts]\n            DOMCacheGetOrSet('tesseractAutoToggle' + z).style.display = 'block' :\n            DOMCacheGetOrSet('tesseractAutoToggle' + z).style.display = 'none';\n    }\n    player.researches[190] > 0 ? //8x15 Research [Auto Tesseracts]\n        DOMCacheGetOrSet('tesseractautobuytoggle').style.display = 'block' :\n        DOMCacheGetOrSet('tesseractautobuytoggle').style.display = 'none';\n    player.researches[190] > 0 ? //8x15 Research [Auto Tesseracts]\n        DOMCacheGetOrSet('tesseractautobuymode').style.display = 'block' :\n        DOMCacheGetOrSet('tesseractautobuymode').style.display = 'none';\n    player.researches[190] > 0 ? //8x15 Research [Auto Tesseracts]\n        DOMCacheGetOrSet('tesseractAmount').style.display = 'block' :\n        DOMCacheGetOrSet('tesseractAmount').style.display = 'none';\n    player.researches[190] > 0 ? //8x15 Research [Auto Tesseracts]\n        DOMCacheGetOrSet('autotessbuyeramount').style.display = 'block' :\n        DOMCacheGetOrSet('autotessbuyeramount').style.display = 'none';\n    (player.antUpgrades[11]! > 0 || player.ascensionCount > 0) ? //Ant Talisman Unlock, Mortuus\n        DOMCacheGetOrSet('talisman6area').style.display = 'flex' :\n        DOMCacheGetOrSet('talisman6area').style.display = 'none';\n\n    player.shopUpgrades.offeringAuto > 0 ? //Auto Offering Shop Purchase\n        DOMCacheGetOrSet('toggleautosacrifice').style.display = 'block' :\n        DOMCacheGetOrSet('toggleautosacrifice').style.display = 'none';\n\n    player.cubeUpgrades[51] > 0 && player.highestSingularityCount >= 40 ? //Auto Fragments Buy (After Cx1)\n        DOMCacheGetOrSet('toggleautoBuyFragments').style.display = 'block' :\n        DOMCacheGetOrSet('toggleautoBuyFragments').style.display = 'none';\n\n    player.shopUpgrades.obtainiumAuto > 0 ? //Auto Research Shop Purchase\n        DOMCacheGetOrSet('toggleautoresearch').style.display = 'block' :\n        DOMCacheGetOrSet('toggleautoresearch').style.display = 'none';\n\n    DOMCacheGetOrSet('toggleautoresearchmode').style.display = player.shopUpgrades.obtainiumAuto > 0 && autoResearchEnabled() //Auto Research Shop Purchase Mode\n        ? 'block'\n        : 'none';\n\n    player.shopUpgrades.shopTalisman > 0 ? //Plastic Talisman Shop Purchase\n        DOMCacheGetOrSet('talisman7area').style.display = 'flex' :\n        DOMCacheGetOrSet('talisman7area').style.display = 'none';\n\n    player.cubeUpgrades[8] > 0 ?\n        DOMCacheGetOrSet('reincarnateAutoUpgrade').style.display = 'block' :\n        DOMCacheGetOrSet('reincarnateAutoUpgrade').style.display = 'none';\n\n    player.shopUpgrades.infiniteAscent ?\n        (DOMCacheGetOrSet('rune6area').style.display = 'flex', DOMCacheGetOrSet('runeshowpower6').style.display = 'block') :\n        (DOMCacheGetOrSet('rune6area').style.display = 'none', DOMCacheGetOrSet('runeshowpower6').style.display = 'none');\n\n    player.platonicUpgrades[20] > 0 ?\n        (DOMCacheGetOrSet('rune7area').style.display = 'flex', DOMCacheGetOrSet('runeshowpower7').style.display = 'block') :\n        (DOMCacheGetOrSet('rune7area').style.display = 'none', DOMCacheGetOrSet('runeshowpower7').style.display = 'none') ;\n\n    player.highestSingularityCount > 0 ?\n        (DOMCacheGetOrSet('singularitytab').style.display = 'block'):\n        (DOMCacheGetOrSet('singularitytab').style.display = 'none');\n\n    player.highestSingularityCount > 0 ? //Save Offerings\n        DOMCacheGetOrSet('saveOffToggle').style.display = 'block' :\n        DOMCacheGetOrSet('saveOffToggle').style.display = 'none';\n\n    // Auto Open Cubes toggle\n    if (player.highestSingularityCount >= 35) {\n        DOMCacheGetOrSet('openCubes').style.display = 'block';\n        DOMCacheGetOrSet('cubeOpensInput').style.display = 'block';\n        DOMCacheGetOrSet('openTesseracts').style.display = 'block';\n        DOMCacheGetOrSet('tesseractsOpensInput').style.display = 'block';\n        DOMCacheGetOrSet('openHypercubes').style.display = 'block';\n        DOMCacheGetOrSet('hypercubesOpensInput').style.display = 'block';\n        DOMCacheGetOrSet('openPlatonicCube').style.display = 'block';\n        DOMCacheGetOrSet('platonicCubeOpensInput').style.display = 'block';\n    } else {\n        DOMCacheGetOrSet('openCubes').style.display = 'none';\n        DOMCacheGetOrSet('cubeOpensInput').style.display = 'none';\n        DOMCacheGetOrSet('openTesseracts').style.display = 'none';\n        DOMCacheGetOrSet('tesseractsOpensInput').style.display = 'none';\n        DOMCacheGetOrSet('openHypercubes').style.display = 'none';\n        DOMCacheGetOrSet('hypercubesOpensInput').style.display = 'none';\n        DOMCacheGetOrSet('openPlatonicCube').style.display = 'none';\n        DOMCacheGetOrSet('platonicCubeOpensInput').style.display = 'none';\n    }\n\n    (player.highestSingularityCount >= 50 && player.singularityCount < player.highestSingularityCount) || player.highestSingularityCount >= 150 ? // Auto Cube Upgrades\n        DOMCacheGetOrSet('toggleAutoCubeUpgrades').style.display = 'block' :\n        DOMCacheGetOrSet('toggleAutoCubeUpgrades').style.display = 'none';\n\n    (player.highestSingularityCount >= 100 && player.singularityCount < player.highestSingularityCount) || player.highestSingularityCount >= 200 ? // Auto Platonic Upgrades\n        DOMCacheGetOrSet('toggleAutoPlatonicUpgrades').style.display = 'block' :\n        DOMCacheGetOrSet('toggleAutoPlatonicUpgrades').style.display = 'none';\n\n    // Singularity confirmation toggle pic\n    player.highestSingularityCount > 0 && player.ascensionCount > 0 ?\n        (DOMCacheGetOrSet('settingpic6').style.display = 'block'):\n        (DOMCacheGetOrSet('settingpic6').style.display = 'none');\n\n    // Hepteract Confirmations toggle\n    player.highestSingularityCount > 0 && player.challenge15Exponent >= 1e15 ?\n        (DOMCacheGetOrSet('heptnotificationpic').style.display = 'block'):\n        (DOMCacheGetOrSet('heptnotificationpic').style.display = 'none');\n\n    DOMCacheGetOrSet('warpAuto').style.display = player.shopUpgrades.autoWarp > 0 ? '' : 'none';\n\n    if (player.unlocks.reincarnate || player.highestSingularityCount > 0) {\n        DOMCacheGetOrSet('shoptab').style.display = 'block';\n    }\n\n    const octeractUnlocks = document.getElementsByClassName('octeracts') as HTMLCollectionOf<HTMLElement>;\n    for (const item of Array.from(octeractUnlocks)) { // Stuff that you need octeracts to access\n        item.style.display = player.singularityUpgrades.octeractUnlock.getEffect().bonus ? 'block' : 'none';\n    }\n\n    const singChallengeUnlocks = document.getElementsByClassName('singChallenges') as HTMLCollectionOf<HTMLElement>;\n    for (const item of Array.from(singChallengeUnlocks)) {\n        item.style.display = player.highestSingularityCount >= 25 ? 'block' : 'none';\n    }\n\n    (player.runelevels[6] > 0 || player.highestSingularityCount > 0) ?\n        (DOMCacheGetOrSet('singularitybtn').style.display = 'block') :\n        (DOMCacheGetOrSet('singularitybtn').style.display = 'none');\n\n    player.highestSingularityCount > 0 && player.ascensionCount >= 1 ?\n        (DOMCacheGetOrSet('totalQuarkCountStatisticSing').style.display = 'block') :\n        (DOMCacheGetOrSet('totalQuarkCountStatisticSing').style.display = 'none') ;\n\n\n    DOMCacheGetOrSet('ascensionStats').style.visibility = (player.achievements[197] > 0 || player.highestSingularityCount > 0) ? 'visible' : 'hidden';\n    DOMCacheGetOrSet('ascHyperStats').style.display = player.challengecompletions[13] > 0 ? '' : 'none';\n    DOMCacheGetOrSet('ascPlatonicStats').style.display = player.challengecompletions[14] > 0 ? '' : 'none';\n    DOMCacheGetOrSet('ascHepteractStats').style.display = player.achievements[255] > 0 ? '' : 'none';\n\n    //I'll clean this up later. Note to 2019 Platonic: Fuck you\n    // note to 2019 and 2020 Platonic, you're welcome\n    // note to 2019 and 2020 and 2021 Platonic, please never base anything on the order of elements ever again\n\n    // These are currently listed in the order they were in when this was converted to use element IDs instead of\n    // the ordering of the HTML elements with the class \"auto\".\n    const automationUnlocks: Record<string, boolean> = {\n        'toggle1': player.upgrades[81] === 1, // Autobuyer - Coin Buildings - Tier 1 (Worker)\n        'toggle2': player.upgrades[82] === 1, // Autobuyer - Coin Buildings - Tier 2 (Investments)\n        'toggle3': player.upgrades[83] === 1, // Autobuyer - Coin Buildings - Tier 3 (Printers)\n        'toggle4': player.upgrades[84] === 1, // Autobuyer - Coin Buildings - Tier 4 (Coin Mints)\n        'toggle5': player.upgrades[85] === 1, // Autobuyer - Coin Buildings - Tier 5 (Alchemies)\n        'toggle6': player.upgrades[86] === 1, // Autobuyer - Coin Buildings - Accelerator\n        'toggle7': player.upgrades[87] === 1, // Autobuyer - Coin Buildings - Multiplier\n        'toggle8': player.upgrades[88] === 1, // Autobuyer - Coin Buildings - Accelerator Boost\n        'toggle10': player.achievements[78] === 1, // Autobuyer - Diamond Buildings - Tier 1 (Refineries)\n        'toggle11': player.achievements[85] === 1, // Autobuyer - Diamond Buildings - Tier 2 (Coal Plants)\n        'toggle12': player.achievements[92] === 1, // Autobuyer - Diamond Buildings - Tier 3 (Coal Rigs)\n        'toggle13': player.achievements[99] === 1, // Autobuyer - Diamond Buildings - Tier 4 (Pickaxes)\n        'toggle14': player.achievements[106] === 1, // Autobuyer - Diamond Buildings - Tier 5 (Pandora's Boxes)\n        'toggle15': player.achievements[43] === 1, // Feature - Diamond Buildings - Auto Prestige\n        'toggle16': player.upgrades[94] === 1, // Autobuyer - Mythos Buildings - Tier 1 (Augments)\n        'toggle17': player.upgrades[95] === 1, // Autobuyer - Mythos Buildings - Tier 2 (Enchantments)\n        'toggle18': player.upgrades[96] === 1, // Autobuyer - Mythos Buildings - Tier 3 (Wizards)\n        'toggle19': player.upgrades[97] === 1, // Autobuyer - Mythos Buildings - Tier 4 (Oracles)\n        'toggle20': player.upgrades[98] === 1, // Autobuyer - Mythos Buildings - Tier 5 (Grandmasters)\n        'toggle21': player.upgrades[89] === 1, // Feature - Mythos Buildings - Auto Transcend\n        'toggle22': player.cubeUpgrades[7] === 1, // Autobuyer - Particle Buildings - Tier 1 (Protons)\n        'toggle23': player.cubeUpgrades[7] === 1, // Autobuyer - Particle Buildings - Tier 2 (Elements)\n        'toggle24': player.cubeUpgrades[7] === 1, // Autobuyer - Particle Buildings - Tier 3 (Pulsars)\n        'toggle25': player.cubeUpgrades[7] === 1, // Autobuyer - Particle Buildings - Tier 4 (Quasars)\n        'toggle26': player.cubeUpgrades[7] === 1, // Autobuyer - Particle Buildings - Tier 5 (Galactic Nuclei)\n        'toggle27': player.researches[46] === 1, // Feature - Particle Buildings - Auto Reincarnate\n        'coinAutoUpgrade': player.upgrades[91] === 1, // Feature - Upgrades - Auto Buy Coin Upgrades\n        'prestigeAutoUpgrade': player.upgrades[92] === 1, // Feature - Upgrades - Auto Buy Diamond Upgrades\n        'transcendAutoUpgrade': player.upgrades[99] === 1, // Feature - Upgrades - Auto Buy Mythos Upgrades\n        'generatorsAutoUpgrade': player.upgrades[90] === 1, // Feature - Upgrades - Auto Buy Generator Upgrades\n        'toggle9': player.unlocks.prestige, // Feature - Upgrades - Hover to Buy\n        'toggle28': player.prestigeCount > 0.5 || player.reincarnationCount > 0.5, // Settings - Confirmations - Prestige\n        'toggle29': player.transcendCount > 0.5 || player.reincarnationCount > 0.5,  // Settings - Confirmations - Transcension\n        'toggle30': player.reincarnationCount > 0.5, // Settings - Confirmations - Reincarnation\n        'toggle31': player.ascensionCount > 0, // Settings - Confirmations - Ascension and Asc. Challenge\n        'toggle32': player.achievements[173] > 0, // Settings - Confirmations - Ant Sacrifice\n        'toggle33': player.highestSingularityCount > 0 && player.ascensionCount > 0, // Settings - Confirmations - Singularity\n        'toggle34': player.unlocks.coinfour, // Achievements - Notifications\n        'toggle35': player.challenge15Exponent >= 1e15 && player.highestSingularityCount > 0, // Hepteracts - Notifications\n        'toggle36': player.highestSingularityCount >= 15, // Auto Blessings\n        'toggle37': player.highestSingularityCount >= 15, // Auto Spirits\n        'toggle38': player.highestSingularityCount > 0, // Researchs Hover to Buy\n        'toggle39': player.unlocks.prestige, // Hotkeys\n        'toggle40': player.unlocks.prestige, // Number Hotkeys\n        'toggle41': player.challengecompletions[11] > 0, // Loadouts Notifx\n        'toggle42': player.highestSingularityCount >= 6, // Potion Autogenerator for Offering Potions\n        'toggle43': player.highestSingularityCount >= 6 // Potion Autogenerator for Obtainium Potions\n    }\n\n    Object.keys(automationUnlocks).forEach(key => {\n        const el = DOMCacheGetOrSet(key) as HTMLElement | null;\n        if (el === null) {\n            // eslint-disable-next-line no-console\n            console.error(`Automation unlock failed to find element with ID '${key}'.`);\n            return;\n        }\n\n        el.style.display = automationUnlocks[key] ? 'block' : 'none';\n    });\n\n    revealCorruptions();\n}\n\nexport const hideStuff = () => {\n\n    DOMCacheGetOrSet('buildings').style.display = 'none'\n    DOMCacheGetOrSet('buildingstab').style.backgroundColor = '';\n    DOMCacheGetOrSet('upgrades').style.display = 'none'\n    DOMCacheGetOrSet('upgradestab').style.backgroundColor = ''\n    DOMCacheGetOrSet('settings').style.display = 'none'\n\n    DOMCacheGetOrSet('statistics').style.display = 'none'\n    DOMCacheGetOrSet('achievementstab').style.backgroundColor = ''\n    DOMCacheGetOrSet('achievementstab').style.color = 'white'\n    DOMCacheGetOrSet('runes').style.display = 'none'\n    DOMCacheGetOrSet('runestab').style.backgroundColor = ''\n    DOMCacheGetOrSet('challenges').style.display = 'none'\n    DOMCacheGetOrSet('challengetab').style.backgroundColor = ''\n    DOMCacheGetOrSet('research').style.display = 'none'\n    DOMCacheGetOrSet('researchtab').style.backgroundColor = ''\n    DOMCacheGetOrSet('shop').style.display = 'none'\n    DOMCacheGetOrSet('shoptab').style.backgroundColor = ''\n    DOMCacheGetOrSet('ants').style.display = 'none'\n    DOMCacheGetOrSet('anttab').style.backgroundColor = ''\n    DOMCacheGetOrSet('cubetab').style.backgroundColor = ''\n    DOMCacheGetOrSet('traitstab').style.backgroundColor = ''\n    DOMCacheGetOrSet('cubes').style.display = 'none'\n    DOMCacheGetOrSet('traits').style.display = 'none'\n    DOMCacheGetOrSet('singularity').style.display = 'none'\n    DOMCacheGetOrSet('singularitytab').style.backgroundColor = ''\n    DOMCacheGetOrSet('event').style.display = 'none'\n    DOMCacheGetOrSet('eventTab').style.backgroundColor = ''\n\n    const tab = DOMCacheGetOrSet('settingstab')!;\n    tab.style.backgroundColor = '';\n    tab.style.borderColor = 'white';\n\n    if (G['currentTab'] === 'buildings') {\n        DOMCacheGetOrSet('buildingstab').style.backgroundColor = 'orange';\n        DOMCacheGetOrSet('buildings').style.display = 'block'\n    }\n    if (G['currentTab'] === 'upgrades') {\n        DOMCacheGetOrSet('upgrades').style.display = 'block'\n        DOMCacheGetOrSet('upgradestab').style.backgroundColor = 'orange'\n        DOMCacheGetOrSet('upgradedescription').textContent = i18next.t('upgrades.hoverOverUpgrade')\n    }\n    if (G['currentTab'] === 'settings') {\n        DOMCacheGetOrSet('settings').style.display = 'block'\n        const tab = DOMCacheGetOrSet('settingstab')!;\n        tab.style.backgroundColor = 'orange';\n        tab.style.borderColor = 'gold';\n    }\n    if (G['currentTab'] === 'achievements') {\n        DOMCacheGetOrSet('statistics').style.display = 'block'\n        DOMCacheGetOrSet('achievementstab').style.backgroundColor = 'white'\n        DOMCacheGetOrSet('achievementstab').style.color = 'black'\n        DOMCacheGetOrSet('achievementprogress').textContent = i18next.t('achievements.totalPoints', {\n            x: format(player.achievementPoints),\n            y: format(totalachievementpoints),\n            z: (100 * player.achievementPoints / totalachievementpoints).toPrecision(4)\n        })\n    } else if (G['currentTab'] === 'runes') {\n        DOMCacheGetOrSet('runes').style.display = 'block'\n        DOMCacheGetOrSet('runestab').style.backgroundColor = 'blue'\n        DOMCacheGetOrSet('runeshowlevelup').textContent = i18next.t('runes.hover')\n        DOMCacheGetOrSet('researchrunebonus').textContent = i18next.t('runes.thanksResearches', {\n            percent: format(100 * G['effectiveLevelMult'] - 100, 4, true)\n        })\n        displayRuneInformation(1, false)\n        displayRuneInformation(2, false)\n        displayRuneInformation(3, false)\n        displayRuneInformation(4, false)\n        displayRuneInformation(5, false)\n        displayRuneInformation(6, false)\n        displayRuneInformation(7, false)\n    }\n    if (G['currentTab'] === 'challenges') {\n        DOMCacheGetOrSet('challenges').style.display = 'block';\n        DOMCacheGetOrSet('challengetab').style.backgroundColor = 'purple';\n    }\n    if (G['currentTab'] === 'researches') {\n        DOMCacheGetOrSet('research').style.display = 'block';\n        DOMCacheGetOrSet('researchtab').style.backgroundColor = 'green';\n    }\n    if (G['currentTab'] === 'shop') {\n        DOMCacheGetOrSet('shop').style.display = 'block';\n        DOMCacheGetOrSet('shoptab').style.backgroundColor = 'limegreen';\n    }\n    if (G['currentTab'] === 'ants') {\n        DOMCacheGetOrSet('ants').style.display = 'block';\n        DOMCacheGetOrSet('anttab').style.backgroundColor = 'brown';\n    }\n    if (G['currentTab'] === 'cubes') {\n        DOMCacheGetOrSet('cubes').style.display = 'flex';\n        DOMCacheGetOrSet('cubetab').style.backgroundColor = 'white'\n    }\n    if (G['currentTab'] === 'traits') {\n        DOMCacheGetOrSet('traits').style.display = 'flex';\n        DOMCacheGetOrSet('traitstab').style.backgroundColor = 'white';\n    }\n\n    if (G['currentTab'] === 'singularity') {\n        DOMCacheGetOrSet('singularity').style.display = 'block';\n        DOMCacheGetOrSet('singularitytab').style.backgroundColor = 'lightgoldenrodyellow'\n        updateSingularityPenalties();\n        updateSingularityPerks();\n    }\n\n    if (G['currentTab'] === 'event') {\n        DOMCacheGetOrSet('event').style.display = 'block'\n        DOMCacheGetOrSet('eventTab').style.backgroundColor = 'black';\n    }\n}\n\nconst visualTab: Record<typeof G['currentTab'], () => void> = {\n    buildings: visualUpdateBuildings,\n    upgrades: visualUpdateUpgrades,\n    achievements: visualUpdateAchievements,\n    runes: visualUpdateRunes,\n    challenges: visualUpdateChallenges,\n    researches: visualUpdateResearch,\n    settings: visualUpdateSettings,\n    shop: visualUpdateShop,\n    ants: visualUpdateAnts,\n    cubes: visualUpdateCubes,\n    traits: visualUpdateCorruptions,\n    singularity: visualUpdateSingularity,\n    event: visualUpdateEvent\n};\n\nexport const htmlInserts = () => {\n    // ALWAYS Update these, for they are the most important resources\n    const playerRequirements = ['coins', 'runeshards', 'prestigePoints', 'transcendPoints', 'transcendShards', 'reincarnationPoints', 'worlds', 'researchPoints'] as const;\n    const domRequirements = ['coinDisplay', 'offeringDisplay', 'diamondDisplay', 'mythosDisplay', 'mythosshardDisplay', 'particlesDisplay', 'quarkDisplay', 'obtainiumDisplay'] as const;\n    for (let i = 0; i < playerRequirements.length; i++) {\n        const text = format(player[`${playerRequirements[i]}` as const]);\n        const dom = DOMCacheGetOrSet(`${domRequirements[i]}` as const);\n        if (dom.textContent !== text) {\n            dom.textContent = text;\n        }\n    }\n\n    updateAscensionStats()\n\n    visualTab[G['currentTab']]();\n}\n\n// TODO(not @KhafraDev): cache the elements and stop getting them every time?\nexport const buttoncolorchange = () => {\n\n    DOMCacheGetOrSet('prestigebtn').style.backgroundColor = player.toggles[15] && player.achievements[43] === 1 ? 'green' : '';\n\n    DOMCacheGetOrSet('transcendbtn').style.backgroundColor = player.toggles[21] && player.upgrades[89] > 0.5 && (player.currentChallenge.transcension === 0) ? 'green' : '';\n\n    DOMCacheGetOrSet('reincarnatebtn').style.backgroundColor = player.toggles[27] && player.researches[46] > 0.5 && (player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0) ? 'green' : '';\n\n    DOMCacheGetOrSet('acceleratorboostbtn').style.backgroundColor = player.toggles[8] && player.upgrades[88] > 0.5 ? 'green' : '';\n\n    DOMCacheGetOrSet('challengebtn').style.backgroundColor = player.currentChallenge.transcension === 0 ? '' : 'purple';\n\n    DOMCacheGetOrSet('reincarnatechallengebtn').style.backgroundColor = player.currentChallenge.reincarnation === 0 ? '' : 'purple';\n\n    DOMCacheGetOrSet('ascendChallengeBtn').style.backgroundColor = player.currentChallenge.ascension === 0 ? '' : 'purple';\n\n    DOMCacheGetOrSet('ascendbtn').style.backgroundColor = player.autoAscend && player.challengecompletions[11] > 0 && player.cubeUpgrades[10] > 0 ? 'green' : '';\n\n    DOMCacheGetOrSet('singularitybtn').style.filter = player.runelevels[6] > 0 ? '' : 'contrast(1.25) sepia(1) grayscale(0.25)';\n\n    // Notify new players the reset\n    if (player.toggles[33] === true && player.highestSingularityCount === 0) {\n        if (player.toggles[28] === true && player.unlocks.prestige === false) {\n            DOMCacheGetOrSet('prestigebtn').style.boxShadow = player.coinsThisPrestige.gte(1e16) ? 'cyan 0px 0px 10px 2px' : '';\n        }\n        if (player.toggles[29] === true && player.unlocks.transcend === false) {\n            DOMCacheGetOrSet('transcendbtn').style.boxShadow = player.coinsThisTranscension.gte(1e100) ? 'plum 0px 0px 10px 2px' : '';\n        }\n        if (player.toggles[30] === true && player.unlocks.reincarnate === false) {\n            DOMCacheGetOrSet('reincarnatebtn').style.boxShadow = player.transcendShards.gte(1e300) ? 'greenyellow 0px 0px 10px 2px' : '';\n        }\n        if (player.toggles[31] === true && player.ascensionCount === 0) {\n            DOMCacheGetOrSet('ascendbtn').style.boxShadow = player.challengecompletions[10] > 0 ? 'orange 0px 0px 10px 2px' : '';\n        }\n    }\n\n    if (G['currentTab'] === 'buildings' && G['buildingSubTab'] === 'coin') {\n        const a = DOMCacheGetOrSet('buycoin1');\n        const b = DOMCacheGetOrSet('buycoin2');\n        const c = DOMCacheGetOrSet('buycoin3');\n        const d = DOMCacheGetOrSet('buycoin4');\n        const e = DOMCacheGetOrSet('buycoin5');\n        const f = DOMCacheGetOrSet('buyaccelerator');\n        const g = DOMCacheGetOrSet('buymultiplier');\n        const h = DOMCacheGetOrSet('buyacceleratorboost');\n        ((!player.toggles[1] || player.upgrades[81] === 0) && player.coins.gte(player.firstCostCoin))\n            ? a.classList.add('buildingPurchaseBtnAvailable')\n            : a.classList.remove('buildingPurchaseBtnAvailable');\n        ((!player.toggles[2] || player.upgrades[82] === 0) && player.coins.gte(player.secondCostCoin))\n            ? b.classList.add('buildingPurchaseBtnAvailable')\n            : b.classList.remove('buildingPurchaseBtnAvailable');\n        ((!player.toggles[3] || player.upgrades[83] === 0) && player.coins.gte(player.thirdCostCoin))\n            ? c.classList.add('buildingPurchaseBtnAvailable')\n            : c.classList.remove('buildingPurchaseBtnAvailable');\n        ((!player.toggles[4] || player.upgrades[84] === 0) && player.coins.gte(player.fourthCostCoin))\n            ? d.classList.add('buildingPurchaseBtnAvailable')\n            : d.classList.remove('buildingPurchaseBtnAvailable');\n        ((!player.toggles[5] || player.upgrades[85] === 0) && player.coins.gte(player.fifthCostCoin))\n            ? e.classList.add('buildingPurchaseBtnAvailable')\n            : e.classList.remove('buildingPurchaseBtnAvailable');\n        ((!player.toggles[6] || player.upgrades[86] === 0) && player.coins.gte(player.acceleratorCost))\n            ? f.classList.add('buildingPurchaseBtnAvailable')\n            : f.classList.remove('buildingPurchaseBtnAvailable');\n        ((!player.toggles[7] || player.upgrades[87] === 0) && player.coins.gte(player.multiplierCost))\n            ? g.classList.add('buildingPurchaseBtnAvailable')\n            : g.classList.remove('buildingPurchaseBtnAvailable');\n        ((!player.toggles[8] || player.upgrades[88] === 0) && player.prestigePoints.gte(player.acceleratorBoostCost))\n            ? h.classList.add('buildingPurchaseBtnAvailable')\n            : h.classList.remove('buildingPurchaseBtnAvailable');\n    }\n\n    if (G['currentTab'] === 'buildings' && G['buildingSubTab'] === 'diamond') {\n        const a = DOMCacheGetOrSet('buydiamond1');\n        const b = DOMCacheGetOrSet('buydiamond2');\n        const c = DOMCacheGetOrSet('buydiamond3');\n        const d = DOMCacheGetOrSet('buydiamond4');\n        const e = DOMCacheGetOrSet('buydiamond5');\n        const f = DOMCacheGetOrSet('buycrystalupgrade1');\n        const g = DOMCacheGetOrSet('buycrystalupgrade2');\n        const h = DOMCacheGetOrSet('buycrystalupgrade3');\n        const i = DOMCacheGetOrSet('buycrystalupgrade4');\n        const j = DOMCacheGetOrSet('buycrystalupgrade5');\n        ((!player.toggles[10] || player.achievements[78] === 0) && player.prestigePoints.gte(player.firstCostDiamonds))\n            ? a.classList.add('buildingPurchaseBtnAvailable')\n            : a.classList.remove('buildingPurchaseBtnAvailable');\n        ((!player.toggles[11] || player.achievements[85] === 0) && player.prestigePoints.gte(player.secondCostDiamonds))\n            ? b.classList.add('buildingPurchaseBtnAvailable')\n            : b.classList.remove('buildingPurchaseBtnAvailable');\n        ((!player.toggles[12] || player.achievements[92] === 0) && player.prestigePoints.gte(player.thirdCostDiamonds))\n            ? c.classList.add('buildingPurchaseBtnAvailable')\n            : c.classList.remove('buildingPurchaseBtnAvailable');\n        ((!player.toggles[13] || player.achievements[99] === 0) && player.prestigePoints.gte(player.fourthCostDiamonds))\n            ? d.classList.add('buildingPurchaseBtnAvailable')\n            : d.classList.remove('buildingPurchaseBtnAvailable');\n        ((!player.toggles[14] || player.achievements[106] === 0) && player.prestigePoints.gte(player.fifthCostDiamonds))\n            ? e.classList.add('buildingPurchaseBtnAvailable')\n            : e.classList.remove('buildingPurchaseBtnAvailable');\n        let k = 0;\n        k += Math.floor(G['rune3level'] / 16 * G['effectiveLevelMult']) * 100 / 100\n        if (player.upgrades[73] === 1 && player.currentChallenge.reincarnation !== 0) {\n            k += 10\n        }\n\n        (player.achievements[79] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][0] + G['crystalUpgradeCostIncrement'][0] * Math.floor(Math.pow(player.crystalUpgrades[0] + 0.5 - k, 2) / 2))))) ? f.style.backgroundColor = 'purple' : f.style.backgroundColor = '';\n        (player.achievements[86] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][1] + G['crystalUpgradeCostIncrement'][1] * Math.floor(Math.pow(player.crystalUpgrades[1] + 0.5 - k, 2) / 2))))) ? g.style.backgroundColor = 'purple' : g.style.backgroundColor = '';\n        (player.achievements[93] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][2] + G['crystalUpgradeCostIncrement'][2] * Math.floor(Math.pow(player.crystalUpgrades[2] + 0.5 - k, 2) / 2))))) ? h.style.backgroundColor = 'purple' : h.style.backgroundColor = '';\n        (player.achievements[100] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][3] + G['crystalUpgradeCostIncrement'][3] * Math.floor(Math.pow(player.crystalUpgrades[3] + 0.5 - k, 2) / 2))))) ? i.style.backgroundColor = 'purple' : i.style.backgroundColor = '';\n        (player.achievements[107] < 1 && player.prestigeShards.gte(Decimal.pow(10, (G['crystalUpgradesCost'][4] + G['crystalUpgradeCostIncrement'][4] * Math.floor(Math.pow(player.crystalUpgrades[4] + 0.5 - k, 2) / 2))))) ? j.style.backgroundColor = 'purple' : j.style.backgroundColor = '';\n    }\n\n    if (G['currentTab'] === 'runes') {\n        if (G['runescreen'] === 'runes') {\n            for (let i = 1; i <= 7; i++) {\n                player.runeshards > 0.5\n                    ? DOMCacheGetOrSet(`activaterune${i}`).classList.add('runeButtonAvailable')\n                    : DOMCacheGetOrSet(`activaterune${i}`).classList.remove('runeButtonAvailable')\n            }\n        }\n        if (G['runescreen'] === 'talismans') {\n            const a = DOMCacheGetOrSet('buyTalismanItem1');\n            const b = DOMCacheGetOrSet('buyTalismanItem2');\n            const c = DOMCacheGetOrSet('buyTalismanItem3');\n            const d = DOMCacheGetOrSet('buyTalismanItem4');\n            const e = DOMCacheGetOrSet('buyTalismanItem5');\n            const f = DOMCacheGetOrSet('buyTalismanItem6');\n            const g = DOMCacheGetOrSet('buyTalismanItem7');\n            const arr = [a, b, c, d, e, f, g];\n            for (let i = 0; i < arr.length; i++) {\n                (player.researchPoints > G['talismanResourceObtainiumCosts'][i] && player.runeshards > G['talismanResourceOfferingCosts'][i])\n                    ? arr[i].classList.add('talisminBtnAvailable')\n                    : arr[i].classList.remove('talisminBtnAvailable')\n            }\n        }\n    }\n\n    if (G['currentTab'] === 'buildings' && G['buildingSubTab'] === 'mythos') {\n        for (let i = 1; i <= 5; i++) {\n            const toggle = player.toggles[i + 15];\n            const mythos = player[`${G['ordinals'][i - 1 as ZeroToFour]}CostMythos` as const];\n            (!toggle || !player.upgrades[93 + i]) && player.transcendPoints.gte(mythos)\n                ? DOMCacheGetOrSet(`buymythos${i}`).classList.add('buildingPurchaseBtnAvailable')\n                : DOMCacheGetOrSet(`buymythos${i}`).classList.remove('buildingPurchaseBtnAvailable');\n        }\n    }\n\n    if (G['currentTab'] === 'buildings' && G['buildingSubTab'] === 'particle') {\n        for (let i = 1; i <= 5; i++) {\n            const costParticles = player[`${G['ordinals'][i - 1 as ZeroToFour]}CostParticles` as const];\n            player.reincarnationPoints.gte(costParticles)\n                ? DOMCacheGetOrSet(`buyparticles${i}`).classList.add('buildingPurchaseBtnAvailable')\n                : DOMCacheGetOrSet(`buyparticles${i}`).classList.remove('buildingPurchaseBtnAvailable');\n        }\n    }\n\n    if (G['currentTab'] === 'buildings' && G['buildingSubTab'] === 'tesseract') {\n        for (let i = 1; i <= 5; i++) {\n            const ascendBuilding = player[`ascendBuilding${i as OneToFive}` as const]['cost'];\n            Number(player.wowTesseracts) >= ascendBuilding\n                ? DOMCacheGetOrSet(`buyTesseracts${i}`).classList.add('buildingPurchaseBtnAvailable')\n                : DOMCacheGetOrSet(`buyTesseracts${i}`).classList.remove('buildingPurchaseBtnAvailable');\n        }\n        for (let i = 1; i <= 8; i++) {\n            (player.ascendShards.gte(Decimal.pow(10, player.constantUpgrades[i]!).times(G['constUpgradeCosts'][i]!)))\n                ? DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.add('constUpgradeAvailable')\n                : DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.remove('constUpgradeAvailable')\n        }\n        for (let i = 9; i <= 10; i++) {\n            if (player.constantUpgrades[i]! >= 1) {\n                DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.add('constUpgradeSingle')\n                DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.remove('constUpgradeSingleAvailable')\n            } else if (player.ascendShards.gte(Decimal.pow(10, player.constantUpgrades[i]!).times(G['constUpgradeCosts'][i]!))) {\n                DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.add('constUpgradeSingleAvailable')\n            } else {\n                DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.remove('constUpgradeSingleAvailable')\n                DOMCacheGetOrSet(`buyConstantUpgrade${i}`).classList.remove('constUpgradeSingle')\n            }\n        }\n    }\n\n    if (G['currentTab'] === 'ants') {\n        (player.reincarnationPoints.gte(player.firstCostAnts)) ? DOMCacheGetOrSet('anttier1').classList.add('antTierBtnAvailable') : DOMCacheGetOrSet('anttier1').classList.remove('antTierBtnAvailable');\n        for (let i = 2; i <= 8; i++) {\n            const costAnts = player[`${G['ordinals'][(i - 1) as ZeroToSeven]}CostAnts` as const];\n            player.antPoints.gte(costAnts)\n                ? DOMCacheGetOrSet(`anttier${i}`).classList.add('antTierBtnAvailable')\n                : DOMCacheGetOrSet(`anttier${i}`).classList.remove('antTierBtnAvailable')\n        }\n        for (let i = 1; i <= 12; i++) {\n            player.antPoints.gte(Decimal.pow(G['antUpgradeCostIncreases'][i-1], player.antUpgrades[i-1]! * G['extinctionMultiplier'][player.usedCorruptions[10]]).times(G['antUpgradeBaseCost'][i-1]))\n                ? DOMCacheGetOrSet(`antUpgrade${i}`).classList.add('antUpgradeBtnAvailable')\n                : DOMCacheGetOrSet(`antUpgrade${i}`).classList.remove('antUpgradeBtnAvailable')\n        }\n    }\n}\n\nexport const updateChallengeDisplay = () => {\n    //Sets background colors on load/challenge initiation\n    for (let k = 1; k <= 15; k++) {\n        const el = DOMCacheGetOrSet(`challenge${k}`)\n        el.classList.remove('challengeActive')\n        if (player.currentChallenge.transcension === k) {\n            el.classList.add('challengeActive')\n        }\n        if (player.currentChallenge.reincarnation === k) {\n            el.classList.add('challengeActive')\n        }\n        if (player.currentChallenge.ascension === k) {\n            el.classList.add('challengeActive')\n        }\n    }\n    //Corrects HTML on retry challenges button\n    if (player.retrychallenges) {\n        DOMCacheGetOrSet('retryChallenge').textContent = i18next.t('challenges.retryChallengesOn')\n    } else {\n        DOMCacheGetOrSet('retryChallenge').textContent = i18next.t('challenges.retryChallengesOff')\n    }\n    for (let k = 1; k <= 15; k++) {\n        updateChallengeLevel(k);\n    }\n}\n\nexport const updateChallengeLevel = (k: number) => {\n    const el = DOMCacheGetOrSet('challenge' + k + 'level');\n    const maxChallenges = getMaxChallenges(k);\n\n    if (k === 15) {\n        el.textContent = format(player.challenge15Exponent, 0, true);\n    } else {\n        el.textContent = `${player.challengecompletions[k]}/${maxChallenges}`;\n    }\n}\n\nexport const updateAchievementBG = () => {\n    //When loading/importing, the game needs to correctly update achievement backgrounds.\n    for (let i = 1; i <= 280; i++) { //Initiates by setting all to default\n        DOMCacheGetOrSet('ach' + i).style.backgroundColor = ''\n    }\n    const fixDisplay1 = document.getElementsByClassName('purpleach') as HTMLCollectionOf<HTMLElement>;\n    const fixDisplay2 = document.getElementsByClassName('redach') as HTMLCollectionOf<HTMLElement>;\n    for (let i = 0; i < fixDisplay1.length; i++) {\n        fixDisplay1[i].style.backgroundColor = 'purple' //Sets the appropriate achs to purple\n    }\n    for (let i = 0; i < fixDisplay2.length; i++) {\n        fixDisplay2[i].style.backgroundColor = 'maroon' //Sets the appropriate achs to maroon (red)\n    }\n    for (let i = 1; i < player.achievements.length; i++) {\n        if (player.achievements[i] > 0.5) {\n            achievementaward(i) //This sets all completed ach to green\n        }\n    }\n}\n\nexport const showCorruptionStatsLoadouts = () => {\n    if (player.corruptionShowStats) {\n        DOMCacheGetOrSet('corruptionStats').style.display = 'flex'\n        DOMCacheGetOrSet('corruptionLoadouts').style.display = 'none'\n        DOMCacheGetOrSet('corrStatsBtn').style.borderColor = 'dodgerblue'\n        DOMCacheGetOrSet('corrLoadoutsBtn').style.borderColor = 'white'\n    } else {\n        DOMCacheGetOrSet('corruptionStats').style.display = 'none'\n        DOMCacheGetOrSet('corruptionLoadouts').style.display = 'flex'\n        DOMCacheGetOrSet('corrStatsBtn').style.borderColor = 'white'\n        DOMCacheGetOrSet('corrLoadoutsBtn').style.borderColor = 'dodgerblue'\n    }\n}\n\nconst updateAscensionStats = () => {\n    const t = player.ascensionCounter;\n    const [cubes, tess, hyper, platonic, hepteract] = CalcCorruptionStuff().slice(4);\n    const addedAsterisk = (player.singularityUpgrades.oneMind.getEffect().bonus)\n    const fillers: Record<string, string> = {\n        'ascLen': formatTimeShort((player.ascStatToggles[6] ? player.ascensionCounter : player.ascensionCounterReal), 0),\n        'ascCubes': format(cubes * (player.ascStatToggles[1] ? 1 : 1 / t), 2),\n        'ascTess': format(tess * (player.ascStatToggles[2] ? 1 : 1 / t), 3),\n        'ascHyper': format(hyper * (player.ascStatToggles[3] ? 1 : 1 / t), 4),\n        'ascPlatonic': format(platonic * (player.ascStatToggles[4] ? 1 : 1 / t), 5),\n        'ascHepteract': format(hepteract * (player.ascStatToggles[5] ? 1 : 1 / t), 3),\n        'ascC10': `${format(player.challengecompletions[10])}`,\n        'ascTimeAccel': `${format(calculateTimeAcceleration().mult, 3)}x`,\n        'ascAscensionTimeAccel': `${format(calculateAscensionAcceleration(), 3)}x${addedAsterisk ? '*' : ''}`,\n        'ascSingularityCount': format(player.singularityCount),\n        'ascSingLen': formatTimeShort(player.singularityCounter)\n    }\n    for (const key in fillers) {\n        const dom = DOMCacheGetOrSet(key);\n        if (dom.textContent !== fillers[key]) {\n            dom.textContent = fillers[key];\n        }\n    }\n}\n\nconst tabColors: { [key: string]: string } = {\n    buildings: 'yellow',\n    upgrades: 'yellow',\n    achievements: 'white',\n    runes: 'cyan',\n    challenges: 'plum',\n    researches: 'green',\n    ants: 'brown',\n    cubes: 'purple',\n    traits: 'orange',\n    settings: 'white',\n    shop: 'limegreen'\n}\n\nexport const changeTabColor = () => {\n    const tab = DOMCacheGetOrSet('tabBorder');\n    const color = G['currentTab'] in tabColors\n        ? tabColors[G['currentTab']]\n        : 'yellow';\n\n    tab.style.backgroundColor = color;\n}\n\nconst ConfirmCB = (text: string, cb: (value: boolean) => void) => {\n    const conf = DOMCacheGetOrSet('confirmationBox');\n    const confWrap = DOMCacheGetOrSet('confirmWrapper');\n    const popup = DOMCacheGetOrSet('confirm');\n    const overlay = DOMCacheGetOrSet('transparentBG');\n    const ok = DOMCacheGetOrSet('ok_confirm');\n    const cancel = DOMCacheGetOrSet('cancel_confirm');\n\n    DOMCacheGetOrSet('alertWrapper').style.display = 'none';\n    DOMCacheGetOrSet('promptWrapper').style.display = 'none';\n\n    conf.style.display = 'block';\n    confWrap.style.display = 'block';\n    overlay.style.display = 'block';\n    popup.querySelector('p')!.textContent = text;\n    popup.focus();\n\n    // IF you clean up the typing here also clean up PromptCB\n    const listener = ({ target }: MouseEvent | { target: HTMLElement }) => {\n        const targetEl = target as HTMLButtonElement;\n        ok.removeEventListener('click', listener);\n        cancel.removeEventListener('click', listener);\n        popup.removeEventListener('keyup', kbListener);\n\n        conf.style.display = 'none';\n        confWrap.style.display = 'none';\n        overlay.style.display = 'none';\n\n        if (targetEl === ok) {\n            cb(true);\n        } else {\n            cb(false);\n        }\n    }\n\n    const kbListener = (e: KeyboardEvent) => {\n        if (e.key === 'Enter' || e.key === ' ') {\n            return listener({ target: ok })\n        } else if (e.key === 'Escape') {\n            return listener({ target: cancel })\n        }\n\n        return e.preventDefault();\n    }\n\n    ok.addEventListener('click', listener);\n    cancel.addEventListener('click', listener);\n    popup.addEventListener('keyup', kbListener);\n}\n\nconst AlertCB = (text: string, cb: (value: undefined) => void) => {\n    const conf = DOMCacheGetOrSet('confirmationBox');\n    const alertWrap = DOMCacheGetOrSet('alertWrapper');\n    const overlay = DOMCacheGetOrSet('transparentBG');\n    const popup = DOMCacheGetOrSet('alert');\n    const ok = DOMCacheGetOrSet('ok_alert');\n\n    DOMCacheGetOrSet('confirmWrapper').style.display = 'none';\n    DOMCacheGetOrSet('promptWrapper').style.display = 'none';\n\n    conf.style.display = 'block';\n    alertWrap.style.display = 'block';\n    overlay.style.display = 'block';\n    popup.querySelector('p')!.textContent = text;\n    popup.focus();\n\n    const listener = () => {\n        ok.removeEventListener('click', listener);\n        popup.removeEventListener('keyup', kbListener);\n\n        conf.style.display = 'none';\n        alertWrap.style.display = 'none';\n        overlay.style.display = 'none';\n        cb(undefined);\n    }\n\n    const kbListener = (e: KeyboardEvent) => (e.key === 'Enter' || e.key === ' ') && listener();\n\n    ok.addEventListener('click', listener);\n    popup.addEventListener('keyup', kbListener);\n}\n\nexport const PromptCB = (text: string, cb: (value: string | null) => void) => {\n    const conf = DOMCacheGetOrSet('confirmationBox');\n    const confWrap = DOMCacheGetOrSet('promptWrapper');\n    const overlay = DOMCacheGetOrSet('transparentBG');\n    const popup = DOMCacheGetOrSet('prompt');\n    const ok = DOMCacheGetOrSet('ok_prompt');\n    const cancel = DOMCacheGetOrSet('cancel_prompt');\n\n    DOMCacheGetOrSet('alertWrapper').style.display = 'none';\n    DOMCacheGetOrSet('confirmWrapper').style.display = 'none';\n\n    conf.style.display = 'block';\n    confWrap.style.display = 'block';\n    overlay.style.display = 'block';\n    popup.querySelector('label')!.textContent = text;\n    popup.querySelector('input')!.focus();\n\n    // kinda disgusting types but whatever\n    const listener = ({ target }: MouseEvent | { target: HTMLElement }) => {\n        const targetEl = target as HTMLButtonElement;\n        const el = targetEl.parentNode!.querySelector('input')!;\n\n        ok.removeEventListener('click', listener);\n        cancel.removeEventListener('click', listener);\n        popup.querySelector('input')!.removeEventListener('keyup', kbListener);\n\n        conf.style.display = 'none';\n        confWrap.style.display = 'none';\n        overlay.style.display = 'none';\n\n        if (targetEl.id === ok.id) {\n            cb(el.value);\n        } else {\n            cb(null);\n        } // canceled\n\n        el.value = el.textContent = '';\n        popup.querySelector('input')!.blur();\n    }\n\n    const kbListener = (e: KeyboardEvent) => {\n        if (e.key === 'Enter') {\n            return listener({ target: ok })\n        } else if (e.key === 'Escape') {\n            return listener({ target: cancel })\n        }\n\n        return e.preventDefault();\n    }\n\n    ok.addEventListener('click', listener);\n    cancel.addEventListener('click', listener);\n    popup.querySelector('input')!.addEventListener('keyup', kbListener);\n}\n\nlet closeNotification: ReturnType<typeof setTimeout>;\nlet closedNotification: ReturnType<typeof setTimeout>;\n\nconst NotificationCB = (text: string, time = 30000, cb: () => void) => {\n    const notification = DOMCacheGetOrSet('notification');\n    const textNode = document.querySelector<HTMLElement>('#notification > p')!;\n    const x = DOMCacheGetOrSet('notifx');\n\n    textNode.textContent = text;\n    notification.style.display = 'block';\n    notification.classList.remove('slide-out');\n    notification.classList.add('slide-in');\n\n    const closed = () => {\n        notification.style.display = 'none';\n        textNode.textContent = '';\n        closedNotification = 0;\n    }\n\n    const close = () => {\n        notification.classList.add('slide-out');\n        notification.classList.remove('slide-in');\n\n        closeNotification = 0;\n        x.removeEventListener('click', close);\n        closedNotification = setTimeout(closed, 1000);\n        cb();\n    }\n\n    x.addEventListener('click', close);\n    // Reset the close timer if reopened before closed\n    if (closeNotification > 0) {\n        clearTimeout(closeNotification);\n    }\n    if (closedNotification > 0) {\n        clearTimeout(closedNotification);\n    }\n    // automatically close out after <time> ms\n    closeNotification = setTimeout(close, time);\n}\n\n/*** Promisified version of the AlertCB function. */\n// eslint-disable-next-line no-promise-executor-return\nexport const Alert = (text: string): Promise<undefined> => new Promise(res => AlertCB(text, res));\n/*** Promisified version of the PromptCB function. */\n// eslint-disable-next-line no-promise-executor-return\nexport const Prompt = (text: string): Promise<string | null> => new Promise(res => PromptCB(text, res));\n/*** Promisified version of the ConfirmCB function */\n// eslint-disable-next-line no-promise-executor-return\nexport const Confirm = (text: string): Promise<boolean> => new Promise(res => ConfirmCB(text, res));\n/*** Promisified version of the NotificationCB function */\n// eslint-disable-next-line no-promise-executor-return\nexport const Notification = (text: string, time?: number): Promise<void> => new Promise(res => NotificationCB(text, time, res));\n\n/**\n * Create a popunder under an element.\n * @example\n * popunder(document.querySelector('.currencyContainer'), () => player.coins);\n * @param el Element to create the popunder under\n * @param v function that returns the value to format\n */\n/*const popunder = (\n    el: HTMLElement,\n    v: () => Parameters<typeof format>[0]\n) => {\n    const id: 'khafraIsAwesome' = 'khafraIsAwesome' as const; // DO NOT CHANGE!\n    el.addEventListener('mouseenter', (ev) => {\n        const isOnPage = DOMCacheGetOrSet(id);\n        if (isOnPage !== null)\n            document.body.removeChild(isOnPage);\n\n        const hover = ev.target as HTMLElement;\n        const popunder = document.createElement('div');\n        popunder.setAttribute('id', id);\n        popunder.textContent =  format(v(), undefined, undefined, false);\n\n        popunder.style.setProperty('position', 'absolute');\n        popunder.style.setProperty('text-align', 'center');\n        popunder.style.setProperty('height', `${hover.offsetHeight}px`);\n        popunder.style.setProperty('width', `${hover.offsetWidth}px`);\n        popunder.style.setProperty('top', `${hover.offsetTop + hover.offsetHeight}px`);\n        popunder.style.setProperty('left', `${hover.offsetLeft}px`);\n        popunder.style.setProperty('background-color', 'red');\n\n        document.body.appendChild(popunder);\n    });\n\n    el.addEventListener('mouseleave', () => {\n        const isOnPage = DOMCacheGetOrSet(id);\n        if (isOnPage !== null)\n            document.body.removeChild(isOnPage);\n    });\n}\n\nObject.defineProperty(window, 'popunder', { value: popunder });*/\n", "import { revealStuff, hideStuff, updateChallengeDisplay, showCorruptionStatsLoadouts, changeTabColor, Prompt, Alert } from './UpdateHTML';\nimport { player, format, resetCheck } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { visualUpdateCubes, visualUpdateOcteracts } from './UpdateVisuals';\nimport { calculateRuneLevels } from './Calculate';\nimport { reset, resetrepeat } from './Reset';\nimport { autoResearchEnabled } from './Research';\nimport { achievementaward } from './Achievements';\nimport { getChallengeConditions } from './Challenges';\nimport { corruptionDisplay, corruptionLoadoutTableUpdate, maxCorruptionLevel } from './Corruptions';\nimport type { BuildingSubtab, Player } from './types/Synergism';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport i18next from 'i18next';\n\ninterface TabValue { tabName: keyof typeof tabNumberConst, unlocked: boolean }\ntype Tab = Record<number, TabValue>;\ntype SubTab = Record<number, {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    tabSwitcher?: ((...args: any[]) => unknown) | ((...args: any[]) => Promise<unknown>)\n    subTabList: {\n        subTabID: string | number | boolean\n        unlocked: boolean\n        buttonID?: string\n    }[]\n}>\n\nconst tabNumberConst = {\n    'settings': -1,\n    'shop': 0,\n    'buildings': 1,\n    'upgrades': 2,\n    'achievements': 3,\n    'runes': 4,\n    'challenges': 5,\n    'researches': 6,\n    'ants': 7,\n    'cubes': 8,\n    'traits': 9,\n    'singularity': 10,\n    'event': 99\n} as const;\n\nexport const toggleTabs = (name: keyof typeof tabNumberConst) => {\n    G['currentTab'] = name;\n    player.tabnumber = tabNumberConst[name];\n\n    revealStuff();\n    hideStuff();\n\n    const el = document.activeElement as HTMLElement | null;\n    if (el !== null) {\n        el.blur();\n    }\n\n    const subTabList = subTabsInMainTab(player.tabnumber).subTabList\n    if (player.tabnumber !== -1) {\n        for (let i = 0; i < subTabList.length; i++) {\n            const id = subTabList[i].buttonID;\n            if (id) {\n                const button = DOMCacheGetOrSet(id) as HTMLElement | null;\n                if (button !== null) {\n                    if (button.style.backgroundColor === 'crimson') { // handles every tab except settings and corruptions\n                        player.subtabNumber = i\n                        break;\n                    }\n                    if (player.tabnumber === 9 && button.style.borderColor === 'dodgerblue') { // handle corruption tab\n                        player.subtabNumber = i\n                        break;\n                    }\n                }\n            }\n        }\n    } else { // handle settings tab\n        // The first getElementById makes sure that it still works if other tabs start using the subtabSwitcher class\n        const btns = document.querySelectorAll('[id^=\"switchSettingSubTab\"]');\n        for (let i = 0; i < btns.length; i++) {\n            if (btns[i].classList.contains('buttonActive')) {\n                player.subtabNumber = i\n                break;\n            }\n        }\n    }\n    toggleSubTab(player.tabnumber, player.subtabNumber)\n}\n\nexport const toggleSettings = (toggle: HTMLElement) => {\n    const toggleId = toggle.getAttribute('toggleId') || 1;\n    if (player.toggles[+toggleId] === true) {\n        player.toggles[+toggleId] = false;\n    } else {\n        player.toggles[+toggleId] = true;\n    }\n    const format = toggle.getAttribute('format')\n\n    if (format === '$' || format === '[$]') {\n        const text = player.toggles[+toggleId] ? i18next.t('general.on') : i18next.t('general.off')\n        toggle.textContent = format === '[$]' ? `[${text}]` : text\n    } else if (format === 'Auto Catalyze: $') {\n        const text = player.toggles[+toggleId] ? i18next.t('shop.autoCatalyzeOn') : i18next.t('shop.autoCatalyzeOff')\n        toggle.textContent = text\n    } else if (format === 'Hover-to-Buy [$]') {\n        const text = player.toggles[+toggleId] ? i18next.t('researches.hoverToBuyOn') : i18next.t('researches.hoverToBuyOff')\n        toggle.textContent = text\n    } else if (format === 'Auto: $') {\n        const text = player.toggles[+toggleId] ? i18next.t('general.autoOnColon') : i18next.t('general.autoOffColon')\n        toggle.textContent = text\n    } else if (format) {\n        const finishedString = format.replace('$', player.toggles[+toggleId] ? 'ON' : 'OFF');\n        toggle.textContent = finishedString;\n    } else {\n        toggle.textContent = player.toggles[+toggleId]\n            ? i18next.t('general.autoOnBracket')\n            : i18next.t('general.autoOffBracket')\n    }\n\n    toggle.style.border = '2px solid ' + (player.toggles[+toggleId] ? 'green' : 'red');\n}\n\nexport const toggleChallenges = (i: number, auto = false) => {\n    if ((i <= 5)) {\n        if (player.currentChallenge.ascension !== 15 || player.ascensionCounter >= 2){\n            player.currentChallenge.transcension = i;\n            reset('transcensionChallenge', false, 'enterChallenge');\n            player.transcendCount -= 1;\n        }\n        if (!player.currentChallenge.reincarnation && !document.querySelector('.resetbtn.hover')) {\n            resetrepeat('transcensionChallenge');\n        }\n    }\n    if ((i >= 6 && i < 11)){\n        if (player.currentChallenge.ascension !== 15 || player.ascensionCounter >= 2){\n            player.currentChallenge.reincarnation = i;\n            reset('reincarnationChallenge', false, 'enterChallenge');\n            player.reincarnationCount -= 1;\n        }\n        if (!document.querySelector('.resetbtn.hover')) {\n            resetrepeat('reincarnationChallenge');\n        }\n    }\n    if (i >= 11 && ((!auto && player.toggles[31] === false) || player.challengecompletions[10] > 0 || (player.currentChallenge.transcension === 0 && player.currentChallenge.reincarnation === 0 && player.currentChallenge.ascension === 0))) {\n        if (player.currentChallenge.ascension === 15) {\n            void resetCheck('ascensionChallenge', false, true);\n        }\n        player.currentChallenge.ascension = i;\n        reset('ascensionChallenge', false, 'enterChallenge');\n    }\n    updateChallengeDisplay();\n    getChallengeConditions(i);\n\n    if (i <= 10 && !auto && player.autoChallengeRunning) {\n        toggleAutoChallengeRun();\n    }\n\n    if (player.currentChallenge.transcension !== 0 && player.currentChallenge.reincarnation !== 0 && player.currentChallenge.ascension !== 0 && player.achievements[238] < 1) {\n        achievementaward(238)\n    }\n}\n\ntype ToggleBuy = 'coin' | 'crystal' | 'mythos' | 'particle' | 'offering' | 'tesseract';\n\nexport const toggleBuyAmount = (quantity: 1 | 10 | 100 | 1000 | 10000 | 100000, type: ToggleBuy) => {\n    player[`${type}buyamount` as const] = quantity;\n    const a = ['one', 'ten', 'hundred', 'thousand', '10k', '100k'][quantity.toString().length - 1];\n\n    DOMCacheGetOrSet(`${type}${a}`).style.backgroundColor = 'Green';\n    if (quantity !== 1) {\n        DOMCacheGetOrSet(`${type}one`).style.backgroundColor = ''\n    }\n    if (quantity !== 10) {\n        DOMCacheGetOrSet(`${type}ten`).style.backgroundColor = ''\n    }\n    if (quantity !== 100) {\n        DOMCacheGetOrSet(`${type}hundred`).style.backgroundColor = ''\n    }\n    if (quantity !== 1000) {\n        DOMCacheGetOrSet(`${type}thousand`).style.backgroundColor = ''\n    }\n    if (quantity !== 10000) {\n        DOMCacheGetOrSet(`${type}10k`).style.backgroundColor = ''\n    }\n    if (quantity !== 100000) {\n        DOMCacheGetOrSet(`${type}100k`).style.backgroundColor = ''\n    }\n}\n\ntype upgradeAutos = 'coin' | 'prestige' | 'transcend' | 'generators' | 'reincarnate'\n\n/**\n * Updates Auto Upgrade Border Colors if applicable, or updates the status of an upgrade toggle as optional.\n * @param toggle Targets a specific upgrade toggle if provided\n */\nexport const toggleShops = (toggle?: upgradeAutos) => {\n    // toggle provided: we do not want to update every button\n    if (toggle) {\n        player.shoptoggles[toggle] = !player.shoptoggles[toggle]\n        DOMCacheGetOrSet(`${toggle}AutoUpgrade`).style.borderColor = player.shoptoggles[toggle] ? 'green' : 'red';\n\n        if (player.shoptoggles[toggle]) {\n            DOMCacheGetOrSet(`${toggle}AutoUpgrade`).textContent = i18next.t('general.autoOnColon')\n        } else {\n            DOMCacheGetOrSet(`${toggle}AutoUpgrade`).textContent = i18next.t('general.autoOffColon')\n        }\n    } else {\n        const keys = Object.keys(player.shoptoggles) as (keyof Player['shoptoggles'])[]\n        for (const key of keys) {\n            const color = player.shoptoggles[key]? 'green': 'red'\n\n            if (player.shoptoggles[key]) {\n                DOMCacheGetOrSet(`${key}AutoUpgrade`).textContent = i18next.t('general.autoOnColon')\n            } else {\n                DOMCacheGetOrSet(`${key}AutoUpgrade`).textContent = i18next.t('general.autoOffColon')\n            }\n\n            DOMCacheGetOrSet(`${key}AutoUpgrade`).style.borderColor = color\n        }\n    }\n}\n\nexport function tabs(): Tab;\nexport function tabs(mainTab: number): TabValue;\nexport function tabs(mainTab?: number) {\n    const tabs: Tab = {\n        '-1': {tabName: 'settings', unlocked: true},\n        0: {tabName: 'shop', unlocked: player.unlocks.reincarnate || player.highestSingularityCount > 0},\n        1: {tabName: 'buildings', unlocked: true},\n        2: {tabName: 'upgrades', unlocked: true},\n        3: {tabName: 'achievements', unlocked: player.unlocks.coinfour},\n        4: {tabName: 'runes', unlocked: player.unlocks.prestige},\n        5: {tabName: 'challenges', unlocked: player.unlocks.transcend},\n        6: {tabName: 'researches', unlocked: player.unlocks.reincarnate},\n        7: {tabName: 'ants', unlocked: player.achievements[127] > 0},\n        8: {tabName: 'cubes', unlocked: player.achievements[141] > 0},\n        9: {tabName: 'traits', unlocked: player.challengecompletions[11] > 0},\n        10: {tabName: 'singularity', unlocked: player.highestSingularityCount > 0},\n        99: {tabName: 'event', unlocked: G['isEvent']}\n    }\n\n    if (typeof mainTab === 'undefined') {\n        return tabs\n    }\n\n    return tabs[mainTab];\n}\n\n/**\n *\n * @param mainTab the index of the main tab\n * @returns Object()\n */\nexport const subTabsInMainTab = (mainTab: number) => {\n    /**\n     * An array of sub-tab objects with the IDs for the sub-tabs and buttons, and unlock conditions\n     * @type {SubTab}\n     */\n    const subTabs: SubTab = {\n        '-1': {\n            tabSwitcher: setActiveSettingScreen,\n            subTabList: [\n                {subTabID: 'settingsubtab', unlocked: true},\n                {subTabID: 'languagesubtab', unlocked: true},\n                {subTabID: 'creditssubtab', unlocked: true},\n                {subTabID: 'statisticsSubTab', unlocked: true},\n                {subTabID: 'resetHistorySubTab', unlocked: player.unlocks.prestige},\n                {subTabID: 'ascendHistorySubTab', unlocked: player.ascensionCount > 0},\n                {subTabID: 'singularityHistorySubTab', unlocked: player.highestSingularityCount > 0},\n                { subTabID: 'hotkeys', unlocked: true }\n            ]\n        },\n        0: {subTabList: []},\n        1: {\n            tabSwitcher: toggleBuildingScreen,\n            subTabList: [\n                {subTabID: 'coin', unlocked: true, buttonID: 'switchToCoinBuilding'},\n                {subTabID: 'diamond', unlocked: player.unlocks.prestige, buttonID: 'switchToDiamondBuilding'},\n                {subTabID: 'mythos', unlocked: player.unlocks.transcend, buttonID: 'switchToMythosBuilding'},\n                {subTabID: 'particle', unlocked: player.unlocks.reincarnate, buttonID: 'switchToParticleBuilding'},\n                {subTabID: 'tesseract', unlocked: player.achievements[183] > 0, buttonID: 'switchToTesseractBuilding'}]\n        },\n        2: {subTabList: []},\n        3: {subTabList: []},\n        4: {\n            tabSwitcher: toggleRuneScreen,\n            subTabList: [\n                {subTabID: 1, unlocked: player.unlocks.prestige, buttonID: 'toggleRuneSubTab1'},\n                {subTabID: 2, unlocked: player.achievements[134] > 0, buttonID: 'toggleRuneSubTab2'},\n                {subTabID: 3, unlocked: player.achievements[134] > 0, buttonID: 'toggleRuneSubTab3'},\n                {subTabID: 4, unlocked: player.achievements[204] > 0, buttonID: 'toggleRuneSubTab4'}]\n        },\n        5: {subTabList: []},\n        6: {subTabList: []},\n        7: {subTabList: []},\n        8: {\n            tabSwitcher: toggleCubeSubTab,\n            subTabList: [\n                {subTabID: 1, unlocked: player.achievements[141] > 0, buttonID: 'switchCubeSubTab1'},\n                {subTabID: 2, unlocked: player.achievements[197] > 0, buttonID: 'switchCubeSubTab2'},\n                {subTabID: 3, unlocked: player.achievements[211] > 0, buttonID: 'switchCubeSubTab3'},\n                {subTabID: 4, unlocked: player.achievements[218] > 0, buttonID: 'switchCubeSubTab4'},\n                {subTabID: 5, unlocked: player.achievements[141] > 0, buttonID: 'switchCubeSubTab5'},\n                {subTabID: 6, unlocked: player.achievements[218] > 0, buttonID: 'switchCubeSubTab6'},\n                {subTabID: 7, unlocked: player.challenge15Exponent >= 1e15, buttonID: 'switchCubeSubTab7'}]\n        },\n        9: {\n            tabSwitcher: toggleCorruptionLoadoutsStats,\n            subTabList: [\n                {subTabID: true, unlocked: player.achievements[141] > 0, buttonID: 'corrStatsBtn'},\n                {subTabID: false, unlocked: player.achievements[141] > 0, buttonID: 'corrLoadoutsBtn'}]\n        },\n        10: {\n            tabSwitcher: toggleSingularityScreen,\n            subTabList: [\n                {subTabID: 1, unlocked: player.highestSingularityCount > 0, buttonID: 'toggleSingularitySubTab1'},\n                {subTabID: 2, unlocked: player.highestSingularityCount > 0, buttonID: 'toggleSingularitySubTab2'},\n                {subTabID: 3, unlocked: player.highestSingularityCount > 0, buttonID: 'toggleSingularitySubTab3'},\n                {subTabID: 4, unlocked: Boolean(player.singularityUpgrades.octeractUnlock.getEffect().bonus), buttonID: 'toggleSingularitySubTab4'},\n                {subTabID: 5, unlocked: player.highestSingularityCount >= 25, buttonID: 'toggleSingularitySubTab5'}]\n        },\n        99: { subTabList: [] }\n    }\n    return subTabs[mainTab]!;\n}\n\nexport const keyboardTabChange = (dir = 1, main = true) => {\n    if (main) {\n        player.tabnumber += dir\n        const maxTab = Object.keys(tabs()).reduce((a, b) => Math.max(a, +b), -Infinity);\n        const minTab = Object.keys(tabs()).reduce((a, b) => Math.min(a, +b), Infinity);\n        // The loop point is chosen to be before settings so that new tabs can just be added to the end of the list\n        // without needing to mess with the settings and shop\n        const handleLoopBack = () => {\n            if (player.tabnumber === maxTab + 1) { // went over from the right\n                player.tabnumber = minTab // loop back left\n            }\n            if (player.tabnumber === minTab - 1) { // and vice versa\n                player.tabnumber = maxTab\n            }\n        }\n        handleLoopBack()\n        while (!tabs(player.tabnumber).unlocked) {\n            player.tabnumber += dir\n            handleLoopBack()\n        }\n        toggleTabs(tabs(player.tabnumber).tabName)\n    } else {\n        const subTabList = subTabsInMainTab(player.tabnumber).subTabList\n        if (subTabList.length === 0) {\n            return\n        }\n        player.subtabNumber += dir\n        const handleLoopBack = () => {\n            const numSubTabs = subTabList.length\n            player.subtabNumber = (player.subtabNumber + numSubTabs) % numSubTabs\n        }\n        handleLoopBack()\n        while (!subTabList[player.subtabNumber].unlocked) {\n            player.subtabNumber += dir\n            handleLoopBack()\n        }\n        toggleSubTab(player.tabnumber, player.subtabNumber)\n    }\n\n    changeTabColor();\n}\n\nexport const toggleSubTab = (mainTab = 1, subTab = 0) => {\n    const subTabs = subTabsInMainTab(mainTab)\n    if (tabs(mainTab).unlocked && subTabs.subTabList.length > 0) {\n\n        const el = document.activeElement as HTMLElement | null;\n        if (el !== null) {\n            el.blur();\n        }\n\n        const subTabList = subTabs.subTabList[subTab];\n        if (mainTab === -1) {\n            // The first getElementById makes sure that it still works if other tabs start using the subtabSwitcher class\n            const btn = DOMCacheGetOrSet('settings').getElementsByClassName('subtabSwitcher')[0].children[subTab]\n            if (subTabList.unlocked) {\n                player.subtabNumber = subTab\n                subTabs.tabSwitcher?.(subTabList.subTabID, btn)\n            }\n        } else {\n            if (subTabList.unlocked) {\n                player.subtabNumber = subTab\n                subTabs.tabSwitcher?.(subTabList.subTabID)\n            }\n        }\n    }\n}\n\nexport const toggleautoreset = (i: number) => {\n    if (i === 1) {\n        if (player.resettoggle1 === 1 || player.resettoggle1 === 0) {\n            player.resettoggle1 = 2;\n            DOMCacheGetOrSet('prestigeautotoggle').textContent = i18next.t('toggles.modeTime')\n        } else {\n            player.resettoggle1 = 1;\n            DOMCacheGetOrSet('prestigeautotoggle').textContent = i18next.t('toggles.modeAmount')\n        }\n    } else if (i === 2) {\n        if (player.resettoggle2 === 1 || player.resettoggle2 === 0) {\n            player.resettoggle2 = 2;\n            DOMCacheGetOrSet('transcendautotoggle').textContent = i18next.t('toggles.modeTime')\n        } else {\n            player.resettoggle2 = 1;\n            DOMCacheGetOrSet('transcendautotoggle').textContent = i18next.t('toggles.modeAmount')\n        }\n    } else if (i === 3) {\n        if (player.resettoggle3 === 1 || player.resettoggle3 === 0) {\n            player.resettoggle3 = 2;\n            DOMCacheGetOrSet('reincarnateautotoggle').textContent = i18next.t('toggles.modeTime')\n        } else {\n            player.resettoggle3 = 1;\n            DOMCacheGetOrSet('reincarnateautotoggle').textContent = i18next.t('toggles.modeAmount')\n        }\n    } else if (i === 4) {\n        if (player.resettoggle4 === 1 || player.resettoggle4 === 0) {\n            player.resettoggle4 = 2;\n            DOMCacheGetOrSet('tesseractautobuymode').textContent = i18next.t('toggles.modePercentage')\n        } else {\n            player.resettoggle4 = 1;\n            DOMCacheGetOrSet('tesseractautobuymode').textContent = i18next.t('toggles.modeAmount')\n        }\n    }\n}\n\nexport const toggleautobuytesseract = () => {\n    if (player.tesseractAutoBuyerToggle === 1 || player.tesseractAutoBuyerToggle === 0) {\n        player.tesseractAutoBuyerToggle = 2;\n        DOMCacheGetOrSet('tesseractautobuytoggle').textContent = i18next.t('runes.talismans.autoBuyOff')\n        DOMCacheGetOrSet('tesseractautobuytoggle').style.border = '2px solid red'\n\n    } else {\n        player.tesseractAutoBuyerToggle = 1;\n        DOMCacheGetOrSet('tesseractautobuytoggle').textContent = i18next.t('runes.talismans.autoBuyOn')\n        DOMCacheGetOrSet('tesseractautobuytoggle').style.border = '2px solid green'\n    }\n}\n\nexport const toggleauto = () => {\n    const toggles = Array.from<HTMLElement>(document.querySelectorAll('.auto[toggleid]'));\n    for (const toggle of toggles) {\n        const format = toggle.getAttribute('format')\n        const toggleId = toggle.getAttribute('toggleId') || 1;\n\n        if (format === '$') {\n            const text = player.toggles[+toggleId] ? i18next.t('general.on') : i18next.t('general.off')\n            toggle.textContent = text\n        } else if (format === 'Auto Catalyze: $') {\n            const text = player.toggles[+toggleId] ? i18next.t('shop.autoCatalyzeOn') : i18next.t('shop.autoCatalyzeOff')\n            toggle.textContent = text\n        } else if (format === 'Hover-to-Buy [$]') {\n            const text = player.toggles[+toggleId] ? i18next.t('researches.hoverToBuyOn') : i18next.t('researches.hoverToBuyOff')\n            toggle.textContent = text\n        } else if (format === 'Auto: $') {\n            const text = player.toggles[+toggleId] ? i18next.t('general.autoOnColon') : i18next.t('general.autoOffColon')\n            toggle.textContent = text\n        } else if (format) {\n            const finishedString = format.replace('$', player.toggles[+toggleId] ? 'ON' : 'OFF')\n            toggle.textContent = finishedString;\n        } else {\n            toggle.textContent = player.toggles[+toggleId]\n                ? i18next.t('general.autoOnBracket')\n                : i18next.t('general.autoOffBracket')\n        }\n\n        toggle.style.border = '2px solid ' + (player.toggles[+toggleId] ? 'green' : 'red');\n    }\n\n    const tesseractAutos = Array.from<HTMLElement>(document.querySelectorAll('*[id^=\"tesseractAutoToggle\"]'))\n\n    for (let j = 0; j < tesseractAutos.length; j++) {\n        const auto = tesseractAutos[j]\n\n        if (player.autoTesseracts[j + 1]) {\n            auto.textContent = i18next.t('general.autoOnBracket')\n            auto.style.border = '2px solid green'\n        } else {\n            auto.textContent = i18next.t('general.autoOffBracket')\n            auto.style.border = '2px solid red'\n        }\n    }\n}\n\nexport const toggleResearchBuy = () => {\n    if (player.researchBuyMaxToggle) {\n        player.researchBuyMaxToggle = false;\n        DOMCacheGetOrSet('toggleresearchbuy').textContent = i18next.t('researches.upgradeOne')\n    } else {\n        player.researchBuyMaxToggle = true;\n        DOMCacheGetOrSet('toggleresearchbuy').textContent = i18next.t('researches.upgradeMax')\n    }\n}\n\nexport const toggleAutoResearch = () => {\n    const el = DOMCacheGetOrSet('toggleautoresearch')\n    if (player.autoResearchToggle || player.shopUpgrades.obtainiumAuto < 1) {\n        player.autoResearchToggle = false;\n        el.textContent = i18next.t('researches.automaticOff')\n        DOMCacheGetOrSet(`res${player.autoResearch || 1}`).classList.remove('researchRoomba');\n        player.autoResearch = 0;\n    } else {\n        player.autoResearchToggle = true;\n        el.textContent = i18next.t('researches.automaticOn')\n    }\n\n    if (player.autoResearchToggle && autoResearchEnabled() && player.autoResearchMode === 'cheapest') {\n        player.autoResearch = G['researchOrderByCost'][player.roombaResearchIndex]\n    }\n\n}\n\nexport const toggleAutoResearchMode = () => {\n    const el = DOMCacheGetOrSet('toggleautoresearchmode')\n    if (player.autoResearchMode === 'cheapest' || !autoResearchEnabled()) {\n        player.autoResearchMode = 'manual';\n        el.textContent = i18next.t('researches.autoModeManual')\n    } else {\n        player.autoResearchMode = 'cheapest';\n        el.textContent = i18next.t('researches.autoModeCheapest')\n    }\n    DOMCacheGetOrSet(`res${player.autoResearch || 1}`).classList.remove('researchRoomba');\n\n    if (player.autoResearchToggle && autoResearchEnabled() && player.autoResearchMode === 'cheapest') {\n        player.autoResearch = G['researchOrderByCost'][player.roombaResearchIndex]\n    }\n}\n\nexport const toggleAutoSacrifice = (index: number) => {\n    const el = DOMCacheGetOrSet('toggleautosacrifice')\n    if (index === 0) {\n        if (player.autoSacrificeToggle) {\n            player.autoSacrificeToggle = false;\n            el.textContent = i18next.t('runes.blessings.autoRuneOff');\n            el.style.border = '2px solid red'\n            player.autoSacrifice = 0;\n        } else {\n            player.autoSacrificeToggle = true;\n            player.saveOfferingToggle = false;\n            el.textContent = i18next.t('runes.blessings.autoRuneOn');\n            el.style.border = '2px solid green'\n            DOMCacheGetOrSet('saveOffToggle').textContent = i18next.t('toggles.saveOfferingsOff')\n            DOMCacheGetOrSet('saveOffToggle').style.color = 'white'\n        }\n    } else if (player.autoSacrificeToggle && player.shopUpgrades.offeringAuto > 0.5) {\n        if (player.autoSacrifice === index) {\n            player.autoSacrifice = 0;\n        } else {\n            player.autoSacrifice = index;\n        }\n    }\n    for (let i = 1; i <= 5; i++) {\n        DOMCacheGetOrSet('rune' + i).style.backgroundColor = player.autoSacrifice === i ? 'orange' : '';\n    }\n    calculateRuneLevels();\n}\n\nexport const toggleAutoBuyFragment = () => {\n    const el = DOMCacheGetOrSet('toggleautoBuyFragments')\n    if (player.autoBuyFragment) {\n        el.textContent = i18next.t('runes.talismans.autoBuyOff')\n        el.style.border = '2px solid orange'\n        el.style.color = 'white'\n    } else {\n        el.textContent = i18next.t('runes.talismans.autoBuyOn')\n        el.style.border = '2px solid white'\n        el.style.color = 'orange'\n    }\n\n    player.autoBuyFragment = !player.autoBuyFragment\n}\n\nexport const toggleBuildingScreen = (input: BuildingSubtab) => {\n    G['buildingSubTab'] = input\n    const screen: Record<string, { screen: string, button: string, subtabNumber: number }> = {\n        'coin': {\n            screen: 'coinBuildings',\n            button: 'switchToCoinBuilding',\n            subtabNumber: 0\n        },\n        'diamond': {\n            screen: 'prestige',\n            button: 'switchToDiamondBuilding',\n            subtabNumber: 1\n        },\n        'mythos': {\n            screen: 'transcension',\n            button: 'switchToMythosBuilding',\n            subtabNumber: 2\n        },\n        'particle': {\n            screen: 'reincarnation',\n            button: 'switchToParticleBuilding',\n            subtabNumber: 3\n        },\n        'tesseract': {\n            screen: 'ascension',\n            button: 'switchToTesseractBuilding',\n            subtabNumber: 4\n        }\n    }\n    for (const key in screen) {\n        DOMCacheGetOrSet(screen[key].screen).style.display = 'none';\n        DOMCacheGetOrSet(screen[key].button).style.backgroundColor = '';\n    }\n    DOMCacheGetOrSet(screen[G['buildingSubTab']].screen).style.display = 'flex'\n    DOMCacheGetOrSet(screen[G['buildingSubTab']].button).style.backgroundColor = 'crimson'\n    player.subtabNumber = screen[G['buildingSubTab']].subtabNumber\n}\n\nexport const toggleRuneScreen = (index: number) => {\n    const screens = ['runes', 'talismans', 'blessings', 'spirits'];\n    G['runescreen'] = screens[index - 1];\n\n    for (let i = 1; i <= 4; i++) {\n        const a = DOMCacheGetOrSet('toggleRuneSubTab' + i);\n        const b = DOMCacheGetOrSet('runeContainer' + i);\n        if (i === index) {\n            a.style.border = '2px solid gold'\n            a.style.backgroundColor = 'crimson'\n            b.style.display = 'flex';\n        } else {\n            a.style.border = '2px solid silver'\n            a.style.backgroundColor = ''\n            b.style.display = 'none';\n        }\n    }\n    player.subtabNumber = index - 1\n}\n\nexport const toggleautofortify = () => {\n    const el = DOMCacheGetOrSet('toggleautofortify');\n    if (player.autoFortifyToggle) {\n        el.textContent = i18next.t('runes.autoFortifyOff')\n        el.style.border = '2px solid red'\n    } else {\n        el.textContent = i18next.t('runes.autoFortifyOn')\n        el.style.border = '2px solid green'\n    }\n\n    player.autoFortifyToggle = !player.autoFortifyToggle;\n}\n\nexport const toggleautoenhance = () => {\n    const el = DOMCacheGetOrSet('toggleautoenhance');\n    if (player.autoEnhanceToggle) {\n        el.textContent = i18next.t('runes.autoEnhanceOff')\n        el.style.border = '2px solid red'\n    } else {\n        el.textContent = i18next.t('runes.autoEnhanceOn')\n        el.style.border = '2px solid green'\n    }\n\n    player.autoEnhanceToggle = !player.autoEnhanceToggle;\n}\n\nexport const toggleSaveOff = () => {\n    const el = DOMCacheGetOrSet('saveOffToggle')\n    const et = DOMCacheGetOrSet('toggleautosacrifice')\n    if (player.saveOfferingToggle) {\n        player.autoSacrificeToggle = true\n        el.textContent = i18next.t('toggles.saveOfferingsOff')\n        el.style.color = 'white'\n        et.textContent = 'Auto Runes: ON'\n        et.style.border = '2px solid green'\n    } else {\n        player.autoSacrificeToggle = false\n        el.textContent = i18next.t('toggles.saveOfferingsOn')\n        el.style.color = 'yellow'\n        et.textContent = 'Auto Runes: OFF'\n        et.style.border = '2px solid red'\n    }\n\n    player.saveOfferingToggle = !player.saveOfferingToggle\n}\n\nexport const toggleSingularityScreen = (index: number) => {\n    const screens = ['shop', 'penalties', 'perks', 'octeracts', 'challenges'];\n    G['singularityscreen'] = screens[index - 1];\n\n    for (let i = 1; i <= 5; i++) {\n        const a = DOMCacheGetOrSet('toggleSingularitySubTab' + i);\n        const b = DOMCacheGetOrSet('singularityContainer' + i);\n        if (i === index) {\n            a.style.backgroundColor = 'crimson'\n            b.style.display = 'block';\n        } else {\n            a.style.backgroundColor = ''\n            b.style.display = 'none';\n        }\n    }\n    player.subtabNumber = index - 1\n\n    if (player.subtabNumber === 3) {\n        visualUpdateOcteracts();\n    }\n}\n\ninterface ChadContributor {\n    login: string\n    id: number\n    node_id: string\n    avatar_url: string\n    gravatar_id: string\n    url: string\n    html_url: string\n    followers_url: string\n    following_url: string\n    gists_url: string\n    starred_url: string\n    subscriptions_url: string\n    organizations_url: string\n    repos_url: string\n    events_url: string\n    received_events_url: string\n    type: string\n    site_admin: boolean\n    contributions: number\n}\n\nconst setActiveSettingScreen = async (subtab: string, clickedButton: HTMLButtonElement) => {\n    const subtabEl = DOMCacheGetOrSet(subtab);\n    if (subtabEl.classList.contains('subtabActive')) {\n        return;\n    }\n\n    const switcherEl = clickedButton.parentNode!;\n    switcherEl.querySelectorAll('.buttonActive').forEach(b => b.classList.remove('buttonActive'));\n    clickedButton.classList.add('buttonActive');\n\n    subtabEl.parentNode!.querySelectorAll('.subtabActive').forEach(subtab => subtab.classList.remove('subtabActive'));\n    subtabEl.classList.add('subtabActive');\n\n    if (subtab === 'creditssubtab') {\n        const credits = DOMCacheGetOrSet('creditList');\n        const artists = DOMCacheGetOrSet('artistList');\n\n        if (credits.childElementCount > 0 || artists.childElementCount > 0) {\n            return;\n        } else if (!navigator.onLine || document.hidden) {\n            return;\n        }\n\n        try {\n            const r = await fetch('https://api.github.com/repos/pseudo-corp/SynergismOfficial/contributors', {\n                headers: {\n                    'Accept': 'application/vnd.github.v3+json'\n                }\n            });\n            const j = await r.json() as ChadContributor[];\n\n            for (const contributor of j) {\n                const div = document.createElement('div');\n                div.classList.add('credit');\n\n                const img = new Image(32, 32);\n                img.src = contributor.avatar_url;\n                img.alt = contributor.login;\n\n                const a = document.createElement('a');\n                a.href = `https://github.com/Pseudo-Corp/SynergismOfficial/commits?author=${contributor.login}`;\n                a.textContent = contributor.login;\n                a.target = '_blank';\n                a.rel = 'noopener noreferrer nofollow';\n\n                div.appendChild(img);\n                div.appendChild(a);\n\n                credits.appendChild(div);\n            }\n        } catch (e) {\n            const err = e as Error;\n            credits.appendChild(document.createTextNode(err.toString()));\n        }\n\n        try {\n            const r = await fetch('https://api.github.com/gists/01917ff476d25a141c5bad38340cd756', {\n                headers: {\n                    'Accept': 'application/vnd.github.v3+json'\n                }\n            });\n\n            const j = await r.json() as { files: Record<string, { content: string }> };\n            const f = JSON.parse(j.files['synergism_artists.json'].content) as string[];\n\n            for (const user of f) {\n                const p = document.createElement('p');\n                p.textContent = user;\n\n                artists.appendChild(p);\n            }\n        } catch (e) {\n            const err = e as Error;\n            credits.appendChild(document.createTextNode(err.toString()));\n        }\n    }\n}\n\nexport const toggleShopConfirmation = () => {\n    const el = DOMCacheGetOrSet('toggleConfirmShop')\n    el.textContent = player.shopConfirmationToggle\n        ? i18next.t('shop.shopConfirmationOff')\n        : i18next.t('shop.shopConfirmationOn')\n\n    player.shopConfirmationToggle = !player.shopConfirmationToggle;\n}\n\nexport const toggleBuyMaxShop = (event: MouseEvent) => {\n    const el = DOMCacheGetOrSet('toggleBuyMaxShopText')\n    if (event.shiftKey) {\n        el.textContent = i18next.t('shop.buyAny');\n        player.shopBuyMaxToggle = 'ANY';\n        return;\n    }\n\n    switch (player.shopBuyMaxToggle) {\n        case false:\n            el.innerHTML = i18next.t('shop.buy10')\n            player.shopBuyMaxToggle = 'TEN';\n            break;\n        case 'TEN':\n            el.innerHTML = i18next.t('shop.buyMax')\n            player.shopBuyMaxToggle = true;\n            break;\n        default:\n            el.innerHTML = i18next.t('shop.buy1')\n            player.shopBuyMaxToggle = false;\n    }\n}\n\nexport const toggleHideShop = () => {\n    const el = DOMCacheGetOrSet('toggleHideShop')\n    el.textContent = player.shopHideToggle\n        ? i18next.t('shop.hideMaxedOff')\n        : i18next.t('shop.hideMaxedOn')\n\n    player.shopHideToggle = !player.shopHideToggle;\n}\n\nexport const toggleAntMaxBuy = () => {\n    const el = DOMCacheGetOrSet('toggleAntMax');\n    el.textContent = player.antMax\n        ? i18next.t('general.buyMaxOff')\n        : i18next.t('general.buyMaxOn')\n\n    player.antMax = !player.antMax;\n}\n\nexport const toggleAntAutoSacrifice = (mode = 0) => {\n    if (mode === 0) {\n        const el = DOMCacheGetOrSet('toggleAutoSacrificeAnt');\n        if (player.autoAntSacrifice) {\n            player.autoAntSacrifice = false;\n            el.textContent = i18next.t('ants.autoSacrificeOff')\n        } else {\n            player.autoAntSacrifice = true;\n            el.textContent = i18next.t('ants.autoSacrificeOn')\n        }\n    } else if (mode === 1) {\n        const el = DOMCacheGetOrSet('autoSacrificeAntMode');\n        if (player.autoAntSacrificeMode === 1 || player.autoAntSacrificeMode === 0) {\n            player.autoAntSacrificeMode = 2;\n            el.textContent = i18next.t('ants.modeRealTime')\n        } else {\n            player.autoAntSacrificeMode = 1;\n            el.textContent = i18next.t('ants.modeInGameTime')\n        }\n    }\n}\n\nexport const toggleMaxBuyCube = () => {\n    const el = DOMCacheGetOrSet('toggleCubeBuy')\n    if (player.cubeUpgradesBuyMaxToggle) {\n        player.cubeUpgradesBuyMaxToggle = false;\n        el.textContent = i18next.t('toggles.upgradeOneLevelWow')\n    } else {\n        player.cubeUpgradesBuyMaxToggle = true;\n        el.textContent = i18next.t('toggles.upgradeMaxIfPossible')\n    }\n}\n\nexport const autoCubeUpgradesToggle = (toggle = true) => {\n    if (toggle) {\n        player.autoCubeUpgradesToggle = !player.autoCubeUpgradesToggle;\n    }\n    const el = DOMCacheGetOrSet('toggleAutoCubeUpgrades');\n    if (player.autoCubeUpgradesToggle) {\n        el.textContent = i18next.t('toggles.autoUpgradeOn')\n        el.style.border = '2px solid green'\n    } else {\n        el.textContent = i18next.t('toggles.autoUpgradeOff')\n        el.style.border = '2px solid red'\n    }\n}\n\nexport const autoPlatonicUpgradesToggle = (toggle = true) => {\n    if (toggle) {\n        player.autoPlatonicUpgradesToggle = !player.autoPlatonicUpgradesToggle;\n    }\n    const el = DOMCacheGetOrSet('toggleAutoPlatonicUpgrades');\n    if (player.autoPlatonicUpgradesToggle) {\n        el.textContent = i18next.t('toggles.autoUpgradeOn')\n        el.style.border = '2px solid green'\n    } else {\n        el.textContent = i18next.t('toggles.autoUpgradeOff')\n        el.style.border = '2px solid red'\n    }\n}\n\nexport const toggleCubeSubTab = (i: number) => {\n    const numSubTabs = subTabsInMainTab(8).subTabList.length\n    for (let j = 1; j <= numSubTabs; j++) {\n        const cubeTab = DOMCacheGetOrSet(`cubeTab${j}`);\n        if (cubeTab.style.display === 'flex' && j !== i) {\n            cubeTab.style.display = 'none'\n        }\n        if (cubeTab.style.display === 'none' && j === i) {\n            cubeTab.style.display = 'flex'\n            player.subtabNumber = j - 1\n        }\n        DOMCacheGetOrSet('switchCubeSubTab' + j).style.backgroundColor = i === j ? 'crimson' : ''\n    }\n\n    visualUpdateCubes();\n}\n\nexport const updateAutoChallenge = (i: number) => {\n    switch (i) {\n        case 1: {\n            const t = parseFloat((DOMCacheGetOrSet('startAutoChallengeTimerInput') as HTMLInputElement).value) || 0;\n            player.autoChallengeTimer.start = Math.max(t, 0);\n            DOMCacheGetOrSet('startTimerValue').innerHTML = i18next.t('challenges.timeStartSweep', {\n                time: format(player.autoChallengeTimer.start, 2, true)\n            })\n            return;\n        }\n        case 2: {\n            const u = parseFloat((DOMCacheGetOrSet('exitAutoChallengeTimerInput') as HTMLInputElement).value) || 0;\n            player.autoChallengeTimer.exit = Math.max(u, 0);\n\n            DOMCacheGetOrSet('exitTimerValue').innerHTML = i18next.t('challenges.timeExitChallenge', {\n                time: format(player.autoChallengeTimer.exit, 2, true)\n            })\n\n            return;\n        }\n        case 3: {\n            const v = parseFloat((DOMCacheGetOrSet('enterAutoChallengeTimerInput') as HTMLInputElement).value) || 0;\n            player.autoChallengeTimer.enter = Math.max(v, 0);\n\n            DOMCacheGetOrSet('enterTimerValue').innerHTML = i18next.t('challenges.timeEnterChallenge', {\n                time: format(player.autoChallengeTimer.enter, 2, true)\n            })\n\n            return;\n        }\n    }\n}\n\nexport const toggleAutoChallengesIgnore = (i: number) => {\n    if (i <= 15) {\n        player.autoChallengeToggles[i] = !player.autoChallengeToggles[i];\n\n        const el = DOMCacheGetOrSet('toggleAutoChallengeIgnore');\n        el.style.border = player.autoChallengeToggles[i] ? '2px solid green' : '2px solid red';\n\n        if (i >= 11 && i <= 15) {\n            if (player.autoChallengeToggles[i]) {\n                el.textContent = i18next.t('challenges.autoAscRunChalOn', { x: i })\n            } else {\n                el.textContent = i18next.t('challenges.autoAscRunChalOff', { x: i })\n            }\n        } else {\n            if (player.autoChallengeToggles[i]) {\n                el.textContent = i18next.t('challenges.autoRunChalOn', { x: i })\n            } else {\n                el.textContent = i18next.t('challenges.autoRunChalOff', { x: i })\n            }\n        }\n    }\n}\n\nexport const toggleAutoChallengeRun = () => {\n    const el = DOMCacheGetOrSet('toggleAutoChallengeStart');\n    if (player.autoChallengeRunning) {\n        el.style.border = '2px solid red'\n        el.textContent = i18next.t('challenges.autoChallengeSweepOff')\n        G['autoChallengeTimerIncrement'] = 0;\n        toggleAutoChallengeModeText('OFF')\n    } else {\n        el.style.border = '2px solid gold'\n        el.textContent = i18next.t('challenges.autoChallengeSweepOn')\n        toggleAutoChallengeModeText('START')\n        G['autoChallengeTimerIncrement'] = 0;\n    }\n\n    player.autoChallengeRunning = !player.autoChallengeRunning;\n}\n\nexport const toggleAutoChallengeModeText = (i: string) => {\n    const a = DOMCacheGetOrSet('autoChallengeType');\n\n    a.textContent = i18next.t(`challenges.mode${i[0] + i.slice(1).toLowerCase()}`)\n}\n\nexport const toggleAutoAscend = (mode = 0) => {\n    if (mode === 0) {\n        const a = DOMCacheGetOrSet('ascensionAutoEnable');\n        if (player.autoAscend) {\n            a.style.border = '2px solid red'\n            a.textContent = i18next.t('corruptions.autoAscend.off')\n        } else {\n            a.style.border = '2px solid green'\n            a.textContent = i18next.t('corruptions.autoAscend.on')\n        }\n\n        player.autoAscend = !player.autoAscend;\n    } else if (mode === 1 && player.highestSingularityCount >= 25) {\n        const a = DOMCacheGetOrSet('ascensionAutoToggle');\n        if (player.autoAscendMode === 'c10Completions') {\n            player.autoAscendMode = 'realAscensionTime'\n            a.textContent = i18next.t('corruptions.autoAscend.modeRealTime')\n        } else {\n            player.autoAscendMode = 'c10Completions'\n            a.textContent = i18next.t('corruptions.autoAscend.modeCompletions')\n        }\n    }\n}\n\nexport const toggleautoopensCubes = (i: number) => {\n    if (player.highestSingularityCount >= 35) {\n        if (i === 1) {\n            const oc = DOMCacheGetOrSet('openCubes');\n            const oci = DOMCacheGetOrSet('cubeOpensInput');\n            if (player.autoOpenCubes) {\n                oc.textContent = i18next.t('wowCubes.autoOff');\n                oc.style.border = '1px solid red';\n                oci.style.border = '1px solid red';\n            } else {\n                oc.textContent = i18next.t('wowCubes.autoOn', {percent: format(player.openCubes, 0)});\n                oc.style.border = '1px solid green';\n                oci.style.border = '1px solid green';\n            }\n\n            player.autoOpenCubes = !player.autoOpenCubes;\n        } else if (i === 2) {\n            const oc = DOMCacheGetOrSet('openTesseracts');\n            const oci = DOMCacheGetOrSet('tesseractsOpensInput');\n            if (player.autoOpenTesseracts) {\n                oc.textContent = i18next.t('wowCubes.autoOff');\n                oc.style.border = '1px solid red';\n                oci.style.border = '1px solid red';\n            } else {\n                oc.textContent = i18next.t('wowCubes.autoOn', {percent: format(player.openTesseracts, 0)});\n                oc.style.border = '1px solid green';\n                oci.style.border = '1px solid green';\n            }\n\n            player.autoOpenTesseracts = !player.autoOpenTesseracts\n        } else if (i === 3) {\n            const oc = DOMCacheGetOrSet('openHypercubes');\n            const oci = DOMCacheGetOrSet('hypercubesOpensInput');\n            if (player.autoOpenHypercubes) {\n                oc.textContent = i18next.t('wowCubes.autoOff');\n                oc.style.border = '1px solid red';\n                oci.style.border = '1px solid red';\n            } else {\n                oc.textContent = i18next.t('wowCubes.autoOn', {percent: format(player.openHypercubes, 0)});\n                oc.style.border = '1px solid green';\n                oci.style.border = '1px solid green';\n            }\n\n            player.autoOpenHypercubes = !player.autoOpenHypercubes;\n        } else if (i === 4) {\n            const oc = DOMCacheGetOrSet('openPlatonicCube');\n            const oci = DOMCacheGetOrSet('platonicCubeOpensInput');\n            if (player.autoOpenPlatonicsCubes) {\n                oc.textContent = i18next.t('wowCubes.autoOff');\n                oc.style.border = '1px solid red';\n                oci.style.border = '1px solid red';\n            } else {\n                oc.textContent = i18next.t('wowCubes.autoOn', {percent: format(player.openPlatonicsCubes, 0)})\n                oc.style.border = '1px solid green';\n                oci.style.border = '1px solid green';\n            }\n\n            player.autoOpenPlatonicsCubes = !player.autoOpenPlatonicsCubes;\n        }\n    }\n}\n\nexport const updateRuneBlessingBuyAmount = (i: number) => {\n    switch (i) {\n        case 1: {\n            const t = Math.floor(parseFloat((DOMCacheGetOrSet('buyRuneBlessingInput') as HTMLInputElement).value)) || 1;\n            player.runeBlessingBuyAmount = Math.max(t, 1);\n            DOMCacheGetOrSet('buyRuneBlessingToggle').innerHTML = i18next.t('runes.blessings.buyUpTo', {\n                amount: format(player.runeBlessingBuyAmount)\n            })\n            return;\n        }\n        case 2: {\n            const u = Math.floor(parseFloat((DOMCacheGetOrSet('buyRuneSpiritInput') as HTMLInputElement).value)) || 1;\n            player.runeSpiritBuyAmount = Math.max(u, 1);\n            DOMCacheGetOrSet('buyRuneSpiritToggleValue').innerHTML = i18next.t('runes.spirits.buyUpTo', {\n                amount: format(player.runeSpiritBuyAmount)\n            })\n            return;\n        }\n    }\n}\n\nexport const toggleAutoTesseracts = (i: number) => {\n    const el = DOMCacheGetOrSet('tesseractAutoToggle' + i);\n    if (player.autoTesseracts[i]) {\n        el.textContent = i18next.t('general.autoOffBracket')\n        el.style.border = '2px solid red';\n    } else {\n        el.textContent = i18next.t('general.autoOnBracket')\n        el.style.border = '2px solid green';\n    }\n\n    player.autoTesseracts[i] = !player.autoTesseracts[i];\n}\n\nexport const toggleCorruptionLevel = (index: number, value: number) => {\n    const current = player.prototypeCorruptions[index]\n    const maxCorruption = maxCorruptionLevel();\n    if (value > 0 && current < maxCorruption && 0 < index && index <= 9) {\n        player.prototypeCorruptions[index] += Math.min(maxCorruption - current, value)\n    }\n    if (value < 0 && current > 0 && 0 < index && index <= 9) {\n        player.prototypeCorruptions[index] -= Math.min(current, -value)\n    }\n    player.prototypeCorruptions[index] = Math.min(maxCorruption, Math.max(0, player.prototypeCorruptions[index]))\n    if (value === 999 && player.currentChallenge.ascension !== 15) {\n        for (let i = 0; i <= 9; i++) {\n            player.usedCorruptions[i] = 0;\n            player.prototypeCorruptions[i] = 0;\n            if (i > 1) {\n                corruptionDisplay(i)\n            }\n        }\n\n        corruptionDisplay(G['corruptionTrigger'])\n        DOMCacheGetOrSet('corruptionCleanseConfirm').style.visibility = 'hidden';\n\n        if (player.currentChallenge.ascension === 15) {\n            void resetCheck('ascensionChallenge', false, true)\n        }\n    }\n    corruptionDisplay(index)\n    corruptionLoadoutTableUpdate();\n}\n\nexport const toggleCorruptionLoadoutsStats = (stats: boolean) => {\n    player.corruptionShowStats = stats;\n    showCorruptionStatsLoadouts();\n}\n\nexport const toggleAscStatPerSecond = (id: number) => {\n    const el = DOMCacheGetOrSet(`unit${id}`) as HTMLElement | null;\n    if (el === null) {\n        // eslint-disable-next-line no-console\n        console.log(id, 'platonic needs to fix');\n        return;\n    }\n\n    el.textContent = player.ascStatToggles[id] ? '/s' : '';\n    if (id === 6) {\n        el.textContent = '';\n    }\n    player.ascStatToggles[id] = !player.ascStatToggles[id];\n}\n\nexport const toggleHepteractAutoPercentage = async(): Promise<void> => {\n    const amount = await Prompt(i18next.t('wowCubes.hepteractForge.autoCraftPercentagePrompt'));\n\n    if (amount === null) {\n        if (player.toggles[35]) {\n            return Alert(i18next.t('toggles.percentKeptAt', { x: player.hepteractAutoCraftPercentage }))\n        } else {\n            return\n        }\n    }\n\n    const isPercentage = amount.endsWith('%');\n    const rawPercentage = isPercentage ? Number(amount.slice(0, -1)) : Number(amount);\n\n    if (Number.isNaN(rawPercentage) || !Number.isFinite(rawPercentage) || !Number.isInteger(rawPercentage)) {\n        return Alert(i18next.t('general.validation.finiteInt'));\n    } else if (rawPercentage < 0 || rawPercentage > 100) {\n        return Alert(i18next.t('toggles.percentBetweenInclusive', { x: 0, y: 100 }))\n    } else if (rawPercentage === player.hepteractAutoCraftPercentage && player.toggles[35]) {\n        return Alert(i18next.t('toggles.percentKeptAt', { x: player.hepteractAutoCraftPercentage }))\n    }\n\n    player.hepteractAutoCraftPercentage = rawPercentage\n    DOMCacheGetOrSet('autoHepteractPercentage').textContent = i18next.t('wowCubes.hepteractForge.autoSetting', {\n        x: `${player.hepteractAutoCraftPercentage}`\n    })\n    if (player.toggles[35]) {\n        return Alert(i18next.t('toggles.onAscensionHepteractsCraft', {\n            x: player.hepteractAutoCraftPercentage\n        }))\n    }\n}\n\nexport const confirmReply = (confirm = true) => {\n    if (DOMCacheGetOrSet('alertWrapper').style.display === 'block') {\n        (DOMCacheGetOrSet('ok_alert') as HTMLButtonElement).click();\n    }\n    if (DOMCacheGetOrSet('confirmWrapper').style.display === 'block' || DOMCacheGetOrSet('promptWrapper').style.display === 'block') {\n        if (confirm) {\n            (DOMCacheGetOrSet('ok_confirm') as HTMLButtonElement).click();\n        } else {\n            (DOMCacheGetOrSet('cancel_confirm') as HTMLButtonElement).click();\n        }\n    }\n}\n", "import Decimal from 'break_infinity.js';\nimport { player, format, resetCheck } from './Synergism';\nimport { toggleAutoChallengeModeText, toggleChallenges } from './Toggles';\nimport { Globals as G } from './Variables';\nimport { calculateRuneLevels } from './Calculate';\nimport { hepteractEffective } from './Hepteracts';\nimport { productContents } from './Utility';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport { autoResearchEnabled } from './Research';\nimport i18next from 'i18next';\n\nexport const getMaxChallenges = (i: number) => {\n    let maxChallenge = 0;\n    //Transcension Challenges\n    if (i <= 5) {\n        if (player.singularityChallenges.oneChallengeCap.enabled) {\n            return 1\n        }\n        //Start with base 25 max completions\n        maxChallenge = 25;\n        //Check Research 5x5 ('Infinite' T. Challenges)\n        if (player.researches[105] > 0) {\n            return 9001\n        }\n        //Max T. Challenge depends on researches 3x16 to 3x20\n        maxChallenge += 5 * player.researches[65 + i]\n        return maxChallenge\n    }\n    //Reincarnation Challenges\n    if (i <= 10 && i > 5) {\n        if (player.singularityChallenges.oneChallengeCap.enabled) {\n            return 1\n        }\n        //Start with base of 40 max completions\n        maxChallenge = 40;\n        //Cube Upgrade 2x9: +4/level\n        maxChallenge += 4 * player.cubeUpgrades[29];\n        //Shop Upgrade \"Challenge Extension\": +2/level\n        maxChallenge += 2 * player.shopUpgrades.challengeExtension;\n        //Platonic Upgrade 5 (ALPHA): +10\n        if (player.platonicUpgrades[5] > 0) {\n            maxChallenge += 10;\n        }\n        //Platonic Upgrade 10 (BETA): +10\n        if (player.platonicUpgrades[10] > 0) {\n            maxChallenge += 10;\n        }\n        //Platonic Upgrade 15 (OMEGA): +30\n        if (player.platonicUpgrades[15] > 0) {\n            maxChallenge += 30;\n        }\n\n        maxChallenge += 2 * +player.singularityUpgrades.singChallengeExtension.getEffect().bonus\n        maxChallenge += 2 * +player.singularityUpgrades.singChallengeExtension2.getEffect().bonus\n        maxChallenge += 2 * +player.singularityUpgrades.singChallengeExtension3.getEffect().bonus\n\n        maxChallenge += +player.singularityChallenges.oneChallengeCap.rewards.capIncrease\n        return maxChallenge\n    }\n    //Ascension Challenge\n    if (i <= 15 && i > 10) {\n        //Challenge 15 has no formal cap, so return 9001.\n        if (i === 15) {\n            return 0\n        }\n        if (player.singularityChallenges.oneChallengeCap.enabled) {\n            return 1\n        }\n        //Start with base of 30 max completions\n        maxChallenge = 30;\n        //Platonic Upgrade 5 (ALPHA): +5\n        if (player.platonicUpgrades[5] > 0) {\n            maxChallenge += 5;\n        }\n        //Platonic Upgrade 10 (BETA): +5\n        if (player.platonicUpgrades[10] > 0) {\n            maxChallenge += 5;\n        }\n        //Platonic Upgrade 15 (OMEGA): +20\n        if (player.platonicUpgrades[15] > 0) {\n            maxChallenge += 20;\n        }\n\n        maxChallenge += +player.singularityUpgrades.singChallengeExtension.getEffect().bonus\n        maxChallenge += +player.singularityUpgrades.singChallengeExtension2.getEffect().bonus\n        maxChallenge += +player.singularityUpgrades.singChallengeExtension3.getEffect().bonus\n        return maxChallenge\n    }\n\n    return maxChallenge;\n}\n\nexport const challengeDisplay = (i: number, changefocus = true) => {\n    let quarksMultiplier = 1;\n\n    if (changefocus) {\n        G['challengefocus'] = i;\n        DOMCacheGetOrSet('oneChallengeDetails').style.display = 'flex';\n        DOMCacheGetOrSet('startChallenge').style.display = 'block';\n        DOMCacheGetOrSet('retryChallenge').style.display = 'block';\n        G['triggerChallenge'] = i\n    }\n\n    const maxChallenges = getMaxChallenges(i);\n    if (i <= 5 && changefocus){\n        if (player.challengecompletions[i] >= 100){\n            DOMCacheGetOrSet('completionSoftcap').innerHTML = i18next.t('challenges.perCompletionBonus', {\n                x: 100,\n                y: format(CalcECC('transcend',player.challengecompletions[i]),2,true)\n            })\n        } else {\n            DOMCacheGetOrSet('completionSoftcap').textContent = i18next.t('challenges.perCompletionBonusEmpty')\n        }\n    }\n\n\n    if (i > 5 && i <= 10) {\n        quarksMultiplier = 10;\n        if (player.challengecompletions[i] >= 25 && changefocus){\n            DOMCacheGetOrSet('completionSoftcap').innerHTML = i18next.t('challenges.perCompletionBonus', {\n                x: 25,\n                y: format(CalcECC('reincarnation',player.challengecompletions[i]),2,true)\n            })\n        } else {\n            DOMCacheGetOrSet('completionSoftcap').textContent = i18next.t('challenges.perCompletionBonusEmpty')\n        }\n    }\n    if (i > 10) {\n        if (player.challengecompletions[i] >= 10){\n            DOMCacheGetOrSet('completionSoftcap').innerHTML = i18next.t('challenges.perCompletionBonus', {\n                x: 10,\n                y: format(CalcECC('ascension',player.challengecompletions[i]),2,true)\n            })\n        } else {\n            DOMCacheGetOrSet('completionSoftcap').textContent = i18next.t('challenges.perCompletionBonusEmpty')\n        }\n    }\n    let descriptor = ''\n    const a = DOMCacheGetOrSet('challengeName');\n    const b = DOMCacheGetOrSet('challengeFlavor');\n    const c = DOMCacheGetOrSet('challengeRestrictions');\n    const d = DOMCacheGetOrSet('challengeGoal');\n    const e = DOMCacheGetOrSet('challengePer1').childNodes[0];\n    const f = DOMCacheGetOrSet('challengePer2').childNodes[0];\n    const g = DOMCacheGetOrSet('challengePer3').childNodes[0];\n    const h = DOMCacheGetOrSet('challengeFirst1');\n    const j = DOMCacheGetOrSet('challengeQuarkBonus');\n    const k = DOMCacheGetOrSet('startChallenge');\n    const l = DOMCacheGetOrSet('challengeCurrent1');\n    const m = DOMCacheGetOrSet('challengeCurrent2');\n    const n = DOMCacheGetOrSet('challengeCurrent3');\n\n    if (i === G['challengefocus']) {\n        const completions = `${player.challengecompletions[i]}/${format(maxChallenges)}`\n        const special = (i >= 6 && i <= 10) || i === 15\n        const goal = format(challengeRequirement(i, player.challengecompletions[i], special ? i : 0))\n\n        let current1 = ''\n        let current2 = ''\n        let current3 = ''\n\n        switch (i) {\n            case 1: {\n                current1 = current2 = format(10 * CalcECC('transcend', player.challengecompletions[1]))\n                current3 = format(0.04 * CalcECC('transcend', player.challengecompletions[1]), 2, true)\n                break\n            }\n            case 2: {\n                current1 = current2 = format(5 * CalcECC('transcend', player.challengecompletions[2]))\n                break\n            }\n            case 3: {\n                current1 = format(0.04 * player.challengecompletions[3], 2, true)\n                current2 = format(0.5 * CalcECC('transcend', player.challengecompletions[3]), 2, true)\n                current3 = format(0.01 * CalcECC('transcend', player.challengecompletions[3]), 2, true)\n                break\n            }\n            case 4: {\n                current1 = format(5 * CalcECC('transcend', player.challengecompletions[4]))\n                current2 = format(2 * CalcECC('transcend', player.challengecompletions[4]))\n                current3 = format(0.5 * CalcECC('transcend', player.challengecompletions[4]), 2, true)\n                break\n            }\n            case 5: {\n                current1 = format(0.5 + CalcECC('transcend', player.challengecompletions[5]) / 100, 2, true)\n                current2 = format(Math.pow(10, CalcECC('transcend', player.challengecompletions[5])))\n                break\n            }\n            case 6: {\n                current1 = format(Math.pow(0.965, CalcECC('reincarnation', player.challengecompletions[6])), 3, true)\n                current2 = format(10 * CalcECC('reincarnation', player.challengecompletions[6]))\n                current3 = format(2 * CalcECC('reincarnation', player.challengecompletions[6]))\n                break\n            }\n            case 7: {\n                current1 = format(1 + 0.04 * CalcECC('reincarnation', player.challengecompletions[7]), 2, true)\n                current2 = current3 = format(10 * CalcECC('reincarnation', player.challengecompletions[7]))\n                break\n            }\n            case 8: {\n                current1 = format(0.25 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true)\n                current2 = format(20 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true)\n                current3 = format(4 * CalcECC('reincarnation', player.challengecompletions[8]), 2, true)\n                break\n            }\n            case 9: {\n                current1 = format(CalcECC('reincarnation', player.challengecompletions[9]))\n                current2 = format(Math.pow(1.1, CalcECC('reincarnation', player.challengecompletions[9])), 2, true)\n                current3 = format(20 * CalcECC('reincarnation', player.challengecompletions[9]), 2, true)\n                break\n            }\n            case 10: {\n                current1 = format(100 * CalcECC('reincarnation', player.challengecompletions[10]))\n                current2 = format(2 * CalcECC('reincarnation', player.challengecompletions[10]))\n                current3 = format(10 * CalcECC('reincarnation', player.challengecompletions[10]), 2, true)\n                break\n            }\n            case 11: {\n                current1 = format(12 * CalcECC('ascension', player.challengecompletions[11]))\n                current2 = format(Decimal.pow(1e5, CalcECC('ascension', player.challengecompletions[11])))\n                current3 = format(80 * CalcECC('ascension', player.challengecompletions[11]))\n                break\n            }\n            case 12: {\n                current1 = format(50 * CalcECC('ascension', player.challengecompletions[12]))\n                current2 = format(12 * CalcECC('ascension', player.challengecompletions[12]))\n                current3 = format(CalcECC('ascension', player.challengecompletions[12]))\n                break\n            }\n            case 13: {\n                current1 = format(100 - 100 * Math.pow(0.966, CalcECC('ascension', player.challengecompletions[13])), 3, true)\n                current2 = format(6 * CalcECC('ascension', player.challengecompletions[13]))\n                current3 = format(3 * CalcECC('ascension', player.challengecompletions[13]))\n                break\n            }\n            case 14: {\n                current1 = format(50 * CalcECC('ascension', player.challengecompletions[14]))\n                current2 = format(1 * player.challengecompletions[14])\n                current3 = format(200 * CalcECC('ascension', player.challengecompletions[14]))\n                break\n            }\n        }\n\n        a.textContent = i18next.t(`challenges.${i}.name`, {\n            value: completions,\n            completions: player.challengecompletions[i],\n            max: maxChallenges\n        })\n        b.textContent = i18next.t(`challenges.${i}.flavor`)\n        c.textContent = i18next.t(`challenges.${i}.restrictions`)\n        d.textContent = i18next.t(`challenges.${i}.goal`, { value: goal })\n        e.textContent = i18next.t(`challenges.${i}.per.1`)\n        f.textContent = i18next.t(`challenges.${i}.per.2`)\n        g.textContent = i18next.t(`challenges.${i}.per.3`)\n        h.textContent = i18next.t(`challenges.${i}.first`)\n        k.textContent = i18next.t(`challenges.${i}.start`)\n        l.textContent = i18next.t(`challenges.${i}.current.1`, { value: current1 })\n        m.textContent = i18next.t(`challenges.${i}.current.2`, { value: current2 })\n        n.textContent = i18next.t(`challenges.${i}.current.3`, { value: current3 })\n    }\n\n    if (i === 15 && G['challengefocus'] === 15 && maxChallenges === 0) {\n        d.textContent = i18next.t('challenges.15.noGoal')\n    }\n\n    const scoreArray1 = [0, 8, 10, 12, 15, 20, 60, 80, 120, 180, 300]\n    const scoreArray2 = [0, 10, 12, 15, 20, 30, 80, 120, 180, 300, 450]\n    const scoreArray3 = [0, 20, 30, 50, 100, 200, 250, 300, 400, 500, 750];\n    const scoreArray4 = [0, 10000, 10000, 10000, 10000, 10000, 2000, 3000, 4000, 5000, 7500]\n    let scoreDisplay = 0;\n    if (i <= 5){\n        if (player.highestchallengecompletions[i] >= 9000) {\n            scoreDisplay = scoreArray4[i]\n        } else if (player.highestchallengecompletions[i] >= 750){\n            scoreDisplay = scoreArray3[i]\n        } else if (player.highestchallengecompletions[i] >= 75){\n            scoreDisplay = scoreArray2[i]\n        } else {\n            scoreDisplay = scoreArray1[i]\n        }\n    }\n    if (i > 5 && i <= 10){\n        if (player.highestchallengecompletions[i] >= 60){\n            scoreDisplay = scoreArray3[i]\n        } else if (player.highestchallengecompletions[i] >= 25){\n            scoreDisplay = scoreArray2[i]\n        } else {\n            scoreDisplay = scoreArray1[i]\n        }\n    }\n    if (changefocus) {\n        j.textContent = ''\n    }\n    if (player.ascensionCount === 0) {\n        descriptor = 'Quarks';\n        j.style.color = 'cyan'\n    }\n    if (player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < maxChallenges && changefocus && player.ascensionCount < 1) {\n        j.textContent = i18next.t(descriptor ? 'challenges.firstTimeBonusQuarks' : 'challenges.firstTimeBonus', {\n            x: Math.floor(quarksMultiplier * player.highestchallengecompletions[i] / 10 + 1 + player.cubeUpgrades[1] + player.cubeUpgrades[11] + player.cubeUpgrades[21] + player.cubeUpgrades[31] + player.cubeUpgrades[41])\n        })\n    }\n    if (player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < maxChallenges && changefocus && player.ascensionCount >= 1){\n        j.textContent = i18next.t('challenges.ascensionBankAdd', {\n            x: i > 5 ? 2 : 1,\n            y: scoreDisplay\n        })\n    }\n    if (player.challengecompletions[i] >= player.highestchallengecompletions[i] && player.highestchallengecompletions[i] < 10 && i > 10) {\n        j.textContent = i18next.t('challenges.hypercubeOneTimeBonus')\n    }\n\n    if (changefocus) {\n        const el = DOMCacheGetOrSet('toggleAutoChallengeIgnore');\n        el.style.display = i <= (autoAscensionChallengeSweepUnlock() ? 15 : 10) && player.researches[150] > 0 ? 'block' : 'none';\n        el.style.border = player.autoChallengeToggles[i] ? '2px solid green' : '2px solid red';\n\n        if (i >= 11 && i <= 15) {\n            if (player.autoChallengeToggles[i]) {\n                el.textContent = i18next.t('challenges.autoAscRunChalOn', { x: i })\n            } else {\n                el.textContent = i18next.t('challenges.autoAscRunChalOff', { x: i })\n            }\n        } else {\n            if (player.autoChallengeToggles[i]) {\n                el.textContent = i18next.t('challenges.autoRunChalOn', { x: i })\n            } else {\n                el.textContent = i18next.t('challenges.autoRunChalOff', { x: i })\n            }\n        }\n    }\n\n    const ella = DOMCacheGetOrSet('toggleAutoChallengeStart');\n    (player.autoChallengeRunning) ?\n        (ella.textContent = i18next.t('challenges.autoChallengeSweepOn'), ella.style.border = '2px solid gold') :\n        (ella.textContent = i18next.t('challenges.autoChallengeSweepOff'), ella.style.border = '2px solid red');\n}\n\nexport const getChallengeConditions = (i?: number) => {\n    if (player.currentChallenge.reincarnation === 9) {\n        G['rune1level'] = 1;\n        G['rune2level'] = 1;\n        G['rune3level'] = 1;\n        G['rune4level'] = 1;\n        G['rune5level'] = 1;\n        player.crystalUpgrades = [0, 0, 0, 0, 0, 0, 0, 0]\n    }\n    G['prestigePointGain'] = new Decimal('0')\n    if (typeof i === 'number') {\n        if (i >= 6){\n            G['transcendPointGain'] = new Decimal('0')\n        }\n        if (i >= 11){\n            G['reincarnationPointGain'] = new Decimal('0')\n        }\n    }\n    calculateRuneLevels();\n}\n\nexport const toggleRetryChallenges = () => {\n    DOMCacheGetOrSet('retryChallenge').textContent = player.retrychallenges\n        ? i18next.t('challenges.retryChallengesOff')\n        : i18next.t('challenges.retryChallengesOn')\n\n    player.retrychallenges = !player.retrychallenges;\n}\n\nexport const highestChallengeRewards = (chalNum: number, highestValue: number) => {\n    let multiplier = 1 / 10\n    if (chalNum >= 6) {\n        multiplier = 1;\n    }\n    if (player.ascensionCount === 0) {\n        player.worlds.add(1 + Math.floor(highestValue * multiplier) * 100 / 100)\n    }\n    // Addresses a bug where auto research does not work even if you unlock research\n    if (autoResearchEnabled() && player.ascensionCount === 0 && chalNum >= 6 && chalNum <= 10) {\n        player.roombaResearchIndex = 0;\n        player.autoResearch = G['researchOrderByCost'][player.roombaResearchIndex];\n    }\n}\n\n//Works to mitigate the difficulty of calculating challenge multipliers when considering softcapping\nexport const calculateChallengeRequirementMultiplier = (\n    type: 'transcend' | 'reincarnation' | 'ascension',\n    completions: number,\n    special = 0\n) => {\n    let requirementMultiplier = Math.max(\n        1,\n        G['hyperchallengedMultiplier'][player.usedCorruptions[4]] / (1 + player.platonicUpgrades[8] / 2.5)\n    );\n    if (type === 'ascension') {\n        //Normalize back to 1 if looking at ascension challenges in particular.\n        requirementMultiplier = 1;\n    }\n    switch (type) {\n        case 'transcend':\n            requirementMultiplier *= G['challenge15Rewards'].transcendChallengeReduction;\n\n            (completions >= 75) ?\n                requirementMultiplier *= Math.pow(1 + completions, 12) / Math.pow(75, 8) :\n                requirementMultiplier *= Math.pow(1 + completions, 2);\n\n            if (completions >= 1000) {\n                requirementMultiplier *= 10 * Math.pow(completions / 1000, 3)\n            }\n            if (completions >= 9000) {\n                requirementMultiplier *= 1337\n            }\n            if (completions >= 9001) {\n                requirementMultiplier *= (completions - 8999)\n            }\n            return (requirementMultiplier)\n        case 'reincarnation':\n            if (completions >= 100 && (special === 9 || special === 10)) {\n                requirementMultiplier *= Math.pow(1.05, (completions - 100) * (1 + (completions - 100) / 20))\n            }\n            if (completions >= 90) {\n                if (special === 6) {\n                    requirementMultiplier *= 100\n                } else if (special == 7) {\n                    requirementMultiplier *= 50\n                } else if (special == 8) {\n                    requirementMultiplier *= 10\n                } else {\n                    requirementMultiplier *= 4\n                }\n            }\n            if (completions >= 80) {\n                if (special === 6) {\n                    requirementMultiplier *= 50\n                } else if (special === 7) {\n                    requirementMultiplier *= 20\n                } else if (special === 8) {\n                    requirementMultiplier *= 4\n                } else {\n                    requirementMultiplier *= 2\n                }\n            }\n            if (completions >= 70){\n                if (special === 6) {\n                    // Multiplier is reduced significantly for challenges requiring mythos shards\n                    requirementMultiplier *= 20\n                } else if (special === 7) {\n                    requirementMultiplier *= 10\n                } else if (special === 8) {\n                    requirementMultiplier *= 2\n                } else {\n                    requirementMultiplier *= 1\n                }\n            }\n            if (completions >= 60){\n                if (special === 9 || special === 10) {\n                    requirementMultiplier *= Math.pow(1000, (completions - 60) * (1 - 0.01 * player.shopUpgrades.challengeTome - 0.01 * player.shopUpgrades.challengeTome2) / 10)\n                }\n            }\n            if (completions >= 25){\n                requirementMultiplier *= Math.pow(1 + completions, 5) / 625\n            }\n            if (completions < 25){\n                requirementMultiplier *= Math.min(Math.pow(1 + completions, 2), Math.pow(1.3797, completions));\n            }\n            requirementMultiplier *= G['challenge15Rewards'].reincarnationChallengeReduction\n            return requirementMultiplier\n        case 'ascension':\n            if (special !== 15) {\n                (completions >= 10) ?\n                    requirementMultiplier *= (2 * (1 + completions) - 10) :\n                    requirementMultiplier *= (1 + completions);\n            } else {\n                requirementMultiplier *= Math.pow(1000, completions);\n            }\n            return (requirementMultiplier)\n    }\n}\n\n/**\n * Works to mitigate the difficulty of calculating challenge reward multipliers when considering softcapping\n */\nexport const CalcECC = (type: 'transcend' | 'reincarnation' | 'ascension', completions: number) => { // ECC stands for \"Effective Challenge Completions\"\n    let effective = 0;\n    switch (type) {\n        case 'transcend':\n            effective += Math.min(100, completions);\n            effective += 1 / 20 * (Math.min(1000, Math.max(100, completions)) - 100);\n            effective += 1 / 100 * (Math.max(1000, completions) - 1000)\n            return (effective);\n        case 'reincarnation':\n            effective += Math.min(25, completions);\n            effective += 1 / 2 * (Math.min(75, Math.max(25, completions)) - 25);\n            effective += 1 / 10 * (Math.max(75, completions) - 75)\n            return (effective);\n        case 'ascension':\n            effective += Math.min(10, completions);\n            effective += 1 / 2 * (Math.max(10, completions) - 10);\n            return (effective);\n    }\n}\n\nexport const challengeRequirement = (challenge: number, completion: number, special = 0) => {\n    const base = G['challengeBaseRequirements'][challenge-1];\n    if (challenge <= 5) {\n        return Decimal.pow(10, base * calculateChallengeRequirementMultiplier('transcend', completion, special))\n    } else if (challenge <= 10) {\n        let c10Reduction = 0;\n        if (challenge === 10) {\n            c10Reduction = (1e8 * (player.researches[140] + player.researches[155] + player.researches[170] + player.researches[185]) + 2e7 * (player.shopUpgrades.challengeTome + player.shopUpgrades.challengeTome2))\n        }\n        return Decimal.pow(10, (base - c10Reduction) * calculateChallengeRequirementMultiplier('reincarnation', completion, special))\n    } else if (challenge <= 14) {\n        return calculateChallengeRequirementMultiplier('ascension', completion, special)\n    } else if (challenge === 15) {\n        return Decimal.pow(10, 1 * Math.pow(10, 30) * calculateChallengeRequirementMultiplier('ascension', completion, special))\n    } else {\n        return 0\n    }\n}\n\n/**\n * Function that handles the autochallenge feature.\n * Currently includes ability to enter a challenge, leave a challenge\n * and start a challenge loop with specified challenges from index 1 to 10.\n * @param dt\n * @returns none\n */\nexport const runChallengeSweep = (dt: number) => {\n    // Do not run if any of these conditions hold\n    if (\n        player.researches[150] === 0 || // Research 6x25 is 0\n        !player.autoChallengeRunning // Auto challenge is toggled off\n    ) {\n        return\n    }\n\n    // Increment auto challenge timer\n    G['autoChallengeTimerIncrement'] += dt;\n\n    // Determine what Action you can take with the current state of the savefile\n    let action = 'none';\n    if (player.currentChallenge.reincarnation !== 0 ||\n        player.currentChallenge.transcension !== 0) {\n        // If you are in a challenge, you'd only want the automation to exit the challenge\n        action = 'exit';\n    } else if (player.autoChallengeIndex === 1) {\n        // If the index is set to 1, then you are at the start of a loop\n        action = 'start';\n    } else {\n        // If neither of the above are true, automation will want to enter a challenge\n        action = 'enter';\n    }\n\n    // In order to earn C15 Exponent, stop runChallengeSweep() 5 seconds before the auto ascension\n    // runs during the C15, Auto Challenge Sweep, Autcension and Mode: Real Time.\n    if (autoAscensionChallengeSweepUnlock() && player.currentChallenge.ascension === 15 && player.shopUpgrades.challenge15Auto === 0 &&\n        (action === 'start' || action === 'enter') && player.autoAscend && player.challengecompletions[11] > 0 && player.cubeUpgrades[10] > 0 &&\n        player.autoAscendMode === 'realAscensionTime' && player.ascensionCounterRealReal >= Math.max(0.1, player.autoAscendThreshold - 5)) {\n        action = 'wait';\n        toggleAutoChallengeModeText('WAIT');\n        return;\n    }\n\n    // Action: Exit challenge\n    if (G['autoChallengeTimerIncrement'] >= player.autoChallengeTimer.exit && action === 'exit') {\n\n        // Determine if you're in a reincarnation or transcension challenge\n        const challengeType = player.currentChallenge.reincarnation !== 0 ? 'reincarnation' : 'transcension';\n\n        // Reset our autochallenge timer\n        G['autoChallengeTimerIncrement'] = 0;\n\n        // Increment our challenge index for when we enter (or start) next challenge\n        const nowChallenge = player.autoChallengeIndex;\n        const nextChallenge = getNextChallenge(nowChallenge + 1);\n\n        // Reset based on challenge type\n        if (challengeType === 'transcension') {\n            void resetCheck('transcensionChallenge', undefined, true);\n        }\n        if (challengeType === 'reincarnation') {\n            void resetCheck('reincarnationChallenge', undefined, true);\n        }\n\n        // If you don't need to start all the challenges, the challenges will end.\n        if (nextChallenge <= 10) {\n            /* If the next challenge is before the current challenge,\n               it will be in 'START' mode, otherwise it will be in 'ENTER' mode. */\n            if (nextChallenge < nowChallenge) {\n                player.autoChallengeIndex = 1;\n                toggleAutoChallengeModeText('START');\n            } else {\n                player.autoChallengeIndex = nextChallenge;\n                toggleAutoChallengeModeText('ENTER');\n            }\n        }\n        return;\n    }\n\n    // Action: Enter a challenge (not inside one)\n    if ((G['autoChallengeTimerIncrement'] >= player.autoChallengeTimer.start && action === 'start') || (G['autoChallengeTimerIncrement'] >= player.autoChallengeTimer.enter && action === 'enter')) {\n\n        // Reset our autochallenge timer\n        G['autoChallengeTimerIncrement'] = 0;\n\n        // This calculates which challenge this algorithm will run first, based on\n        // the first challenge which has automation toggled ON\n        const nowChallenge = player.autoChallengeIndex;\n        const nextChallenge = getNextChallenge(nowChallenge);\n\n        // Do not start the challenge if all the challenges have been completed.\n        if (nextChallenge === 11) {\n            return;\n        }\n\n        // Set our index to calculated starting challenge and run the challenge\n        player.autoChallengeIndex = nextChallenge;\n        toggleChallenges(player.autoChallengeIndex, true);\n\n        // Sets Mode to \"EXIT\" as displayed in the challenge tab\n        toggleAutoChallengeModeText('EXIT');\n        return;\n    }\n}\n\n// Look for the next uncompleted challenge.\nexport const getNextChallenge = (startChallenge: number, maxSkip = false, min = 1, max = 10) => {\n    let nextChallenge = startChallenge;\n    /* Calculate the smallest challenge index we want to enter.\n       Our minimum is the current index, but if that challenge is fully completed\n       or toggled off we shouldn't run it, so we increment upwards in these cases. */\n    for (let index = nextChallenge; index <= max; index++) {\n        if (!player.autoChallengeToggles[index] ||\n            (maxSkip === false && index !== 15 && player.highestchallengecompletions[index] >= getMaxChallenges(index))) {\n            nextChallenge += 1;\n        } else {\n            break;\n        }\n    }\n\n    /* If the above algorithm sets the index above 10, the loop is complete\n       and thus do not need to enter more challenges. This sets our index to 1\n       so in the next iteration it knows we want to start a loop. */\n    if (nextChallenge > max) {\n        // If the challenge reaches 11 or higher, return it to 1 and check again.\n        nextChallenge = min;\n        for (let index = nextChallenge; index <= max; index++) {\n            if (!player.autoChallengeToggles[index] ||\n                (maxSkip === false && index !== 15 && player.highestchallengecompletions[index] >= getMaxChallenges(index))) {\n                nextChallenge += 1;\n            } else {\n                break;\n            }\n        }\n    }\n    return nextChallenge;\n}\n\nexport const autoAscensionChallengeSweepUnlock = () => {\n    return player.highestSingularityCount >= 101 && player.shopUpgrades.instantChallenge2 > 0;\n}\n\nexport const challenge15ScoreMultiplier = () => {\n    const arr = [\n        1 + 5/10000 * hepteractEffective('challenge'), // Challenge Hepteract\n        1 + 0.25 * player.platonicUpgrades[15] // Omega Upgrade\n    ]\n    return productContents(arr)\n}\n", "import { player, format, formatTimeShort } from './Synergism';\nimport type { DecimalSource } from 'break_infinity.js';\nimport Decimal from 'break_infinity.js';\nimport { antSacrificePointsToMultiplier } from './Ants';\nimport { Synergism } from './Events';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport { Globals as G } from './Variables';\nimport { applyCorruptions } from './Corruptions';\nimport { Notification } from './UpdateHTML';\nimport { IconSets } from './Themes';\nimport i18next from 'i18next';\n\n// The categories are the different tables & storages for each type.\nexport type Category = 'ants' | 'reset' | 'ascend' | 'singularity';\n// The kinds are the different contents.\nexport type Kind = 'antsacrifice' | 'prestige' | 'transcend' | 'reincarnate' | 'ascend' | 'singularity';\n\n// Common to every kind\ninterface ResetHistoryEntryBase {\n    date: number\n    seconds: number\n    kind: Kind\n}\n\nexport type ResetHistoryEntryAntSacrifice = ResetHistoryEntryBase & {\n    antSacrificePointsAfter: number\n    antSacrificePointsBefore: number\n    baseELO: number\n    crumbs: string\n    crumbsPerSecond: string\n    effectiveELO: number\n    obtainium: number\n    offerings: number\n    kind: 'antsacrifice'\n};\n\nexport type ResetHistoryEntryPrestige = ResetHistoryEntryBase & {\n    offerings: number\n    diamonds: string\n    kind: 'prestige'\n}\nexport type ResetHistoryEntryTranscend = ResetHistoryEntryBase & {\n    offerings: number\n    mythos: string\n    kind: 'transcend'\n}\nexport type ResetHistoryEntryReincarnate = ResetHistoryEntryBase & {\n    offerings: number\n    particles: string\n    obtainium: number\n    kind: 'reincarnate'\n}\n\nexport type ResetHistoryEntryAscend = ResetHistoryEntryBase & {\n    c10Completions: number\n    usedCorruptions: number[]\n    corruptionScore: number\n    wowCubes: number\n    wowTesseracts: number\n    wowHypercubes: number\n    wowPlatonicCubes: number\n    wowHepteracts: number\n    currentChallenge?: number\n    kind: 'ascend'\n}\n\nexport interface ResetHistoryEntrySingularity extends ResetHistoryEntryBase {\n    singularityCount: number\n    quarks: number\n    goldenQuarks: number\n    wowTribs: number\n    tessTribs: number\n    hyperTribs: number\n    platTribs: number\n    octeracts: number\n    c15Score: number\n    quarkHept: number\n    kind: 'singularity'\n}\n\n// The set of common fields (in practice this is equal to the Base).\nexport type ResetHistoryEntryUnion =\n    ResetHistoryEntryAntSacrifice\n    | ResetHistoryEntryPrestige\n    | ResetHistoryEntryTranscend\n    | ResetHistoryEntryReincarnate\n    | ResetHistoryEntryAscend\n    | ResetHistoryEntrySingularity\n\n// The intersection of all of these types is invalid (\"never\") because of the conflicting `kind` field declarations.\n// Luckily, we can filter the more specific `kind` fields and still end up with a valid type declaration by using\n// the `kind` field from the base.\n// Fun fact: This exact field name also happens to be the example in the TypeScript documentation.\ntype RemoveKindField<T> = {\n    [K in keyof T as Exclude<K, 'kind'>]: T[K]\n};\n\n// The intersection of all possible fields we can possibly find in a history row. We'll keep the kind field from the\n// base, which is a simple string.\ntype ResetHistoryEntryIntersect =\n    ResetHistoryEntryBase\n    & Partial<RemoveKindField<ResetHistoryEntryAntSacrifice>>\n    & Partial<RemoveKindField<ResetHistoryEntryPrestige>>\n    & Partial<RemoveKindField<ResetHistoryEntryTranscend>>\n    & Partial<RemoveKindField<ResetHistoryEntryReincarnate>>\n    & Partial<RemoveKindField<ResetHistoryEntryAscend>>\n    & Partial<RemoveKindField<ResetHistoryEntrySingularity>>\n\n// The subset of keys that we'll directly print out using generic code.\nexport type ResetHistoryGainType = keyof Pick<ResetHistoryEntryIntersect,\n    'offerings'\n    | 'obtainium'\n    | 'particles'\n    | 'diamonds'\n    | 'mythos'\n    | 'wowCubes'\n    | 'wowTesseracts'\n    | 'wowHypercubes'\n    | 'wowPlatonicCubes'\n    | 'wowHepteracts'\n    | 'singularityCount'\n    | 'quarks'\n    | 'goldenQuarks'\n    | 'wowTribs'\n    | 'tessTribs'\n    | 'hyperTribs'\n    | 'platTribs'\n    | 'octeracts'\n    | 'c15Score'\n    | 'quarkHept'>\n\n// A formatter that allows formatting a string. The string should be in a form parsable by break_infinity.js.\nconst formatDecimalSource = (numOrStr: DecimalSource) => {\n    return format(typeof numOrStr === 'string' ? new Decimal(numOrStr) : numOrStr);\n}\n\n// A formatter that, if given a number, allows the data to be divided by the amount of seconds spent.\nconst conditionalFormatPerSecond = (numOrStr: DecimalSource, data: ResetHistoryEntryBase) => {\n    // Strings (decimals) are currently not supported.\n    if (typeof numOrStr === 'string') {\n        return formatDecimalSource(numOrStr);\n    }\n\n    if (typeof (numOrStr) === 'number' && player.historyShowPerSecond && data.seconds !== 0) {\n        if (numOrStr === 0) { // work around format(0, 3) return 0 instead of 0.000, for consistency\n            return '0.000/s';\n        }\n        // Use \"long\" display for smaller numbers, but once it exceeds 1000, use the \"short\" display.\n        // This'll keep decimals intact until 1000 instead of 10 without creating unwieldy numbers between e6-e13.\n        return format(numOrStr / data.seconds, 3, numOrStr < 1000) + '/s';\n    }\n    return format(numOrStr);\n}\n\n// Metadata and formatting tools for simple table cells (gains).\nconst historyGains: Record<\n    ResetHistoryGainType,\n    {\n        img: string\n        imgTitle: string\n        formatter?: (str: DecimalSource, data: ResetHistoryEntryUnion) => string\n        onlyif?: (data: ResetHistoryEntryUnion) => boolean\n    }\n> = {\n    offerings: {\n        img: 'Offering.png',\n        formatter: formatDecimalSource,\n        imgTitle: 'Offerings'\n    },\n    obtainium: {\n        img: 'Obtainium.png',\n        formatter: formatDecimalSource,\n        imgTitle: 'Obtainium'\n    },\n    particles: {\n        img: 'Particle.png',\n        formatter: formatDecimalSource,\n        imgTitle: 'Particles'\n    },\n    diamonds: {\n        img: 'Diamond.png',\n        formatter: formatDecimalSource,\n        imgTitle: 'Diamonds'\n    },\n    mythos: {\n        img: 'Mythos.png',\n        formatter: formatDecimalSource,\n        imgTitle: 'Mythos'\n    },\n    wowTesseracts: {\n        img: 'TinyWow4.png',\n        formatter: conditionalFormatPerSecond,\n        imgTitle: 'Wow! Tesseracts'\n    },\n    wowHypercubes: {\n        img: 'TinyWow5.png',\n        formatter: conditionalFormatPerSecond,\n        imgTitle: 'Wow! Hypercubes',\n        onlyif: () => player.challengecompletions[13] > 0\n    },\n    wowCubes: {\n        img: 'TinyWow3.png',\n        formatter: conditionalFormatPerSecond,\n        imgTitle: 'Wow! Cubes'\n    },\n    wowPlatonicCubes: {\n        img: 'TinyWow6.png',\n        formatter: conditionalFormatPerSecond,\n        imgTitle: 'Platonic Cubes',\n        onlyif: () => player.challengecompletions[14] > 0\n    },\n    wowHepteracts: {\n        img: 'TinyWow7.png',\n        formatter: conditionalFormatPerSecond,\n        imgTitle: 'Hepteracts',\n        onlyif: () => player.achievements[255] > 0\n    },\n    singularityCount: {\n        img: 'TinyS.png',\n        formatter: formatDecimalSource,\n        imgTitle: 'Singularity Count',\n        onlyif: () => player.highestSingularityCount > 0\n    },\n    quarks: {\n        img: 'Quark.png',\n        formatter: formatDecimalSource,\n        imgTitle: 'Quarks',\n        onlyif: () => player.highestSingularityCount > 0\n    },\n    goldenQuarks: {\n        img: 'GoldenQuark.png',\n        formatter: formatDecimalSource,\n        imgTitle: 'Golden Quarks',\n        onlyif: () => player.highestSingularityCount > 0\n    },\n    wowTribs: {\n        img: 'TinyWow3.png',\n        formatter: formatDecimalSource,\n        imgTitle: 'Cube Tributes',\n        onlyif: () => player.highestSingularityCount > 0\n    },\n    tessTribs: {\n        img: 'TinyWow4.png',\n        formatter: formatDecimalSource,\n        imgTitle: 'Tesseract Gifts',\n        onlyif: () => player.highestSingularityCount > 0\n    },\n    hyperTribs: {\n        img: 'TinyWow5.png',\n        formatter: formatDecimalSource,\n        imgTitle: 'Hypercube Bendictions',\n        onlyif: () => player.highestSingularityCount > 0\n    },\n    platTribs: {\n        img: 'TinyWow6.png',\n        formatter: formatDecimalSource,\n        imgTitle: 'Platonics Opened',\n        onlyif: () => player.highestSingularityCount > 0\n    },\n    octeracts: {\n        img: 'TinyWow8.png',\n        formatter: formatDecimalSource,\n        imgTitle: 'Octeracts',\n        onlyif: () => player.singularityUpgrades.octeractUnlock.getEffect().bonus > 0\n    },\n    c15Score: {\n        img: 'TinyChallenge15.png',\n        formatter: formatDecimalSource,\n        imgTitle: 'C15 score',\n        onlyif: () => player.singularityCount > 0\n    },\n    quarkHept: {\n        img: 'TinyQuarkHept.png',\n        formatter: formatDecimalSource,\n        imgTitle: 'Quark Hept',\n        onlyif: () => player.singularityCount > 0\n    }\n};\n\n// Order in which to display the above\nconst historyGainsOrder: ResetHistoryGainType[] = [\n    'offerings', 'obtainium',\n    'particles', 'diamonds', 'mythos',\n    'wowCubes', 'wowTesseracts', 'wowHypercubes', 'wowPlatonicCubes', 'wowHepteracts',\n    'singularityCount', 'quarks', 'goldenQuarks', 'wowTribs', 'tessTribs',\n    'hyperTribs', 'platTribs', 'octeracts', 'c15Score', 'quarkHept'\n];\n\n// The various kinds and their associated images.\nconst historyKinds: Record<Kind, { img: string }> = {\n    'antsacrifice': {img: 'SacrificeNoBorder.png'},\n    'prestige': {img: 'TinyP.png'},\n    'transcend': {img: 'TinyT.png'},\n    'reincarnate': {img: 'TinyR.png'},\n    'ascend': {img: 'TinyA.png'},\n    'singularity': {img: 'TinyS.png'}\n};\n\n// List of categories and the IDs of the associated table in the DOM.\nconst resetHistoryTableMapping: Record<Category, string> = {\n    'ants': 'historyAntsTable',\n    'reset': 'historyResetTable',\n    'ascend': 'historyAscendTable',\n    'singularity': 'historySingularityTable'\n};\n\n// Images associated with the various corruptions.\nconst resetHistoryCorruptionImages = [\n    'CorruptViscocity.png',\n    'CorruptSpatialDilation.png',\n    'CorruptHyperchallenged.png',\n    'CorruptScientificIlliteracy.png',\n    'CorruptDeflation.png',\n    'CorruptExtinction.png',\n    'CorruptDrought.png',\n    'CorruptFinancialCollapse.png'\n];\n\nconst resetHistoryCorruptionTitles = [\n    'Viscosity [Accelerators and Multipliers]',\n    'Spacial Dilation [Time]',\n    'Hyperchallenged [Challenge Requirements]',\n    'Scientific Illiteracy [Obtainium]',\n    'Market Deflation [Diamonds]',\n    'Extinction [Ants]',\n    'Drought [Offering EXP]',\n    'Financial Recession [Coins]'\n];\n\n// A formatting aid that removes the mantissa from a formatted string. Converts \"2.5e1000\" to \"e1000\".\nconst extractStringExponent = (str: string) => {\n    let m: RegExpMatchArray | null;\n    return (m = /e\\+?(.+)/.exec(str)) !== null ? `e${m[1]}` : str;\n}\n\n// Add an entry to the history. This can be called via the event system.\nconst resetHistoryAdd = (category: Category, data: ResetHistoryEntryUnion) => {\n    while (player.history[category].length > (G['historyCountMax'] - 1)) {\n        player.history[category].shift();\n    }\n\n    player.history[category].push(data);\n    resetHistoryPushNewRow(category, data);\n}\n\nSynergism.on('historyAdd', resetHistoryAdd);\n\n// Add a row to the table, shifting out old ones as required.\nconst resetHistoryPushNewRow = (category: Category, data: ResetHistoryEntryUnion) => {\n    const row = resetHistoryRenderRow(category, data);\n    const table = DOMCacheGetOrSet(resetHistoryTableMapping[category]);\n    const tbody = table.querySelector('tbody')!;\n    tbody.insertBefore(row, tbody.childNodes[0]);\n    while (tbody.childNodes.length > G['historyCountMax']) {\n        tbody.removeChild(tbody.lastChild!);\n    }\n\n    if (category === 'ascend') {\n        const loadCorruptionsButtons = Array.from(row.getElementsByClassName('ascendHistoryLoadCorruptions'));\n        for (const btn of loadCorruptionsButtons) {\n            btn.addEventListener('click', (e) => clickHandlerForLoadCorruptionsButton((e.target as HTMLElement)));\n        }\n    }\n}\n\n// Render a table row.\nconst resetHistoryRenderRow = (\n    _category: Category,\n    data: ResetHistoryEntryUnion\n) => {\n    let colsUsed = 1;\n    const row = document.createElement('tr');\n    let rowContentHtml = '';\n\n    const kindMeta = historyKinds[data.kind];\n\n    const localDate = new Date(data.date).toLocaleString();\n    rowContentHtml += `<td class=\"history-seconds\" title=\"${localDate}\"><img alt=\"${data.kind}\" src=\"Pictures/${IconSets[player.iconSet][0]}/${kindMeta.img}\">${formatTimeShort(data.seconds, 60)}</td>`;\n\n    // Carefully loop through everything we need to print in the right order, and add it to the gains array if present.\n    const gains: string[] = [];\n    const dataIntersection = data as ResetHistoryEntryIntersect;\n    historyGainsOrder.forEach((listable) => {\n        if (Object.prototype.hasOwnProperty.call(data, listable)) {\n            const gainInfo = historyGains[listable];\n            if (gainInfo.onlyif && !gainInfo.onlyif(data)) {\n                return;\n            }\n            const formatter = gainInfo.formatter || (() => {/* If no formatter is specified, don't display. */});\n            const str = `<img alt=\"${gainInfo.imgTitle}\" src=\"Pictures/${IconSets[player.iconSet][0]}/${gainInfo.img}\" title=\"${gainInfo.imgTitle}\">${formatter(dataIntersection[listable]!, data)}`;\n\n            gains.push(str);\n        }\n    });\n\n    // Kind-dependent rendering goes here. TypeScript will automatically cast to the appropriate structure based on\n    // the kind check.\n    const extra: string[] = [];\n    if (data.kind === 'antsacrifice') {\n        const oldMulti = antSacrificePointsToMultiplier(data.antSacrificePointsBefore);\n        const newMulti = antSacrificePointsToMultiplier(data.antSacrificePointsAfter);\n        const diff = newMulti - oldMulti;\n        extra.push(\n            `<span title=\"Ant Multiplier: ${format(oldMulti, 3, false)}--&gt;${format(newMulti, 3, false)}\"><img src=\"Pictures/${IconSets[player.iconSet][0]}/Multiplier.png\" alt=\"Ant Multiplier\">+${format(diff, 3, false)}</span>`,\n            `<span title=\"+${formatDecimalSource(data.crumbsPerSecond)} crumbs/s\"><img src=\"Pictures/${IconSets[player.iconSet][0]}/TinyCrumbs.png\" alt=\"Crumbs\">${extractStringExponent(formatDecimalSource(data.crumbs))}</span>`,\n            `<span title=\"${format(data.baseELO)} base\"><img src=\"Pictures/${IconSets[player.iconSet][0]}/TinyELO.png\" alt=\"ELO\">${format(data.effectiveELO)}</span>`\n        );\n    } else if (data.kind === 'ascend') {\n        extra.push(\n            `<img alt=\"C10\" src=\"Pictures/${IconSets[player.iconSet][0]}/TinyChallenge10.png\" title=\"Challenge 10 completions\">${data.c10Completions}`\n        );\n\n        const corruptions = resetHistoryFormatCorruptions(data);\n\n        extra.push(corruptions[0]);\n        extra.push(corruptions[1]);\n        extra.push(corruptions[2]);\n    }\n\n    // This rendering is done this way so that all rows should have the same number of columns, which makes rows\n    // equal size and prevents bad rendering. We do 2 of these so that the history doesn't shift when\n    // hypercubes or platcubes get added as players unlock them.\n    // The 6 and 4 numbers are arbitrary but should never be less than the actual amount of columns that can be\n    // realistically displayed; you can increase them if more gains are added.\n\n    // Render the gains plus the gains filler\n    colsUsed += gains.length;\n    rowContentHtml += gains.reduce((acc, value) => {\n        return `${acc}<td class=\"history-gain\">${value}</td>`;\n    }, '');\n    rowContentHtml += `<td class=\"history-filler\" colspan=\"${7 - colsUsed}\"></td>`;\n\n    // Render the other stuff\n    rowContentHtml += extra.reduce((acc, value) => {\n        return `${acc}<td class=\"history-extra\">${value}</td>`;\n    }, '');\n    rowContentHtml += `<td class=\"history-filler\" colspan=\"${4 - extra.length}\"></td>`;\n\n    row.innerHTML = rowContentHtml;\n    return row;\n}\n\n// Render a category into a given table.\nconst resetHistoryRenderFullTable = (categoryToRender: Category, targetTable: HTMLElement) => {\n    const tbody = targetTable.querySelector('tbody')!;\n    tbody.innerHTML = '';\n\n    if (player.history[categoryToRender].length > 0) {\n        for (let i = player.history[categoryToRender].length - 1; i >= 0; --i) {\n            const row = resetHistoryRenderRow(categoryToRender, player.history[categoryToRender][i]);\n            tbody.appendChild(row);\n        }\n    }\n\n    if (categoryToRender === 'ascend') {\n        const loadCorruptionsButtons = Array.from(document.getElementsByClassName('ascendHistoryLoadCorruptions'));\n        for (const btn of loadCorruptionsButtons) {\n            btn.addEventListener('click', (e) => clickHandlerForLoadCorruptionsButton((e.target as HTMLElement)));\n        }\n    }\n}\n\nfunction clickHandlerForLoadCorruptionsButton(btn: HTMLElement) {\n    const corruptions = btn.getAttribute('data-corr');\n    if (corruptions) {\n        applyCorruptions(corruptions);\n        void Notification(i18next.t('corruptions.loadoutApplied'), 5000);\n    }\n}\n\n// Render every category into their associated table.\nexport const resetHistoryRenderAllTables = () => {\n    (Object.keys(resetHistoryTableMapping) as Category[]).forEach(\n        key => resetHistoryRenderFullTable(key, DOMCacheGetOrSet(resetHistoryTableMapping[key]))\n    );\n}\n\n// Toggle the \"per second\" display for the ascension table.\nexport const resetHistoryTogglePerSecond = () => {\n    player.historyShowPerSecond = !player.historyShowPerSecond;\n    resetHistoryRenderAllTables();\n    const button = DOMCacheGetOrSet('historyTogglePerSecondButton');\n    if (player.historyShowPerSecond) {\n        button.textContent = i18next.t('history.perSecondOn')\n    } else {\n        button.textContent = i18next.t('history.perSecondOff')\n    }\n    button.style.borderColor = player.historyShowPerSecond ? 'green' : 'red';\n}\n\n// Helper function to format the corruption display in the ascension table.\nconst resetHistoryFormatCorruptions = (data: ResetHistoryEntryAscend): [string, string, string] => {\n    let score = 'Score: ' + format(data.corruptionScore, 0, false);\n    let corruptions = '';\n    let loadout = '';\n    let corrs = 0;\n    for (let i = 0; i < resetHistoryCorruptionImages.length; ++i) {\n        const corruptionIdx = i + 2;\n        if (corruptionIdx in data.usedCorruptions && data.usedCorruptions[corruptionIdx] !== 0) {\n            corruptions += `<img alt=\"${corrs > 0 ? '/' : ''}\" src=\"Pictures/${IconSets[player.iconSet][0]}/${resetHistoryCorruptionImages[i]}\" title=\"${resetHistoryCorruptionTitles[i]}\">${data.usedCorruptions[corruptionIdx]}`;\n        } else {\n            corruptions += `<span>${corrs > 0 ? '/0' : '0'}</span>`;\n        }\n        corrs++;\n    }\n    if (corruptions) {\n        loadout += `<button class=\"corrLoad ascendHistoryLoadCorruptions\" data-corr=\"${data.usedCorruptions.join('/')}\">Load</button>`;\n    }\n    if (data.currentChallenge !== undefined) {\n        score += ` / C${data.currentChallenge}`;\n    }\n\n    return [score, corruptions, loadout];\n}\n", "import { player } from './Synergism';\nimport { Globals as G } from './Variables';\nimport { sumContents } from './Utility';\n\nimport Decimal from 'break_infinity.js';\nimport { CalcECC } from './Challenges';\nimport { achievementaward } from './Achievements';\n\nexport const calculatetax = () => {\n    let exp = 1;\n    let compareB = new Decimal(0);\n    let compareC = new Decimal(0);\n    G['produceFirst'] = (player.firstGeneratedCoin.add(player.firstOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinOneMulti'])\n        .times(player.firstProduceCoin);\n    G['produceSecond'] = (player.secondGeneratedCoin.add(player.secondOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinTwoMulti'])\n        .times(player.secondProduceCoin);\n    G['produceThird'] = (player.thirdGeneratedCoin.add(player.thirdOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinThreeMulti'])\n        .times(player.thirdProduceCoin);\n    G['produceFourth'] = (player.fourthGeneratedCoin.add(player.fourthOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinFourMulti'])\n        .times(player.fourthProduceCoin);\n    G['produceFifth'] = (player.fifthGeneratedCoin.add(player.fifthOwnedCoin)).times(G['globalCoinMultiplier']).times(G['coinFiveMulti'])\n        .times(player.fifthProduceCoin);\n    G['produceTotal'] = G['produceFirst'].add(G['produceSecond']).add(G['produceThird']).add(G['produceFourth'])\n        .add(G['produceFifth']);\n\n    if (G['produceFirst'].lte(.0001)) {\n        G['produceFirst'] = new Decimal(0);\n    }\n    if (G['produceSecond'].lte(.0001)) {\n        G['produceSecond'] = new Decimal(0);\n    }\n    if (G['produceThird'].lte(.0001)) {\n        G['produceThird'] = new Decimal(0);\n    }\n    if (G['produceFourth'].lte(.0001)) {\n        G['produceFourth'] = new Decimal(0);\n    }\n    if (G['produceFifth'].lte(.0001)) {\n        G['produceFifth'] = new Decimal(0);\n    }\n\n    G['producePerSecond'] = G['produceTotal'].times(40);\n\n    if (player.currentChallenge.reincarnation === 6) {\n        exp = 3 * Math.pow((1 + player.challengecompletions[6] / 25), 2);\n    }\n    if (player.currentChallenge.reincarnation === 9) {\n        exp = 0.005;\n    }\n    if (player.currentChallenge.ascension === 15) {\n        exp = 0.000005;\n    }\n    //im doing this to spite xander, basically changes w5x9 to not impact tax scaling in c13 || Sean#7236\n    const c13effcompletions = Math.max(0, sumContents(player.challengecompletions) - player.challengecompletions[11] - player.challengecompletions[12] - player.challengecompletions[13] - player.challengecompletions[14] - player.challengecompletions[15] - 3 * player.cubeUpgrades[49] - ((player.singularityCount >= 15)?4:0) - ((player.singularityCount >= 20)?1:0));\n    if (player.currentChallenge.ascension === 13) {\n        exp *= 700 * (1 + 1 / 6 * player.challengecompletions[13]);\n        exp *= Math.pow(1.05, c13effcompletions);\n    }\n    if (player.challengecompletions[6] > 0) {\n        exp /= 1.075;\n    }\n    let exponent = 1;\n    exponent *= exp;\n    exponent *= (1 - 1 / 20 * player.researches[51] - 1 / 40 * player.researches[52] - 1 / 80 * player.researches[53] - 1 / 160 * player.researches[54] - 1 / 320 * player.researches[55]);\n    exponent *= (1 - 0.05 / 1800 * (player.achievements[45] + player.achievements[46] + 2 * player.achievements[47]) * Math.min(player.prestigecounter, 1800));\n    exponent *= Math.pow(0.965, CalcECC('reincarnation', player.challengecompletions[6]));\n    exponent *= (0.001 + .999 * (Math.pow(6, -(G['rune2level'] * G['effectiveLevelMult']) / 1000)));\n    exponent *= (0.01 + .99 * (Math.pow(4, Math.min(0, (400 - G['rune4level']) / 1100))));\n    exponent *= (1 - 0.04 * player.achievements[82] - 0.04 * player.achievements[89] - 0.04 * player.achievements[96] - 0.04 * player.achievements[103] - 0.04 * player.achievements[110] - 0.0566 * player.achievements[117] - 0.0566 * player.achievements[124] - 0.0566 * player.achievements[131]);\n    exponent *= Math.pow(0.9925, player.achievements[118] * (player.challengecompletions[6] + player.challengecompletions[7] + player.challengecompletions[8] + player.challengecompletions[9] + player.challengecompletions[10]));\n    exponent *= (0.005 + 0.995 * Math.pow(0.99, player.antUpgrades[2]! + G['bonusant3']));\n    exponent *= 1 / Math.pow((1 + Decimal.log(player.ascendShards.add(1), 10)), 1 + .2 / 60 * player.challengecompletions[10] * player.upgrades[125] + 0.1 * player.platonicUpgrades[5] + 0.2 * player.platonicUpgrades[10] + (G['platonicBonusMultiplier'][5]-1));\n    exponent *= (1 - 0.10 * (player.talismanRarity[1-1] - 1));\n    exponent *= Math.pow(0.98, 3 / 5 * Math.log(1 + player.rareFragments) / Math.log(10) * player.researches[159]);\n    exponent *= Math.pow(0.966, CalcECC('ascension', player.challengecompletions[13]));\n    exponent *= (1 - 0.666 * player.researches[200] / 100000);\n    exponent *= (1 - 0.666 * player.cubeUpgrades[50] / 100000);\n    exponent *= G['challenge15Rewards'].taxes;\n    if (player.upgrades[121] > 0) {\n        exponent *= 0.5;\n    }\n    // Cap the calculation overflow bug || httpsnet\n    if (exponent < 1e-300) {\n        exponent = 1e-300;\n    }\n    G['maxexponent'] = Math.floor(275 / (Decimal.log(1.01, 10) * exponent)) - 1;\n    const a2 = Math.min(G['maxexponent'], Math.floor(Decimal.log(G['produceTotal'].add(1), 10)));\n\n    if (player.currentChallenge.ascension === 13 && G['maxexponent'] <= 99999 && player.achievements[249] < 1) {\n        //i don't think it makes sense to give the achievement as soon as the challenge is opened\n        //as soon as the challenge is opened you don't have enough tax reducers to have max exponent above 100000\n        //so for the achievement description to make sense i think it should require at least 1 challenge completion || Dorijanko\n        if (c13effcompletions >= 1) {\n            achievementaward(249);\n        }\n    }\n\n    if (a2 >= 1) {\n        compareB = Decimal.pow(a2, 2).div(550);\n    }\n\n    compareC = Decimal.pow(G['maxexponent'], 2).div(550);\n\n    G['taxdivisor'] = Decimal.pow(1.01, Decimal.mul(compareB, exponent));\n    G['taxdivisorcheck'] = Decimal.pow(1.01, Decimal.mul(compareC, exponent));\n}\n", "// August 22, 2022: Creation of Exportable Statistics.\n\nimport { totalachievementpoints } from './Achievements'\nimport { calculateAscensionAcceleration, calculateGoldenQuarkGain, calculateMaxRunes, calculateTimeAcceleration, calculateTotalOcteractCubeBonus, calculateTotalOcteractQuarkBonus, octeractGainPerSecond } from './Calculate'\nimport { getMaxChallenges } from './Challenges'\nimport { version } from './Config'\nimport { saveFilename } from './ImportExport'\nimport { friendlyShopName, isShopUpgradeUnlocked, shopData, shopUpgradeTypes } from './Shop'\nimport { calculateEffectiveSingularities } from './singularity'\nimport { format, player } from './Synergism'\nimport type { Player } from './types/Synergism'\nimport { Alert } from './UpdateHTML'\nimport { formatS, sumContents } from './Utility'\nimport { Globals as G } from './Variables'\nimport ClipboardJS from 'clipboard'\nimport i18next from 'i18next'\n\nexport const generateExportSummary = async():Promise<void> => {\n    const titleText = '===== SUMMARY STATS ====='\n    const time = `Time Generated: ${(new Date()).toString()}`\n    const ver = `Version: ${version}`\n\n    const subCategoryDivisor = '-----+-----\\n'\n\n    const firstPlayed = `First Played: ${player.firstPlayed}\\n`\n\n    let resources = '===== RESOURCES =====\\n'\n    resources = resources + (player.reincarnationCount > 0 || player.highestSingularityCount > 0 ? `Quarks: ${format(Number(player.worlds), 0, true)}\\n` : '')\n    resources = resources + (player.highestSingularityCount > 0 ? `Golden Quarks: ${format(player.goldenQuarks, 2, true)}\\n` : '')\n    resources = resources + subCategoryDivisor\n    resources = resources + `Coins: ${format(player.coins, 2, true)}\\n`\n    if (player.prestigeCount > 0 || player.highestSingularityCount > 0) {\n        resources = resources + `Diamonds: ${format(player.prestigePoints, 2, true)}\\n`\n        resources = resources + `Crystals: ${format(player.prestigeShards, 2, true)}\\n`\n        resources = resources + `Offerings: ${format(player.runeshards, 0, true)}\\n`\n    }\n    if (player.transcendCount > 0 || player.highestSingularityCount > 0) {\n        resources = resources + `Mythos: ${format(player.transcendPoints, 2, true)}\\n`\n        resources = resources + `Mythos Shards: ${format(player.transcendShards, 2, true)}\\n`\n    }\n    if (player.reincarnationCount > 0 || player.highestSingularityCount > 0) {\n        resources = resources + `Particles: ${format(player.reincarnationPoints, 2, true)}\\n`\n        resources = resources + `Atoms: ${format(player.reincarnationShards, 2, true)}\\n`\n        resources = resources + `Obtainium: ${format(player.researchPoints, 0, true)}\\n`\n    }\n    if (player.ascensionCount > 0 || player.highestSingularityCount > 0) {\n        const cubeArray = [null, player.cubeBlessings.accelerator, player.cubeBlessings.multiplier, player.cubeBlessings.offering, player.cubeBlessings.runeExp, player.cubeBlessings.obtainium, player.cubeBlessings.antSpeed, player.cubeBlessings.antSacrifice, player.cubeBlessings.antELO, player.cubeBlessings.talismanBonus, player.cubeBlessings.globalSpeed]\n        const tesseractArray = [null, player.tesseractBlessings.accelerator, player.tesseractBlessings.multiplier, player.tesseractBlessings.offering, player.tesseractBlessings.runeExp, player.tesseractBlessings.obtainium, player.tesseractBlessings.antSpeed, player.tesseractBlessings.antSacrifice, player.tesseractBlessings.antELO, player.tesseractBlessings.talismanBonus, player.tesseractBlessings.globalSpeed]\n        const hypercubeArray = [null, player.hypercubeBlessings.accelerator, player.hypercubeBlessings.multiplier, player.hypercubeBlessings.offering, player.hypercubeBlessings.runeExp, player.hypercubeBlessings.obtainium, player.hypercubeBlessings.antSpeed, player.hypercubeBlessings.antSacrifice, player.hypercubeBlessings.antELO, player.hypercubeBlessings.talismanBonus, player.hypercubeBlessings.globalSpeed]\n        const platonicArray = [player.platonicBlessings.cubes, player.platonicBlessings.tesseracts, player.platonicBlessings.hypercubes, player.platonicBlessings.platonics, player.platonicBlessings.hypercubeBonus, player.platonicBlessings.taxes, player.platonicBlessings.scoreBonus, player.platonicBlessings.globalSpeed]\n        const cubeSum = format(sumContents(cubeArray.slice(1) as number[]), 0, true)\n        const tesseractSum = format(sumContents(tesseractArray.slice(1) as number[]), 0, true)\n        const hypercubeSum = format(sumContents(hypercubeArray.slice(1) as number[]), 0, true)\n        const platonicSum = format(sumContents(platonicArray), 0, true)\n\n        resources = resources + subCategoryDivisor\n        resources = resources + `Wow! Cubes: ${format(Number(player.wowCubes), 0, true)} -+- Total Tributes: ${cubeSum}\\n`\n        resources = resources + `Wow! Tesseracts: ${format(Number(player.wowTesseracts), 0, true)} -+- Total Gifts: ${tesseractSum}\\n`\n        resources = resources + `Wow! Hypercubes: ${format(Number(player.wowHypercubes), 0, true)} -+- Total Benedictions: ${hypercubeSum}\\n`\n        resources = resources + `Wow! Platonic Cubes: ${format(Number(player.wowPlatonicCubes), 0, true)} -+- Total Plats Opened: ${platonicSum}\\n`\n        resources = resources + `Wow! Hepteracts: ${format(player.wowAbyssals, 0, true)}\\n`\n        if (player.singularityUpgrades.octeractUnlock.getEffect().bonus) {\n            resources = resources + `Wow! Octeracts: ${format(player.wowOcteracts, 0, true)}\\n`\n        }\n    }\n\n    // Octeract Subportion!\n    let octeract = ''\n    if (player.singularityUpgrades.octeractUnlock.getEffect().bonus) {\n        octeract = '===== OCTERACTS =====\\n'\n        octeract = octeract + `Current Octeracts: ${format(player.wowOcteracts, 2, true)}\\n`\n        octeract = octeract + `Current Per Second: ${format(octeractGainPerSecond(), 2, true)}\\n`\n        octeract = octeract + `Total Generated Octeracts: ${format(player.totalWowOcteracts, 2, true)}\\n`\n        octeract = octeract + `Octeract Cube Bonus: ${format(100 * (calculateTotalOcteractCubeBonus() - 1), 2, true)}%\\n`\n        octeract = octeract + `Octeract Quark Bonus: ${format(100 * (calculateTotalOcteractQuarkBonus() - 1), 2, true)}%\\n`\n    }\n\n    // Singularity Subportion!\n    let singularity = ''\n    if (player.highestSingularityCount > 0) {\n        singularity = '===== SINGULARITY =====\\n'\n        singularity = singularity + `Current Singularity: ${player.singularityCount}\\n`\n        singularity = singularity + `Highest Singularity Reached: ${player.highestSingularityCount}\\n`\n        singularity = singularity + `Golden Quarks: ${format(player.goldenQuarks, 2, true)}\\n`\n        singularity = singularity + `+Golden Quarks on Singularity: ${format(calculateGoldenQuarkGain(), 2, true)}\\n`\n        singularity = singularity + `Time in Singularity: ${formatS(player.singularityCounter)}\\n`\n        singularity = singularity + `Effective Singularity [for penalties]: ${format(calculateEffectiveSingularities(), 2, true)}\\n`\n        singularity = singularity + `Antiquity of Ant God Upgraded: ${(player.runelevels[6] > 0) ? '\u2714': '\u2716'}\\n`\n    }\n\n    // Ascension Subportion!\n    let ascension = ''\n    if (player.ascensionCount > 0 || player.highestSingularityCount > 0) {\n        ascension = '===== ASCENSION ===== \\n'\n        ascension = ascension + `Ascension Count: ${format(player.ascensionCount, 0, true)}\\n`\n        ascension = ascension + `Ascension Timer: ${formatS(player.ascensionCounter)}\\n`\n        ascension = ascension + `Real Life Ascension Timer: ${formatS(player.ascensionCounterReal)}\\n`\n        ascension = ascension + `Truly Real Life Ascension Timer: ${formatS(player.ascensionCounterRealReal)}\\n`\n        ascension = ascension + `Ascension Speed Multiplier: ${format(calculateAscensionAcceleration(), 2, true)}\\n`\n        ascension = ascension + `Challenge 11 Completions: ${player.challengecompletions[11]}/${getMaxChallenges(11)}\\n`\n        ascension = ascension + `Challenge 12 Completions: ${player.challengecompletions[12]}/${getMaxChallenges(12)}\\n`\n        ascension = ascension + `Challenge 13 Completions: ${player.challengecompletions[13]}/${getMaxChallenges(13)}\\n`\n        ascension = ascension + `Challenge 14 Completions: ${player.challengecompletions[14]}/${getMaxChallenges(14)}\\n`\n        if (player.highestchallengecompletions[14] > 0 || player.highestSingularityCount > 0) {\n            ascension = ascension + `Challenge 15 Exponent: ${format(player.challenge15Exponent, 2, true)}\\n`\n            ascension = ascension + `Research [8x25] MAXED: ${(player.researches[200] === 1e5) ? '\u2714' : '\u2716'}\\n`\n            ascension = ascension + `Cube [w5x10] MAXED: ${(player.cubeUpgrades[50] === 1e5) ? '\u2714' : '\u2716'}\\n`\n            ascension = ascension + `Platonic \u03B1: ${player.platonicUpgrades[5] > 0 ? '\u2714' : '\u2716'}\\n`\n            ascension = ascension + `Platonic \u03B2: ${player.platonicUpgrades[10] > 0 ? '\u2714' : '\u2716'}\\n`\n            ascension = ascension + `Platonic \u03A9: ${player.platonicUpgrades[15] > 0 ? '\u2714' : '\u2716'}\\n`\n        }\n        if (player.challenge15Exponent >= 1e15 || player.highestSingularityCount > 0) {\n            ascension = ascension + '----- HEPTERACTS -----\\n'\n            ascension = ascension + `Chronos Hepteract: ${format(player.hepteractCrafts.chronos.BAL,0,true)}/${format(player.hepteractCrafts.chronos.CAP, 0, true)}\\n`\n            ascension = ascension + `Hyperreal Hepteract: ${format(player.hepteractCrafts.hyperrealism.BAL,0,true)}/${format(player.hepteractCrafts.hyperrealism.CAP, 0, true)}\\n`\n            ascension = ascension + `Quark Hepteract: ${format(player.hepteractCrafts.quark.BAL,0,true)}/${format(player.hepteractCrafts.quark.CAP, 0, true)}\\n`\n            ascension = ascension + `Challenge Hepteract: ${format(player.hepteractCrafts.challenge.BAL,0,true)}/${format(player.hepteractCrafts.challenge.CAP, 0, true)}\\n`\n            ascension = ascension + `Abyss Hepteract: ${format(player.hepteractCrafts.abyss.BAL,0,true)}/${format(player.hepteractCrafts.abyss.CAP, 0, true)}\\n`\n            ascension = ascension + `Accelerators Hepteract: ${format(player.hepteractCrafts.accelerator.BAL,0,true)}/${format(player.hepteractCrafts.accelerator.CAP, 0, true)}\\n`\n            ascension = ascension + `Accelerator Boosts Hepteract: ${format(player.hepteractCrafts.acceleratorBoost.BAL,0,true)}/${format(player.hepteractCrafts.acceleratorBoost.CAP, 0, true)}\\n`\n            ascension = ascension + `Multipliers Hepteract: ${format(player.hepteractCrafts.multiplier.BAL,0,true)}/${format(player.hepteractCrafts.multiplier.CAP, 0, true)}\\n`\n            ascension = ascension + '----- POWDER & ORBS -----\\n'\n            ascension = ascension + `Orbs: ${format(player.overfluxOrbs, 0, true)}\\n`\n            ascension = ascension + `Powder: ${format(player.overfluxPowder, 2, true)}\\n`\n        }\n    }\n\n    // Reincarnation Portion!\n    let reincarnation = ''\n    if (player.reincarnationCount > 0 || player.highestSingularityCount > 0) {\n        reincarnation = '===== REINCARNATION =====\\n'\n        reincarnation = reincarnation + `Reincarnation Count: ${format(player.reincarnationCount, 0, true)}\\n`\n        reincarnation = reincarnation + `Reincarnation Timer: ${formatS(player.reincarnationcounter)}\\n`\n        reincarnation = reincarnation + `Fastest Reincarnation: ${formatS(player.fastestreincarnate)}\\n`\n        reincarnation = reincarnation + `Global Speed Multiplier: ${format(calculateTimeAcceleration().mult, 2, true)}\\n`\n        reincarnation = reincarnation + `Challenge 6 Completions: ${player.highestchallengecompletions[6]}/${getMaxChallenges(6)}\\n`\n        reincarnation = reincarnation + `Challenge 7 Completions: ${player.highestchallengecompletions[7]}/${getMaxChallenges(7)}\\n`\n        reincarnation = reincarnation + `Challenge 8 Completions: ${player.highestchallengecompletions[8]}/${getMaxChallenges(8)}\\n`\n        reincarnation = reincarnation + `Challenge 9 Completions: ${player.highestchallengecompletions[9]}/${getMaxChallenges(9)}\\n`\n        reincarnation = reincarnation + `Challenge 10 Completions: ${player.highestchallengecompletions[10]}/${getMaxChallenges(10)}\\n`\n    }\n\n    // Transcension Portion!\n    let transcension = ''\n    if (player.transcendCount > 0 || player.highestSingularityCount > 0) {\n        transcension = '===== TRANSCENSION =====\\n'\n        transcension = transcension + `Transcension Count: ${format(player.transcendCount, 0, true)}\\n`\n        transcension = transcension + `Transcension Timer: ${formatS(player.transcendcounter)}\\n`\n        transcension = transcension + `Fastest Transcension: ${formatS(player.fastesttranscend)}\\n`\n        transcension = transcension + `Challenge 1 Completions: ${player.highestchallengecompletions[1]}/${getMaxChallenges(1)}\\n`\n        transcension = transcension + `Challenge 2 Completions: ${player.highestchallengecompletions[2]}/${getMaxChallenges(2)}\\n`\n        transcension = transcension + `Challenge 3 Completions: ${player.highestchallengecompletions[3]}/${getMaxChallenges(3)}\\n`\n        transcension = transcension + `Challenge 4 Completions: ${player.highestchallengecompletions[4]}/${getMaxChallenges(4)}\\n`\n        transcension = transcension + `Challenge 5 Completions: ${player.highestchallengecompletions[5]}/${getMaxChallenges(5)}\\n`\n    }\n\n    // Prestige Portion!\n    let prestige = ''\n    if (player.prestigeCount > 0 || player.highestSingularityCount > 0) {\n        prestige = '===== PRESTIGE & RUNES =====\\n'\n        prestige = prestige + `Prestige Count: ${format(player.prestigeCount, 0, true)}\\n`\n        prestige = prestige + `Prestige Timer: ${formatS(player.prestigecounter)}\\n`\n        prestige = prestige + `Fastest Prestige: ${formatS(player.fastestprestige)}\\n`\n        prestige = prestige + i18next.t('achievements.totalPoints', {\n            x: format(player.achievementPoints),\n            y: format(totalachievementpoints),\n            z: (100 * player.achievementPoints / totalachievementpoints).toPrecision(4)\n        }) + '\\n'\n        prestige = prestige + `Speed Rune: Level ${format(player.runelevels[0],0,true)}/${format(calculateMaxRunes(1))} [Bonus: ${format(G['rune1level'] - player.runelevels[0], 0, true)}]\\n`\n        if (player.achievements[38] > 0 || player.highestSingularityCount > 0) {\n            prestige = prestige + `Duplication Rune: Level ${format(player.runelevels[1],0,true)}/${format(calculateMaxRunes(2))} [Bonus: ${format(G['rune2level'] - player.runelevels[1], 0, true)}]\\n`\n        }\n        if (player.achievements[44] > 0 || player.highestSingularityCount > 0) {\n            prestige = prestige + `Prism Rune: Level ${format(player.runelevels[2],0,true)}/${format(calculateMaxRunes(3))} [Bonus: ${format(G['rune3level'] - player.runelevels[2], 0, true)}]\\n`\n        }\n        if (player.achievements[102] > 0 || player.highestSingularityCount > 0) {\n            prestige = prestige + `Thrift Rune: Level ${format(player.runelevels[3],0,true)}/${format(calculateMaxRunes(4))} [Bonus: ${format(G['rune4level'] - player.runelevels[3], 0, true)}]\\n`\n        }\n        if (player.researches[82] > 0 || player.highestSingularityCount > 0) {\n            prestige = prestige + `Superior Intellect: Level ${format(player.runelevels[4],0,true)}/${format(calculateMaxRunes(5))} [Bonus: ${format(G['rune5level'] - player.runelevels[4], 0, true)}]\\n`\n        }\n        if (player.shopUpgrades.infiniteAscent > 0 || player.highestSingularityCount > 0) {\n            prestige = prestige + `Infinite Ascent: Level ${format(player.runelevels[5],0,true)}/${format(calculateMaxRunes(6))}\\n`\n        }\n        if (player.platonicUpgrades[20] > 0 || player.highestSingularityCount > 0) {\n            prestige = prestige + `Antiquities: Level ${format(player.runelevels[6],0,true)}/${format(calculateMaxRunes(7))}\\n`\n        }\n    }\n\n    // Create Shop Stuffs\n    let shopUpgradeStats = '\\n'\n    if (player.reincarnationCount > 0 || player.highestSingularityCount > 0) {\n        shopUpgradeStats = '===== SHOP UPGRADES =====\\n - [\u2605]: Upgrade is MAXED - \\n - [\u2714]: Upgrade is unlocked - \\n - [\u2716]: Upgrade is locked - \\n'\n        const shopUpgrade = Object.keys(player.shopUpgrades) as (keyof Player['shopUpgrades'])[]\n        let totalShopUpgradeCount = 0\n        let totalShopUpgradeUnlocked = 0\n        let totalShopUpgradeMax = 0\n        let totalQuarksSpent = 0\n\n        for (const key of shopUpgrade) {\n\n            const shopUpg = player.shopUpgrades[key]\n            let upgradeText = ''\n\n            if (shopData[key].type !== shopUpgradeTypes.CONSUMABLE) {\n                totalShopUpgradeCount += 1\n                if (isShopUpgradeUnlocked(key)) {\n                    totalShopUpgradeUnlocked += 1\n                }\n                if (shopUpg === shopData[key].maxLevel) {\n                    totalShopUpgradeMax += 1\n                }\n            }\n\n            totalQuarksSpent += shopData[key].price * shopUpg +\n                                shopData[key].priceIncrease * shopUpg * (shopUpg - 1) / 2\n\n            upgradeText = upgradeText + (isShopUpgradeUnlocked(key) ?\n                (shopUpg === shopData[key].maxLevel ? '[\u2605]' : '[\u2714]'):\n                '[\u2716]')\n\n            upgradeText = upgradeText + ` ${friendlyShopName(key)}:`\n            upgradeText = upgradeText + ` ${(shopData[key].type !== shopUpgradeTypes.CONSUMABLE) ?\n                `Level ${shopUpg}/${shopData[key].maxLevel}`:\n                `${shopUpg}/${shopData[key].maxLevel}`}`\n\n            upgradeText = upgradeText + '\\n'\n            shopUpgradeStats = shopUpgradeStats + upgradeText\n        }\n        shopUpgradeStats = shopUpgradeStats + subCategoryDivisor\n        shopUpgradeStats = shopUpgradeStats + `Upgrades Unlocked: ${totalShopUpgradeUnlocked}/${totalShopUpgradeCount}\\n`\n        shopUpgradeStats = shopUpgradeStats + `Upgrades MAXED ${totalShopUpgradeMax}/${totalShopUpgradeCount}\\n`\n        shopUpgradeStats = shopUpgradeStats + `Quarks Spent in Shop: ${format(totalQuarksSpent, 0, true)}\\n`\n        shopUpgradeStats = shopUpgradeStats + subCategoryDivisor\n    }\n\n    // Create Singularity Stuffs\n    let singularityUpgradeStats = '\\n'\n    if (player.highestSingularityCount > 0) {\n        singularityUpgradeStats = '===== SINGULARITY UPGRADES =====\\n - [\u2605]: Upgrade is MAXED - \\n - [\u221E]: Upgrade is infinite - \\n - [\u2714]: Upgrade is unlocked - \\n - [\u2716]: Upgrade is locked - \\n'\n        const singUpgrade = Object.keys(player.singularityUpgrades) as (keyof Player['singularityUpgrades'])[]\n        let totalSingUpgradeCount = -1 // One upgrade cannot ever be leveled, by design, so subtract that from the actual count\n        let totalSingInfiniteLevel = 0\n        let totalSingUpgradeUnlocked = 0\n        let totalSingUpgradeMax = 0\n        let totalGoldenQuarksSpent = 0\n        for (const key of singUpgrade) {\n            let upgradeText = ''\n            const singUpg = player.singularityUpgrades[key]\n\n            totalSingUpgradeCount += 1\n            if (singUpg.maxLevel === -1) {\n                totalSingInfiniteLevel += 1\n            }\n            if (singUpg.level === singUpg.maxLevel) {\n                totalSingUpgradeMax += 1\n            }\n            if (player.singularityCount >= singUpg.minimumSingularity) {\n                totalSingUpgradeUnlocked += 1\n            }\n\n            totalGoldenQuarksSpent += singUpg.goldenQuarksInvested\n\n            let unicodeSymbol = '[\u2716]'\n            if (player.singularityCount >= singUpg.minimumSingularity) {\n                if (singUpg.maxLevel === -1) {\n                    unicodeSymbol = '[\u221E]'\n                } else if (singUpg.level === singUpg.maxLevel) {\n                    unicodeSymbol = '[\u2605]'\n                } else {\n                    unicodeSymbol = '[\u2714]'\n                }\n            }\n\n            upgradeText = upgradeText + unicodeSymbol\n            upgradeText = upgradeText + ` ${singUpg.name}:`\n            upgradeText = upgradeText + (singUpg.maxLevel === -1 ?\n                ` Level ${singUpg.level}`:\n                ` Level ${singUpg.level}/${singUpg.maxLevel}`)\n            upgradeText = upgradeText + (singUpg.freeLevels > 0 ?\n                ` [+${format(singUpg.computeFreeLevelSoftcap(), 2, true)}]`:\n                '')\n\n            upgradeText = upgradeText + (singUpg.freeLevels > 0 ?\n                ` =+= Effective Level: ${format(singUpg.actualTotalLevels(), 2, true)}`:\n                '')\n\n            upgradeText =  upgradeText + '\\n'\n            singularityUpgradeStats = singularityUpgradeStats + upgradeText\n        }\n        singularityUpgradeStats = singularityUpgradeStats + subCategoryDivisor\n        singularityUpgradeStats = singularityUpgradeStats + `Upgrades Unlocked: ${totalSingUpgradeUnlocked}/${totalSingUpgradeCount}\\n`\n        singularityUpgradeStats = singularityUpgradeStats + `Upgrades MAXED: ${totalSingUpgradeMax}/${totalSingUpgradeCount - totalSingInfiniteLevel}\\n`\n        singularityUpgradeStats = singularityUpgradeStats + `Golden Quarks Spent on Upgrades: ${format(totalGoldenQuarksSpent, 0, true)}\\n`\n        singularityUpgradeStats = singularityUpgradeStats + subCategoryDivisor\n    }\n\n    // Create Octeract Stuff\n    let octeractUpgradeStats =  '\\n'\n    if (player.singularityUpgrades.octeractUnlock.getEffect().bonus) {\n        octeractUpgradeStats =  '===== OCTERACT UPGRADES =====\\n - [\u2605]: Upgrade is MAXED - \\n - [\u221E]: Upgrade is infinite - \\n - [ ]: Upgrade INCOMPLETE - \\n'\n        const octUpgrade = Object.keys(player.octeractUpgrades) as (keyof Player['octeractUpgrades'])[]\n        let totalOctUpgradeCount = 0\n        let totalOctUpgradeMax = 0\n        let totalOcteractsSpent = 0\n\n        for (const key of octUpgrade) {\n            let upgradeText = ''\n            const octUpg = player.octeractUpgrades[key]\n\n            if (octUpg.maxLevel !== -1) {\n                totalOctUpgradeCount += 1\n            }\n            if (octUpg.level === octUpg.maxLevel) {\n                totalOctUpgradeMax += 1\n            }\n            totalOcteractsSpent += octUpg.octeractsInvested\n\n            let unicodeSymbol = '[ ]'\n            if (octUpg.maxLevel === -1) {\n                unicodeSymbol = '[\u221E]'\n            } else if (octUpg.level === octUpg.maxLevel) {\n                unicodeSymbol = '[\u2605]'\n            }\n\n            upgradeText = upgradeText + unicodeSymbol\n            upgradeText = upgradeText + octUpg.name + ':'\n            upgradeText = upgradeText + (octUpg.maxLevel === -1 ?\n                ` Level ${octUpg.level}`:\n                ` Level ${octUpg.level}/${octUpg.maxLevel}`)\n            upgradeText = upgradeText + (octUpg.freeLevels > 0 ?\n                ` [+${format(octUpg.computeFreeLevelSoftcap(), 2, true)}]`:\n                '')\n\n            upgradeText = upgradeText + (octUpg.freeLevels > 0 ?\n                ` =+= Effective Level: ${format(octUpg.actualTotalLevels(), 2, true)}`:\n                '')\n\n            upgradeText =  upgradeText + '\\n'\n            octeractUpgradeStats = octeractUpgradeStats + upgradeText\n        }\n        octeractUpgradeStats = octeractUpgradeStats + subCategoryDivisor\n        octeractUpgradeStats = octeractUpgradeStats + `Upgrades MAXED: ${totalOctUpgradeMax}/${totalOctUpgradeCount}\\n`\n        octeractUpgradeStats = octeractUpgradeStats + `Octeracts Spent on Upgrades: ${format(totalOcteractsSpent, 0, true)}\\n`\n        octeractUpgradeStats = octeractUpgradeStats + subCategoryDivisor\n    }\n\n\n    const returnString = titleText + '\\n' + time + '\\n' + ver + '\\n' + firstPlayed +\n                        resources + octeract + singularity + ascension +\n                        reincarnation + transcension + prestige +\n                        shopUpgradeStats + singularityUpgradeStats + octeractUpgradeStats\n\n\n    try {\n        await navigator.clipboard.writeText(returnString)\n    } catch (err) {\n        // So we fallback to the deprecated way of doing it,\n        // which isn't limited by any browser other than Safari\n        // because Apple is ran by a monkey in a human skin suit.\n\n        // Old/bad browsers (legacy Edge, Safari because of limitations)\n        const textArea = document.createElement('textarea');\n\n        textArea.setAttribute('style', 'top: 0; left: 0; position: fixed;')\n        textArea.setAttribute('data-clipboard-text', returnString)\n\n        document.body.appendChild(textArea);\n        textArea.focus()\n        textArea.select()\n\n        const clipboard = new ClipboardJS(textArea)\n\n        const cleanup = () => {\n            clipboard.destroy()\n            document.body.removeChild(textArea)\n        }\n\n        clipboard.on('success', () => {\n            document.getElementById('exportinfo')!.textContent = 'Copied save to clipboard!'\n            cleanup()\n        })\n\n        clipboard.on('error', () => {\n            void Alert('Unable to write the save to clipboard.').finally(cleanup)\n        })\n    }\n\n    const a = document.createElement('a');\n    a.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(returnString));\n    a.setAttribute('download', `Statistics-${saveFilename()}`);\n    a.setAttribute('id', 'downloadSave');\n    // \"Starting in Firefox 75, the click() function works even when the element is not attached to a DOM tree.\"\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click\n    // so let's have it work on older versions of Firefox, doesn't change functionality.\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n\n    return Alert('Summary Stats saved to clipboard! We also gave you a file, for easy sharing, if that is available on your browser.')\n}\n", "import { toggleAscStatPerSecond, toggleTabs, toggleSubTab, toggleBuyAmount, toggleAutoTesseracts, toggleSettings, toggleautoreset, toggleautobuytesseract, toggleShops, toggleAutoSacrifice, toggleAutoBuyFragment, toggleautoenhance, toggleautofortify, updateRuneBlessingBuyAmount, toggleSaveOff, toggleChallenges, toggleAutoChallengesIgnore, toggleAutoChallengeRun, updateAutoChallenge, toggleResearchBuy, toggleAutoResearch, toggleAntMaxBuy, toggleAntAutoSacrifice, toggleMaxBuyCube, toggleautoopensCubes, toggleCorruptionLevel, toggleAutoAscend, toggleShopConfirmation, toggleAutoResearchMode, toggleBuyMaxShop, toggleHideShop, toggleHepteractAutoPercentage, autoCubeUpgradesToggle, autoPlatonicUpgradesToggle } from './Toggles'\nimport { resetrepeat, updateAutoReset, updateTesseractAutoBuyAmount, updateAutoCubesOpens } from './Reset'\nimport { player, resetCheck, saveSynergy } from './Synergism'\nimport { boostAccelerator, buyAccelerator, buyMultiplier, buyProducer, buyCrystalUpgrades, buyParticleBuilding, buyTesseractBuilding, buyRuneBonusLevels, buyAllBlessings } from './Buy'\nimport { crystalupgradedescriptions, constantUpgradeDescriptions, buyConstantUpgrades, upgradedescriptions, clickUpgrades, categoryUpgrades } from './Upgrades'\nimport { achievementdescriptions, achievementpointvalues } from './Achievements'\nimport { displayRuneInformation, redeemShards } from './Runes'\nimport { toggleTalismanBuy, buyTalismanResources, buyAllTalismanResources, showTalismanPrices, buyTalismanLevels, buyTalismanEnhance, showRespecInformation, respecTalismanConfirm, respecTalismanCancel, changeTalismanModifier, updateTalismanCostDisplay, showTalismanEffect, showEnhanceTalismanPrices } from './Talismans'\nimport { challengeDisplay, toggleRetryChallenges } from './Challenges'\nimport { buyResearch, researchDescriptions } from './Research'\nimport { antRepeat, sacrificeAnts, buyAntProducers, updateAntDescription, antUpgradeDescription, buyAntUpgrade } from './Ants'\nimport { buyCubeUpgrades, cubeUpgradeDesc } from './Cubes'\nimport { buyPlatonicUpgrades, createPlatonicDescription } from './Platonic'\nimport { corruptionCleanseConfirm, corruptionDisplay } from './Corruptions'\nimport { exportSynergism, updateSaveString, promocodes, promocodesPrompt, promocodesInfo, importSynergism, resetGame, reloadDeleteGame, handleLastModified } from './ImportExport'\nimport { resetHistoryTogglePerSecond } from './History'\nimport { resetShopUpgrades, shopDescriptions, buyShopUpgrades, useConsumable, shopData, shopUpgradeTypes } from './Shop'\nimport { Globals as G } from './Variables';\nimport { changeTabColor, Confirm } from './UpdateHTML'\nimport { hepteractDescriptions, hepteractToOverfluxOrbDescription, tradeHepteractToOverfluxOrb, overfluxPowderDescription, overfluxPowderWarp, toggleAutoBuyOrbs } from './Hepteracts'\nimport { exitOffline, forcedDailyReset, timeWarp } from './Calculate'\nimport type { OneToFive, Player } from './types/Synergism'\nimport { displayStats } from './Statistics'\nimport { testing } from './Config';\nimport { DOMCacheGetOrSet } from './Cache/DOM'\nimport { toggleAnnotation, toggleTheme, toggleIconSet, imgErrorHandler } from './Themes'\nimport { buyGoldenQuarks } from './singularity'\nimport { resetHotkeys } from './Hotkeys'\nimport { generateExportSummary } from './Summary'\nimport { shopMouseover } from './UpdateVisuals'\nimport i18next from 'i18next'\nimport { clickSmith } from './Event'\n\n/* STYLE GUIDE */\n/*\n    1) When adding event handlers please put it in respective tabs, in the correct subcategory.\n    Generally it would be preferred to put it in the lowest spot.\n    2) Please put any Mouseover events before Click events, if two event handlers are needed for an element.\n    3) Do *NOT* add event handlers to index.html. You may only add them in js/ts files!\n    4) Using for loops: be careful about passing arguments. If necessary, please use a currying function (See: Line 80-90)\n    5) If you are documenting a new tab or subtab, please comment out the order in which you add event handlers.\n    6) It is strongly recommended you only add event handlers in the generateEventHandlers() function, but if you are\n    creating new elements through js/ts you may do so outside of this file (E.g. corruptions)\n\n    Platonic and/or Khafra have the right to close PRs that do not conform to this style guide\n\n    If you are editing this script, please update the below time:\n    Last Edited: June 10, 2021 3:04 AM UTC-8\n*/\n\n/* eslint-disable @typescript-eslint/no-misused-promises */\n\nexport const generateEventHandlers = () => {\n    const ordinals = ['null','first','second','third','fourth','fifth','sixth','seventh','eighth'] as const\n\n    if (testing) {\n        const warp = document.createElement('button');\n        const dayReset = document.createElement('button');\n        warp.textContent = 'Click here to warp time! [TESTING ONLY]';\n        warp.setAttribute('style','width: auto; height: 30px; border: 6px solid gold;');\n        warp.addEventListener('click', () => timeWarp());\n        dayReset.textContent = 'Click to force a new day! [TESTING ONLY]';\n        dayReset.setAttribute('style','width: auto; height: 30px; border: 6px solid orange;');\n        dayReset.addEventListener('click', () => forcedDailyReset());\n\n        const consumables = DOMCacheGetOrSet('actualConsumables');\n        consumables.appendChild(warp);\n        consumables.appendChild(dayReset);\n    }\n    // Offline Button\n    DOMCacheGetOrSet('exitOffline').addEventListener('click', () => exitOffline());\n    DOMCacheGetOrSet('offlineContainer').addEventListener('dblclick', () => exitOffline());\n    // UPPER UI ELEMENTS\n    //Prelude: Cube/Tesseract/Hypercube/Platonic display UIs (Onclicks)\n    DOMCacheGetOrSet('ascCubeStats').addEventListener('click', () => toggleAscStatPerSecond(1))\n    DOMCacheGetOrSet('ascTessStats').addEventListener('click', () => toggleAscStatPerSecond(2))\n    DOMCacheGetOrSet('ascHyperStats').addEventListener('click', () => toggleAscStatPerSecond(3))\n    DOMCacheGetOrSet('ascPlatonicStats').addEventListener('click', () => toggleAscStatPerSecond(4))\n    DOMCacheGetOrSet('ascHepteractStats').addEventListener('click', () => toggleAscStatPerSecond(5))\n    DOMCacheGetOrSet('ascTimeTakenStats').addEventListener('click', () => toggleAscStatPerSecond(6))\n    //Part 1: Reset Tiers\n    //Onmouseover Events\n    DOMCacheGetOrSet('prestigebtn').addEventListener('mouseover', () => resetrepeat('prestige'))\n    DOMCacheGetOrSet('transcendbtn').addEventListener('mouseover', () => resetrepeat('transcension'))\n    DOMCacheGetOrSet('reincarnatebtn').addEventListener('mouseover', () => resetrepeat('reincarnation'))\n    DOMCacheGetOrSet('acceleratorboostbtn').addEventListener('mouseover', () => resetrepeat('acceleratorBoost'))\n    DOMCacheGetOrSet('challengebtn').addEventListener('mouseover', () => resetrepeat('transcensionChallenge'))\n    DOMCacheGetOrSet('reincarnatechallengebtn').addEventListener('mouseover', () => resetrepeat('reincarnationChallenge'))\n    DOMCacheGetOrSet('ascendChallengeBtn').addEventListener('mouseover', () => resetrepeat('ascensionChallenge'))\n    DOMCacheGetOrSet('ascendbtn').addEventListener('mouseover', () => resetrepeat('ascension'))\n    DOMCacheGetOrSet('singularitybtn').addEventListener('mouseover', () => resetrepeat('singularity'))\n\n    for (const resetButton of Array.from(document.getElementsByClassName('resetbtn'))) {\n        resetButton.addEventListener('mouseover', () => {\n            resetButton.classList.add('hover');\n        });\n\n        resetButton.addEventListener('mouseout', () => {\n            resetButton.classList.remove('hover');\n\n            if (player.currentChallenge.reincarnation) {\n                resetrepeat('reincarnationChallenge');\n            } else if (player.currentChallenge.transcension) {\n                resetrepeat('transcensionChallenge');\n            }\n        });\n    }\n\n    //Onclick Events (this is particularly bad)\n    DOMCacheGetOrSet('prestigebtn').addEventListener('click', () => resetCheck('prestige'))\n    DOMCacheGetOrSet('transcendbtn').addEventListener('click', () => resetCheck('transcension'))\n    DOMCacheGetOrSet('reincarnatebtn').addEventListener('click', () => resetCheck('reincarnation'))\n    DOMCacheGetOrSet('acceleratorboostbtn').addEventListener('click', () => boostAccelerator())\n    DOMCacheGetOrSet('challengebtn').addEventListener('click', () => resetCheck('transcensionChallenge',undefined,true))\n    DOMCacheGetOrSet('reincarnatechallengebtn').addEventListener('click', () => resetCheck('reincarnationChallenge',undefined,true))\n    DOMCacheGetOrSet('ascendChallengeBtn').addEventListener('click', () => resetCheck('ascensionChallenge'))\n    DOMCacheGetOrSet('ascendbtn').addEventListener('click', () => resetCheck('ascension'))\n    DOMCacheGetOrSet('singularitybtn').addEventListener('click', () => resetCheck('singularity'))\n    //Part 2: Tabs (sucks)\n    //Onmouseover Events\n    DOMCacheGetOrSet('buildingstab').addEventListener('click', () => toggleTabs('buildings'))\n    DOMCacheGetOrSet('upgradestab').addEventListener('click', () => toggleTabs('upgrades'))\n    DOMCacheGetOrSet('settingstab').addEventListener('click', () => toggleTabs('settings'))\n    DOMCacheGetOrSet('achievementstab').addEventListener('click', () => toggleTabs('achievements'))\n    DOMCacheGetOrSet('runestab').addEventListener('click', () => toggleTabs('runes'))\n    DOMCacheGetOrSet('challengetab').addEventListener('click', () => toggleTabs('challenges'))\n    DOMCacheGetOrSet('researchtab').addEventListener('click', () => toggleTabs('researches'))\n    DOMCacheGetOrSet('shoptab').addEventListener('click', () => toggleTabs('shop'))\n    DOMCacheGetOrSet('anttab').addEventListener('click', () => toggleTabs('ants'))\n    DOMCacheGetOrSet('cubetab').addEventListener('click', () => toggleTabs('cubes'))\n    DOMCacheGetOrSet('traitstab').addEventListener('click', () => toggleTabs('traits'))\n    DOMCacheGetOrSet('singularitytab').addEventListener('click', () => toggleTabs('singularity'))\n    DOMCacheGetOrSet('eventTab').addEventListener('click', () => toggleTabs('event'))\n\n    // BUILDINGS TAB\n    //Part 1: Upper portion (Subtab toggle)\n    const buildingTypes = ['Coin','Diamond','Mythos','Particle','Tesseract']\n    for (let index = 0; index < buildingTypes.length; index++) {\n        DOMCacheGetOrSet(`switchTo${buildingTypes[index]}Building`).addEventListener('click', () => toggleSubTab(1, index))\n\n    }\n    //Part 2: Building Amount Toggles\n    const buildingTypesAlternate = ['coin','crystal','mythos','particle','tesseract','offering'] as const;\n    const buildingOrds = ['one','ten','hundred','thousand', '10k', '100k']\n    const buildingOrdsToNum = [1, 10, 100, 1000, 10000, 100000] as const;\n    for (let index = 0; index < buildingOrds.length; index++) {\n        for (let index2 = 0; index2 < buildingTypesAlternate.length; index2++) {\n            DOMCacheGetOrSet(buildingTypesAlternate[index2]+buildingOrds[index]).addEventListener('click', () =>\n                toggleBuyAmount(\n                    buildingOrdsToNum[index],\n                    buildingTypesAlternate[index2]\n                )\n            );\n        }\n    }\n    //Part 3: Building Purchasers + Upgrades\n    // Accelerator, Multiplier, Accelerator Boost\n    DOMCacheGetOrSet('buyaccelerator').addEventListener('click', () => buyAccelerator())\n    DOMCacheGetOrSet('buymultiplier').addEventListener('click', () => buyMultiplier())\n    DOMCacheGetOrSet('buyacceleratorboost').addEventListener('click', () => boostAccelerator())\n\n    // Coin, Diamond and Mythos Buildings\n    const buildingTypesAlternate2 = ['coin', 'diamond', 'mythos']\n    const buildingTypesAlternate3 = ['Coin', 'Diamonds', 'Mythos'] as const; //TODO: A cleaner way to implement this dumb shit\n    for (let index = 0; index < 3; index++){\n        for (let index2 = 1; index2 <= 5; index2++) {\n            DOMCacheGetOrSet(`buy${buildingTypesAlternate2[index]}${index2}`).addEventListener('click', () =>\n                buyProducer(ordinals[index2 as OneToFive], buildingTypesAlternate3[index], index === 0 ? index2 : index2 * (index2+1) / 2))\n        }\n    }\n\n    // Crystal Upgrades (Mouseover and Onclick)\n    for (let index = 1; index <= 5; index++) {\n\n        DOMCacheGetOrSet(`buycrystalupgrade${index}`).addEventListener('mouseover', () => crystalupgradedescriptions(index))\n        DOMCacheGetOrSet(`buycrystalupgrade${index}`).addEventListener('click', () => buyCrystalUpgrades(index))\n\n    }\n\n    // Particle Buildings\n    for (let index = 0; index < 5; index++) {\n        DOMCacheGetOrSet(`buyparticles${index+1}`).addEventListener('click', () => buyParticleBuilding(\n            index+1 as OneToFive\n        ));\n    }\n\n    // Tesseract Buildings\n    for (let index = 0; index < 5; index++) {\n        DOMCacheGetOrSet(`buyTesseracts${index+1}`).addEventListener('click', () => buyTesseractBuilding(index+1 as OneToFive))\n        DOMCacheGetOrSet(`tesseractAutoToggle${index+1}`).addEventListener('click', () => toggleAutoTesseracts(index+1))\n\n    }\n\n    // Constant Upgrades\n    for (let index = 0; index < 10; index++) {\n\n        DOMCacheGetOrSet(`buyConstantUpgrade${index+1}`).addEventListener('mouseover', () => constantUpgradeDescriptions(index+1))\n        DOMCacheGetOrSet(`buyConstantUpgrade${index+1}`).addEventListener('click', () => buyConstantUpgrades(index+1))\n\n    }\n\n    //Part 4: Toggles\n    // I'm just addressing all global toggles here\n    const toggles = document.querySelectorAll<HTMLElement>('.auto[toggleid]');\n    toggles.forEach(b => b.addEventListener('click', () => toggleSettings(b)));\n    // Toggles auto reset type (between TIME and AMOUNT for 3 first Tiers, and between PERCENTAGE and AMOUNT for Tesseracts)\n    DOMCacheGetOrSet('prestigeautotoggle').addEventListener('click', () => toggleautoreset(1))\n    DOMCacheGetOrSet('transcendautotoggle').addEventListener('click', () => toggleautoreset(2))\n    DOMCacheGetOrSet('reincarnateautotoggle').addEventListener('click', () => toggleautoreset(3))\n    DOMCacheGetOrSet('tesseractautobuymode').addEventListener('click', () => toggleautoreset(4))\n    // Toggles auto reset amount required to trigger\n    DOMCacheGetOrSet('prestigeamount').addEventListener('blur', () => updateAutoReset(1))\n    DOMCacheGetOrSet('transcendamount').addEventListener('blur', () => updateAutoReset(2))\n    DOMCacheGetOrSet('reincarnationamount').addEventListener('blur', () => updateAutoReset(3))\n    DOMCacheGetOrSet('ascensionAmount').addEventListener('blur', () => updateAutoReset(4))\n    DOMCacheGetOrSet('autoAntSacrificeAmount').addEventListener('blur', () => updateAutoReset(5))\n    // Tesseract-specific of the above. I don't know why I didn't standardize names here.\n    DOMCacheGetOrSet('tesseractautobuytoggle').addEventListener('click', () => toggleautobuytesseract())\n    DOMCacheGetOrSet('tesseractAmount').addEventListener('blur', () => updateTesseractAutoBuyAmount())\n    // Auto Opening of Cubes\n    DOMCacheGetOrSet('cubeOpensInput').addEventListener('blur', () => updateAutoCubesOpens(1))\n    DOMCacheGetOrSet('tesseractsOpensInput').addEventListener('blur', () => updateAutoCubesOpens(2))\n    DOMCacheGetOrSet('hypercubesOpensInput').addEventListener('blur', () => updateAutoCubesOpens(3))\n    DOMCacheGetOrSet('platonicCubeOpensInput').addEventListener('blur', () => updateAutoCubesOpens(4))\n    DOMCacheGetOrSet('openCubes').addEventListener('click', () => toggleautoopensCubes(1))\n    DOMCacheGetOrSet('openTesseracts').addEventListener('click', () => toggleautoopensCubes(2))\n    DOMCacheGetOrSet('openHypercubes').addEventListener('click', () => toggleautoopensCubes(3))\n    DOMCacheGetOrSet('openPlatonicCube').addEventListener('click', () => toggleautoopensCubes(4))\n\n\n    // UPGRADES TAB\n    // For all upgrades in the Upgrades Tab (125) count, we have the same mouseover event. So we'll work on those first.\n    for (let index = 1; index <= 125; index++) {\n        //Onmouseover events ()\n        DOMCacheGetOrSet(`upg${index}`).addEventListener('mouseover', () => upgradedescriptions(index));\n    }\n\n    // Generates all upgrade button events\n    for (let index = 1; index <= 125; index++) {\n        DOMCacheGetOrSet(`upg${index}`).addEventListener('click', () => clickUpgrades(index, false));\n    }\n\n    for (let index = 1; index <= 6; index++) {\n        DOMCacheGetOrSet(`upgrades${index}`).addEventListener('click', () => categoryUpgrades(index, false));\n    }\n\n    // Next part: Shop-specific toggles\n    DOMCacheGetOrSet('coinAutoUpgrade').addEventListener('click', () => toggleShops('coin'))\n    DOMCacheGetOrSet('prestigeAutoUpgrade').addEventListener('click', () => toggleShops('prestige'))\n    DOMCacheGetOrSet('transcendAutoUpgrade').addEventListener('click', () => toggleShops('transcend'))\n    DOMCacheGetOrSet('generatorsAutoUpgrade').addEventListener('click', () => toggleShops('generators'))\n    DOMCacheGetOrSet('reincarnateAutoUpgrade').addEventListener('click', () => toggleShops('reincarnate'))\n\n    // ACHIEVEMENTS TAB\n    // TODO: Remove 1 indexing\n    for (let index = 1; index <= achievementpointvalues.length - 1 ; index++) {\n\n        //Onmouseover events (Achievement descriptions)\n        DOMCacheGetOrSet(`ach${index}`).addEventListener('mouseover', () => achievementdescriptions(index));\n\n    }\n\n    // RUNES TAB [And all corresponding subtabs]\n    // Part 0: Upper UI portion\n    //Auto sacrifice toggle button\n    DOMCacheGetOrSet('toggleautosacrifice').addEventListener('click', () => toggleAutoSacrifice(0))\n    //Toggle subtabs of Runes tab\n    for (let index = 0; index < 4; index++) {\n\n        DOMCacheGetOrSet(`toggleRuneSubTab${index+1}`).addEventListener('click', () => toggleSubTab(4, index))\n\n    }\n\n    // Part 1: Runes Subtab\n    for (let index = 0; index < 7; index++) {\n\n        DOMCacheGetOrSet(`rune${index+1}`).addEventListener('mouseover', () => displayRuneInformation(index+1))\n        DOMCacheGetOrSet(`rune${index+1}`).addEventListener('click', () => toggleAutoSacrifice(index+1))\n\n        DOMCacheGetOrSet(`activaterune${index+1}`).addEventListener('mouseover', () => displayRuneInformation(index+1))\n        DOMCacheGetOrSet(`activaterune${index+1}`).addEventListener('click', () => redeemShards(index+1))\n\n    }\n\n    // Part 2: Talismans Subtab\n    const talismanBuyPercents = [10, 25, 50, 100]\n    const talismanBuyPercentsOrd = ['Ten', 'TwentyFive', 'Fifty', 'Hundred']\n\n    for (let index = 0; index < talismanBuyPercents.length; index++) {\n\n        DOMCacheGetOrSet(`talisman${talismanBuyPercentsOrd[index]}`).addEventListener('click', () => toggleTalismanBuy(talismanBuyPercents[index]))\n\n    }\n\n    DOMCacheGetOrSet('toggleautoBuyFragments').addEventListener('click', () => toggleAutoBuyFragment())\n    DOMCacheGetOrSet('toggleautoenhance').addEventListener('click', () => toggleautoenhance())\n    DOMCacheGetOrSet('toggleautofortify').addEventListener('click', () => toggleautofortify())\n\n    //Talisman Fragments/Shards\n    const talismanItemNames = ['shard','commonFragment','uncommonFragment','rareFragment','epicFragment','legendaryFragment','mythicalFragment'] as const;\n    for (let index = 0; index < talismanItemNames.length; index++) {\n\n        DOMCacheGetOrSet(`buyTalismanItem${index+1}`).addEventListener('mouseover', () => updateTalismanCostDisplay(talismanItemNames[index]))\n        DOMCacheGetOrSet(`buyTalismanItem${index+1}`).addEventListener('click', () => buyTalismanResources(talismanItemNames[index]))\n\n    }\n\n    DOMCacheGetOrSet('buyTalismanAll').addEventListener('mouseover', () => updateTalismanCostDisplay(null))\n    DOMCacheGetOrSet('buyTalismanAll').addEventListener('click', () => buyAllTalismanResources())\n\n\n    for (let index = 0; index < 7; index++) {\n\n        DOMCacheGetOrSet(`talisman${index+1}`).addEventListener('click', () => showTalismanEffect(index))\n        DOMCacheGetOrSet(`leveluptalisman${index+1}`).addEventListener('mouseover', () => showTalismanPrices(index))\n        DOMCacheGetOrSet(`leveluptalisman${index+1}`).addEventListener('click', () => buyTalismanLevels(index))\n        DOMCacheGetOrSet(`enhancetalisman${index+1}`).addEventListener('mouseover', () => showEnhanceTalismanPrices(index))\n        DOMCacheGetOrSet(`enhancetalisman${index+1}`).addEventListener('click', () => buyTalismanEnhance(index))\n        DOMCacheGetOrSet(`respectalisman${index+1}`).addEventListener('click', () => showRespecInformation(index))\n\n    }\n\n    DOMCacheGetOrSet('respecAllTalismans').addEventListener('click', () => showRespecInformation(7))\n    DOMCacheGetOrSet('confirmTalismanRespec').addEventListener('click', () => respecTalismanConfirm(G['talismanRespec']))\n    DOMCacheGetOrSet('cancelTalismanRespec').addEventListener('click', () => respecTalismanCancel(G['talismanRespec']))\n\n    for (let index = 0; index < 5; index++) {\n\n        DOMCacheGetOrSet(`talismanRespecButton${index+1}`).addEventListener('click', () => changeTalismanModifier(index+1))\n\n    }\n\n    //Part 3: Blessings and Spirits\n    for (let index = 0; index < 5; index++) {\n\n        DOMCacheGetOrSet(`runeBlessingPurchase${index+1}`).addEventListener('click', () => buyRuneBonusLevels('Blessings', index+1))\n        DOMCacheGetOrSet(`runeSpiritPurchase${index+1}`).addEventListener('click', () => buyRuneBonusLevels('Spirits', index+1))\n\n    }\n    DOMCacheGetOrSet('buyRuneBlessingInput').addEventListener('blur', () => updateRuneBlessingBuyAmount(1))\n    DOMCacheGetOrSet('buyRuneSpiritInput').addEventListener('blur', () => updateRuneBlessingBuyAmount(2))\n\n    DOMCacheGetOrSet('buyAllBlessings').addEventListener('click', () => buyAllBlessings('Blessings'))\n    DOMCacheGetOrSet('buyAllSpirits').addEventListener('click', () => buyAllBlessings('Spirits'))\n\n    // CHALLENGES TAB\n    //Part 1: Challenges\n    // Challenge 1-15 buttons\n    for (let index = 0; index < 15; index++) {\n\n        DOMCacheGetOrSet(`challenge${index+1}`).addEventListener('click', () => challengeDisplay(index+1))\n        DOMCacheGetOrSet(`challenge${index+1}`).addEventListener('dblclick', () => {\n            challengeDisplay(index+1);\n            toggleChallenges(G['triggerChallenge'], false)\n        });\n\n    }\n    //Part 2: QoL Buttons\n    // Individual buttons (Start, Retry)\n    DOMCacheGetOrSet('startChallenge').addEventListener('click', () => toggleChallenges(G['triggerChallenge'], false))\n    DOMCacheGetOrSet('retryChallenge').addEventListener('click', () => toggleRetryChallenges())\n    // Autochallenge buttons\n    DOMCacheGetOrSet('toggleAutoChallengeIgnore').addEventListener('click', () => toggleAutoChallengesIgnore(G['triggerChallenge']))\n    DOMCacheGetOrSet('toggleAutoChallengeStart').addEventListener('click', () => toggleAutoChallengeRun())\n    DOMCacheGetOrSet('startAutoChallengeTimerInput').addEventListener('input', () => updateAutoChallenge(1))\n    DOMCacheGetOrSet('exitAutoChallengeTimerInput').addEventListener('input', () => updateAutoChallenge(2))\n    DOMCacheGetOrSet('enterAutoChallengeTimerInput').addEventListener('input', () => updateAutoChallenge(3))\n\n    // RESEARCH TAB\n    //Part 1: Researches\n    // There are 200 researches, ideally in rewrite 200 would instead be length of research list/array\n    for (let index = 1; index < 200; index++) {\n\n        //Eliminates listeners on index.html 1404-1617\n        DOMCacheGetOrSet(`res${index}`).addEventListener('click', () => buyResearch(index));\n        DOMCacheGetOrSet(`res${index}`).addEventListener('mouseover', () => researchDescriptions(index));\n    }\n    //Research 200 is special, uses more params\n    DOMCacheGetOrSet('res200').addEventListener('click', () => buyResearch(200, false, 0.01));\n    DOMCacheGetOrSet('res200').addEventListener('mouseover', () => researchDescriptions(200, false, 0.01));\n\n    //Part 2: QoL buttons\n    DOMCacheGetOrSet('toggleresearchbuy').addEventListener('click', () => toggleResearchBuy())\n    DOMCacheGetOrSet('toggleautoresearch').addEventListener('click', () => toggleAutoResearch())\n    DOMCacheGetOrSet('toggleautoresearchmode').addEventListener('click', () => toggleAutoResearchMode())\n\n    // ANTHILL TAB\n    //Part 1: Ant Producers (Tiers 1-8)\n    const antProducerCostVals = ['null','1e700','3','100','10000','1e12','1e36','1e100','1e300']\n    for (let index = 1; index <= 8 ; index++) {\n\n        //Onmouse Events\n        DOMCacheGetOrSet(`anttier${index}`).addEventListener('mouseover', () => updateAntDescription(index))\n        DOMCacheGetOrSet(`anttier${index}`).addEventListener('mouseover', () => antRepeat(index))\n        //Onclick Events\n        DOMCacheGetOrSet(`anttier${index}`).addEventListener('click', () => buyAntProducers(\n        ordinals[index] as Parameters<typeof buyAntProducers>[0],\n        antProducerCostVals[index],index)\n        );\n    }\n    //Part 2: Ant Upgrades (1-12)\n    const antUpgradeCostVals = ['null', '100', '100', '1000', '1000', '1e5', '1e6', '1e8', '1e11', '1e15', '1e20', '1e40', '1e100']\n    for (let index = 1; index <= 12; index++) {\n\n        //Onmouse Event\n        DOMCacheGetOrSet(`antUpgrade${index}`).addEventListener('mouseover', () => antUpgradeDescription(index))\n        //Onclick Event\n        DOMCacheGetOrSet(`antUpgrade${index}`).addEventListener('click', () => buyAntUpgrade(antUpgradeCostVals[index], false, index))\n\n    }\n    //Part 3: Sacrifice\n    DOMCacheGetOrSet('antSacrifice').addEventListener('click', () => sacrificeAnts())\n\n    //Part 4: QoL Buttons\n    DOMCacheGetOrSet('toggleAntMax').addEventListener('click', () => toggleAntMaxBuy())\n    DOMCacheGetOrSet('toggleAutoSacrificeAnt').addEventListener('click', () => toggleAntAutoSacrifice(0))\n    DOMCacheGetOrSet('autoSacrificeAntMode').addEventListener('click', () => toggleAntAutoSacrifice(1))\n\n    // WOW! Cubes Tab\n    //Part 0: Subtab UI\n    for (let index = 0; index < 7; index++) {\n\n        DOMCacheGetOrSet(`switchCubeSubTab${index+1}`).addEventListener('click', () => toggleSubTab(8, index))\n\n    }\n\n    //Part 1: Cube Upgrades\n    for (let index = 1; index < player.cubeUpgrades.length; index++) {\n\n        DOMCacheGetOrSet(`cubeUpg${index}`).addEventListener('mouseover', () => cubeUpgradeDesc(index))\n        DOMCacheGetOrSet(`cubeUpg${index}`).addEventListener('click', () => buyCubeUpgrades(index))\n\n    }\n\n    // Toggle\n    DOMCacheGetOrSet('toggleCubeBuy').addEventListener('click', () => toggleMaxBuyCube())\n    DOMCacheGetOrSet('toggleAutoCubeUpgrades').addEventListener('click', () => autoCubeUpgradesToggle())\n\n    //Part 2: Cube Opening Buttons\n    //Wow Cubes\n    DOMCacheGetOrSet('open1Cube').addEventListener('click', () => player.wowCubes.open(1, false))\n    DOMCacheGetOrSet('open20Cube').addEventListener('click', () => player.wowCubes.open(Math.floor(Number(player.wowCubes) / 10), false))\n    DOMCacheGetOrSet('open1000Cube').addEventListener('click', () => player.wowCubes.open(Math.floor(Number(player.wowCubes) / 2), false))\n    DOMCacheGetOrSet('openCustomCube').addEventListener('click', () => player.wowCubes.openCustom());\n    DOMCacheGetOrSet('openMostCube').addEventListener('click', () => player.wowCubes.open(0, true))\n    //Wow Tesseracts\n    DOMCacheGetOrSet('open1Tesseract').addEventListener('click', () => player.wowTesseracts.open(1, false))\n    DOMCacheGetOrSet('open20Tesseract').addEventListener('click', () => player.wowTesseracts.open(Math.floor(Number(player.wowTesseracts) / 10), false))\n    DOMCacheGetOrSet('open1000Tesseract').addEventListener('click', () => player.wowTesseracts.open(Math.floor(Number(player.wowTesseracts) / 2), false))\n    DOMCacheGetOrSet('openCustomTesseract').addEventListener('click', () => player.wowTesseracts.openCustom());\n    DOMCacheGetOrSet('openMostTesseract').addEventListener('click', () => player.wowTesseracts.open(1, true))\n    //Wow Hypercubes\n    DOMCacheGetOrSet('open1Hypercube').addEventListener('click', () => player.wowHypercubes.open(1, false))\n    DOMCacheGetOrSet('open20Hypercube').addEventListener('click', () => player.wowHypercubes.open(Math.floor(Number(player.wowHypercubes) / 10), false))\n    DOMCacheGetOrSet('open1000Hypercube').addEventListener('click', () => player.wowHypercubes.open(Math.floor(Number(player.wowHypercubes) / 2), false))\n    DOMCacheGetOrSet('openCustomHypercube').addEventListener('click', () => player.wowHypercubes.openCustom());\n    DOMCacheGetOrSet('openMostHypercube').addEventListener('click', () => player.wowHypercubes.open(1, true))\n    //Wow Platonic Cubes\n    DOMCacheGetOrSet('open1PlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.open(1, false))\n    DOMCacheGetOrSet('open40kPlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.open(Math.floor(Number(player.wowPlatonicCubes) / 10), false))\n    DOMCacheGetOrSet('open1mPlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.open(Math.floor(Number(player.wowPlatonicCubes) / 2), false))\n    DOMCacheGetOrSet('openCustomPlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.openCustom());\n    DOMCacheGetOrSet('openMostPlatonicCube').addEventListener('click', () => player.wowPlatonicCubes.open(1, true))\n\n    DOMCacheGetOrSet('saveOffToggle').addEventListener('click', () => toggleSaveOff())\n    //Part 3: Platonic Upgrade Section\n    const platonicUpgrades = document.getElementsByClassName('platonicUpgradeImage')\n    for (let index = 0; index < platonicUpgrades.length; index++) {\n\n        platonicUpgrades[index].addEventListener('mouseover', () => createPlatonicDescription(index+1))\n        platonicUpgrades[index].addEventListener('click', () => buyPlatonicUpgrades(index+1))\n\n    }\n    DOMCacheGetOrSet('toggleAutoPlatonicUpgrades').addEventListener('click', () => autoPlatonicUpgradesToggle())\n\n    //Part 4: Hepteract Subtab\n    DOMCacheGetOrSet('chronosHepteract').addEventListener('mouseover', () => hepteractDescriptions('chronos'))\n    DOMCacheGetOrSet('hyperrealismHepteract').addEventListener('mouseover', () => hepteractDescriptions('hyperrealism'))\n    DOMCacheGetOrSet('quarkHepteract').addEventListener('mouseover', () => hepteractDescriptions('quark'))\n    DOMCacheGetOrSet('challengeHepteract').addEventListener('mouseover', () => hepteractDescriptions('challenge'))\n    DOMCacheGetOrSet('abyssHepteract').addEventListener('mouseover', () => hepteractDescriptions('abyss'))\n    DOMCacheGetOrSet('acceleratorHepteract').addEventListener('mouseover', () => hepteractDescriptions('accelerator'))\n    DOMCacheGetOrSet('acceleratorBoostHepteract').addEventListener('mouseover', () => hepteractDescriptions('acceleratorBoost'))\n    DOMCacheGetOrSet('multiplierHepteract').addEventListener('mouseover', () => hepteractDescriptions('multiplier'))\n\n\n    DOMCacheGetOrSet('chronosHepteractCraft').addEventListener('click', () => player.hepteractCrafts.chronos.craft())\n    DOMCacheGetOrSet('hyperrealismHepteractCraft').addEventListener('click', () => player.hepteractCrafts.hyperrealism.craft())\n    DOMCacheGetOrSet('quarkHepteractCraft').addEventListener('click', () => player.hepteractCrafts.quark.craft())\n    DOMCacheGetOrSet('challengeHepteractCraft').addEventListener('click', () => player.hepteractCrafts.challenge.craft())\n    DOMCacheGetOrSet('abyssHepteractCraft').addEventListener('click', () => player.hepteractCrafts.abyss.craft())\n    DOMCacheGetOrSet('acceleratorHepteractCraft').addEventListener('click', () => player.hepteractCrafts.accelerator.craft())\n    DOMCacheGetOrSet('acceleratorBoostHepteractCraft').addEventListener('click', () => player.hepteractCrafts.acceleratorBoost.craft())\n    DOMCacheGetOrSet('multiplierHepteractCraft').addEventListener('click', () => player.hepteractCrafts.multiplier.craft())\n\n    DOMCacheGetOrSet('chronosHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.chronos.craft(true))\n    DOMCacheGetOrSet('hyperrealismHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.hyperrealism.craft(true))\n    DOMCacheGetOrSet('quarkHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.quark.craft(true))\n    DOMCacheGetOrSet('challengeHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.challenge.craft(true))\n    DOMCacheGetOrSet('abyssHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.abyss.craft(true))\n    DOMCacheGetOrSet('acceleratorHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.accelerator.craft(true))\n    DOMCacheGetOrSet('acceleratorBoostHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.acceleratorBoost.craft(true))\n    DOMCacheGetOrSet('multiplierHepteractCraftMax').addEventListener('click', () => player.hepteractCrafts.multiplier.craft(true))\n\n    DOMCacheGetOrSet('chronosHepteractCap').addEventListener('click', () => player.hepteractCrafts.chronos.expand())\n    DOMCacheGetOrSet('hyperrealismHepteractCap').addEventListener('click', () => player.hepteractCrafts.hyperrealism.expand())\n    DOMCacheGetOrSet('quarkHepteractCap').addEventListener('click', () => player.hepteractCrafts.quark.expand())\n    DOMCacheGetOrSet('challengeHepteractCap').addEventListener('click', () => player.hepteractCrafts.challenge.expand())\n    DOMCacheGetOrSet('abyssHepteractCap').addEventListener('click', () => player.hepteractCrafts.abyss.expand())\n    DOMCacheGetOrSet('acceleratorHepteractCap').addEventListener('click', () => player.hepteractCrafts.accelerator.expand())\n    DOMCacheGetOrSet('acceleratorBoostHepteractCap').addEventListener('click', () => player.hepteractCrafts.acceleratorBoost.expand())\n    DOMCacheGetOrSet('multiplierHepteractCap').addEventListener('click', () => player.hepteractCrafts.multiplier.expand())\n\n    DOMCacheGetOrSet('chronosHepteractAuto').addEventListener('click', () => player.hepteractCrafts.chronos.toggleAutomatic())\n    DOMCacheGetOrSet('hyperrealismHepteractAuto').addEventListener('click', () => player.hepteractCrafts.hyperrealism.toggleAutomatic())\n    DOMCacheGetOrSet('quarkHepteractAuto').addEventListener('click', () => player.hepteractCrafts.quark.toggleAutomatic())\n    DOMCacheGetOrSet('challengeHepteractAuto').addEventListener('click', () => player.hepteractCrafts.challenge.toggleAutomatic())\n    DOMCacheGetOrSet('abyssHepteractAuto').addEventListener('click', () => player.hepteractCrafts.abyss.toggleAutomatic())\n    DOMCacheGetOrSet('acceleratorHepteractAuto').addEventListener('click', () => player.hepteractCrafts.accelerator.toggleAutomatic())\n    DOMCacheGetOrSet('acceleratorBoostHepteractAuto').addEventListener('click', () => player.hepteractCrafts.acceleratorBoost.toggleAutomatic())\n    DOMCacheGetOrSet('multiplierHepteractAuto').addEventListener('click', () => player.hepteractCrafts.multiplier.toggleAutomatic())\n\n    DOMCacheGetOrSet('hepteractToQuark').addEventListener('mouseover', () => hepteractToOverfluxOrbDescription())\n    DOMCacheGetOrSet('hepteractToQuarkTrade').addEventListener('click', () => tradeHepteractToOverfluxOrb())\n    DOMCacheGetOrSet('hepteractToQuarkTradeMax').addEventListener('click', () => tradeHepteractToOverfluxOrb(true))\n    DOMCacheGetOrSet('hepteractToQuarkTradeAuto').addEventListener('click', () => toggleAutoBuyOrbs())\n    DOMCacheGetOrSet('overfluxPowder').addEventListener('mouseover', () => overfluxPowderDescription())\n    DOMCacheGetOrSet('powderDayWarp').addEventListener('click', () => overfluxPowderWarp(false))\n    DOMCacheGetOrSet('warpAuto').addEventListener('click', () => overfluxPowderWarp(true))\n\n    DOMCacheGetOrSet('hepteractAutoPercentageButton').addEventListener('click', () => toggleHepteractAutoPercentage())\n\n    // CORRUPTION TAB\n    //Part 0: Subtabs\n    DOMCacheGetOrSet('corrStatsBtn').addEventListener('click', () => toggleSubTab(9, 0))\n    DOMCacheGetOrSet('corrLoadoutsBtn').addEventListener('click', () => toggleSubTab(9, 1))\n\n    //Part 1: Displays\n    DOMCacheGetOrSet('corruptionDisplays').addEventListener('click', () => corruptionDisplay(10))\n    DOMCacheGetOrSet('corruptionCleanse').addEventListener('click', () => corruptionCleanseConfirm())\n    DOMCacheGetOrSet('corruptionCleanseConfirm').addEventListener('click', () => toggleCorruptionLevel(10, 999))\n\n    //Extra toggle\n    DOMCacheGetOrSet('ascensionAutoEnable').addEventListener('click', () => toggleAutoAscend(0))\n    DOMCacheGetOrSet('ascensionAutoToggle').addEventListener('click', () => toggleAutoAscend(1))\n\n    // SETTNGS TAB\n    // Part 0: Subtabs\n    const settingSubTabs = Array.from<HTMLElement>(document.querySelectorAll('[id^=\"switchSettingSubTab\"]'));\n    for (const subtab of settingSubTabs) {\n        subtab.addEventListener('click', () => toggleSubTab(-1, settingSubTabs.indexOf(subtab)));\n    }\n\n    const t = Array.from(document.querySelectorAll<HTMLElement>('button.statsNerds'));\n    for (const s of t) {\n        s.addEventListener('click', (e) => displayStats(e.target as HTMLElement));\n    }\n\n    DOMCacheGetOrSet('summaryGeneration').addEventListener('click', () => generateExportSummary());\n\n    // Various functions\n    DOMCacheGetOrSet('exportgame').addEventListener('click', () => exportSynergism())\n    DOMCacheGetOrSet('saveStringInput').addEventListener('blur', e => updateSaveString(e.target as HTMLInputElement));\n    DOMCacheGetOrSet('savegame').addEventListener('click', () => saveSynergy(true))\n    DOMCacheGetOrSet('deleteGame').addEventListener('click', () => resetGame())\n    DOMCacheGetOrSet('preloadDeleteGame').addEventListener('click', () => reloadDeleteGame())\n    DOMCacheGetOrSet('promocodes').addEventListener('click', () => promocodesPrompt())\n    DOMCacheGetOrSet('addCode').addEventListener('click', () => promocodes('add'))\n    DOMCacheGetOrSet('addCode').addEventListener('mouseover', () => promocodesInfo('add'))\n    DOMCacheGetOrSet('addCodeOne').addEventListener('click', () => promocodes('add', 1))\n    DOMCacheGetOrSet('addCodeOne').addEventListener('mouseover', () => promocodesInfo('add'))\n    DOMCacheGetOrSet('dailyCode').addEventListener('click', () => promocodes('daily'))\n    DOMCacheGetOrSet('dailyCode').addEventListener('mouseover', () => promocodesInfo('daily'))\n    DOMCacheGetOrSet('timeCode').addEventListener('click', () => promocodes('time'))\n    DOMCacheGetOrSet('timeCode').addEventListener('mouseover', () => promocodesInfo('time'))\n    DOMCacheGetOrSet('historyTogglePerSecondButton').addEventListener('click', () => resetHistoryTogglePerSecond())\n    DOMCacheGetOrSet('resetHotkeys').addEventListener('click', () => resetHotkeys())\n    DOMCacheGetOrSet('notation').addEventListener('click', () => toggleAnnotation())\n    DOMCacheGetOrSet('iconSet').addEventListener('click', () => toggleIconSet(player.iconSet + 1))\n\n    // SHOP TAB\n\n    /*\n\nTODO: Fix this entire tab it's utter shit\n\n*/\n\n    // Part 1: The Settings\n    /*Respec The Upgrades*/ DOMCacheGetOrSet('resetShopUpgrades').addEventListener('click', () => resetShopUpgrades())\n    /*Toggle Shop Confirmations*/ DOMCacheGetOrSet('toggleConfirmShop').addEventListener('click', () => toggleShopConfirmation())\n    /*Toggle Shop Buy Max*/ DOMCacheGetOrSet('toggleBuyMaxShop').addEventListener('click', (event) => toggleBuyMaxShop(event))\n    /*Toggle Hide Permanent Maxed*/ DOMCacheGetOrSet('toggleHideShop').addEventListener('click', () => toggleHideShop())\n\n    // Part 2: Potions\n    /*Offering Potion*/\n    DOMCacheGetOrSet('offeringPotions').addEventListener('mouseover', () => shopDescriptions('offeringPotion'))\n    DOMCacheGetOrSet('offeringpotionowned').addEventListener('mouseover', () => shopDescriptions('offeringPotion'))\n    DOMCacheGetOrSet('buyofferingpotion').addEventListener('mouseover', () => shopDescriptions('offeringPotion'))\n    DOMCacheGetOrSet('useofferingpotion').addEventListener('mouseover', () => shopDescriptions('offeringPotion'))\n    DOMCacheGetOrSet('buyofferingpotion').addEventListener('click', () => buyShopUpgrades('offeringPotion'))\n    //DOMCacheGetOrSet('offeringPotions').addEventListener('click', () => buyShopUpgrades(\"offeringPotion\"))  //Allow clicking of image to buy also\n    DOMCacheGetOrSet('useofferingpotion').addEventListener('click', () => useConsumable('offeringPotion'))\n    DOMCacheGetOrSet('toggle42').addEventListener('click', () => {\n        player.autoPotionTimer = 0;\n    })\n    /*Obtainium Potion*/\n    DOMCacheGetOrSet('obtainiumPotions').addEventListener('mouseover', () => shopDescriptions('obtainiumPotion'))\n    DOMCacheGetOrSet('obtainiumpotionowned').addEventListener('mouseover', () => shopDescriptions('obtainiumPotion'))\n    DOMCacheGetOrSet('buyobtainiumpotion').addEventListener('mouseover', () => shopDescriptions('obtainiumPotion'))\n    DOMCacheGetOrSet('useobtainiumpotion').addEventListener('mouseover', () => shopDescriptions('obtainiumPotion'))\n    DOMCacheGetOrSet('buyobtainiumpotion').addEventListener('click', () => buyShopUpgrades('obtainiumPotion'))\n    //DOMCacheGetOrSet('obtainiumPotions').addEventListener('click', () => buyShopUpgrades(\"obtainiumPotion\"))  //Allow clicking of image to buy also\n    DOMCacheGetOrSet('useobtainiumpotion').addEventListener('click', () => useConsumable('obtainiumPotion'))\n    DOMCacheGetOrSet('toggle43').addEventListener('click', () => {\n        player.autoPotionTimerObtainium = 0;\n    })\n    /* Permanent Upgrade Images */\n    const shopKeys = Object.keys(player.shopUpgrades) as (keyof Player['shopUpgrades'])[]\n    for (const key of shopKeys) {\n        const shopItem = shopData[key]\n        if (shopItem.type === shopUpgradeTypes.UPGRADE) {\n            DOMCacheGetOrSet(`${key}`).addEventListener('mouseover', () => shopDescriptions(key))\n            DOMCacheGetOrSet(`${key}Level`).addEventListener('mouseover', () => shopDescriptions(key))\n            DOMCacheGetOrSet(`${key}Button`).addEventListener('mouseover', () => shopDescriptions(key))\n            //DOMCacheGetOrSet(`${key}`).addEventListener('click', () => buyShopUpgrades(key))  //Allow clicking of image to buy also\n            DOMCacheGetOrSet(`${key}Button`).addEventListener('click', () => buyShopUpgrades(key))\n        }\n    }\n    DOMCacheGetOrSet('buySingularityQuarksButton').addEventListener('click', () => buyGoldenQuarks());\n    // SINGULARITY TAB\n    const singularityUpgrades = Object.keys(player.singularityUpgrades) as (keyof Player['singularityUpgrades'])[];\n    for (const key of singularityUpgrades) {\n        if (key === 'offeringAutomatic') {\n            continue\n        }\n        DOMCacheGetOrSet(`${String(key)}`).addEventListener('mouseover', () => player.singularityUpgrades[`${String(key)}`].updateUpgradeHTML())\n        DOMCacheGetOrSet(`${String(key)}`).addEventListener('click', (event) => player.singularityUpgrades[`${String(key)}`].buyLevel(event))\n    }\n    DOMCacheGetOrSet('actualSingularityUpgradeContainer').addEventListener('mouseover', () => shopMouseover(true));\n    DOMCacheGetOrSet('actualSingularityUpgradeContainer').addEventListener('mouseout', () => shopMouseover(false));\n\n    // Octeract Upgrades\n    const octeractUpgrades = Object.keys(player.octeractUpgrades) as (keyof Player['octeractUpgrades'])[];\n    for (const key of octeractUpgrades) {\n        DOMCacheGetOrSet(`${String(key)}`).addEventListener('mouseover', () => player.octeractUpgrades[`${String(key)}`].updateUpgradeHTML())\n        DOMCacheGetOrSet(`${String(key)}`).addEventListener('click', (event) => player.octeractUpgrades[`${String(key)}`].buyLevel(event))\n    }\n\n    DOMCacheGetOrSet('octeractUpgradeContainer').addEventListener('mouseover', () => shopMouseover(true));\n    DOMCacheGetOrSet('octeractUpgradeContainer').addEventListener('mouseout', () => shopMouseover(false));\n\n    // EXALT\n    const singularityChallenges = Object.keys(player.singularityChallenges) as (keyof Player['singularityChallenges'])[];\n    for (const key of singularityChallenges) {\n        DOMCacheGetOrSet(`${String(key)}`).addEventListener('mouseover', () => player.singularityChallenges[`${String(key)}`].updateChallengeHTML())\n        DOMCacheGetOrSet(`${String(key)}`).addEventListener('click', () => player.singularityChallenges[`${String(key)}`].challengeEntryHandler())\n    }\n\n    //Toggle subtabs of Singularity tab\n    for (let index = 0; index < 5; index++) {\n        DOMCacheGetOrSet(`toggleSingularitySubTab${index+1}`).addEventListener('click', () => toggleSubTab(10, index))\n    }\n\n    const tabs = document.querySelectorAll<HTMLElement>('#tabrow > button');\n    tabs.forEach(b => b.addEventListener('click', () => changeTabColor()));\n\n    // EVENT TAB (Replace as events are created)\n    DOMCacheGetOrSet('unsmith').addEventListener('click', () => clickSmith())\n\n    // Import button\n    DOMCacheGetOrSet('importfile').addEventListener('change', async e => {\n        const element = e.target as HTMLInputElement;\n        const file = element.files![0];\n        let save = '';\n        // https://developer.mozilla.org/en-US/docs/Web/API/Blob/text\n        // not available in (bad) browsers like Safari 11\n        if (typeof Blob.prototype.text === 'function') {\n            save = await file.text();\n        } else {\n            const reader = new FileReader();\n            reader.readAsText(file);\n            const text = await new Promise<string>(res => {\n                reader.addEventListener('load', () => res(reader.result!.toString()));\n            });\n\n            save = text;\n        }\n\n        element.value = '';\n        handleLastModified(file.lastModified)\n\n        return importSynergism(save);\n    });\n\n    for (let i = 1; i <= 5; i++) {\n        DOMCacheGetOrSet(`switchTheme${i}`).addEventListener('click', () => toggleTheme(false, i, true));\n    }\n\n    DOMCacheGetOrSet('saveType').addEventListener('click', async (event) => {\n        const element = event.target as HTMLInputElement\n\n        if (!element.checked) {\n            localStorage.removeItem('copyToClipboard')\n            event.stopPropagation()\n            return\n        }\n\n        event.preventDefault()\n\n        const confirmed = await Confirm(i18next.t('save.saveToClipboard'))\n\n        if (confirmed) {\n            element.checked = !element.checked\n            localStorage.setItem('copyToClipboard', '')\n        } else {\n            localStorage.removeItem('copyToClipboard')\n        }\n    })\n\n    // Window\n    window.addEventListener('error', imgErrorHandler, {capture: true});\n}\n", "import { format, player, formatTimeShort } from './Synergism';\nimport { Alert, Prompt } from './UpdateHTML';\nimport type { IUpgradeData } from './DynamicUpgrade';\nimport { DynamicUpgrade } from './DynamicUpgrade';\nimport type { Player } from './types/Synergism';\nimport { DOMCacheGetOrSet } from './Cache/DOM';\nimport { octeractGainPerSecond } from './Calculate'\nimport i18next from 'i18next';\n\nexport interface IOcteractData extends Omit<IUpgradeData, 'name' | 'description'> {\n    costFormula (level: number, baseCost: number): number\n    octeractsInvested?: number\n    qualityOfLife?: boolean\n}\n\nexport class OcteractUpgrade extends DynamicUpgrade {\n    readonly costFormula: (level: number, baseCost: number) => number\n    public octeractsInvested = 0\n    public qualityOfLife: boolean\n\n    constructor(data: IOcteractData, key: string) {\n        const name = i18next.t(`octeract.data.${key}.name`)\n        const description = i18next.t(`octeract.data.${key}.description`)\n        super({... data, name, description});\n        this.costFormula = data.costFormula;\n        this.octeractsInvested = data.octeractsInvested ?? 0;\n        this.qualityOfLife = data.qualityOfLife ?? false\n    }\n\n    getCostTNL(): number {\n\n        if (this.level === this.maxLevel) {\n            return 0\n        }\n\n        return this.costFormula(this.level, this.costPerLevel)\n    }\n\n    /**\n     * Buy levels up until togglebuy or maxed.\n     * @returns An alert indicating cannot afford, already maxed or purchased with how many\n     *          levels purchased\n     */\n    public async buyLevel(event: MouseEvent): Promise<void> {\n        let purchased = 0;\n        let maxPurchasable = 1;\n        let OCTBudget = player.wowOcteracts;\n\n        if (event.shiftKey) {\n            maxPurchasable = 1000000\n            const buy = Number(await Prompt(`${i18next.t('octeract.buyLevel.buyPrompt', {n: format(player.wowOcteracts, 0, true)})}`))\n\n            if (isNaN(buy) || !isFinite(buy) || !Number.isInteger(buy)) { // nan + Infinity checks\n                return Alert(i18next.t('general.validation.finite'));\n            }\n\n            if (buy === -1) {\n                OCTBudget = player.wowOcteracts\n            } else if (buy <= 0) {\n                return Alert(i18next.t('octeract.buyLevel.cancelPurchase'))\n            } else {\n                OCTBudget = buy\n            }\n            OCTBudget = Math.min(player.wowOcteracts, OCTBudget)\n        }\n\n        if (this.maxLevel > 0) {\n            maxPurchasable = Math.min(maxPurchasable, this.maxLevel - this.level)\n        }\n\n        if (maxPurchasable === 0) {\n            return Alert(i18next.t('octeract.buyLevel.alreadyMax'))\n        }\n\n        while (maxPurchasable > 0) {\n            const cost = this.getCostTNL();\n            if (player.wowOcteracts < cost || OCTBudget < cost) {\n                break;\n            } else {\n                player.wowOcteracts -= cost;\n                OCTBudget -= cost;\n                this.octeractsInvested += cost\n                this.level += 1;\n                purchased += 1;\n                maxPurchasable -= 1;\n            }\n        }\n\n        if (purchased === 0) {\n            return Alert(i18next.t('octeract.buyLevel.cannotAfford'))\n        }\n        if (purchased > 1) {\n            return Alert(`${i18next.t('octeract.buyLevel.multiBuy', {n: format(purchased)})}`)\n        }\n\n        this.updateUpgradeHTML();\n    }\n\n    /**\n     * Given an upgrade, give a concise information regarding its data.\n     * @returns A string that details the name, description, level statistic, and next level cost.\n     */\n    toString(): string {\n        const costNextLevel = this.getCostTNL();\n        const maxLevel = this.maxLevel === -1\n            ? ''\n            : `/${format(this.maxLevel, 0 , true)}`;\n        const isMaxLevel = this.maxLevel === this.level;\n        const color = isMaxLevel ? 'plum' : 'white';\n\n        let freeLevelInfo = this.freeLevels > 0 ?\n            `<span style=\"color: orange\"> [+${format(this.freeLevels, 1, true)}]</span>` : ''\n\n        if (this.freeLevels > this.level) {\n            freeLevelInfo = freeLevelInfo + `<span style=\"color: var(--maroon-text-color)\">${i18next.t('general.softCapped')}</span>`\n        }\n\n        const isAffordable = costNextLevel <= player.wowOcteracts;\n        let affordTime = '';\n        if (!isMaxLevel && !isAffordable) {\n            const octPerSecond = octeractGainPerSecond();\n            affordTime = octPerSecond > 0 ? formatTimeShort((costNextLevel - player.wowOcteracts) / octPerSecond) : `${i18next.t('general.infinity')}`;\n        }\n        const affordableInfo = isMaxLevel ? `<span style=\"color: plum\"> ${i18next.t('general.maxed')}</span>` :\n            isAffordable ? `<span style=\"color: var(--green-text-color)\"> ${i18next.t('general.affordable')}</span>` :\n                `<span style=\"color: yellow\"> ${i18next.t('octeract.toString.becomeAffordable', {n: affordTime})}</span>`;\n\n        return `<span style=\"color: gold\">${this.name}</span>\n                <span style=\"color: lightblue\">${this.description}</span>\n                <span style=\"color: ${color}\"> ${i18next.t('general.level')} ${format(this.level, 0 , true)}${maxLevel}${freeLevelInfo}</span>\n                <span style=\"color: gold\">${this.getEffect().desc}</span>\n                ${i18next.t('octeract.toString.costNextLevel')} ${format(costNextLevel,2,true, true, true)} Octeracts${affordableInfo}\n                ${i18next.t('general.spent')} Octeracts: ${format(this.octeractsInvested, 2, true, true, true)}`\n    }\n\n    public updateUpgradeHTML(): void {\n        DOMCacheGetOrSet('singularityOcteractsMultiline').innerHTML = this.toString()\n        DOMCacheGetOrSet('octeractAmount').innerHTML = i18next.t('octeract.amount', {octeracts: format(player.wowOcteracts, 2, true, true, true)})\n    }\n\n    public computeFreeLevelSoftcap(): number {\n        return Math.min(this.level, this.freeLevels) + Math.sqrt(Math.max(0, this.freeLevels - this.level))\n    }\n\n    public actualTotalLevels(): number {\n        if (player.singularityChallenges.noOcteracts.enabled && !this.qualityOfLife) {\n            return 0\n        }\n        const actualFreeLevels = this.computeFreeLevelSoftcap();\n        const linearLevels = this.level + actualFreeLevels\n        return linearLevels // There is currently no 'improvement' to oct free upgrades.\n    }\n\n    public getEffect(): { bonus: number | boolean, desc: string } {\n        return this.effect(this.actualTotalLevels())\n    }\n\n    public refund(): void {\n        player.wowOcteracts += this.octeractsInvested;\n        this.level = 0;\n        this.octeractsInvested = 0;\n    }\n\n}\n\nexport const octeractData: Record<keyof Player['octeractUpgrades'], IOcteractData> = {\n    octeractStarter: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * (level + 1)\n        },\n        maxLevel: 1,\n        costPerLevel: 1e-15,\n        effect: (n: number) => {\n            return {\n                bonus: n > 0,\n                get desc () {\n                    return i18next.t('octeract.data.octeractStarter.effect', {n: (n > 0) ? '' : 'not'})\n                }\n            }\n        }\n    },\n    octeractGain: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * (Math.pow(level + 1, 6) - Math.pow(level, 6))\n        },\n        maxLevel: 1e8,\n        costPerLevel: 1e-8,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.011 * n,\n                get desc () {\n                    return i18next.t('octeract.data.octeractGain.effect', {n: format(n, 0 , true)})\n                }\n            }\n        }\n    },\n    octeractGain2: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(10, Math.pow(level, 0.5) / 3)\n        },\n        maxLevel: -1,\n        costPerLevel: 1e10,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.01 * n,\n                get desc () {\n                    return i18next.t('octeract.data.octeractGain2.effect', {n: format(n, 0 , true)})\n                }\n            }\n        }\n    },\n    octeractQuarkGain: {\n        costFormula: (level: number, baseCost: number) => {\n            if (level < 1000) {\n                return baseCost * (Math.pow(level + 1, 7) - Math.pow(level, 7))\n            } else {\n                const fasterMult = (level >= 10000) ? (Math.pow(10, (level - 10000) / 250)) : 1\n                const fasterMult2 = (level >= 15000) ? (Math.pow(10, (level - 15000) / 250)) : 1\n                return baseCost * (Math.pow(1001, 7) - Math.pow(1000, 7)) * Math.pow(10, level / 1000) * fasterMult * fasterMult2\n            }\n        },\n        maxLevel: 20000,\n        costPerLevel: 1e-7,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.011 * n,\n                get desc () {\n                    return i18next.t('octeract.data.octeractQuarkGain.effect', {n: format(1.1*n, 0 , true)})\n                }\n            }\n        }\n    },\n    octeractQuarkGain2: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(1e20, level)\n        },\n        maxLevel: 5,\n        costPerLevel: 1e22,\n        effect: (n: number) => {\n            return {\n                bonus: n > 0,\n                get desc () {\n                    return i18next.t('octeract.data.octeractQuarkGain2.effect', {n: n > 0 ? '' : 'NOT'})\n                }\n            }\n        }\n    },\n    octeractCorruption: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(10, level * 10)\n        },\n        maxLevel: 2,\n        costPerLevel: 10,\n        effect: (n: number) => {\n            return {\n                bonus: n,\n                get desc () {\n                    return i18next.t('octeract.data.octeractCorruption.effect', {n: n})\n                }\n            }\n        }\n    },\n    octeractGQCostReduce: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(2, level)\n        },\n        maxLevel: 50,\n        costPerLevel: 1e-9,\n        effect: (n: number) => {\n            return {\n                bonus: 1 - n/100,\n                get desc () {\n                    return i18next.t('octeract.data.octeractGQCostReduce.effect', {n: n})\n                }\n            }\n        }\n    },\n    octeractExportQuarks: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(level + 1, 3)\n        },\n        maxLevel: 100,\n        costPerLevel: 1,\n        effect: (n: number) => {\n            return {\n                bonus: 4 * n/10 + 1,\n                get desc () {\n                    return i18next.t('octeract.data.octeractExportQuarks.effect', {n: format(40 * n, 0 , true)})\n                }\n            }\n        }\n    },\n    octeractImprovedDaily: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(1.6, level)\n        },\n        maxLevel: 50,\n        costPerLevel: 1e-3,\n        effect: (n: number) => {\n            return {\n                bonus: n,\n                get desc () {\n                    return i18next.t('octeract.data.octeractImprovedDaily.effect', {n: n})\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    octeractImprovedDaily2: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(2, level)\n        },\n        maxLevel: 50,\n        costPerLevel: 1e-2,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.01 * n,\n                get desc () {\n                    return i18next.t('octeract.data.octeractImprovedDaily2.effect', {n: n})\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    octeractImprovedDaily3: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(20, level)\n        },\n        maxLevel: -1,\n        costPerLevel: 1e20,\n        effect: (n: number) => {\n            return {\n                bonus: n,\n                get desc () {\n                    return i18next.t('octeract.data.octeractImprovedDaily3.effect', {n: `${n} +${0.5 * n}%`})\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    octeractImprovedQuarkHept: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(1e6, level)\n        },\n        maxLevel: 3,\n        costPerLevel: 1/10,\n        effect: (n: number) => {\n            return {\n                bonus: n / 100,\n                get desc () {\n                    return i18next.t('octeract.data.octeractImprovedQuarkHept.effect', {n: format(n/100, 2, true)})\n                }\n            }\n        }\n    },\n    octeractImprovedGlobalSpeed: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(level + 1, 3)\n        },\n        maxLevel: 1000,\n        costPerLevel: 1e-5,\n        effect: (n: number) => {\n            return {\n                bonus: n/100,\n                get desc () {\n                    return i18next.t('octeract.data.octeractImprovedGlobalSpeed.effect', {n: format(n,0,true)})\n                }\n            }\n        }\n    },\n    octeractImprovedAscensionSpeed: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(1e9, level / 100)\n        },\n        maxLevel: 100,\n        costPerLevel: 100,\n        effect: (n: number) => {\n            return {\n                bonus: n / 2000,\n                get desc () {\n                    return i18next.t('octeract.data.octeractImprovedAscensionSpeed.effect', {n: format(n/20, 2, true)})\n                }\n            }\n        }\n    },\n    octeractImprovedAscensionSpeed2: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(1e12, level / 250)\n        },\n        maxLevel: 250,\n        costPerLevel: 1e5,\n        effect: (n: number) => {\n            return {\n                bonus: n / 2000,\n                get desc () {\n                    return i18next.t('octeract.data.octeractImprovedAscensionSpeed2.effect', {n: format(n/50, 2, true)})\n                }\n            }\n        }\n    },\n    octeractImprovedFree: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(level + 1, 3)\n        },\n        maxLevel: 1,\n        costPerLevel: 100,\n        effect: (n: number) => {\n            return {\n                bonus: n > 0,\n                get desc () {\n                    return i18next.t('octeract.data.octeractImprovedFree.effect', {n: (n > 0) ? '' : 'NOT'})\n                }\n            }\n        }\n    },\n    octeractImprovedFree2: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(level + 1, 3)\n        },\n        maxLevel: 1,\n        costPerLevel: 1e7,\n        effect: (n: number) => {\n            return {\n                bonus: 0.05 * n,\n                get desc () {\n                    return i18next.t('octeract.data.octeractImprovedFree2.effect', {n: format(n / 20, 2, true)})\n                }\n            }\n        }\n    },\n    octeractImprovedFree3: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(level + 1, 3)\n        },\n        maxLevel: 1,\n        costPerLevel: 1e17,\n        effect: (n: number) => {\n            return {\n                bonus: 0.05 * n,\n                get desc () {\n                    return i18next.t('octeract.data.octeractImprovedFree3.effect', {n: format(n/20, 2, true)})\n                }\n            }\n        }\n    },\n    octeractImprovedFree4: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(1e20, level / 40)\n        },\n        maxLevel: 40,\n        costPerLevel: 1e20,\n        effect: (n: number) => {\n            return {\n                bonus: 0.001 * n + ((n > 0)? 0.01: 0),\n                get desc () {\n                    return i18next.t('octeract.data.octeractImprovedFree4.effect', {n: format(0.001 * n + ((n > 0)? 0.01: 0), 3, true)})\n                }\n            }\n        }\n    },\n    octeractSingUpgradeCap: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(1e3, level)\n        },\n        maxLevel: 10,\n        costPerLevel: 1e10,\n        effect: (n: number) => {\n            return {\n                bonus: n,\n                get desc () {\n                    return i18next.t('octeract.data.octeractSingUpgradeCap.effect', {n: n})\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    octeractOfferings1: {\n        costFormula: (level: number, baseCost: number) => {\n            if (level < 25) {\n                return baseCost * Math.pow(level + 1, 5)\n            } else {\n                return baseCost * 1e15 * Math.pow(10, level / 25 - 1)\n            }\n        },\n        maxLevel: -1,\n        costPerLevel: 1e-15,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.01 * n,\n                get desc () {\n                    return i18next.t('octeract.data.octeractOfferings1.effect', {n: format(n)})\n                }\n            }\n        }\n    },\n    octeractObtainium1: {\n        costFormula: (level: number, baseCost: number) => {\n            if (level < 25) {\n                return baseCost * Math.pow(level + 1, 5)\n            } else {\n                return baseCost * 1e15 * Math.pow(10, level / 25 - 1)\n            }\n        },\n        maxLevel: -1,\n        costPerLevel: 1e-15,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 0.01 * n,\n                get desc () {\n                    return i18next.t('octeract.data.octeractObtainium1.effect', {n: format(n)})\n                }\n            }\n        }\n    },\n    octeractAscensions: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(level + 1, 3)\n        },\n        maxLevel: 1000000,\n        costPerLevel: 1,\n        effect: (n: number) => {\n            return {\n                bonus: (1 + n / 100) * (1 + 2 * Math.floor(n / 10) / 100),\n                get desc () {\n                    return i18next.t('octeract.data.octeractAscensions.effect', {n: format((100 + n) * (1 + 2 * Math.floor(n/10) / 100) - 100, 1, true)})\n                }\n            }\n        }\n    },\n    octeractAscensions2: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(10, Math.pow(level, 0.5) / 3)\n        },\n        maxLevel: -1,\n        costPerLevel: 1e12,\n        effect: (n: number) => {\n            return {\n                bonus: (1 + n / 100) * (1 + 2 * Math.floor(n / 10) / 100),\n                get desc () {\n                    return i18next.t('octeract.data.octeractAscensions2.effect', {n: format((100 + n) * (1 + 2 * Math.floor(n/10) / 100) - 100, 1, true)})\n                }\n            }\n        }\n    },\n    octeractAscensionsOcteractGain: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(40, level)\n        },\n        maxLevel: -1,\n        costPerLevel: 1000,\n        effect: (n: number) => {\n            return {\n                bonus: n / 100,\n                get desc () {\n                    return i18next.t('octeract.data.octeractAscensionsOcteractGain.effect', {n: format(n, 1, true)})\n                }\n            }\n        }\n    },\n    octeractFastForward: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(1e8, level)\n        },\n        maxLevel: 2,\n        costPerLevel: 1e8,\n        effect: (n: number) => {\n            return {\n                bonus: n,\n                get desc () {\n                    return i18next.t('octeract.data.octeractFastForward.effect', {n100: 100 * n, n: n})\n                }\n            }\n        }\n    },\n    octeractAutoPotionSpeed: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(10, level)\n        },\n        maxLevel: -1,\n        costPerLevel: 1e-10,\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 4 * n / 100,\n                get desc () {\n                    return i18next.t('octeract.data.octeractAutoPotionSpeed.effect', {n: 4 * n})\n                }\n            }\n        }\n    },\n    octeractAutoPotionEfficiency: {\n        costFormula: (level: number, baseCost: number) => {\n            return baseCost * Math.pow(10, level)\n        },\n        maxLevel: 100,\n        costPerLevel: 1e-10 * Math.pow(10, 0.5),\n        effect: (n: number) => {\n            return {\n                bonus: 1 + 2 * n / 100,\n                get desc () {\n                    return i18next.t('octeract.data.octeractAutoPotionEfficiency.effect', {n: 2 * n})\n                }\n            }\n        }\n    },\n    octeractOneMindImprover: {\n        costFormula: (level: number, baseCost: number) => {\n            const fasterMult = (level >= 10) ? (Math.pow(1e3, level - 10)) : 1\n            return baseCost * Math.pow(1e5, level) * fasterMult\n        },\n        maxLevel: 16,\n        costPerLevel: 1e25,\n        effect: (n: number) => {\n            return {\n                bonus: 0.55 + n / 150,\n                get desc () {\n                    return i18next.t('octeract.data.octeractOneMindImprover.effect', {n: format(0.55 + n / 150, 3, true)})\n                }\n            }\n        },\n        qualityOfLife: true\n    },\n    octeractAmbrosiaLuck: {\n        costFormula: (level: number, baseCost: number) => {\n            const useLevel = level + 1\n            return baseCost * (Math.pow(10, useLevel) - Math.pow(10, useLevel - 1))\n        },\n        maxLevel: -1,\n        costPerLevel: 1e60 / 9,\n        effect: (n: number) => {\n            return {\n                bonus: n,\n                get desc () {\n                    return i18next.t('octeract.data.octeractAmbrosiaLuck.effect', {n: format(n)})\n                }\n            }\n        }\n    }\n}\n\n", "import i18next from 'i18next'\nimport { DOMCacheGetOrSet } from './Cache/DOM'\nimport { calculateGoldenQuarkGain } from './Calculate'\nimport { singularity } from './Reset'\nimport { player } from './Synergism'\nimport type { Player } from './types/Synergism'\nimport { Alert, Confirm } from './UpdateHTML'\nimport { toOrdinal } from './Utility'\n\nexport interface ISingularityChallengeData {\n    baseReq: number\n    maxCompletions: number\n    unlockSingularity: number\n    HTMLTag: string\n    singularityRequirement: (baseReq: number, completions: number) => number\n    effect: (n: number) => {[key: string]: number | boolean}\n    completions?: number\n    enabled?: boolean\n    highestSingularityCompleted?: number\n}\n\nexport class SingularityChallenge {\n    public name\n    public description\n    public rewardDescription\n    public baseReq\n    public completions\n    public maxCompletions\n    public unlockSingularity\n    public HTMLTag\n    public highestSingularityCompleted\n    public enabled\n    public singularityRequirement\n    public effect\n    public constructor(data: ISingularityChallengeData, key: string) {\n        const name = i18next.t(`singularityChallenge.data.${key}.name`)\n        const description = i18next.t(`singularityChallenge.data.${key}.description`)\n        const rewardDescription = i18next.t(`singularityChallenge.data.${key}.rewardDescription`)\n        this.name = name\n        this.description = description\n        this.rewardDescription = rewardDescription\n        this.baseReq = data.baseReq\n        this.completions = data.completions ?? 0\n        this.maxCompletions = data.maxCompletions\n        this.unlockSingularity = data.unlockSingularity\n        this.HTMLTag = data.HTMLTag\n        this.highestSingularityCompleted = data.highestSingularityCompleted ?? 0\n        this.enabled = data.enabled ?? false\n        this.singularityRequirement = data.singularityRequirement\n        this.effect = data.effect\n\n        this.updateIconHTML()\n        this.updateChallengeCompletions()\n    }\n\n    public computeSingularityRquirement() {\n        return this.singularityRequirement(this.baseReq, this.completions)\n    }\n\n    public updateChallengeCompletions() {\n        let updateVal = 0\n        while (this.singularityRequirement(this.baseReq, updateVal) <= this.highestSingularityCompleted) {\n            updateVal += 1\n        }\n\n        this.completions = Math.min(this.maxCompletions, updateVal)\n    }\n\n    public challengeEntryHandler() {\n        if (!this.enabled) {\n            return this.enableChallenge()\n        } else {\n            return this.exitChallenge((player.runelevels[6] > 0))\n        }\n    }\n\n    public async enableChallenge() {\n        if (player.highestSingularityCount < this.unlockSingularity) {\n            return Alert(i18next.t('singularityChallenge.enterChallenge.lowSingularity'))\n        }\n        const confirmation = await(Confirm(i18next.t('singularityChallenge.enterChallenge.confirmation', {name: this.name})))\n\n        if (!confirmation) {\n            return Alert(i18next.t('singularityChallenge.enterChallenge.decline'))\n        }\n\n        if (!player.insideSingularityChallenge) {\n            const setSingularity = this.computeSingularityRquirement()\n            const holdSingTimer = player.singularityCounter\n            const holdQuarkExport = player.quarkstimer\n            const holdGoldenQuarkExport = player.goldenQuarksTimer\n            const goldenQuarkGain = calculateGoldenQuarkGain();\n            const currentGQ = player.goldenQuarks\n            this.enabled = true\n            player.insideSingularityChallenge = true\n            await singularity(setSingularity)\n            player.singularityCounter = holdSingTimer\n            player.goldenQuarks = currentGQ + goldenQuarkGain\n            player.quarkstimer = holdQuarkExport\n            player.goldenQuarksTimer = holdGoldenQuarkExport\n\n            this.updateChallengeHTML()\n            return Alert(i18next.t('singularityChallenge.enterChallenge.acceptSuccess', {name: this.name, tier: this.completions + 1, singReq: this.computeSingularityRquirement()}))\n        } else {\n            return Alert(i18next.t('singularityChallenge.exitChallenge.acceptFailure'))\n        }\n    }\n\n    public async exitChallenge(success: boolean) {\n        if (!success) {\n            const extra = (player.runelevels[6] === 0) ? i18next.t('singularityChallenge.exitChallenge.incompleteWarning') : ''\n            const confirmation = await(Confirm(i18next.t('singularityChallenge.exitChallenge.confirmation', {name: this.name, tier: this.completions + 1, warning: extra})))\n            if (!confirmation) {\n                return Alert(i18next.t('singularityChallenge.exitChallenge.decline'))\n            }\n\n        }\n\n        this.enabled = false\n        player.insideSingularityChallenge = false\n        const highestSingularityHold = player.highestSingularityCount\n        const holdSingTimer = player.singularityCounter\n        const holdQuarkExport = player.quarkstimer\n        const holdGoldenQuarkExport = player.goldenQuarksTimer\n        this.updateIconHTML()\n        if (success) {\n            this.highestSingularityCompleted = player.singularityCount\n            this.updateChallengeCompletions()\n            await singularity(highestSingularityHold)\n            player.singularityCounter = holdSingTimer\n            return Alert(i18next.t('singularityChallenge.exitChallenge.acceptSuccess', {tier: toOrdinal(this.completions), name: this.name}))\n        } else {\n            await singularity(highestSingularityHold)\n            player.singularityCounter = holdSingTimer\n            player.quarkstimer = holdQuarkExport\n            player.goldenQuarksTimer = holdGoldenQuarkExport\n            return Alert(i18next.t('singularityChallenge.exitChallenge.acceptFailure'))\n        }\n    }\n\n    /**\n     * Given a Singularity Challenge, give a concise information regarding its data.\n     * @returns A string that details the name, description, metadata.\n     */\n    toString(): string {\n\n        const color = (this.completions === this.maxCompletions) ? 'var(--orchid-text-color)' : 'white'\n        const enabled = (this.enabled) ? `<span style=\"color: var(--red-text-color)\">${i18next.t('general.enabled')}</span>` : '';\n        return `<span style=\"color: gold\">${this.name}</span> ${enabled}\n                <span style=\"color: lightblue\">${this.description}</span>\n                <span style=\"color: pink\">${i18next.t('singularityChallenge.toString.canEnter', {unlockSing: this.unlockSingularity, highestSing: player.highestSingularityCount})}</span>\n                ${i18next.t('singularityChallenge.toString.tiersCompleted')}: <span style=\"color: ${color}\">${this.completions}/${this.maxCompletions}</span>\n                <span style=\"color: gold\">${i18next.t('singularityChallenge.toString.currentTierSingularity')} <span style=\"color: var(--orchid-text-color)\">${this.singularityRequirement(this.baseReq, this.completions)}</span></span>\n                <span>${this.rewardDescription}</span>`\n    }\n\n    public updateChallengeHTML(): void {\n        DOMCacheGetOrSet('singularityChallengesMultiline').innerHTML = this.toString()\n    }\n\n    public updateIconHTML(): void {\n        const color = (this.enabled) ? 'orchid' : ''\n        DOMCacheGetOrSet(`${this.HTMLTag}`).style.backgroundColor = color\n    }\n\n    public get rewards() {\n        return this.effect(this.completions)\n    }\n\n}\n\nexport const singularityChallengeData: Record<keyof Player['singularityUpgrades'], ISingularityChallengeData> = {\n    noSingularityUpgrades: {\n        baseReq: 1,\n        maxCompletions: 30,\n        unlockSingularity: 25,\n        HTMLTag: 'noSingularityUpgrades',\n        singularityRequirement: (baseReq: number, completions: number) => {\n            return baseReq + 8 * completions\n        },\n        effect: (n: number) => {\n            return {\n                cubes: 1 + 0.5 * n,\n                goldenQuarks: 1 + 0.12 * +(n > 0),\n                shopUpgrade: (n >= 20)\n            }\n        }\n    },\n    oneChallengeCap: {\n        baseReq: 10,\n        maxCompletions: 25,\n        unlockSingularity: 40,\n        HTMLTag: 'oneChallengeCap',\n        singularityRequirement: (baseReq: number, completions: number) => {\n            return baseReq + 11 * completions\n        },\n        effect: (n: number) => {\n            return {\n                corrScoreIncrease: 0.03 * n,\n                capIncrease: 3 * +(n > 0),\n                freeCorruptionLevel: (n >= 20)\n            }\n        }\n    },\n    noOcteracts: {\n        baseReq: 75,\n        maxCompletions: 10,\n        unlockSingularity: 100,\n        HTMLTag: 'noOcteracts',\n        singularityRequirement: (baseReq: number, completions: number) => {\n            return baseReq + 13 * completions\n        },\n        effect: (n: number) => {\n            return {\n                octeractPow: 0.02 * n,\n                offeringBonus: (n > 0),\n                obtainiumBonus: (n === 10)\n            }\n        }\n    },\n    limitedAscensions: {\n        baseReq: 10,\n        maxCompletions: 25,\n        unlockSingularity: 50,\n        HTMLTag: 'limitedAscensions',\n        singularityRequirement: (baseReq: number, completions: number) => {\n            return baseReq + 10 * completions\n        },\n        effect: (n: number) => {\n            return {\n                ascensionSpeedMult: 0.1 * n / 100,\n                hepteractCap: (n > 0),\n                calculatorUnlock: (n >= 25)\n            }\n        }\n    }\n}\n\n\n", "import { player, resetCheck, blankSave } from './Synergism';\nimport { testing } from './Config';\nimport type { Player } from './types/Synergism';\nimport Decimal from 'break_infinity.js';\nimport { calculateMaxRunes, calculateTimeAcceleration } from './Calculate';\nimport { buyResearch } from './Research';\nimport { c15RewardUpdate } from './Statistics';\nimport type { LegacyShopUpgrades, PlayerSave } from './types/LegacySynergism';\nimport { padArray } from './Utility';\nimport { AbyssHepteract, AcceleratorBoostHepteract, AcceleratorHepteract, ChallengeHepteract, ChronosHepteract, createHepteract, HyperrealismHepteract, MultiplierHepteract, QuarkHepteract } from './Hepteracts';\nimport { WowCubes, WowHypercubes, WowPlatonicCubes, WowTesseracts } from './CubeExperimental';\nimport { Alert } from './UpdateHTML';\nimport { getQuarkInvestment, shopData } from './Shop';\nimport type { ISingularityData } from './singularity';\nimport { singularityData, SingularityUpgrade } from './singularity';\nimport type { IOcteractData } from './Octeracts';\nimport { octeractData, OcteractUpgrade } from './Octeracts';\nimport type { ISingularityChallengeData} from './SingularityChallenges';\nimport { SingularityChallenge, singularityChallengeData } from './SingularityChallenges';\nimport i18next from 'i18next';\n\n/* eslint-disable @typescript-eslint/no-unnecessary-condition */\n\n/**\n * Given player data, it checks, on load if variables are undefined\n * or set incorrectly, and corrects it. This should be where all new\n * variable declarations for `player` should go!\n * @param data\n */\nexport const checkVariablesOnLoad = (data: PlayerSave) => {\n    if (data.currentChallenge?.transcension === undefined) {\n        player.currentChallenge = {\n            transcension: 0,\n            reincarnation: 0,\n            ascension: 0\n        }\n    }\n\n    data.shopUpgrades ??= { ...blankSave.shopUpgrades };\n    data.ascStatToggles ??= { ...blankSave.ascStatToggles };\n\n    if (typeof data.promoCodeTiming === 'object' && data.promoCodeTiming != null) {\n        for (const key of Object.keys(data.promoCodeTiming)) {\n            const k = key as keyof typeof data.promoCodeTiming;\n            player.promoCodeTiming[k] = data.promoCodeTiming[k];\n        }\n    } else {\n        player.promoCodeTiming.time = Date.now() - (60 * 1000 * 15);\n    }\n\n    // backwards compatibility for v1.0101 (and possibly older) saves\n    if (!Array.isArray(data.challengecompletions) && data.challengecompletions != null) {\n        player.challengecompletions = Object.values(data.challengecompletions);\n        padArray(player.challengecompletions, 0, blankSave.challengecompletions.length);\n    }\n\n    // backwards compatibility for v1.0101 (and possibly older) saves\n    if (!Array.isArray(data.highestchallengecompletions)) {\n        // if highestchallengecompletions is every added onto, this will need to be padded.\n        player.highestchallengecompletions = Object.values(data.highestchallengecompletions as unknown as object) as number[];\n    }\n\n    if (data.wowCubes === undefined) {\n        player.wowCubes = new WowCubes();\n        player.wowTesseracts = new WowTesseracts(0);\n        player.wowHypercubes = new WowHypercubes(0);\n        player.cubeUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    }\n    if (data.shoptoggles?.reincarnate === undefined) {\n        player.shoptoggles.reincarnate = true\n    }\n    if (data.ascendBuilding1 === undefined) {\n        player.ascendBuilding1 = {\n            cost: 1,\n            owned: 0,\n            generated: new Decimal('0'),\n            multiplier: 0.01\n        }\n        player.ascendBuilding2 = {\n            cost: 10,\n            owned: 0,\n            generated: new Decimal('0'),\n            multiplier: 0.01\n        }\n        player.ascendBuilding3 = {\n            cost: 100,\n            owned: 0,\n            generated: new Decimal('0'),\n            multiplier: 0.01\n        }\n        player.ascendBuilding4 = {\n            cost: 1000,\n            owned: 0,\n            generated: new Decimal('0'),\n            multiplier: 0.01\n        }\n        player.ascendBuilding5 = {\n            cost: 10000,\n            owned: 0,\n            generated: new Decimal('0'),\n            multiplier: 0.01\n        }\n    }\n    if (data.tesseractbuyamount === undefined) {\n        player.tesseractbuyamount = 1\n    }\n    if (data.tesseractBlessings === undefined) {\n        player.tesseractBlessings = {\n            accelerator: 0,\n            multiplier: 0,\n            offering: 0,\n            runeExp: 0,\n            obtainium: 0,\n            antSpeed: 0,\n            antSacrifice: 0,\n            antELO: 0,\n            talismanBonus: 0,\n            globalSpeed: 0\n        }\n        player.hypercubeBlessings = {\n            accelerator: 0,\n            multiplier: 0,\n            offering: 0,\n            runeExp: 0,\n            obtainium: 0,\n            antSpeed: 0,\n            antSacrifice: 0,\n            antELO: 0,\n            talismanBonus: 0,\n            globalSpeed: 0\n        }\n    }\n    if (data.prototypeCorruptions === undefined) {\n        player.prototypeCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        player.usedCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    }\n    if (data.constantUpgrades === undefined) {\n        player.ascendShards = new Decimal('0')\n        player.constantUpgrades = [null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    }\n    if (data.roombaResearchIndex === undefined) {\n        player.roombaResearchIndex = 0;\n    }\n    if (data.history === undefined) {\n        player.history = { ants: [], ascend: [], reset: [], singularity: [] };\n    }\n    if (data.autoChallengeRunning === undefined) {\n        player.autoChallengeRunning = false\n        player.autoChallengeIndex = 1\n        player.autoChallengeToggles = [false, true, true, true, true, true, true, true, true, true, true, false, false, false, false, false]\n        player.autoChallengeStartExponent = 10\n        player.autoChallengeTimer = {\n            start: 10,\n            exit: 2,\n            enter: 2\n        }\n    }\n    if (data.autoAscend === undefined) {\n        player.autoAscend = false;\n        player.autoAscendMode = 'c10Completions';\n        player.autoAscendThreshold = 1;\n    }\n    if (data.runeBlessingLevels === undefined) {\n        player.runeBlessingLevels = [0, 0, 0, 0, 0, 0];\n        player.runeSpiritLevels = [0, 0, 0, 0, 0, 0];\n        player.runeBlessingBuyAmount = 0;\n        player.runeSpiritBuyAmount = 0;\n    }\n    if (data.autoBuyFragment === undefined) {\n        player.autoBuyFragment = false;\n        player.saveOfferingToggle = false;\n    }\n\n    if (data.autoTesseracts === undefined) {\n        player.autoTesseracts = [false, false, false, false, false, false]\n    }\n\n    if (data.autoOpenCubes === undefined) {\n        player.autoOpenCubes = false;\n        player.openCubes = 0;\n    }\n    if (data.autoOpenTesseracts === undefined) {\n        player.autoOpenTesseracts = false;\n        player.openTesseracts = 0;\n    }\n    if (data.autoOpenHypercubes === undefined) {\n        player.autoOpenHypercubes = false;\n        player.openHypercubes = 0;\n    }\n    if (data.autoOpenPlatonicsCubes === undefined) {\n        player.autoOpenPlatonicsCubes = false;\n        player.openPlatonicsCubes = 0;\n    }\n\n    if (player.prototypeCorruptions[0] === null || player.prototypeCorruptions[0] === undefined) {\n        player.usedCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        player.prototypeCorruptions = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    }\n\n    if (player.corruptionLoadouts === undefined) {\n        player.corruptionLoadouts = { ...blankSave.corruptionLoadouts };\n        player.corruptionShowStats = true\n    }\n\n    const corruptionLoadouts = Object.keys(\n        blankSave.corruptionLoadouts\n    ) as (`${keyof Player['corruptionLoadouts']}`)[]\n\n    for (const key of corruptionLoadouts.map(k => Number(k))) {\n        if (player.corruptionLoadouts[key] !== undefined) {\n            continue\n        }\n\n        player.corruptionLoadouts[key] = blankSave.corruptionLoadouts[key]\n    }\n\n    if (player.corruptionLoadoutNames.length < blankSave.corruptionLoadoutNames.length) {\n        const diff = blankSave.corruptionLoadoutNames.slice(player.corruptionLoadoutNames.length)\n\n        player.corruptionLoadoutNames.push(...diff)\n    }\n\n    for (let i = 0; i <= 4; i++) {\n        if (player.runelevels[i] > calculateMaxRunes(i + 1)) {\n            player.runelevels[i] = 0\n        }\n    }\n\n    if (data.shopUpgrades.challengeExtension === undefined) {\n        player.shopUpgrades.challengeExtension = 0;\n        player.shopUpgrades.challengeTome = 0;\n        player.shopUpgrades.seasonPass = 0;\n        player.shopUpgrades.cubeToQuark = 0;\n        player.shopUpgrades.tesseractToQuark = 0;\n        player.shopUpgrades.hypercubeToQuark = 0;\n    }\n    if (data.cubeUpgrades == null || data.cubeUpgrades[19] === 0 || player.cubeUpgrades[19] === 0) {\n        for (let i = 121; i <= 125; i++) {\n            player.upgrades[i] = 0\n        }\n    }\n\n    // assign the save's toggles to the player toggles\n    // will overwrite player.toggles keys that exist on both objects,\n    // but new keys will default to the values on the player object\n    Object.assign(player.toggles, data.toggles);\n\n    for (const key in blankSave.toggles) {\n        if (player.toggles[key] === undefined) {\n            player.toggles[key] = blankSave.toggles[key];\n        }\n    }\n\n    if (data.dayCheck === undefined) {\n        player.dayCheck = null;\n        player.dayTimer = 0;\n        player.cubeQuarkDaily = 0;\n        player.tesseractQuarkDaily = 0;\n        player.hypercubeQuarkDaily = 0;\n        player.cubeOpenedDaily = 0;\n        player.tesseractOpenedDaily = 0;\n        player.hypercubeOpenedDaily = 0;\n    }\n\n    player.singularityUpgrades = {\n        goldenQuarks1: new SingularityUpgrade(singularityData['goldenQuarks1'], 'goldenQuarks1'),\n        goldenQuarks2: new SingularityUpgrade(singularityData['goldenQuarks2'], 'goldenQuarks2'),\n        goldenQuarks3: new SingularityUpgrade(singularityData['goldenQuarks3'], 'goldenQuarks3'),\n        starterPack: new SingularityUpgrade(singularityData['starterPack'], 'starterPack'),\n        wowPass: new SingularityUpgrade(singularityData['wowPass'], 'wowPass'),\n        cookies: new SingularityUpgrade(singularityData['cookies'], 'cookies'),\n        cookies2: new SingularityUpgrade(singularityData['cookies2'], 'cookies2'),\n        cookies3: new SingularityUpgrade(singularityData['cookies3'], 'cookies3'),\n        cookies4: new SingularityUpgrade(singularityData['cookies4'], 'cookies4'),\n        cookies5: new SingularityUpgrade(singularityData['cookies5'], 'cookies5'),\n        ascensions: new SingularityUpgrade(singularityData['ascensions'], 'ascensions'),\n        corruptionFourteen: new SingularityUpgrade(singularityData['corruptionFourteen'], 'corruptionFourteen'),\n        corruptionFifteen: new SingularityUpgrade(singularityData['corruptionFifteen'], 'corruptionFifteen'),\n        singOfferings1: new SingularityUpgrade(singularityData['singOfferings1'], 'singOfferings1'),\n        singOfferings2: new SingularityUpgrade(singularityData['singOfferings2'], 'singOfferings2'),\n        singOfferings3: new SingularityUpgrade(singularityData['singOfferings3'], 'singOfferings3'),\n        singObtainium1: new SingularityUpgrade(singularityData['singObtainium1'], 'singObtainium1'),\n        singObtainium2: new SingularityUpgrade(singularityData['singObtainium2'], 'singObtainium2'),\n        singObtainium3: new SingularityUpgrade(singularityData['singObtainium3'], 'singObtainium3'),\n        singCubes1: new SingularityUpgrade(singularityData['singCubes1'], 'singCubes1'),\n        singCubes2: new SingularityUpgrade(singularityData['singCubes2'], 'singCubes2'),\n        singCubes3: new SingularityUpgrade(singularityData['singCubes3'], 'singCubes3'),\n        singCitadel: new SingularityUpgrade(singularityData['singCitadel'], 'singCitadel'),\n        singCitadel2: new SingularityUpgrade(singularityData['singCitadel2'], 'singCitadel2'),\n        octeractUnlock: new SingularityUpgrade(singularityData['octeractUnlock'], 'octeractUnlock'),\n        singOcteractPatreonBonus: new SingularityUpgrade(singularityData['singOcteractPatreonBonus'], 'singOcteractPatreonBonus'),\n        intermediatePack: new SingularityUpgrade(singularityData['intermediatePack'], 'intermediatePack'),\n        advancedPack: new SingularityUpgrade(singularityData['advancedPack'], 'advancedPack'),\n        expertPack: new SingularityUpgrade(singularityData['expertPack'], 'expertPack'),\n        masterPack: new SingularityUpgrade(singularityData['masterPack'], 'masterPack'),\n        divinePack: new SingularityUpgrade(singularityData['divinePack'], 'divinePack'),\n        wowPass2: new SingularityUpgrade(singularityData['wowPass2'], 'wowPass2'),\n        potionBuff: new SingularityUpgrade(singularityData['potionBuff'], 'potionBuff'),\n        potionBuff2: new SingularityUpgrade(singularityData['potionBuff2'], 'potionBuff2'),\n        potionBuff3: new SingularityUpgrade(singularityData['potionBuff3'], 'potionBuff3'),\n        singChallengeExtension: new SingularityUpgrade(singularityData['singChallengeExtension'], 'singChallengeExtension'),\n        singChallengeExtension2: new SingularityUpgrade(singularityData['singChallengeExtension2'], 'singChallengeExtension2'),\n        singChallengeExtension3: new SingularityUpgrade(singularityData['singChallengeExtension3'], 'singChallengeExtension3'),\n        singQuarkImprover1: new SingularityUpgrade(singularityData['singQuarkImprover1'], 'singQuarkImprover1'),\n        singQuarkHepteract: new SingularityUpgrade(singularityData['singQuarkHepteract'], 'singQuarkHepteract'),\n        singQuarkHepteract2: new SingularityUpgrade(singularityData['singQuarkHepteract2'], 'singQuarkHepteract2'),\n        singQuarkHepteract3: new SingularityUpgrade(singularityData['singQuarkHepteract3'], 'singQuarkHepteract3'),\n        singOcteractGain: new SingularityUpgrade(singularityData['singOcteractGain'], 'singOcteractGain'),\n        singOcteractGain2: new SingularityUpgrade(singularityData['singOcteractGain2'], 'singOcteractGain2'),\n        singOcteractGain3: new SingularityUpgrade(singularityData['singOcteractGain3'], 'singOcteractGain3'),\n        singOcteractGain4: new SingularityUpgrade(singularityData['singOcteractGain4'], 'singOcteractGain4'),\n        singOcteractGain5: new SingularityUpgrade(singularityData['singOcteractGain5'], 'singOcteractGain5'),\n        wowPass3: new SingularityUpgrade(singularityData['wowPass3'], 'wowPass3'),\n        ultimatePen: new SingularityUpgrade(singularityData['ultimatePen'], 'ultimatePen'),\n        platonicTau: new SingularityUpgrade(singularityData['platonicTau'], 'platonicTau'),\n        platonicAlpha: new SingularityUpgrade(singularityData['platonicAlpha'], 'platonicAlpha'),\n        platonicDelta: new SingularityUpgrade(singularityData['platonicDelta'], 'platonicDelta'),\n        platonicPhi: new SingularityUpgrade(singularityData['platonicPhi'], 'platonicPhi'),\n        singFastForward: new SingularityUpgrade(singularityData['singFastForward'], 'singFastForward'),\n        singFastForward2: new SingularityUpgrade(singularityData['singFastForward2'], 'singFastForward2'),\n        singAscensionSpeed: new SingularityUpgrade(singularityData['singAscensionSpeed'], 'singAscensionSpeed'),\n        singAscensionSpeed2: new SingularityUpgrade(singularityData['singAscensionSpeed2'], 'singAscensionSpeed2'),\n        oneMind: new SingularityUpgrade(singularityData['oneMind'], 'oneMind'),\n        wowPass4: new SingularityUpgrade(singularityData['wowPass4'], 'wowPass4'),\n        offeringAutomatic: new SingularityUpgrade(singularityData['offeringAutomatic'], 'offeringAutomatic'),\n        blueberries: new SingularityUpgrade(singularityData['blueberries'], 'blueberries')\n    }\n\n    player.octeractUpgrades = {\n        octeractStarter: new OcteractUpgrade(octeractData['octeractStarter'], 'octeractStarter'),\n        octeractGain: new OcteractUpgrade(octeractData['octeractGain'], 'octeractGain'),\n        octeractGain2: new OcteractUpgrade(octeractData['octeractGain2'], 'octeractGain2'),\n        octeractQuarkGain: new OcteractUpgrade(octeractData['octeractQuarkGain'], 'octeractQuarkGain'),\n        octeractQuarkGain2: new OcteractUpgrade(octeractData['octeractQuarkGain2'], 'octeractQuarkGain2'),\n        octeractCorruption: new OcteractUpgrade(octeractData['octeractCorruption'], 'octeractCorruption'),\n        octeractGQCostReduce: new OcteractUpgrade(octeractData['octeractGQCostReduce'], 'octeractGQCostReduce'),\n        octeractExportQuarks: new OcteractUpgrade(octeractData['octeractExportQuarks'], 'octeractExportQuarks'),\n        octeractImprovedDaily: new OcteractUpgrade(octeractData['octeractImprovedDaily'], 'octeractImprovedDaily'),\n        octeractImprovedDaily2: new OcteractUpgrade(octeractData['octeractImprovedDaily2'], 'octeractImprovedDaily2'),\n        octeractImprovedDaily3: new OcteractUpgrade(octeractData['octeractImprovedDaily3'], 'octeractImprovedDaily3'),\n        octeractImprovedQuarkHept: new OcteractUpgrade(octeractData['octeractImprovedQuarkHept'], 'octeractImprovedQuarkHept'),\n        octeractImprovedGlobalSpeed: new OcteractUpgrade(octeractData['octeractImprovedGlobalSpeed'], 'octeractImprovedGlobalSpeed'),\n        octeractImprovedAscensionSpeed: new OcteractUpgrade(octeractData['octeractImprovedAscensionSpeed'], 'octeractImprovedAscensionSpeed'),\n        octeractImprovedAscensionSpeed2: new OcteractUpgrade(octeractData['octeractImprovedAscensionSpeed2'], 'octeractImprovedAscensionSpeed2'),\n        octeractImprovedFree: new OcteractUpgrade(octeractData['octeractImprovedFree'], 'octeractImprovedFree'),\n        octeractImprovedFree2: new OcteractUpgrade(octeractData['octeractImprovedFree2'], 'octeractImprovedFree2'),\n        octeractImprovedFree3: new OcteractUpgrade(octeractData['octeractImprovedFree3'], 'octeractImprovedFree3'),\n        octeractImprovedFree4: new OcteractUpgrade(octeractData['octeractImprovedFree4'], 'octeractImprovedFree4'),\n        octeractSingUpgradeCap: new OcteractUpgrade(octeractData['octeractSingUpgradeCap'], 'octeractSingUpgradeCap'),\n        octeractOfferings1: new OcteractUpgrade(octeractData['octeractOfferings1'], 'octeractOfferings1'),\n        octeractObtainium1: new OcteractUpgrade(octeractData['octeractObtainium1'], 'octeractObtainium1'),\n        octeractAscensions: new OcteractUpgrade(octeractData['octeractAscensions'], 'octeractAscensions'),\n        octeractAscensions2: new OcteractUpgrade(octeractData['octeractAscensions2'], 'octeractAscensions2'),\n        octeractAscensionsOcteractGain: new OcteractUpgrade(octeractData['octeractAscensionsOcteractGain'], 'octeractAscensionsOcteractGain'),\n        octeractFastForward: new OcteractUpgrade(octeractData['octeractFastForward'], 'octeractFastForward'),\n        octeractAutoPotionSpeed: new OcteractUpgrade(octeractData['octeractAutoPotionSpeed'], 'octeractAutoPotionSpeed'),\n        octeractAutoPotionEfficiency: new OcteractUpgrade(octeractData['octeractAutoPotionEfficiency'], 'octeractAutoPotionEfficiency'),\n        octeractOneMindImprover: new OcteractUpgrade(octeractData['octeractOneMindImprover'], 'octeractOneMindImprover'),\n        octeractAmbrosiaLuck: new OcteractUpgrade(octeractData['octeractAmbrosiaLuck'], 'octeractAmbrosiaLuck')\n    }\n\n    player.singularityChallenges = {\n        noSingularityUpgrades: new SingularityChallenge(singularityChallengeData['noSingularityUpgrades'], 'noSingularityUpgrades'),\n        oneChallengeCap: new SingularityChallenge(singularityChallengeData['oneChallengeCap'], 'oneChallengeCap'),\n        noOcteracts: new SingularityChallenge(singularityChallengeData['noOcteracts'], 'noOcteracts'),\n        limitedAscensions: new SingularityChallenge(singularityChallengeData['limitedAscensions'], 'limitedAscensions')\n    }\n\n    if (data.loadedOct4Hotfix === undefined || player.loadedOct4Hotfix === false) {\n        player.loadedOct4Hotfix = true;\n        // Only process refund if the save's researches array is already updated to v2\n        if (player.researches.length > 200) {\n            player.researchPoints += player.researches[200] * 1e56;\n            player.researches[200] = 0;\n            buyResearch(200, true, 0.01);\n            player.researchPoints += player.researches[195] * 1e60;\n            player.worlds.add(250 * player.researches[195]);\n            player.researches[195] = 0;\n            player.wowCubes.add(player.cubeUpgrades[50] * 5e10);\n            player.cubeUpgrades[50] = 0\n        }\n    }\n\n    if (player.ascStatToggles === undefined || data.ascStatToggles === undefined) {\n        player.ascStatToggles = {\n            1: false,\n            2: false,\n            3: false,\n            4: false\n        };\n    }\n    if (player.ascStatToggles[4] === undefined || !('ascStatToggles' in data) || data.ascStatToggles[4] === undefined) {\n        player.ascStatToggles[4] = false;\n    }\n\n    if (player.usedCorruptions[0] > 0 ||\n        (Array.isArray(data.usedCorruptions) && data.usedCorruptions[0] > 0)) {\n        player.prototypeCorruptions[0] = 0\n        player.usedCorruptions[0] = 0\n    }\n    if (player.antSacrificeTimerReal === undefined) {\n        player.antSacrificeTimerReal = player.antSacrificeTimer / calculateTimeAcceleration().mult;\n    }\n    if (player.subtabNumber === undefined || data.subtabNumber === undefined) {\n        player.subtabNumber = 0;\n    }\n    if (data.wowPlatonicCubes === undefined) {\n        player.wowPlatonicCubes = new WowPlatonicCubes(0);\n        player.wowAbyssals = 0;\n    }\n    if (data.platonicBlessings === undefined) {\n        const ascCount = player.ascensionCount\n        if (player.currentChallenge.ascension !== 0 && player.currentChallenge.ascension !== 15) {\n            void resetCheck('ascensionChallenge', false, true);\n        }\n        if (player.currentChallenge.ascension === 15) {\n            void resetCheck('ascensionChallenge', false, true);\n            player.challenge15Exponent = 0;\n            c15RewardUpdate();\n        }\n        player.ascensionCount = ascCount\n        player.challengecompletions[15] = 0;\n        player.highestchallengecompletions[15] = 0;\n        player.platonicBlessings = {\n            cubes: 0,\n            tesseracts: 0,\n            hypercubes: 0,\n            platonics: 0,\n            hypercubeBonus: 0,\n            taxes: 0,\n            scoreBonus: 0,\n            globalSpeed: 0\n        }\n        player.platonicUpgrades = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        player.challenge15Exponent = 0\n        player.loadedNov13Vers = false;\n    }\n    if (player.researches.some(k => typeof k !== 'number')) {\n        for (let i = 0; i < 200; i++) {\n            player.researches[i + 1] = player.researches[i + 1] || 0;\n        }\n    }\n    if (data.loadedDec16Vers === false || data.loadedDec16Vers === undefined){\n        if (player.currentChallenge.ascension === 15) {\n            void resetCheck('ascensionChallenge', false, true);\n            player.challenge15Exponent = 0;\n            c15RewardUpdate();\n        }\n        player.challenge15Exponent = 0;\n        c15RewardUpdate();\n        player.loadedDec16Vers = true;\n    }\n\n    // in old versions of the game (pre 2.5.0), the import function will only work\n    // if this variable = \"YES!\". Don't ask Platonic why.\n    if (typeof data.exporttest === 'string') {\n        player.exporttest = !testing;\n    } else {\n        player.exporttest = !!data.exporttest;\n    }\n\n    const shop = data.shopUpgrades as LegacyShopUpgrades | Player['shopUpgrades'];\n    if (shop && 'offeringTimerLevel' in shop) {\n        player.shopUpgrades = {\n            offeringPotion: shop.offeringPotion,\n            obtainiumPotion: shop.obtainiumPotion,\n            offeringEX: 0,\n            offeringAuto: Math.min(1, Number(shop.offeringAutoLevel)),\n            obtainiumEX: 0,\n            obtainiumAuto: Math.min(1, Number(shop.obtainiumAutoLevel)), //Number(shop.obtainiumAutoLevel),\n            instantChallenge: Number(shop.instantChallengeBought),\n            antSpeed: 0,\n            cashGrab: 0,\n            shopTalisman: Number(shop.talismanBought),\n            seasonPass: 0,\n            challengeExtension: shop.challengeExtension,\n            challengeTome: 0, // This was shop.challenge10Tomes\n            cubeToQuark: Number(shop.cubeToQuarkBought),\n            tesseractToQuark: Number(shop.tesseractToQuarkBought),\n            hypercubeToQuark: Number(shop.hypercubeToQuarkBought),\n            seasonPass2: 0,\n            seasonPass3: 0,\n            chronometer: 0,\n            infiniteAscent: 0,\n            calculator: 0,\n            calculator2: 0,\n            calculator3: 0,\n            calculator4: 0,\n            calculator5: 0,\n            calculator6: 0,\n            constantEX: 0,\n            powderEX: 0,\n            chronometer2: 0,\n            chronometer3: 0,\n            seasonPassY: 0,\n            seasonPassZ: 0,\n            challengeTome2: 0,\n            instantChallenge2: 0,\n            cashGrab2: 0,\n            cubeToQuarkAll: 0,\n            obtainiumEX2: 0,\n            offeringEX2: 0,\n            powderAuto: 0,\n            chronometerZ: 0,\n            seasonPassLost: 0,\n            challenge15Auto: 0,\n            extraWarp: 0,\n            autoWarp: 0,\n            improveQuarkHept: 0,\n            improveQuarkHept2: 0,\n            improveQuarkHept3: 0,\n            improveQuarkHept4: 0,\n            shopImprovedDaily: 0,\n            shopImprovedDaily2: 0,\n            shopImprovedDaily3: 0,\n            shopImprovedDaily4: 0,\n            offeringEX3: 0,\n            obtainiumEX3: 0,\n            improveQuarkHept5: 0,\n            seasonPassInfinity: 0,\n            chronometerInfinity: 0,\n            shopSingularityPenaltyDebuff: 0\n        }\n\n        player.worlds.add(150 * shop.offeringTimerLevel + 25/2 * (shop.offeringTimerLevel - 1) * shop.offeringTimerLevel, false);\n        player.worlds.add(150 * shop.obtainiumTimerLevel + 25/2 * (shop.obtainiumTimerLevel - 1) * shop.obtainiumTimerLevel, false);\n        player.worlds.add(150 * shop.offeringAutoLevel + 25/2 * (shop.offeringAutoLevel - 1) * shop.offeringAutoLevel - 150 * Math.min(1, shop.offeringAutoLevel), false);\n        player.worlds.add(150 * shop.obtainiumAutoLevel + 25/2 * (shop.obtainiumAutoLevel - 1) * shop.obtainiumAutoLevel - 150 * Math.min(1, shop.obtainiumAutoLevel), false);\n        player.worlds.add(100 * shop.cashGrabLevel + 100/2 * (shop.cashGrabLevel - 1) * shop.cashGrabLevel, false);\n        player.worlds.add(200 * shop.antSpeedLevel + 80/2 * (shop.antSpeedLevel - 1) * shop.antSpeedLevel, false);\n\n        const tomes = shop.challenge10Tomes ?? shop.challengeTome;\n        player.worlds.add(500 * tomes + 250/2 * (tomes - 1) * (tomes), false);\n\n        player.worlds.add(\n            typeof shop.seasonPass === 'number'\n                ? 500 * shop.seasonPass + 250/2 * (shop.seasonPass - 1) * shop.seasonPass\n                : 500 * shop.seasonPassLevel + 250/2 * (shop.seasonPassLevel - 1) * shop.seasonPassLevel,\n            false\n        );\n    }\n\n    if (player.shopUpgrades.seasonPass2 === undefined) {\n        player.shopUpgrades.seasonPass2 = 0;\n        player.shopUpgrades.seasonPass3 = 0;\n        player.shopUpgrades.chronometer = 0;\n        player.shopUpgrades.infiniteAscent = 0;\n    }\n\n    if (player.runeexp[5] === undefined) {\n        player.runeexp[5] = player.runeexp[6] = 0;\n        player.runelevels[5] = player.runelevels[6] = 0;\n    }\n\n    // resets all hepteract values on the player object\n    player.hepteractCrafts = {\n        chronos: ChronosHepteract,\n        hyperrealism: HyperrealismHepteract,\n        quark: QuarkHepteract,\n        challenge: ChallengeHepteract,\n        abyss: AbyssHepteract,\n        accelerator: AcceleratorHepteract,\n        acceleratorBoost: AcceleratorBoostHepteract,\n        multiplier: MultiplierHepteract\n    }\n\n    // if the player has hepteracts, we need to overwrite the player values\n    // with the ones the save has.\n    if (data.hepteractCrafts != null) {\n        for (const item in blankSave.hepteractCrafts) {\n            const k = item as keyof Player['hepteractCrafts'];\n            // if more crafts are added, some keys might not exist in the save\n            if (data.hepteractCrafts[k]) {\n                player.hepteractCrafts[k] = createHepteract({...player.hepteractCrafts[k], ...data.hepteractCrafts[k]});\n            }\n        }\n    }\n\n    if (data.platonicCubeOpenedDaily === undefined) {\n        player.platonicCubeOpenedDaily = 0;\n        player.platonicCubeQuarkDaily = 0;\n    }\n\n    if (data.shopUpgrades.calculator === undefined) {\n        player.shopUpgrades.calculator = 0;\n        player.shopUpgrades.calculator2 = 0;\n        player.shopUpgrades.calculator3 = 0;\n        player.shopUpgrades.constantEX = 0;\n    }\n\n    while (player.achievements[280] === undefined) {\n        player.achievements.push(0)\n    }\n\n    if (data.overfluxOrbs === undefined) {\n        player.overfluxOrbs = 0;\n    }\n    if (data.overfluxOrbsAutoBuy === undefined) {\n        player.overfluxOrbsAutoBuy = false;\n    }\n    if (data.overfluxPowder === undefined) {\n        player.overfluxPowder = 0;\n        player.shopUpgrades.powderEX = 0;\n        player.dailyPowderResetUses = 1;\n    }\n\n    if (data.ascStatToggles[5] === undefined) {\n        player.ascStatToggles[5] = false;\n    }\n\n    while (player.platonicUpgrades[20] === undefined) {\n        player.platonicUpgrades.push(0)\n    }\n\n    if (data.loadedV253 === undefined) {\n        player.loadedV253 = true;\n        player.worlds.add(10000 * player.shopUpgrades.calculator + 10000 / 2 * (player.shopUpgrades.calculator - 1) * (player.shopUpgrades.calculator), false);\n        player.worlds.add(10000 * player.shopUpgrades.calculator2 + 5000 / 2 * (player.shopUpgrades.calculator2 - 1) * (player.shopUpgrades.calculator2), false);\n        player.worlds.add(25000 * player.shopUpgrades.calculator3 + 25000 / 2 * (player.shopUpgrades.calculator3 - 1) * (player.shopUpgrades.calculator3), false);\n        player.shopUpgrades.calculator = 0;\n        player.shopUpgrades.calculator2 = 0;\n        player.shopUpgrades.calculator3 = 0;\n        player.wowAbyssals += 1e8 * player.platonicUpgrades[16] // Refund based off of abyss hepteracts spent\n        void Alert(i18next.t('general.updateAlerts.june282021'))\n    }\n\n    if (data.loadedV255 === undefined) {\n        player.loadedV255 = true;\n        player.worlds.add(1000 * player.shopUpgrades.powderEX + 1000 / 2 * (player.shopUpgrades.powderEX - 1) * (player.shopUpgrades.powderEX), false);\n        player.shopUpgrades.powderEX = 0;\n        void Alert(i18next.t('general.updateAlerts.july22021'))\n        player.firstCostAnts = new Decimal('1e700')\n        player.firstOwnedAnts = 0;\n    }\n\n    if (data.autoResearchMode === undefined) {\n        player.autoResearchMode = 'manual';\n    }\n\n    if (data.singularityCount === undefined) {\n        player.singularityCount = 0;\n        player.goldenQuarks = 0;\n\n        player.quarksThisSingularity = 0\n        player.quarksThisSingularity += +player.worlds\n        const keys = Object.keys(player.shopUpgrades) as (keyof Player['shopUpgrades'])[]\n        for (const key of keys) {\n            player.quarksThisSingularity += getQuarkInvestment(key)\n        }\n    }\n\n    if (data.totalQuarksEver === undefined){\n        player.totalQuarksEver = 0;\n    }\n\n    if (data.hotkeys === undefined) {\n        player.hotkeys = {};\n        player.theme = 'Dark Mode';\n        player.notation = 'Default';\n    }\n\n    // Update (read: check) for undefined shop upgrades. Also checks above max level.\n    const shopKeys = Object.keys(blankSave['shopUpgrades']) as (keyof Player['shopUpgrades'])[];\n    for (const shopUpgrade of shopKeys) {\n        if (player.shopUpgrades[shopUpgrade] === undefined) {\n            player.shopUpgrades[shopUpgrade] = 0;\n        }\n        if (player.shopUpgrades[shopUpgrade] > shopData[shopUpgrade].maxLevel) {\n            player.shopUpgrades[shopUpgrade] = shopData[shopUpgrade].maxLevel\n        }\n    }\n\n    if (data.singularityUpgrades != null) {\n        for (const item in blankSave.singularityUpgrades) {\n            const k = item as keyof Player['singularityUpgrades'];\n            // if more crafts are added, some keys might not exist in the save\n            let updatedData:ISingularityData\n            if (data.singularityUpgrades[k]) {\n                const { level, goldenQuarksInvested, toggleBuy, freeLevels } = data.singularityUpgrades[k]\n\n                updatedData = {\n                    maxLevel: singularityData[k].maxLevel,\n                    costPerLevel: singularityData[k].costPerLevel,\n\n                    level,\n                    goldenQuarksInvested,\n                    toggleBuy,\n                    freeLevels,\n                    minimumSingularity: singularityData[k].minimumSingularity,\n                    effect: singularityData[k].effect,\n                    canExceedCap: singularityData[k].canExceedCap,\n                    specialCostForm: singularityData[k].specialCostForm,\n                    qualityOfLife: singularityData[k].qualityOfLife\n                }\n                player.singularityUpgrades[k] = new SingularityUpgrade(updatedData, k.toString());\n\n                if (player.singularityUpgrades[k].minimumSingularity > player.highestSingularityCount) {\n                    player.singularityUpgrades[k].refund()\n                }\n\n                const cost = player.singularityUpgrades[k].level * (player.singularityUpgrades[k].level + 1) *\n                             player.singularityUpgrades[k].costPerLevel / 2\n                if (player.singularityUpgrades[k].maxLevel !== -1 &&\n                    player.singularityUpgrades[k].level <= player.singularityUpgrades[k].maxLevel &&\n                    player.singularityUpgrades[k].goldenQuarksInvested !== cost &&\n                    player.singularityUpgrades[k].specialCostForm === 'Default') {\n                    player.singularityUpgrades[k].refund()\n                }\n            } else {\n                player.singularityUpgrades[k].name = `[NEW!] ${player.singularityUpgrades[k].name}`\n            }\n        }\n    }\n\n    if (data.octeractUpgrades != null) { // TODO: Make this more DRY -Platonic, July 15 2022\n        for (const item in blankSave.octeractUpgrades) {\n            const k = item as keyof Player['octeractUpgrades'];\n            let updatedData:IOcteractData\n            if (data.octeractUpgrades[k]) {\n                const { level, octeractsInvested, toggleBuy, freeLevels } = data.octeractUpgrades[k]\n                updatedData = {\n                    maxLevel: octeractData[k].maxLevel,\n                    costPerLevel: octeractData[k].costPerLevel,\n                    level,\n                    octeractsInvested,\n                    toggleBuy,\n                    effect: octeractData[k].effect,\n                    costFormula: octeractData[k].costFormula,\n                    freeLevels,\n                    qualityOfLife: octeractData[k].qualityOfLife\n                }\n                player.octeractUpgrades[k] = new OcteractUpgrade(updatedData, k.toString());\n\n                if (player.octeractUpgrades[k].maxLevel !== -1 &&\n                    player.octeractUpgrades[k].level > player.octeractUpgrades[k].maxLevel) {\n                    player.octeractUpgrades[k].refund()\n                }\n            } else {\n                player.octeractUpgrades[k].name = `[NEW!] ${player.octeractUpgrades[k].name}`\n            }\n        }\n    }\n\n\n    if (data.singularityChallenges != null) {\n        for (const item in blankSave.singularityChallenges) {\n            const k = item as keyof Player['singularityChallenges'];\n            let updatedData:ISingularityChallengeData\n            if (data.singularityChallenges[k]) {\n\n                // This is a HOTFIX. Please do not remove unless you can think of a better way\n                if (data.loadedV2927Hotfix1 === undefined && k === 'noSingularityUpgrades') {\n                    const comps = data.singularityChallenges[k].completions\n                    if (comps > 0) {\n                        data.singularityChallenges[k].highestSingularityCompleted = 4 * comps - 3\n                    }\n                }\n\n                const { completions, highestSingularityCompleted, enabled } = data.singularityChallenges[k]\n                updatedData = {\n                    baseReq: singularityChallengeData[k].baseReq,\n                    completions,\n                    maxCompletions: singularityChallengeData[k].maxCompletions,\n                    unlockSingularity: singularityChallengeData[k].unlockSingularity,\n                    HTMLTag: singularityChallengeData[k].HTMLTag,\n                    highestSingularityCompleted,\n                    enabled,\n                    singularityRequirement: singularityChallengeData[k].singularityRequirement,\n                    effect: singularityChallengeData[k].effect\n                }\n                player.singularityChallenges[k] = new SingularityChallenge(updatedData, k.toString());\n            }\n        }\n    }\n\n    while (player.cubeUpgrades.length < 71) {\n        player.cubeUpgrades.push(0);\n    }\n\n    if (data.dailyCodeUsed === undefined) {\n        player.dailyCodeUsed = false;\n    }\n\n    if (player.usedCorruptions[1] > 0 || player.prototypeCorruptions[1] > 0) {\n        player.usedCorruptions[1] = 0;\n        player.prototypeCorruptions[1] = 0;\n    }\n\n    if (data.goldenQuarksTimer === undefined || player.goldenQuarksTimer === undefined) {\n        player.goldenQuarksTimer = 90000;\n    }\n\n    if (data.hepteractAutoCraftPercentage === undefined) {\n        player.hepteractAutoCraftPercentage = 50;\n    }\n\n    if (data.autoWarpCheck === undefined || player.shopUpgrades.autoWarp === 0) {\n        player.autoWarpCheck = false;\n    }\n\n    if (data.loadedV297Hotfix1 === undefined) {\n        player.loadedV297Hotfix1 = true;\n\n        player.singularityUpgrades.singCubes1.refund();\n        player.singularityUpgrades.singObtainium1.refund();\n        player.singularityUpgrades.singOfferings1.refund();\n        player.singularityUpgrades.ascensions.refund();\n\n        if (player.codes.get(40) && player.singularityCount > 0) {\n            player.singularityUpgrades.singCubes1.freeLevels += 5;\n            player.singularityUpgrades.singOfferings1.freeLevels += 5;\n            player.singularityUpgrades.singObtainium1.freeLevels += 5;\n            player.singularityUpgrades.ascensions.freeLevels += 5;\n        }\n\n        if (player.singularityCount > 0) {\n            void Alert(i18next.t('general.updateAlerts.v297hotfix1Sing'))\n        } else {\n            void Alert(i18next.t('general.updateAlerts.v297hotfix1NoSing'))\n        }\n    }\n\n    if (data.shopBuyMaxToggle === undefined) {\n        player.shopBuyMaxToggle = false;\n        player.shopConfirmationToggle = true;\n    }\n\n    if (data.wowOcteracts === undefined) {\n        player.wowOcteracts = 0;\n        player.octeractTimer = 0;\n    }\n\n    if (data.shopHideToggle === undefined) {\n        player.shopHideToggle = false;\n    }\n\n    if (data.researchBuyMaxToggle === undefined) {\n        player.researchBuyMaxToggle = false;\n    }\n\n    if (data.cubeUpgradesBuyMaxToggle === undefined) {\n        player.cubeUpgradesBuyMaxToggle = false;\n    }\n\n    if (data.ascensionCounterRealReal === undefined) {\n        player.ascensionCounterRealReal = 0;\n    }\n\n    if (data.totalWowOcteracts === undefined) {\n        player.totalWowOcteracts = 0;\n    }\n\n    if (data.highestSingularityCount === undefined) {\n        player.highestSingularityCount = player.singularityCount\n        if (player.singularityCount > 0) {\n            player.goldenQuarks += 200;\n            player.goldenQuarks += 100 * Math.min(10, player.singularityCount)\n\n            if (player.singularityCount >= 5) {\n                player.singularityUpgrades.goldenQuarks3.freeLevels += 1;\n            }\n\n            if (player.singularityCount >= 10) {\n                player.singularityUpgrades.goldenQuarks3.freeLevels += 2;\n            }\n        }\n    }\n\n    if (data.autoPotionTimer === undefined) {\n        player.autoPotionTimer = 0;\n    }\n    if (data.autoPotionTimerObtainium === undefined) {\n        player.autoPotionTimerObtainium = 0;\n    }\n    if (data.insideSingularityChallenge === undefined) {\n        player.insideSingularityChallenge = false\n    }\n\n    if (data.loadedV2930Hotfix1 === undefined) {\n        if (player.singularityCount > 230) {\n            player.singularityCount = 230\n        }\n        if (player.highestSingularityCount > 230) {\n            player.highestSingularityCount = 230\n            void Alert(i18next.t('general.updateAlerts.sing230Balancing'))\n        }\n        player.loadedV2930Hotfix1 = true\n    }\n\n    if (data.loadedV2931Hotfix1 === undefined) {\n        player.loadedV2931Hotfix1 = true\n        player.shopUpgrades.obtainiumEX3 = Math.min(1000, player.shopUpgrades.obtainiumEX3 * 2)\n        player.shopUpgrades.offeringEX3 = Math.min(1000, player.shopUpgrades.offeringEX3 * 2)\n        player.shopUpgrades.seasonPassInfinity = Math.min(1000, player.shopUpgrades.seasonPassInfinity * 2)\n        player.shopUpgrades.chronometerInfinity = Math.min(1000, player.shopUpgrades.chronometerInfinity * 2)\n        player.shopUpgrades.improveQuarkHept5 = Math.min(100, player.shopUpgrades.improveQuarkHept5 * 2)\n        player.singularityUpgrades.offeringAutomatic.refund();\n        void Alert(i18next.t('general.updateAlerts.december22xxxx'))\n    }\n\n    if (data.loadedV21003Hotfix1 === undefined) {\n        player.loadedV21003Hotfix1 = true\n        player.singularityUpgrades.blueberries.refund()\n        void Alert(i18next.t('general.updateAlerts.january42023'))\n    }\n\n    if (data.loadedV21007Hotfix1 === undefined) {\n        player.loadedV21007Hotfix1 = true\n        if (player.octeractUpgrades.octeractQuarkGain.level >= 10000) {\n            player.octeractUpgrades.octeractQuarkGain.refund()\n        }\n    }\n\n    const oldest = localStorage.getItem('firstPlayed')\n\n    if (data.firstPlayed == undefined) {\n        // If the save is from before v2.9.7 staticians\n        player.firstPlayed = oldest ?? new Date().toISOString()\n    } else if (data.firstPlayed?.includes('Before')) {\n        // The first version with player.firstPlayed set the date to\n        // \"Before {date.toString}\"\n        player.firstPlayed = oldest ?? new Date().toISOString()\n    } else {\n        // Otherwise just set the firstPlayed time to either the oldest\n        // stored, or the date in the save being loaded.\n        player.firstPlayed = oldest ?? data.firstPlayed\n    }\n\n    if (data.autoCubeUpgradesToggle === undefined) {\n        player.autoCubeUpgradesToggle = false;\n        player.autoPlatonicUpgradesToggle = false;\n    }\n}\n", "import type { Module } from 'i18next'\n\nexport default {\n    type: 'postProcessor',\n    name: 'ColorText',\n    process: (value: string): string => {\n        if (!value.includes('<<')) {\n            return value\n        }\n\n        return value.replace(/<<(.*?)\\|(.*?)>>/g, '<span style=\"color:$1\">$2</span>')\n    }\n} as Module\n", "import i18next, { type Resource } from 'i18next'\nimport { prod } from './Config'\nimport { DOMCacheGetOrSet } from './Cache/DOM'\nimport ColorTextPlugin from './Plugins/ColorText'\nimport { Confirm } from './UpdateHTML'\n\n// For 'flag': https://emojipedia.org/emoji-flag-sequence/\n// Searching \"flag <country>\" in their search bar will help verify the code.\nconst supported: Record<string, { name: string, flag: string }> = {\n    // Define language properties and mappings here.\n    en: { name: 'English', flag: '\uD83C\uDDFA\uD83C\uDDF8'}, // Or '\uD83C\uDDFA\uD83C\uDDF8 / \uD83C\uDDEC\uD83C\uDDE7', no name?\n    zh: { name: 'Chinese', flag: '\uD83C\uDDE8\uD83C\uDDF3'},\n    fr: { name: 'French', flag: '\uD83C\uDFF3\uFE0F' },\n    de: { name: 'German', flag: '\uD83C\uDDE9\uD83C\uDDEA' },\n    pl: { name: 'Polish', flag: '\uD83C\uDDF5\uD83C\uDDF1' },\n    es: { name: 'Spanish', flag: '\uD83C\uDDEA\uD83C\uDDF8' },\n    ru: { name: 'Russian', flag: '\uD83C\uDDF7\uD83C\uDDFA' }\n};\n\nconst languageCache = new Map<string, { translation: Resource }>()\n\nexport const init = async (): Promise<void> => {\n    const resources: Record<string, Resource> = {}\n    const language = localStorage.getItem('language') ?? 'en'\n\n    const response = await fetch(`./translations/${language}.json`)\n    const file = await response.json() as Resource\n\n    languageCache.set(language, { translation: file })\n    resources[language] = { translation: file }\n\n    if (language !== 'en') {\n        // We always need to load English, to use as a fallback\n        const response = await fetch('./translations/en.json')\n        const file = await response.json() as Resource\n\n        languageCache.set('en', { translation: file })\n        resources.en = { translation: file }\n    }\n\n    await i18next.use(ColorTextPlugin).init({\n        lng: language,\n        fallbackLng: 'en',\n        debug: !prod,\n        resources,\n        postProcess: ['ColorText'],\n        // crowdin returns an empty string when a translation for\n        // a language isn't present\n        returnEmptyString: false,\n        interpolation: {\n            escapeValue: false\n        }\n    })\n\n    buildLanguageTab()\n    translateHTML()\n}\n\nfunction buildLanguageButton(langID: string, name: string, flag: string) {\n    const mainButton = document.createElement('button');\n    mainButton.id = `language_${langID}`;\n    mainButton.className = 'language-select';\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    mainButton.addEventListener('click', async () => {\n        if (!languageCache.has(langID)) {\n            const response = await fetch(`./translations/${langID}.json`)\n            const file = await response.json() as Resource\n\n            languageCache.set(langID, { translation: file })\n            i18next.addResourceBundle(langID, 'translation', file)\n        }\n\n        // i18next.addResourceBundle\n        await i18next.changeLanguage(langID)\n        localStorage.setItem('language', langID)\n\n        const shouldReload = await Confirm(i18next.t('general.languageChange'))\n\n        if (shouldReload) {\n            location.reload()\n        }\n    });\n\n    const flagSpan = document.createElement('span');\n    flagSpan.className = 'lang-flag';\n    flagSpan.textContent = flag;\n    mainButton.appendChild(flagSpan);\n\n    const nameSpan = document.createElement('span');\n    nameSpan.className = 'lang-name';\n    nameSpan.textContent = name;\n    mainButton.appendChild(nameSpan);\n\n    return mainButton;\n}\n\nfunction buildLanguageTab() {\n    const langSelector = DOMCacheGetOrSet('languageOptions');\n    for (const langID in supported) {\n        const langButton = buildLanguageButton(langID, supported[langID].name, supported[langID].flag);\n        langSelector.appendChild(langButton);\n    }\n}\n\nfunction translateHTML () {\n    const i18n = document.querySelectorAll('*[i18n]')\n\n    for (const element of Array.from(i18n)) {\n        const key = element.getAttribute('i18n')!\n        const value = i18next.t(key)\n\n        if (value.includes('<span')) {\n            element.innerHTML = value\n        } else {\n            element.textContent = value\n        }\n    }\n}\n\n"],
  "mappings": "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",
  "names": []
}
